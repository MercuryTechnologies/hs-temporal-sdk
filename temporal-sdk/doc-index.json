[{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WitnessFieldTypes\">WitnessFieldTypes</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:typeName\">typeName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> rec -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:typeProxies\">typeProxies</a> :: rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> (<a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>))</li><li><a href=\"#v:getAccessors\">getAccessors</a> :: rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> (<a href=\"Data-EvalRecord.html#t:LensRec\" title=\"Data.EvalRecord\">LensRec</a> rec))</li><li><a href=\"#v:nestedFieldNames\">nestedFieldNames</a> :: rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:ConstFn\" title=\"Fcf.Combinators\">ConstFn</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-List-NonEmpty.html#t:NonEmpty\" title=\"Data.List.NonEmpty\">NonEmpty</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>) :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)</li></ul>","name":"WitnessFieldTypes typeName typeProxies getAccessors nestedFieldNames $dmtypeName","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:WitnessFieldTypes"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Metadata\">Metadata</a> (a :: k) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Metadata\">Metadata</a> :: <span class=\"keyword\">forall</span> {k} (a :: k). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a =&gt; {..} -&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a</li></ul>","name":"Metadata Metadata name","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:Metadata"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LensRec\">LensRec</a> (rec :: (k -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k) = <a href=\"#v:LensRec\">LensRec</a> {<ul class=\"subs\"><li><a href=\"#v:view\">view</a> :: <span class=\"keyword\">forall</span> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). rec f -&gt; f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a</li><li><a href=\"#v:set\">set</a> :: <span class=\"keyword\">forall</span> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec f</li></ul>}","name":"LensRec view set LensRec","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:LensRec"},{"display_html":"<a href=\"#v:getLens\">getLens</a> :: <span class=\"keyword\">forall</span> {k1} f rec (a :: k1) (h :: k1 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f =&gt; <a href=\"Data-EvalRecord.html#t:LensRec\" title=\"Data.EvalRecord\">LensRec</a> rec a -&gt; ((h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; f (h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)) -&gt; rec h -&gt; f (rec h)","name":"getLens","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:getLens"},{"display_html":"<a href=\"#v:nestLens\">nestLens</a> :: <span class=\"keyword\">forall</span> {k} a b (c :: k). (<span class=\"keyword\">forall</span> (h :: k -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). a h -&gt; (b h -&gt; a h, b h)) -&gt; <a href=\"Data-EvalRecord.html#t:LensRec\" title=\"Data.EvalRecord\">LensRec</a> b c -&gt; <a href=\"Data-EvalRecord.html#t:LensRec\" title=\"Data.EvalRecord\">LensRec</a> a c","name":"nestLens","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:nestLens"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:FunctorRec\">FunctorRec</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:map\">map</a> :: <span class=\"keyword\">forall</span> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec g</li></ul>","name":"FunctorRec map","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:FunctorRec"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec =&gt; <a href=\"#t:TraversableRec\">TraversableRec</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:traverse\">traverse</a> :: <span class=\"keyword\">forall</span> e (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)) -&gt; rec f -&gt; e (rec g)</li><li><a href=\"#v:traverse_\">traverse_</a> :: <span class=\"keyword\">forall</span> e (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) c. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e c) -&gt; rec f -&gt; e ()</li></ul>","name":"TraversableRec traverse traverse_","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:TraversableRec"},{"display_html":"<a href=\"#v:for\">for</a> :: <span class=\"keyword\">forall</span> rec e (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e) =&gt; rec f -&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)) -&gt; e (rec g)","name":"for","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:for"},{"display_html":"<a href=\"#v:for_\">for_</a> :: <span class=\"keyword\">forall</span> rec e (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) c. (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e) =&gt; rec f -&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e c) -&gt; e ()","name":"for_","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:for_"},{"display_html":"<a href=\"#v:foldMap\">foldMap</a> :: <span class=\"keyword\">forall</span> rec m (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> m) =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; m) -&gt; rec f -&gt; m","name":"foldMap","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:foldMap"},{"display_html":"<a href=\"#v:sequence\">sequence</a> :: <span class=\"keyword\">forall</span> e rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e, <a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec) =&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> e <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> f) -&gt; e (rec f)","name":"sequence","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:sequence"},{"display_html":"<a href=\"#v:sequence-39-\">sequence'</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e, <a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec) =&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> e) -&gt; e (rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure\" title=\"Fcf.Combinators\">Pure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>))","name":"sequence'","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:sequence-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec =&gt; <a href=\"#t:DistributiveRec\">DistributiveRec</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:distribute\">distribute</a> :: <span class=\"keyword\">forall</span> f (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f =&gt; f (rec g) -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> g)</li></ul>","name":"DistributiveRec distribute","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:DistributiveRec"},{"display_html":"<a href=\"#v:distribute-39-\">distribute'</a> :: (<a href=\"Data-EvalRecord.html#t:DistributiveRec\" title=\"Data.EvalRecord\">DistributiveRec</a> rec, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; f (rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure\" title=\"Fcf.Combinators\">Pure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)) -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> f)","name":"distribute'","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:distribute-39-"},{"display_html":"<a href=\"#v:cotraverse\">cotraverse</a> :: <span class=\"keyword\">forall</span> rec f (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:DistributiveRec\" title=\"Data.EvalRecord\">DistributiveRec</a> rec, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Functor\" title=\"Control.Monad\">Functor</a> f) =&gt; (<span class=\"keyword\">forall</span> a. f (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; f a) -&gt; f (rec g) -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> f)","name":"cotraverse","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:cotraverse"},{"display_html":"<a href=\"#v:decompose\">decompose</a> :: <a href=\"Data-EvalRecord.html#t:DistributiveRec\" title=\"Data.EvalRecord\">DistributiveRec</a> rec =&gt; (a -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure\" title=\"Fcf.Combinators\">Pure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)) -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> ((-&gt;) a))","name":"decompose","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:decompose"},{"display_html":"<a href=\"#v:recompose\">recompose</a> :: <a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec =&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> ((-&gt;) a)) -&gt; a -&gt; rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure\" title=\"Fcf.Combinators\">Pure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"recompose","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:recompose"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec =&gt; <a href=\"#t:ApplicativeRec\">ApplicativeRec</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:pure\">pure</a> :: <span class=\"keyword\">forall</span> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f</li><li><a href=\"#v:prod\">prod</a> :: <span class=\"keyword\">forall</span> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). rec f -&gt; rec g -&gt; rec (<a href=\"Data-EvalRecord.html#t:Tuple2\" title=\"Data.EvalRecord\">Tuple2</a> f g)</li></ul>","name":"ApplicativeRec pure prod","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ApplicativeRec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Tuple2\">Tuple2</a> (a :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (b :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) c d","name":"Tuple2","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:Tuple2"},{"display_html":"<a href=\"#v:zip\">zip</a> :: <span class=\"keyword\">forall</span> rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec =&gt; rec f -&gt; rec g -&gt; rec (<a href=\"Data-EvalRecord.html#t:Tuple2\" title=\"Data.EvalRecord\">Tuple2</a> f g)","name":"zip","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zip"},{"display_html":"<a href=\"#v:unzip\">unzip</a> :: <span class=\"keyword\">forall</span> rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec =&gt; rec (<a href=\"Data-EvalRecord.html#t:Tuple2\" title=\"Data.EvalRecord\">Tuple2</a> f g) -&gt; (rec f, rec g)","name":"unzip","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:unzip"},{"display_html":"<a href=\"#v:zipWith\">zipWith</a> :: <span class=\"keyword\">forall</span> rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec g -&gt; rec h","name":"zipWith","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWith"},{"display_html":"<a href=\"#v:zipWith3\">zipWith3</a> :: <span class=\"keyword\">forall</span> rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; i <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec g -&gt; rec h -&gt; rec i","name":"zipWith3","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWith3"},{"display_html":"<a href=\"#v:zipWith4\">zipWith4</a> :: <span class=\"keyword\">forall</span> rec (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (j :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec =&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (i <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; j <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec g -&gt; rec h -&gt; rec i -&gt; rec j","name":"zipWith4","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWith4"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec =&gt; <a href=\"#t:ConstraintsRec\">ConstraintsRec</a> (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:AllRec\">AllRec</a> (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (rec :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)</li><li><a href=\"#v:addDicts\">addDicts</a> :: <span class=\"keyword\">forall</span> (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c rec =&gt; rec f -&gt; rec (<a href=\"Data-EvalRecord.html#t:Tuple2\" title=\"Data.EvalRecord\">Tuple2</a> (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> (<a href=\"Data-EvalRecord.html#t:Dict\" title=\"Data.EvalRecord\">Dict</a> c)) f)</li></ul>","name":"ConstraintsRec AllRec addDicts","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ConstraintsRec"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:AllRecF\">AllRecF</a> (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: k1 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) (b :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) = <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> (<a href=\"Data-EvalRecord.html#t:ClassF\" title=\"Data.EvalRecord\">ClassF</a> c f) b","name":"AllRecF","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:AllRecF"},{"display_html":"<span class=\"keyword\">class</span> c (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) =&gt; <a href=\"#t:ClassF\">ClassF</a> (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: k1 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) (a :: k1)","name":"ClassF","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ClassF"},{"display_html":"<span class=\"keyword\">class</span> c (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) =&gt; <a href=\"#t:ClassFG\">ClassFG</a> (c :: k -&gt; k1 -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (f :: k2 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) (g :: k2 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k1) (a :: k2)","name":"ClassFG","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ClassFG"},{"display_html":"<span class=\"keyword\">class</span> (c a, d a) =&gt; ((c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) <a href=\"#t:-38-\">&amp;</a> (d :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>)) (a :: k)","name":"&","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:-38-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Dict\">Dict</a> (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (a :: k) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:Dict\">Dict</a> :: <span class=\"keyword\">forall</span> {k} (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (a :: k). c a =&gt; <a href=\"Data-EvalRecord.html#t:Dict\" title=\"Data.EvalRecord\">Dict</a> c a</li></ul>","name":"Dict Dict","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:Dict"},{"display_html":"<a href=\"#v:dicts\">dicts</a> :: <span class=\"keyword\">forall</span> (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) b. (<a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b) =&gt; b (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure1\" title=\"Fcf.Combinators\">Pure1</a> (<a href=\"Data-EvalRecord.html#t:Dict\" title=\"Data.EvalRecord\">Dict</a> c))","name":"dicts","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:dicts"},{"display_html":"<a href=\"#v:requiringDict\">requiringDict</a> :: <span class=\"keyword\">forall</span> {k} c (a :: k) r. (c a =&gt; r) -&gt; <a href=\"Data-EvalRecord.html#t:Dict\" title=\"Data.EvalRecord\">Dict</a> c a -&gt; r","name":"requiringDict","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:requiringDict"},{"display_html":"<a href=\"#v:mapC\">mapC</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; b f -&gt; b g","name":"mapC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:mapC"},{"display_html":"<a href=\"#v:foldMapC\">foldMapC</a> :: <span class=\"keyword\">forall</span> c b m (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> m) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; m) -&gt; b f -&gt; m","name":"foldMapC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:foldMapC"},{"display_html":"<a href=\"#v:traverseC\">traverseC</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e. (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)) -&gt; b f -&gt; e (b g)","name":"traverseC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:traverseC"},{"display_html":"<a href=\"#v:forC\">forC</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) e. (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> e) =&gt; b f -&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; e (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)) -&gt; e (b g)","name":"forC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:forC"},{"display_html":"<a href=\"#v:zipWithC\">zipWithC</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; b f -&gt; b g -&gt; b h","name":"zipWithC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWithC"},{"display_html":"<a href=\"#v:zipWith3C\">zipWith3C</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; i <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; b f -&gt; b g -&gt; b h -&gt; b i","name":"zipWith3C","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWith3C"},{"display_html":"<a href=\"#v:zipWith4C\">zipWith4C</a> :: <span class=\"keyword\">forall</span> c b (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (h :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (i :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (j :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> c b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (h <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (i <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; j <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; b f -&gt; b g -&gt; b h -&gt; b i -&gt; b j","name":"zipWith4C","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:zipWith4C"},{"display_html":"<a href=\"#v:pureC\">pureC</a> :: <span class=\"keyword\">forall</span> c (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b. (<a href=\"Data-EvalRecord.html#t:AllRecF\" title=\"Data.EvalRecord\">AllRecF</a> c f b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b) =&gt; (<span class=\"keyword\">forall</span> a. c (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) =&gt; <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; b f","name":"pureC","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:pureC"},{"display_html":"<a href=\"#v:mempty\">mempty</a> :: <span class=\"keyword\">forall</span> (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) b. (<a href=\"Data-EvalRecord.html#t:AllRecF\" title=\"Data.EvalRecord\">AllRecF</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> f b, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> b, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> b) =&gt; b f","name":"mempty","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:mempty"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:MapMatches\">MapMatches</a> (pred :: k) (f :: k1) a b","name":"MapMatches","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:MapMatches"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ValueOnMatch\">ValueOnMatch</a> (cond :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) (b :: k) (a :: k) :: k <span class=\"keyword\">where ...</span>","name":"ValueOnMatch","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ValueOnMatch"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ApplyOnMatch\">ApplyOnMatch</a> (cond :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>)","name":"ApplyOnMatch","module":"Data.EvalRecord","link":"Data-EvalRecord.html#t:ApplyOnMatch"},{"display_html":"<a href=\"#v:mapMatching\">mapMatching</a> :: <span class=\"keyword\">forall</span> (pred :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>) (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (g :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) rec. (<a href=\"Data-EvalRecord.html#t:FunctorRec\" title=\"Data.EvalRecord\">FunctorRec</a> rec, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> rec, <a href=\"Data-EvalRecord.html#t:AllRecF\" title=\"Data.EvalRecord\">AllRecF</a> <a href=\"Data-EvalRecord.html#t:ApplyOnMatch\" title=\"Data.EvalRecord\">ApplyOnMatch</a> (pred <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> f) rec) =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> pred -&gt; (<span class=\"keyword\">forall</span> a. <a href=\"Data-EvalRecord.html#t:Metadata\" title=\"Data.EvalRecord\">Metadata</a> a -&gt; (f <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; (g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> f) <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) -&gt; rec f -&gt; rec (<a href=\"Data-EvalRecord.html#t:MapMatches\" title=\"Data.EvalRecord\">MapMatches</a> pred g <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> f)","name":"mapMatching","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:mapMatching"},{"display_html":"<a href=\"#v:applyPred\">applyPred</a> :: <span class=\"keyword\">forall</span> {k} (pred :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) a. <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> pred -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> (pred <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a)","name":"applyPred","module":"Data.EvalRecord","link":"Data-EvalRecord.html#v:applyPred"},{"display_html":"module <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf.html\">Fcf</a>","name":"","module":"Data.EvalRecord","link":""},{"display_html":"<a href=\"#v:mkEvalRecord\">mkEvalRecord</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"mkEvalRecord","module":"Data.EvalRecord.TH","link":"Data-EvalRecord-TH.html#v:mkEvalRecord"},{"display_html":"<a href=\"#v:mkEvalRecordWith\">mkEvalRecordWith</a> :: <a href=\"Data-EvalRecord-TH.html#t:DeclareRecordConfig\" title=\"Data.EvalRecord.TH\">DeclareRecordConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"mkEvalRecordWith","module":"Data.EvalRecord.TH","link":"Data-EvalRecord-TH.html#v:mkEvalRecordWith"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DeclareRecordConfig\">DeclareRecordConfig</a> = <a href=\"#v:DeclareRecordConfig\">DeclareRecordConfig</a> {<ul class=\"subs\"><li><a href=\"#v:friends\">friends</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:unwrappedName\">unwrappedName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:baseName\">baseName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:wrapperName\">wrapperName</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a></li></ul>}","name":"DeclareRecordConfig DeclareRecordConfig baseName friends unwrappedName wrapperName","module":"Data.EvalRecord.TH","link":"Data-EvalRecord-TH.html#t:DeclareRecordConfig"},{"display_html":"<a href=\"#v:passthrough\">passthrough</a> :: <a href=\"Data-EvalRecord-TH.html#t:DeclareRecordConfig\" title=\"Data.EvalRecord.TH\">DeclareRecordConfig</a>","name":"passthrough","module":"Data.EvalRecord.TH","link":"Data-EvalRecord-TH.html#v:passthrough"},{"display_html":"<a href=\"#v:version\">version</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Version.html#t:Version\" title=\"Data.Version\">Version</a>","name":"version","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:version"},{"display_html":"<a href=\"#v:getBinDir\">getBinDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getBinDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getBinDir"},{"display_html":"<a href=\"#v:getLibDir\">getLibDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getLibDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getLibDir"},{"display_html":"<a href=\"#v:getDynLibDir\">getDynLibDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getDynLibDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getDynLibDir"},{"display_html":"<a href=\"#v:getDataDir\">getDataDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getDataDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getDataDir"},{"display_html":"<a href=\"#v:getLibexecDir\">getLibexecDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getLibexecDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getLibexecDir"},{"display_html":"<a href=\"#v:getDataFileName\">getDataFileName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getDataFileName","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getDataFileName"},{"display_html":"<a href=\"#v:getSysconfDir\">getSysconfDir</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>","name":"getSysconfDir","module":"Paths_temporal_sdk","link":"Paths_temporal_sdk.html#v:getSysconfDir"},{"display_html":"<a href=\"#v:temporalBundle\">temporalBundle</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Lib.html#t:DecsQ\" title=\"Language.Haskell.TH.Lib\">DecsQ</a>","name":"temporalBundle","module":"Temporal.Bundle.TH","link":"Temporal-Bundle-TH.html#v:temporalBundle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DeclareRecordConfig\">DeclareRecordConfig</a> = <a href=\"#v:DeclareRecordConfig\">DeclareRecordConfig</a> {<ul class=\"subs\"><li><a href=\"#v:friends\">friends</a> :: [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>]</li><li><a href=\"#v:unwrappedName\">unwrappedName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:baseName\">baseName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:wrapperName\">wrapperName</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a></li></ul>}","name":"DeclareRecordConfig DeclareRecordConfig baseName friends unwrappedName wrapperName","module":"Temporal.Bundle.TH","link":"Temporal-Bundle-TH.html#t:DeclareRecordConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Duration\">Duration</a>","name":"Duration","module":"Temporal.Duration","link":"Temporal-Duration.html#t:Duration"},{"display_html":"<a href=\"#v:durationSeconds\">durationSeconds</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a>","name":"durationSeconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:durationSeconds"},{"display_html":"<a href=\"#v:durationNanoseconds\">durationNanoseconds</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a>","name":"durationNanoseconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:durationNanoseconds"},{"display_html":"<a href=\"#v:mkDuration\">mkDuration</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"mkDuration","module":"Temporal.Duration","link":"Temporal-Duration.html#v:mkDuration"},{"display_html":"<a href=\"#v:addDurations\">addDurations</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"addDurations","module":"Temporal.Duration","link":"Temporal-Duration.html#v:addDurations"},{"display_html":"<a href=\"#v:diffTimeToDuration\">diffTimeToDuration</a> :: <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:DiffTime\" title=\"Data.Time.Clock\">DiffTime</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"diffTimeToDuration","module":"Temporal.Duration","link":"Temporal-Duration.html#v:diffTimeToDuration"},{"display_html":"<a href=\"#v:nominalDiffTimeToDuration\">nominalDiffTimeToDuration</a> :: <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:NominalDiffTime\" title=\"Data.Time.Clock\">NominalDiffTime</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"nominalDiffTimeToDuration","module":"Temporal.Duration","link":"Temporal-Duration.html#v:nominalDiffTimeToDuration"},{"display_html":"<a href=\"#v:nanoseconds\">nanoseconds</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"nanoseconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:nanoseconds"},{"display_html":"<a href=\"#v:microseconds\">microseconds</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:Integer\" title=\"Prelude\">Integer</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"microseconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:microseconds"},{"display_html":"<a href=\"#v:milliseconds\">milliseconds</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"milliseconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:milliseconds"},{"display_html":"<a href=\"#v:seconds\">seconds</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"seconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:seconds"},{"display_html":"<a href=\"#v:minutes\">minutes</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"minutes","module":"Temporal.Duration","link":"Temporal-Duration.html#v:minutes"},{"display_html":"<a href=\"#v:hours\">hours</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"hours","module":"Temporal.Duration","link":"Temporal-Duration.html#v:hours"},{"display_html":"<a href=\"#v:days\">days</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"days","module":"Temporal.Duration","link":"Temporal-Duration.html#v:days"},{"display_html":"<a href=\"#v:weeks\">weeks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"weeks","module":"Temporal.Duration","link":"Temporal-Duration.html#v:weeks"},{"display_html":"<a href=\"#v:infinity\">infinity</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"infinity","module":"Temporal.Duration","link":"Temporal-Duration.html#v:infinity"},{"display_html":"<a href=\"#v:durationFromProto\">durationFromProto</a> :: <a href=\"https://hackage.haskell.org/package/proto-lens-protobuf-types-0.7.2.1/docs/Proto-Google-Protobuf-Duration.html#t:Duration\" title=\"Proto.Google.Protobuf.Duration\">Duration</a> -&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"durationFromProto","module":"Temporal.Duration","link":"Temporal-Duration.html#v:durationFromProto"},{"display_html":"<a href=\"#v:durationToProto\">durationToProto</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"https://hackage.haskell.org/package/proto-lens-protobuf-types-0.7.2.1/docs/Proto-Google-Protobuf-Duration.html#t:Duration\" title=\"Proto.Google.Protobuf.Duration\">Duration</a>","name":"durationToProto","module":"Temporal.Duration","link":"Temporal-Duration.html#v:durationToProto"},{"display_html":"<a href=\"#v:durationToMilliseconds\">durationToMilliseconds</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a>","name":"durationToMilliseconds","module":"Temporal.Duration","link":"Temporal-Duration.html#v:durationToMilliseconds"},{"display_html":"<a href=\"#v:launchTestServer\">launchTestServer</a> :: <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Runtime.html#t:Runtime\" title=\"Temporal.Runtime\">Runtime</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-EphemeralServer.html#t:EphemeralServerError\" title=\"Temporal.EphemeralServer\">EphemeralServerError</a> (<a href=\"Temporal-EphemeralServer.html#t:PortNumber\" title=\"Temporal.EphemeralServer\">PortNumber</a>, <a href=\"Temporal-EphemeralServer.html#t:EphemeralServer\" title=\"Temporal.EphemeralServer\">EphemeralServer</a>))","name":"launchTestServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:launchTestServer"},{"display_html":"<a href=\"#v:launchDevServer\">launchDevServer</a> :: <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Runtime.html#t:Runtime\" title=\"Temporal.Runtime\">Runtime</a> -&gt; <a href=\"Temporal-EphemeralServer.html#t:TemporalDevServerConfig\" title=\"Temporal.EphemeralServer\">TemporalDevServerConfig</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-EphemeralServer.html#t:EphemeralServerError\" title=\"Temporal.EphemeralServer\">EphemeralServerError</a> <a href=\"Temporal-EphemeralServer.html#t:EphemeralServer\" title=\"Temporal.EphemeralServer\">EphemeralServer</a>)","name":"launchDevServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:launchDevServer"},{"display_html":"<a href=\"#v:withDevServer\">withDevServer</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Runtime.html#t:Runtime\" title=\"Temporal.Runtime\">Runtime</a> -&gt; <a href=\"Temporal-EphemeralServer.html#t:TemporalDevServerConfig\" title=\"Temporal.EphemeralServer\">TemporalDevServerConfig</a> -&gt; (<a href=\"Temporal-EphemeralServer.html#t:EphemeralServer\" title=\"Temporal.EphemeralServer\">EphemeralServer</a> -&gt; m a) -&gt; m a","name":"withDevServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:withDevServer"},{"display_html":"<a href=\"#v:withTestServer\">withTestServer</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Runtime.html#t:Runtime\" title=\"Temporal.Runtime\">Runtime</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-EphemeralServer.html#t:TestServerConfig\" title=\"Temporal.Core.EphemeralServer\">TestServerConfig</a> -&gt; (<a href=\"Temporal-EphemeralServer.html#t:EphemeralServer\" title=\"Temporal.EphemeralServer\">EphemeralServer</a> -&gt; m a) -&gt; m a","name":"withTestServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:withTestServer"},{"display_html":"<a href=\"#v:getFreePort\">getFreePort</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Temporal-EphemeralServer.html#t:PortNumber\" title=\"Temporal.EphemeralServer\">PortNumber</a>","name":"getFreePort","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:getFreePort"},{"display_html":"<a href=\"#v:openFreePort\">openFreePort</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-EphemeralServer.html#t:PortNumber\" title=\"Temporal.EphemeralServer\">PortNumber</a>, <a href=\"https://hackage.haskell.org/package/network-3.1.4.0/docs/Network-Socket.html#t:Socket\" title=\"Network.Socket\">Socket</a>)","name":"openFreePort","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:openFreePort"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EphemeralServerError\">EphemeralServerError</a> = <a href=\"#v:EphemeralServerError\">EphemeralServerError</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>","name":"EphemeralServerError EphemeralServerError","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:EphemeralServerError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EphemeralExeVersion\">EphemeralExeVersion</a><ul class=\"subs\"><li>= <a href=\"#v:Default\">Default</a> <a href=\"Temporal-EphemeralServer.html#t:SDKDefault\" title=\"Temporal.EphemeralServer\">SDKDefault</a></li><li>| <a href=\"#v:Fixed\">Fixed</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>","name":"EphemeralExeVersion Fixed Default","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:EphemeralExeVersion"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EphemeralExe\">EphemeralExe</a><ul class=\"subs\"><li>= <a href=\"#v:ExistingPath\">ExistingPath</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li>| <a href=\"#v:CachedDownload\">CachedDownload</a> <a href=\"Temporal-EphemeralServer.html#t:EphemeralExeVersion\" title=\"Temporal.EphemeralServer\">EphemeralExeVersion</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a>)</li></ul>","name":"EphemeralExe ExistingPath CachedDownload","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:EphemeralExe"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SDKDefault\">SDKDefault</a> = <a href=\"#v:SDKDefault\">SDKDefault</a> {<ul class=\"subs\"><li><a href=\"#v:sdkName\">sdkName</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:sdkVersion\">sdkVersion</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li></ul>}","name":"SDKDefault sdkName sdkVersion SDKDefault","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:SDKDefault"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TemporalDevServerConfig\">TemporalDevServerConfig</a> = <a href=\"#v:TemporalDevServerConfig\">TemporalDevServerConfig</a> {<ul class=\"subs\"><li><a href=\"#v:exe\">exe</a> :: <a href=\"Temporal-EphemeralServer.html#t:EphemeralExe\" title=\"Temporal.EphemeralServer\">EphemeralExe</a></li><li><a href=\"#v:namespace\">namespace</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:ip\">ip</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a></li><li><a href=\"#v:port\">port</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:dbFilename\">dbFilename</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a></li><li><a href=\"#v:ui\">ui</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:uiPort\">uiPort</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word16\" title=\"Data.Word\">Word16</a></li><li><a href=\"#v:log\">log</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>)</li><li><a href=\"#v:extraArgs\">extraArgs</a> :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]</li></ul>}","name":"TemporalDevServerConfig ip log namespace TemporalDevServerConfig extraArgs uiPort ui dbFilename port exe","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:TemporalDevServerConfig"},{"display_html":"<a href=\"#v:defaultTemporalDevServerConfig\">defaultTemporalDevServerConfig</a> :: <a href=\"Temporal-EphemeralServer.html#t:TemporalDevServerConfig\" title=\"Temporal.EphemeralServer\">TemporalDevServerConfig</a>","name":"defaultTemporalDevServerConfig","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:defaultTemporalDevServerConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EphemeralServer\">EphemeralServer</a>","name":"EphemeralServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:EphemeralServer"},{"display_html":"<a href=\"#v:shutdownEphemeralServer\">shutdownEphemeralServer</a> :: <a href=\"Temporal-EphemeralServer.html#t:EphemeralServer\" title=\"Temporal.EphemeralServer\">EphemeralServer</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> ())","name":"shutdownEphemeralServer","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#v:shutdownEphemeralServer"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PortNumber\">PortNumber</a>","name":"PortNumber","module":"Temporal.EphemeralServer","link":"Temporal-EphemeralServer.html#t:PortNumber"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Payload\">Payload</a> = <a href=\"#v:Payload\">Payload</a> {<ul class=\"subs\"><li><a href=\"#v:payloadData\">payloadData</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li><li><a href=\"#v:payloadMetadata\">payloadMetadata</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"Payload Payload payloadData payloadMetadata","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Payload"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Codec\">Codec</a> fmt a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:encoding\">encoding</a> :: fmt -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> a -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li><li><a href=\"#v:messageType\">messageType</a> :: fmt -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li><li><a href=\"#v:encode\">encode</a> :: fmt -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:decode\">decode</a> :: fmt -&gt; <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> a)</li></ul>","name":"Codec decode encode messageType encoding $dmmessageType","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Codec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:JSON\">JSON</a> = <a href=\"#v:JSON\">JSON</a>","name":"JSON JSON","module":"Temporal.Payload","link":"Temporal-Payload.html#t:JSON"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Null\">Null</a> = <a href=\"#v:Null\">Null</a>","name":"Null Null","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Null"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Binary\">Binary</a> = <a href=\"#v:Binary\">Binary</a>","name":"Binary Binary","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Binary"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Protobuf\">Protobuf</a> = <a href=\"#v:Protobuf\">Protobuf</a>","name":"Protobuf Protobuf","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Protobuf"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Zlib\">Zlib</a> = <a href=\"#v:Zlib\">Zlib</a> {<ul class=\"subs\"><li><a href=\"#v:minimumEncodingSize\">minimumEncodingSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:compressParams\">compressParams</a> :: <a href=\"https://hackage.haskell.org/package/zlib-0.6.3.0/docs/Codec-Compression-Zlib-Internal.html#t:CompressParams\" title=\"Codec.Compression.Zlib.Internal\">CompressParams</a></li><li><a href=\"#v:decompressParams\">decompressParams</a> :: <a href=\"https://hackage.haskell.org/package/zlib-0.6.3.0/docs/Codec-Compression-Zlib-Internal.html#t:DecompressParams\" title=\"Codec.Compression.Zlib.Internal\">DecompressParams</a></li></ul>}","name":"Zlib Zlib minimumEncodingSize compressParams decompressParams","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Zlib"},{"display_html":"<a href=\"#v:zlib\">zlib</a> :: <a href=\"Temporal-Payload.html#t:Zlib\" title=\"Temporal.Payload\">Zlib</a>","name":"zlib","module":"Temporal.Payload","link":"Temporal-Payload.html#v:zlib"},{"display_html":"<a href=\"#v:applyPayloads\">applyPayloads</a> :: <a href=\"Temporal-Payload.html#t:ApplyPayloads\" title=\"Temporal.Payload\">ApplyPayloads</a> codec args =&gt; codec -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> args -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> result -&gt; (args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> result) -&gt; <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> result)","name":"applyPayloads","module":"Temporal.Payload","link":"Temporal-Payload.html#v:applyPayloads"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Around\">Around</a> base = <a href=\"#v:Around\">Around</a> {<ul class=\"subs\"><li><a href=\"#v:around\">around</a> :: <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a></li><li><a href=\"#v:baseCodec\">baseCodec</a> :: base</li></ul>}","name":"Around Around around baseCodec","module":"Temporal.Payload","link":"Temporal-Payload.html#t:Around"},{"display_html":"<a href=\"#v:mkPayloadProcessor\">mkPayloadProcessor</a> :: <a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> fmt <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> =&gt; fmt -&gt; <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a>","name":"mkPayloadProcessor","module":"Temporal.Payload","link":"Temporal-Payload.html#v:mkPayloadProcessor"},{"display_html":"<a href=\"#v:addPayloadProcessor\">addPayloadProcessor</a> :: <a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> fmt <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> =&gt; fmt -&gt; <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a> -&gt; <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a>","name":"addPayloadProcessor","module":"Temporal.Payload","link":"Temporal-Payload.html#v:addPayloadProcessor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:PayloadProcessor\">PayloadProcessor</a> = <a href=\"#v:PayloadProcessor\">PayloadProcessor</a> {<ul class=\"subs\"><li><a href=\"#v:payloadProcessorEncode\">payloadProcessorEncode</a> :: <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:payloadProcessorDecode\">payloadProcessorDecode</a> :: <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li></ul>}","name":"PayloadProcessor PayloadProcessor payloadProcessorEncode payloadProcessorDecode","module":"Temporal.Payload","link":"Temporal-Payload.html#t:PayloadProcessor"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ApplyPayloads\">ApplyPayloads</a> codec (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>])","name":"ApplyPayloads","module":"Temporal.Payload","link":"Temporal-Payload.html#t:ApplyPayloads"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ArgsOf\">ArgsOf</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>] <span class=\"keyword\">where ...</span>","name":"ArgsOf","module":"Temporal.Payload","link":"Temporal-Payload.html#t:ArgsOf"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ResultOf\">ResultOf</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) f <span class=\"keyword\">where ...</span>","name":"ResultOf","module":"Temporal.Payload","link":"Temporal-Payload.html#t:ResultOf"},{"display_html":"<span class=\"keyword\">type family</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) <a href=\"#t::-45--62-:\">:-&gt;:</a> result <span class=\"keyword\">where ...</span>","name":":->:","module":"Temporal.Payload","link":"Temporal-Payload.html#t::-45--62-:"},{"display_html":"<a href=\"#v:convertToProtoPayload\">convertToProtoPayload</a> :: <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Common-V1-Message.html#t:Payload\" title=\"Proto.Temporal.Api.Common.V1.Message\">Payload</a>","name":"convertToProtoPayload","module":"Temporal.Payload","link":"Temporal-Payload.html#v:convertToProtoPayload"},{"display_html":"<a href=\"#v:convertFromProtoPayload\">convertFromProtoPayload</a> :: <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Common-V1-Message.html#t:Payload\" title=\"Proto.Temporal.Api.Common.V1.Message\">Payload</a> -&gt; <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>","name":"convertFromProtoPayload","module":"Temporal.Payload","link":"Temporal-Payload.html#v:convertFromProtoPayload"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:VarArgs\">VarArgs</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:sequenceArgs\">sequenceArgs</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> (m result) -&gt; m (args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m result) -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m result</li><li><a href=\"#v:mapResult\">mapResult</a> :: (result -&gt; result') -&gt; (args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> result) -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> result'</li><li><a href=\"#v:foldlArgs\">foldlArgs</a> :: <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> c args =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> c -&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; b -&gt; a -&gt; b) -&gt; b -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> b</li></ul>","name":"VarArgs mapResult sequenceArgs foldlArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#t:VarArgs"},{"display_html":"<a href=\"#v:hoistResult\">hoistResult</a> :: <span class=\"keyword\">forall</span> {k} (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) (result :: k) m n. <a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args =&gt; (<span class=\"keyword\">forall</span> (x :: k). m x -&gt; n x) -&gt; (args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m result) -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> n result","name":"hoistResult","module":"Temporal.Payload","link":"Temporal-Payload.html#v:hoistResult"},{"display_html":"<a href=\"#v:foldMapArgs\">foldMapArgs</a> :: <span class=\"keyword\">forall</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) c m. (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> c args, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Monoid.html#t:Monoid\" title=\"Data.Monoid\">Monoid</a> m) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; a -&gt; m) -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m","name":"foldMapArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#v:foldMapArgs"},{"display_html":"<a href=\"#v:foldMArgs\">foldMArgs</a> :: <span class=\"keyword\">forall</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) c b m. (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> c args, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; b -&gt; a -&gt; m b) -&gt; b -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m b","name":"foldMArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#v:foldMArgs"},{"display_html":"<a href=\"#v:foldMArgs_\">foldMArgs_</a> :: <span class=\"keyword\">forall</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) c b m. (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> c args, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m) =&gt; (<span class=\"keyword\">forall</span> a. c a =&gt; b -&gt; a -&gt; m b) -&gt; b -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m ()","name":"foldMArgs_","module":"Temporal.Payload","link":"Temporal-Payload.html#v:foldMArgs_"},{"display_html":"<a href=\"#v:withArgs\">withArgs</a> :: <span class=\"keyword\">forall</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result codec. (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> (<a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> codec) args) =&gt; codec -&gt; (<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:UnencodedPayload\" title=\"Temporal.Payload\">UnencodedPayload</a> -&gt; result) -&gt; args <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> result","name":"withArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#v:withArgs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:UnencodedPayload\">UnencodedPayload</a> = <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>","name":"UnencodedPayload","module":"Temporal.Payload","link":"Temporal-Payload.html#t:UnencodedPayload"},{"display_html":"<a href=\"#v:processorEncodePayloads\">processorEncodePayloads</a> :: (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> f) =&gt; <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a> -&gt; f <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; m (f <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)","name":"processorEncodePayloads","module":"Temporal.Payload","link":"Temporal-Payload.html#v:processorEncodePayloads"},{"display_html":"<a href=\"#v:processorDecodePayloads\">processorDecodePayloads</a> :: (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> f) =&gt; <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a> -&gt; f <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; m (f <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)","name":"processorDecodePayloads","module":"Temporal.Payload","link":"Temporal-Payload.html#v:processorDecodePayloads"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:AllArgs\">AllArgs</a> (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) <span class=\"keyword\">where ...</span>","name":"AllArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#t:AllArgs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GatherArgs\">GatherArgs</a> codec (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) = (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> (<a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> codec) args)","name":"GatherArgs","module":"Temporal.Payload","link":"Temporal-Payload.html#t:GatherArgs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GatherArgsOf\">GatherArgsOf</a> codec f = <a href=\"Temporal-Payload.html#t:GatherArgs\" title=\"Temporal.Payload\">GatherArgs</a> codec (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f)","name":"GatherArgsOf","module":"Temporal.Payload","link":"Temporal-Payload.html#t:GatherArgsOf"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FunctionSupportsCodec\">FunctionSupportsCodec</a> codec (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result = (<a href=\"Temporal-Payload.html#t:GatherArgs\" title=\"Temporal.Payload\">GatherArgs</a> codec args, <a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> codec result, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> result, <a href=\"Temporal-Payload.html#t:ApplyPayloads\" title=\"Temporal.Payload\">ApplyPayloads</a> codec args)","name":"FunctionSupportsCodec","module":"Temporal.Payload","link":"Temporal-Payload.html#t:FunctionSupportsCodec"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FunctionSupportsCodec-39-\">FunctionSupportsCodec'</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) codec f = (<a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f) (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> m f), f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> m f)))","name":"FunctionSupportsCodec'","module":"Temporal.Payload","link":"Temporal-Payload.html#t:FunctionSupportsCodec-39-"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ValueError\">ValueError</a> = <a href=\"#v:ValueError\">ValueError</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"ValueError ValueError","module":"Temporal.Payload","link":"Temporal-Payload.html#t:ValueError"},{"display_html":"<a href=\"#v:readHistoryProtobufFile\">readHistoryProtobufFile</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; m <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:History\" title=\"Proto.Temporal.Api.History.V1.Message\">History</a>","name":"readHistoryProtobufFile","module":"Temporal.Replay","link":"Temporal-Replay.html#v:readHistoryProtobufFile"},{"display_html":"<a href=\"#v:writeHistoryProtobufFile\">writeHistoryProtobufFile</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:FilePath\" title=\"Prelude\">FilePath</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:History\" title=\"Proto.Temporal.Api.History.V1.Message\">History</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"writeHistoryProtobufFile","module":"Temporal.Replay","link":"Temporal-Replay.html#v:writeHistoryProtobufFile"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToSearchAttribute\">ToSearchAttribute</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toSearchAttribute\">toSearchAttribute</a> :: a -&gt; <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a></li></ul>","name":"ToSearchAttribute toSearchAttribute","module":"Temporal.SearchAttributes","link":"Temporal-SearchAttributes.html#t:ToSearchAttribute"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:SearchAttributeKey\">SearchAttributeKey</a> = <a href=\"#v:SearchAttributeKey\">SearchAttributeKey</a> {<ul class=\"subs\"><li><a href=\"#v:unSearchAttributeKey\">unSearchAttributeKey</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"SearchAttributeKey unSearchAttributeKey SearchAttributeKey","module":"Temporal.SearchAttributes","link":"Temporal-SearchAttributes.html#t:SearchAttributeKey"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SearchAttributeType\">SearchAttributeType</a><ul class=\"subs\"><li>= <a href=\"#v:Bool\">Bool</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li>| <a href=\"#v:Datetime\">Datetime</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:UTCTime\" title=\"Data.Time.Clock\">UTCTime</a></li><li>| <a href=\"#v:Double\">Double</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a></li><li>| <a href=\"#v:Int\">Int</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li>| <a href=\"#v:KeywordOrText\">KeywordOrText</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li>| <a href=\"#v:KeywordList\">KeywordList</a> (<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>)</li></ul>","name":"SearchAttributeType KeywordList KeywordOrText Datetime Bool Int Double","module":"Temporal.SearchAttributes","link":"Temporal-SearchAttributes.html#t:SearchAttributeType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SagaT\">SagaT</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) a","name":"SagaT","module":"Temporal.Workflow.Saga","link":"Temporal-Workflow-Saga.html#t:SagaT"},{"display_html":"<a href=\"#v:runSaga\">runSaga</a> :: (<a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m, <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:MonadLogger\" title=\"Control.Monad.Logger\">MonadLogger</a> m) =&gt; (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> -&gt; m ()) -&gt; <a href=\"Temporal-Workflow-Saga.html#t:SagaT\" title=\"Temporal.Workflow.Saga\">SagaT</a> m a -&gt; m a","name":"runSaga","module":"Temporal.Workflow.Saga","link":"Temporal-Workflow-Saga.html#v:runSaga"},{"display_html":"<a href=\"#v:compensated\">compensated</a> :: <a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m =&gt; m () -&gt; m a -&gt; <a href=\"Temporal-Workflow-Saga.html#t:SagaT\" title=\"Temporal.Workflow.Saga\">SagaT</a> m a","name":"compensated","module":"Temporal.Workflow.Saga","link":"Temporal-Workflow-Saga.html#v:compensated"},{"display_html":"<a href=\"#v:mkAnnotatedHandlers\">mkAnnotatedHandlers</a> :: [<a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a>] -&gt; [<a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a>]","name":"mkAnnotatedHandlers","module":"Temporal.Exception","link":"Temporal-Exception.html#v:mkAnnotatedHandlers"},{"display_html":"<a href=\"#v:prettySrcLoc\">prettySrcLoc</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:SrcLoc\" title=\"GHC.Stack\">SrcLoc</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettySrcLoc","module":"Temporal.Exception","link":"Temporal-Exception.html#v:prettySrcLoc"},{"display_html":"<a href=\"#v:prettyCallStack\">prettyCallStack</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:CallStack\" title=\"GHC.Stack\">CallStack</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"prettyCallStack","module":"Temporal.Exception","link":"Temporal-Exception.html#v:prettyCallStack"},{"display_html":"<a href=\"#v:prettyCallStackLines\">prettyCallStackLines</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:CallStack\" title=\"GHC.Stack\">CallStack</a> -&gt; [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>]","name":"prettyCallStackLines","module":"Temporal.Exception","link":"Temporal-Exception.html#v:prettyCallStackLines"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityCancelReason\">ActivityCancelReason</a><ul class=\"subs\"><li>= <a href=\"#v:NotFound\">NotFound</a></li><li>| <a href=\"#v:CancelRequested\">CancelRequested</a></li><li>| <a href=\"#v:Timeout\">Timeout</a></li><li>| <a href=\"#v:WorkerShutdown\">WorkerShutdown</a></li><li>| <a href=\"#v:UnknownCancellationReason\">UnknownCancellationReason</a></li></ul>","name":"ActivityCancelReason Timeout NotFound CancelRequested WorkerShutdown UnknownCancellationReason","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ActivityCancelReason"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityFailure\">ActivityFailure</a> = <a href=\"#v:ActivityFailure\">ActivityFailure</a> {<ul class=\"subs\"><li><a href=\"#v:message\">message</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:activityType\">activityType</a> :: <a href=\"Temporal-Exception.html#t:ActivityType\" title=\"Temporal.Exception\">ActivityType</a></li><li><a href=\"#v:activityId\">activityId</a> :: <a href=\"Temporal-Workflow.html#t:ActivityId\" title=\"Temporal.Workflow\">ActivityId</a></li><li><a href=\"#v:retryState\">retryState</a> :: <a href=\"Temporal-Exception.html#t:RetryState\" title=\"Temporal.Exception\">RetryState</a></li><li><a href=\"#v:identity\">identity</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:cause\">cause</a> :: <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a></li><li><a href=\"#v:scheduledEventId\">scheduledEventId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:startedEventId\">startedEventId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:original\">original</a> :: <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:ActivityFailureInfo\" title=\"Proto.Temporal.Api.Failure.V1.Message\">ActivityFailureInfo</a></li><li><a href=\"#v:stack\">stack</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ActivityFailure original stack identity message cause scheduledEventId startedEventId activityType activityId retryState ActivityFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ActivityFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ApplicationFailure\">ApplicationFailure</a> = <a href=\"#v:ApplicationFailure\">ApplicationFailure</a> {<ul class=\"subs\"><li><a href=\"#v:type-39-\">type'</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:message\">message</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:nonRetryable\">nonRetryable</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:details\">details</a> :: [<a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>]</li><li><a href=\"#v:stack\">stack</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:nextRetryDelay\">nextRetryDelay</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li></ul>}","name":"ApplicationFailure stack type' message details nonRetryable nextRetryDelay ApplicationFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ApplicationFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowExecutionFailedAttributes\">WorkflowExecutionFailedAttributes</a> = <a href=\"#v:WorkflowExecutionFailedAttributes\">WorkflowExecutionFailedAttributes</a> {<ul class=\"subs\"><li><a href=\"#v:failure\">failure</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a></li><li><a href=\"#v:retryState\">retryState</a> :: <a href=\"Temporal-Exception.html#t:RetryState\" title=\"Temporal.Exception\">RetryState</a></li><li><a href=\"#v:workflowTaskCompletedEventId\">workflowTaskCompletedEventId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:newExecutionRunId\">newExecutionRunId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li></ul>}","name":"WorkflowExecutionFailedAttributes retryState failure workflowTaskCompletedEventId newExecutionRunId WorkflowExecutionFailedAttributes","module":"Temporal.Exception","link":"Temporal-Exception.html#t:WorkflowExecutionFailedAttributes"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CompleteAsync\">CompleteAsync</a> = <a href=\"#v:CompleteAsync\">CompleteAsync</a>","name":"CompleteAsync CompleteAsync","module":"Temporal.Exception","link":"Temporal-Exception.html#t:CompleteAsync"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ApplicationFailureHandler\">ApplicationFailureHandler</a> <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:ApplicationFailureHandler\">ApplicationFailureHandler</a> :: <span class=\"keyword\">forall</span> e. <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; (e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>) -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a></li></ul>","name":"ApplicationFailureHandler ApplicationFailureHandler","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ApplicationFailureHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeWorkerException\">SomeWorkerException</a> = <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt;  <a href=\"#v:SomeWorkerException\">SomeWorkerException</a> e","name":"SomeWorkerException SomeWorkerException","module":"Temporal.Exception","link":"Temporal-Exception.html#t:SomeWorkerException"},{"display_html":"<a href=\"#v:workerExceptionToException\">workerExceptionToException</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a>","name":"workerExceptionToException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:workerExceptionToException"},{"display_html":"<a href=\"#v:workerExceptionFromException\">workerExceptionFromException</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> e","name":"workerExceptionFromException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:workerExceptionFromException"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RuntimeError\">RuntimeError</a> = <a href=\"#v:RuntimeError\">RuntimeError</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"RuntimeError RuntimeError","module":"Temporal.Exception","link":"Temporal-Exception.html#t:RuntimeError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowNotFound\">WorkflowNotFound</a> = <a href=\"#v:WorkflowNotFound\">WorkflowNotFound</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"WorkflowNotFound WorkflowNotFound","module":"Temporal.Exception","link":"Temporal-Exception.html#t:WorkflowNotFound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityNotFound\">ActivityNotFound</a> = <a href=\"#v:ActivityNotFound\">ActivityNotFound</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"ActivityNotFound ActivityNotFound","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ActivityNotFound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryNotFound\">QueryNotFound</a> = <a href=\"#v:QueryNotFound\">QueryNotFound</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a>","name":"QueryNotFound QueryNotFound","module":"Temporal.Exception","link":"Temporal-Exception.html#t:QueryNotFound"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LogicBugType\">LogicBugType</a><ul class=\"subs\"><li>= <a href=\"#v:ReadingCompletionsFailedRun\">ReadingCompletionsFailedRun</a></li><li>| <a href=\"#v:WorkflowActivationDeadlock\">WorkflowActivationDeadlock</a></li></ul>","name":"LogicBugType ReadingCompletionsFailedRun WorkflowActivationDeadlock","module":"Temporal.Exception","link":"Temporal-Exception.html#t:LogicBugType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:LogicBug\">LogicBug</a> = <a href=\"#v:LogicBug\">LogicBug</a> <a href=\"Temporal-Exception.html#t:LogicBugType\" title=\"Temporal.Exception\">LogicBugType</a>","name":"LogicBug LogicBug","module":"Temporal.Exception","link":"Temporal-Exception.html#t:LogicBug"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowAlreadyStarted\">WorkflowAlreadyStarted</a> = <a href=\"#v:WorkflowAlreadyStarted\">WorkflowAlreadyStarted</a> {<ul class=\"subs\"><li><a href=\"#v:workflowAlreadyStartedWorkflowId\">workflowAlreadyStartedWorkflowId</a> :: <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a></li><li><a href=\"#v:workflowAlreadyStartedWorkflowType\">workflowAlreadyStartedWorkflowType</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li></ul>}","name":"WorkflowAlreadyStarted WorkflowAlreadyStarted workflowAlreadyStartedWorkflowId workflowAlreadyStartedWorkflowType","module":"Temporal.Exception","link":"Temporal-Exception.html#t:WorkflowAlreadyStarted"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChildWorkflowFailed\">ChildWorkflowFailed</a> = <a href=\"#v:ChildWorkflowFailed\">ChildWorkflowFailed</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a>","name":"ChildWorkflowFailed ChildWorkflowFailed","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ChildWorkflowFailed"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChildWorkflowCancelled\">ChildWorkflowCancelled</a> = <a href=\"#v:ChildWorkflowCancelled\">ChildWorkflowCancelled</a>","name":"ChildWorkflowCancelled ChildWorkflowCancelled","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ChildWorkflowCancelled"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SignalExternalWorkflowFailed\">SignalExternalWorkflowFailed</a> = <a href=\"#v:SignalExternalWorkflowFailed\">SignalExternalWorkflowFailed</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a>","name":"SignalExternalWorkflowFailed SignalExternalWorkflowFailed","module":"Temporal.Exception","link":"Temporal-Exception.html#t:SignalExternalWorkflowFailed"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ContinueAsNewException\">ContinueAsNewException</a> = <a href=\"#v:ContinueAsNewException\">ContinueAsNewException</a> {<ul class=\"subs\"><li><a href=\"#v:continueAsNewWorkflowType\">continueAsNewWorkflowType</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li><li><a href=\"#v:continueAsNewArguments\">continueAsNewArguments</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:continueAsNewOptions\">continueAsNewOptions</a> :: <a href=\"Temporal-Workflow.html#t:ContinueAsNewOptions\" title=\"Temporal.Workflow\">ContinueAsNewOptions</a></li></ul>}","name":"ContinueAsNewException ContinueAsNewException continueAsNewWorkflowType continueAsNewArguments continueAsNewOptions","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ContinueAsNewException"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AlternativeInstanceFailure\">AlternativeInstanceFailure</a> = <a href=\"#v:AlternativeInstanceFailure\">AlternativeInstanceFailure</a>","name":"AlternativeInstanceFailure AlternativeInstanceFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#t:AlternativeInstanceFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CancelExternalWorkflowFailed\">CancelExternalWorkflowFailed</a> = <a href=\"#v:CancelExternalWorkflowFailed\">CancelExternalWorkflowFailed</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a>","name":"CancelExternalWorkflowFailed CancelExternalWorkflowFailed","module":"Temporal.Exception","link":"Temporal-Exception.html#t:CancelExternalWorkflowFailed"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowCancelRequested\">WorkflowCancelRequested</a> = <a href=\"#v:WorkflowCancelRequested\">WorkflowCancelRequested</a>","name":"WorkflowCancelRequested WorkflowCancelRequested","module":"Temporal.Exception","link":"Temporal-Exception.html#t:WorkflowCancelRequested"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityCancelled\">ActivityCancelled</a> = <a href=\"#v:ActivityCancelled\">ActivityCancelled</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a>","name":"ActivityCancelled ActivityCancelled","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ActivityCancelled"},{"display_html":"<a href=\"#v:applicationFailureToFailureProto\">applicationFailureToFailureProto</a> :: <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Failure-V1-Message.html#t:Failure\" title=\"Proto.Temporal.Api.Failure.V1.Message\">Failure</a>","name":"applicationFailureToFailureProto","module":"Temporal.Exception","link":"Temporal-Exception.html#v:applicationFailureToFailureProto"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToApplicationFailure\">ToApplicationFailure</a> e <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toApplicationFailure\">toApplicationFailure</a> :: e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a></li></ul>","name":"ToApplicationFailure toApplicationFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ToApplicationFailure"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeApplicationFailure\">SomeApplicationFailure</a> = (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e, <a href=\"Temporal-Exception.html#t:ToApplicationFailure\" title=\"Temporal.Exception\">ToApplicationFailure</a> e) =&gt;  <a href=\"#v:SomeApplicationFailure\">SomeApplicationFailure</a> e","name":"SomeApplicationFailure SomeApplicationFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#t:SomeApplicationFailure"},{"display_html":"<a href=\"#v:applicationFailureToException\">applicationFailureToException</a> :: (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e, <a href=\"Temporal-Exception.html#t:ToApplicationFailure\" title=\"Temporal.Exception\">ToApplicationFailure</a> e) =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a>","name":"applicationFailureToException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:applicationFailureToException"},{"display_html":"<a href=\"#v:applicationFailureFromException\">applicationFailureFromException</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> e","name":"applicationFailureFromException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:applicationFailureFromException"},{"display_html":"<a href=\"#v:mkApplicationFailure\">mkApplicationFailure</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> -&gt; [<a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a>] -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>","name":"mkApplicationFailure","module":"Temporal.Exception","link":"Temporal-Exception.html#v:mkApplicationFailure"},{"display_html":"<a href=\"#v:basicHandler\">basicHandler</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>","name":"basicHandler","module":"Temporal.Exception","link":"Temporal-Exception.html#v:basicHandler"},{"display_html":"<a href=\"#v:annToPayload\">annToPayload</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Data-Annotation.html#t:Annotation\" title=\"Data.Annotation\">Annotation</a> -&gt; <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>","name":"annToPayload","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annToPayload"},{"display_html":"<a href=\"#v:annotationHandler\">annotationHandler</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; (e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>) -&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:AnnotatedException\" title=\"Control.Exception.Annotated\">AnnotatedException</a> e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>","name":"annotationHandler","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annotationHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NonRetryableError\">NonRetryableError</a> = <a href=\"#v:NonRetryableError\">NonRetryableError</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"NonRetryableError NonRetryableError","module":"Temporal.Exception","link":"Temporal-Exception.html#t:NonRetryableError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NextRetryDelay\">NextRetryDelay</a> = <a href=\"#v:NextRetryDelay\">NextRetryDelay</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)","name":"NextRetryDelay NextRetryDelay","module":"Temporal.Exception","link":"Temporal-Exception.html#t:NextRetryDelay"},{"display_html":"<a href=\"#v:standardApplicationFailureHandlers\">standardApplicationFailureHandlers</a> :: [<a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a>]","name":"standardApplicationFailureHandlers","module":"Temporal.Exception","link":"Temporal-Exception.html#v:standardApplicationFailureHandlers"},{"display_html":"<a href=\"#v:annotateNonRetryableError\">annotateNonRetryableError</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Data-Annotation.html#t:Annotation\" title=\"Data.Annotation\">Annotation</a>","name":"annotateNonRetryableError","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annotateNonRetryableError"},{"display_html":"<a href=\"#v:annotateRetryableError\">annotateRetryableError</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Data-Annotation.html#t:Annotation\" title=\"Data.Annotation\">Annotation</a>","name":"annotateRetryableError","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annotateRetryableError"},{"display_html":"<a href=\"#v:annotateNextRetryDelay\">annotateNextRetryDelay</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Data-Annotation.html#t:Annotation\" title=\"Data.Annotation\">Annotation</a>","name":"annotateNextRetryDelay","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annotateNextRetryDelay"},{"display_html":"<a href=\"#v:annotateNoRetryDelay\">annotateNoRetryDelay</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Data-Annotation.html#t:Annotation\" title=\"Data.Annotation\">Annotation</a>","name":"annotateNoRetryDelay","module":"Temporal.Exception","link":"Temporal-Exception.html#v:annotateNoRetryDelay"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeActivityException\">SomeActivityException</a> = <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt;  <a href=\"#v:SomeActivityException\">SomeActivityException</a> e","name":"SomeActivityException SomeActivityException","module":"Temporal.Exception","link":"Temporal-Exception.html#t:SomeActivityException"},{"display_html":"<a href=\"#v:activityExceptionToException\">activityExceptionToException</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; e -&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a>","name":"activityExceptionToException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:activityExceptionToException"},{"display_html":"<a href=\"#v:activityExceptionFromException\">activityExceptionFromException</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> e","name":"activityExceptionFromException","module":"Temporal.Exception","link":"Temporal-Exception.html#v:activityExceptionFromException"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowExecutionClosed\">WorkflowExecutionClosed</a><ul class=\"subs\"><li>= <a href=\"#v:WorkflowExecutionFailed\">WorkflowExecutionFailed</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:WorkflowExecutionFailedEventAttributes\" title=\"Proto.Temporal.Api.History.V1.Message\">WorkflowExecutionFailedEventAttributes</a></li><li>| <a href=\"#v:WorkflowExecutionTimedOut\">WorkflowExecutionTimedOut</a></li><li>| <a href=\"#v:WorkflowExecutionCanceled\">WorkflowExecutionCanceled</a></li><li>| <a href=\"#v:WorkflowExecutionTerminated\">WorkflowExecutionTerminated</a></li><li>| <a href=\"#v:WorkflowExecutionContinuedAsNew\">WorkflowExecutionContinuedAsNew</a></li></ul>","name":"WorkflowExecutionClosed WorkflowExecutionFailed WorkflowExecutionTimedOut WorkflowExecutionCanceled WorkflowExecutionTerminated WorkflowExecutionContinuedAsNew","module":"Temporal.Exception","link":"Temporal-Exception.html#t:WorkflowExecutionClosed"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ActivityType\">ActivityType</a> = <a href=\"#v:ActivityType\">ActivityType</a> {<ul class=\"subs\"><li><a href=\"#v:rawActivityType\">rawActivityType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ActivityType ActivityType rawActivityType","module":"Temporal.Exception","link":"Temporal-Exception.html#t:ActivityType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RetryState\">RetryState</a><ul class=\"subs\"><li>= <a href=\"#v:RetryStateUnspecified\">RetryStateUnspecified</a></li><li>| <a href=\"#v:RetryStateInProgress\">RetryStateInProgress</a></li><li>| <a href=\"#v:RetryStateNonRetryableFailure\">RetryStateNonRetryableFailure</a></li><li>| <a href=\"#v:RetryStateTimeout\">RetryStateTimeout</a></li><li>| <a href=\"#v:RetryStateMaximumAttemptsReached\">RetryStateMaximumAttemptsReached</a></li><li>| <a href=\"#v:RetryStateRetryPolicyNotSet\">RetryStateRetryPolicyNotSet</a></li><li>| <a href=\"#v:RetryStateInternalServerError\">RetryStateInternalServerError</a></li><li>| <a href=\"#v:RetryStateCancelRequested\">RetryStateCancelRequested</a></li></ul>","name":"RetryState RetryStateUnspecified RetryStateInProgress RetryStateNonRetryableFailure RetryStateTimeout RetryStateMaximumAttemptsReached RetryStateRetryPolicyNotSet RetryStateInternalServerError RetryStateCancelRequested","module":"Temporal.Exception","link":"Temporal-Exception.html#t:RetryState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Interceptors\">Interceptors</a> env = <a href=\"#v:Interceptors\">Interceptors</a> {<ul class=\"subs\"><li><a href=\"#v:workflowInboundInterceptors\">workflowInboundInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:WorkflowInboundInterceptor\" title=\"Temporal.Interceptor\">WorkflowInboundInterceptor</a></li><li><a href=\"#v:workflowOutboundInterceptors\">workflowOutboundInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:WorkflowOutboundInterceptor\" title=\"Temporal.Interceptor\">WorkflowOutboundInterceptor</a></li><li><a href=\"#v:activityInboundInterceptors\">activityInboundInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:ActivityInboundInterceptor\" title=\"Temporal.Interceptor\">ActivityInboundInterceptor</a> env</li><li><a href=\"#v:activityOutboundInterceptors\">activityOutboundInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:ActivityOutboundInterceptor\" title=\"Temporal.Interceptor\">ActivityOutboundInterceptor</a> env</li><li><a href=\"#v:clientInterceptors\">clientInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:ClientInterceptors\" title=\"Temporal.Interceptor\">ClientInterceptors</a></li><li><a href=\"#v:scheduleClientInterceptors\">scheduleClientInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:ScheduleClientInterceptors\" title=\"Temporal.Interceptor\">ScheduleClientInterceptors</a></li></ul>}","name":"Interceptors Interceptors workflowInboundInterceptors workflowOutboundInterceptors activityInboundInterceptors activityOutboundInterceptors clientInterceptors scheduleClientInterceptors","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:Interceptors"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExecuteWorkflowInput\">ExecuteWorkflowInput</a> = <a href=\"#v:ExecuteWorkflowInput\">ExecuteWorkflowInput</a> {<ul class=\"subs\"><li><a href=\"#v:executeWorkflowInputType\">executeWorkflowInputType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:executeWorkflowInputArgs\">executeWorkflowInputArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:executeWorkflowInputHeaders\">executeWorkflowInputHeaders</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:executeWorkflowInputInfo\">executeWorkflowInputInfo</a> :: <a href=\"Temporal-Workflow.html#t:Info\" title=\"Temporal.Workflow\">Info</a></li></ul>}","name":"ExecuteWorkflowInput ExecuteWorkflowInput executeWorkflowInputType executeWorkflowInputArgs executeWorkflowInputHeaders executeWorkflowInputInfo","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ExecuteWorkflowInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowInboundInterceptor\">WorkflowInboundInterceptor</a> = <a href=\"#v:WorkflowInboundInterceptor\">WorkflowInboundInterceptor</a> {<ul class=\"subs\"><li><a href=\"#v:executeWorkflow\">executeWorkflow</a> :: <a href=\"Temporal-Interceptor.html#t:ExecuteWorkflowInput\" title=\"Temporal.Interceptor\">ExecuteWorkflowInput</a> -&gt; (<a href=\"Temporal-Interceptor.html#t:ExecuteWorkflowInput\" title=\"Temporal.Interceptor\">ExecuteWorkflowInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Interceptor.html#t:WorkflowExitVariant\" title=\"Temporal.Interceptor\">WorkflowExitVariant</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Interceptor.html#t:WorkflowExitVariant\" title=\"Temporal.Interceptor\">WorkflowExitVariant</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:handleQuery\">handleQuery</a> :: <a href=\"Temporal-Interceptor.html#t:HandleQueryInput\" title=\"Temporal.Interceptor\">HandleQueryInput</a> -&gt; (<a href=\"Temporal-Interceptor.html#t:HandleQueryInput\" title=\"Temporal.Interceptor\">HandleQueryInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li></ul>}","name":"WorkflowInboundInterceptor WorkflowInboundInterceptor executeWorkflow handleQuery","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:WorkflowInboundInterceptor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:HandleQueryInput\">HandleQueryInput</a> = <a href=\"#v:HandleQueryInput\">HandleQueryInput</a> {<ul class=\"subs\"><li><a href=\"#v:handleQueryId\">handleQueryId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:handleQueryInputType\">handleQueryInputType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:handleQueryInputArgs\">handleQueryInputArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:handleQueryInputHeaders\">handleQueryInputHeaders</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"HandleQueryInput HandleQueryInput handleQueryId handleQueryInputType handleQueryInputArgs handleQueryInputHeaders","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:HandleQueryInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowOutboundInterceptor\">WorkflowOutboundInterceptor</a> = <a href=\"#v:WorkflowOutboundInterceptor\">WorkflowOutboundInterceptor</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleActivity\">scheduleActivity</a> :: <a href=\"Temporal-Interceptor.html#t:ActivityInput\" title=\"Temporal.Interceptor\">ActivityInput</a> -&gt; (<a href=\"Temporal-Interceptor.html#t:ActivityInput\" title=\"Temporal.Interceptor\">ActivityInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Workflow.html#t:Task\" title=\"Temporal.Workflow\">Task</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Workflow.html#t:Task\" title=\"Temporal.Workflow\">Task</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:startChildWorkflowExecution\">startChildWorkflowExecution</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; (<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:continueAsNew\">continueAsNew</a> :: <span class=\"keyword\">forall</span> a. <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Workflow.html#t:ContinueAsNewOptions\" title=\"Temporal.Workflow\">ContinueAsNewOptions</a> -&gt; (<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Workflow.html#t:ContinueAsNewOptions\" title=\"Temporal.Workflow\">ContinueAsNewOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> a</li></ul>}","name":"WorkflowOutboundInterceptor scheduleActivity startChildWorkflowExecution WorkflowOutboundInterceptor continueAsNew","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:WorkflowOutboundInterceptor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityInput\">ActivityInput</a> = <a href=\"#v:ActivityInput\">ActivityInput</a> {<ul class=\"subs\"><li><a href=\"#v:activityType\">activityType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:args\">args</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:options\">options</a> :: <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a></li><li><a href=\"#v:seq\">seq</a> :: Sequence</li></ul>}","name":"ActivityInput seq args options activityType ActivityInput","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ActivityInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityInboundInterceptor\">ActivityInboundInterceptor</a> env = <a href=\"#v:ActivityInboundInterceptor\">ActivityInboundInterceptor</a> {<ul class=\"subs\"><li><a href=\"#v:executeActivity\">executeActivity</a> :: env -&gt; <a href=\"Temporal-Interceptor.html#t:ExecuteActivityInput\" title=\"Temporal.Interceptor\">ExecuteActivityInput</a> -&gt; (env -&gt; <a href=\"Temporal-Interceptor.html#t:ExecuteActivityInput\" title=\"Temporal.Interceptor\">ExecuteActivityInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li></ul>}","name":"ActivityInboundInterceptor ActivityInboundInterceptor executeActivity","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ActivityInboundInterceptor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExecuteActivityInput\">ExecuteActivityInput</a> = <a href=\"#v:ExecuteActivityInput\">ExecuteActivityInput</a> {<ul class=\"subs\"><li><a href=\"#v:activityArgs\">activityArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:activityHeaders\">activityHeaders</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:activityInfo\">activityInfo</a> :: <a href=\"Temporal-Activity.html#t:ActivityInfo\" title=\"Temporal.Activity\">ActivityInfo</a></li></ul>}","name":"ExecuteActivityInput ExecuteActivityInput activityArgs activityHeaders activityInfo","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ExecuteActivityInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityOutboundInterceptor\">ActivityOutboundInterceptor</a> env = <a href=\"#v:ActivityOutboundInterceptor\">ActivityOutboundInterceptor</a>","name":"ActivityOutboundInterceptor ActivityOutboundInterceptor","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ActivityOutboundInterceptor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowExitVariant\">WorkflowExitVariant</a> a<ul class=\"subs\"><li>= <a href=\"#v:WorkflowExitContinuedAsNew\">WorkflowExitContinuedAsNew</a> <a href=\"Temporal-Exception.html#t:ContinueAsNewException\" title=\"Temporal.Exception\">ContinueAsNewException</a></li><li>| <a href=\"#v:WorkflowExitCancelled\">WorkflowExitCancelled</a> <a href=\"Temporal-Exception.html#t:WorkflowCancelRequested\" title=\"Temporal.Exception\">WorkflowCancelRequested</a></li><li>| <a href=\"#v:WorkflowExitFailed\">WorkflowExitFailed</a> <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a></li><li>| <a href=\"#v:WorkflowExitSuccess\">WorkflowExitSuccess</a> a</li></ul>","name":"WorkflowExitVariant WorkflowExitContinuedAsNew WorkflowExitCancelled WorkflowExitFailed WorkflowExitSuccess","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:WorkflowExitVariant"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ClientInterceptors\">ClientInterceptors</a> = <a href=\"#v:ClientInterceptors\">ClientInterceptors</a> {<ul class=\"subs\"><li><a href=\"#v:start\">start</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a> -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; (<a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a> -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:queryWorkflow\">queryWorkflow</a> :: <a href=\"Temporal-Interceptor.html#t:QueryWorkflowInput\" title=\"Temporal.Interceptor\">QueryWorkflowInput</a> -&gt; (<a href=\"Temporal-Interceptor.html#t:QueryWorkflowInput\" title=\"Temporal.Interceptor\">QueryWorkflowInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-Client.html#t:QueryRejected\" title=\"Temporal.Client\">QueryRejected</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-Client.html#t:QueryRejected\" title=\"Temporal.Client\">QueryRejected</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:signalWithStart\">signalWithStart</a> :: <a href=\"Temporal-Interceptor.html#t:SignalWithStartWorkflowInput\" title=\"Temporal.Interceptor\">SignalWithStartWorkflowInput</a> -&gt; (<a href=\"Temporal-Interceptor.html#t:SignalWithStartWorkflowInput\" title=\"Temporal.Interceptor\">SignalWithStartWorkflowInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li></ul>}","name":"ClientInterceptors start queryWorkflow signalWithStart ClientInterceptors","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ClientInterceptors"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryWorkflowInput\">QueryWorkflowInput</a> = <a href=\"#v:QueryWorkflowInput\">QueryWorkflowInput</a> {<ul class=\"subs\"><li><a href=\"#v:queryWorkflowWorkflowId\">queryWorkflowWorkflowId</a> :: <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a></li><li><a href=\"#v:queryWorkflowRejectCondition\">queryWorkflowRejectCondition</a> :: <a href=\"Temporal-Client.html#t:QueryRejectCondition\" title=\"Temporal.Client\">QueryRejectCondition</a></li><li><a href=\"#v:queryWorkflowHeaders\">queryWorkflowHeaders</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:queryWorkflowType\">queryWorkflowType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:queryWorkflowRunId\">queryWorkflowRunId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li><li><a href=\"#v:queryWorkflowArgs\">queryWorkflowArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"QueryWorkflowInput QueryWorkflowInput queryWorkflowWorkflowId queryWorkflowRejectCondition queryWorkflowHeaders queryWorkflowType queryWorkflowRunId queryWorkflowArgs","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:QueryWorkflowInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SignalWithStartWorkflowInput\">SignalWithStartWorkflowInput</a> = <a href=\"#v:SignalWithStartWorkflowInput\">SignalWithStartWorkflowInput</a> {<ul class=\"subs\"><li><a href=\"#v:signalWithStartWorkflowType\">signalWithStartWorkflowType</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li><li><a href=\"#v:signalWithStartWorkflowId\">signalWithStartWorkflowId</a> :: <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a></li><li><a href=\"#v:signalWithStartArgs\">signalWithStartArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:signalWithStartSignalName\">signalWithStartSignalName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:signalWithStartSignalArgs\">signalWithStartSignalArgs</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:signalWithStartOptions\">signalWithStartOptions</a> :: <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a></li></ul>}","name":"SignalWithStartWorkflowInput SignalWithStartWorkflowInput signalWithStartWorkflowType signalWithStartWorkflowId signalWithStartArgs signalWithStartSignalName signalWithStartSignalArgs signalWithStartOptions","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:SignalWithStartWorkflowInput"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleClientInterceptors\">ScheduleClientInterceptors</a> = <a href=\"#v:ScheduleClientInterceptors\">ScheduleClientInterceptors</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleWorkflowAction\">scheduleWorkflowAction</a> :: <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; [<a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>] -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a></li></ul>}","name":"ScheduleClientInterceptors ScheduleClientInterceptors scheduleWorkflowAction","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#t:ScheduleClientInterceptors"},{"display_html":"<a href=\"#v:interceptorConvertChildWorkflowHandle\">interceptorConvertChildWorkflowHandle</a> :: <a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> a -&gt; (a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> b) -&gt; <a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> b","name":"interceptorConvertChildWorkflowHandle","module":"Temporal.Interceptor","link":"Temporal-Interceptor.html#v:interceptorConvertChildWorkflowHandle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Worker\">Worker</a> env","name":"Worker","module":"Temporal.Worker","link":"Temporal-Worker.html#t:Worker"},{"display_html":"<a href=\"#v:startWorker\">startWorker</a> :: (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m, <a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Worker.html#t:WorkerConfig\" title=\"Temporal.Worker\">WorkerConfig</a> actEnv -&gt; m (<a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv)","name":"startWorker","module":"Temporal.Worker","link":"Temporal-Worker.html#v:startWorker"},{"display_html":"<a href=\"#v:waitWorker\">waitWorker</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; m ()","name":"waitWorker","module":"Temporal.Worker","link":"Temporal-Worker.html#v:waitWorker"},{"display_html":"<a href=\"#v:shutdown\">shutdown</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m =&gt; <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; m ()","name":"shutdown","module":"Temporal.Worker","link":"Temporal-Worker.html#v:shutdown"},{"display_html":"<a href=\"#v:linkWorker\">linkWorker</a> :: <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()","name":"linkWorker","module":"Temporal.Worker","link":"Temporal-Worker.html#v:linkWorker"},{"display_html":"<a href=\"#v:pollWorkerSTM\">pollWorkerSTM</a> :: <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Conc-Sync.html#t:STM\" title=\"GHC.Conc.Sync\">STM</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> ()))","name":"pollWorkerSTM","module":"Temporal.Worker","link":"Temporal-Worker.html#v:pollWorkerSTM"},{"display_html":"<a href=\"#v:waitWorkerSTM\">waitWorkerSTM</a> :: <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Conc-Sync.html#t:STM\" title=\"GHC.Conc.Sync\">STM</a> ()","name":"waitWorkerSTM","module":"Temporal.Worker","link":"Temporal-Worker.html#v:waitWorkerSTM"},{"display_html":"<a href=\"#v:replaceEnvironment\">replaceEnvironment</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; actEnv -&gt; m ()","name":"replaceEnvironment","module":"Temporal.Worker","link":"Temporal-Worker.html#v:replaceEnvironment"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkerConfig\">WorkerConfig</a> activityEnv = <a href=\"#v:WorkerConfig\">WorkerConfig</a> {<ul class=\"subs\"><li><a href=\"#v:deadlockTimeout\">deadlockTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:wfDefs\">wfDefs</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Workflow.html#t:WorkflowDefinition\" title=\"Temporal.Workflow\">WorkflowDefinition</a></li><li><a href=\"#v:actEnv\">actEnv</a> :: activityEnv</li><li><a href=\"#v:actDefs\">actDefs</a> :: <a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> (<a href=\"Temporal-Activity.html#t:ActivityDefinition\" title=\"Temporal.Activity\">ActivityDefinition</a> activityEnv)</li><li><a href=\"#v:coreConfig\">coreConfig</a> :: <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Worker.html#t:WorkerConfig\" title=\"Temporal.Core.Worker\">WorkerConfig</a></li><li><a href=\"#v:interceptorConfig\">interceptorConfig</a> :: <a href=\"Temporal-Interceptor.html#t:Interceptors\" title=\"Temporal.Interceptor\">Interceptors</a> activityEnv</li><li><a href=\"#v:applicationErrorConverters\">applicationErrorConverters</a> :: [<a href=\"Temporal-Exception.html#t:ApplicationFailureHandler\" title=\"Temporal.Exception\">ApplicationFailureHandler</a>]</li><li><a href=\"#v:tracerProvider\">tracerProvider</a> :: <a href=\"https://hackage.haskell.org/package/hs-opentelemetry-api-0.1.0.0/docs/OpenTelemetry-Trace-Core.html#t:TracerProvider\" title=\"OpenTelemetry.Trace.Core\">TracerProvider</a></li><li><a href=\"#v:logger\">logger</a> :: <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:Loc\" title=\"Control.Monad.Logger\">Loc</a> -&gt; <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:LogSource\" title=\"Control.Monad.Logger\">LogSource</a> -&gt; <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:LogLevel\" title=\"Control.Monad.Logger\">LogLevel</a> -&gt; <a href=\"https://hackage.haskell.org/package/fast-logger-3.2.4/docs/System-Log-FastLogger.html#t:LogStr\" title=\"System.Log.FastLogger\">LogStr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()</li><li><a href=\"#v:payloadProcessor\">payloadProcessor</a> :: <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a></li></ul>}","name":"WorkerConfig tracerProvider WorkerConfig payloadProcessor logger actEnv deadlockTimeout wfDefs actDefs coreConfig interceptorConfig applicationErrorConverters","module":"Temporal.Worker","link":"Temporal-Worker.html#t:WorkerConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Definitions\">Definitions</a> env = <a href=\"#v:Definitions\">Definitions</a> {<ul class=\"subs\"><li><a href=\"#v:workflowDefinitions\">workflowDefinitions</a> :: !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Workflow.html#t:WorkflowDefinition\" title=\"Temporal.Workflow\">WorkflowDefinition</a>)</li><li><a href=\"#v:activityDefinitions\">activityDefinitions</a> :: !(<a href=\"https://hackage.haskell.org/package/unordered-containers-0.2.20/docs/Data-HashMap-Strict.html#t:HashMap\" title=\"Data.HashMap.Strict\">HashMap</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> (<a href=\"Temporal-Activity.html#t:ActivityDefinition\" title=\"Temporal.Activity\">ActivityDefinition</a> env))</li></ul>}","name":"Definitions Definitions workflowDefinitions activityDefinitions","module":"Temporal.Worker","link":"Temporal-Worker.html#t:Definitions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ToDefinitions\">ToDefinitions</a> env f <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toDefinitions\">toDefinitions</a> :: f -&gt; <a href=\"Temporal-Worker.html#t:Definitions\" title=\"Temporal.Worker\">Definitions</a> env</li></ul>","name":"ToDefinitions toDefinitions","module":"Temporal.Worker","link":"Temporal-Worker.html#t:ToDefinitions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ConfigM\">ConfigM</a> actEnv a","name":"ConfigM","module":"Temporal.Worker","link":"Temporal-Worker.html#t:ConfigM"},{"display_html":"<a href=\"#v:configure\">configure</a> :: <a href=\"Temporal-Worker.html#t:ToDefinitions\" title=\"Temporal.Worker\">ToDefinitions</a> actEnv defs =&gt; actEnv -&gt; defs -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv () -&gt; <a href=\"Temporal-Worker.html#t:WorkerConfig\" title=\"Temporal.Worker\">WorkerConfig</a> actEnv","name":"configure","module":"Temporal.Worker","link":"Temporal-Worker.html#v:configure"},{"display_html":"<a href=\"#v:runReplayHistory\">runReplayHistory</a> :: (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m, <a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Runtime.html#t:Runtime\" title=\"Temporal.Runtime\">Runtime</a> -&gt; <a href=\"Temporal-Worker.html#t:WorkerConfig\" title=\"Temporal.Worker\">WorkerConfig</a> actEnv -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:History\" title=\"Proto.Temporal.Api.History.V1.Message\">History</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-Worker.html#t:ReplayHistoryFailure\" title=\"Temporal.Worker\">ReplayHistoryFailure</a> ())","name":"runReplayHistory","module":"Temporal.Worker","link":"Temporal-Worker.html#v:runReplayHistory"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ReplayHistoryFailure\">ReplayHistoryFailure</a> = <a href=\"#v:ReplayHistoryFailure\">ReplayHistoryFailure</a> {<ul class=\"subs\"><li><a href=\"#v:message\">message</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ReplayHistoryFailure message ReplayHistoryFailure","module":"Temporal.Worker","link":"Temporal-Worker.html#t:ReplayHistoryFailure"},{"display_html":"<a href=\"#v:subscribeToEvictions\">subscribeToEvictions</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; m (<a href=\"https://hackage.haskell.org/package/stm-2.5.3.1/docs/Control-Concurrent-STM-TChan.html#t:TChan\" title=\"Control.Concurrent.STM.TChan\">TChan</a> <a href=\"Temporal-Worker.html#t:EvictionWithRunID\" title=\"Temporal.Worker\">EvictionWithRunID</a>)","name":"subscribeToEvictions","module":"Temporal.Worker","link":"Temporal-Worker.html#v:subscribeToEvictions"},{"display_html":"<a href=\"#v:subscribeToEvictionsSTM\">subscribeToEvictionsSTM</a> :: <a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> actEnv -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Conc-Sync.html#t:STM\" title=\"GHC.Conc.Sync\">STM</a> (<a href=\"https://hackage.haskell.org/package/stm-2.5.3.1/docs/Control-Concurrent-STM-TChan.html#t:TChan\" title=\"Control.Concurrent.STM.TChan\">TChan</a> <a href=\"Temporal-Worker.html#t:EvictionWithRunID\" title=\"Temporal.Worker\">EvictionWithRunID</a>)","name":"subscribeToEvictionsSTM","module":"Temporal.Worker","link":"Temporal-Worker.html#v:subscribeToEvictionsSTM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:EvictionWithRunID\">EvictionWithRunID</a> = <a href=\"#v:EvictionWithRunID\">EvictionWithRunID</a> {<ul class=\"subs\"><li><a href=\"#v:runId\">runId</a> :: <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li><li><a href=\"#v:eviction\">eviction</a> :: <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Sdk-Core-WorkflowActivation-WorkflowActivation.html#t:RemoveFromCache\" title=\"Proto.Temporal.Sdk.Core.WorkflowActivation.WorkflowActivation\">RemoveFromCache</a></li></ul>}","name":"EvictionWithRunID runId EvictionWithRunID eviction","module":"Temporal.Worker","link":"Temporal-Worker.html#t:EvictionWithRunID"},{"display_html":"<a href=\"#v:evictionMessage\">evictionMessage</a> :: <a href=\"Temporal-Worker.html#t:EvictionWithRunID\" title=\"Temporal.Worker\">EvictionWithRunID</a> -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"evictionMessage","module":"Temporal.Worker","link":"Temporal-Worker.html#v:evictionMessage"},{"display_html":"<a href=\"#v:evictionWasFatal\">evictionWasFatal</a> :: <a href=\"Temporal-Worker.html#t:EvictionWithRunID\" title=\"Temporal.Worker\">EvictionWithRunID</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"evictionWasFatal","module":"Temporal.Worker","link":"Temporal-Worker.html#v:evictionWasFatal"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowDef\">WorkflowDef</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:workflowDefinition\">workflowDefinition</a> :: a -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowDefinition\" title=\"Temporal.Workflow\">WorkflowDefinition</a></li></ul>","name":"WorkflowDef workflowDefinition","module":"Temporal.Worker","link":"Temporal-Worker.html#t:WorkflowDef"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ActivityDef\">ActivityDef</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityDefinitionEnv\">ActivityDefinitionEnv</a> a</li><li><a href=\"#v:activityDefinition\">activityDefinition</a> :: a -&gt; <a href=\"Temporal-Activity.html#t:ActivityDefinition\" title=\"Temporal.Activity\">ActivityDefinition</a> (<a href=\"Temporal-Worker.html#t:ActivityDefinitionEnv\" title=\"Temporal.Worker\">ActivityDefinitionEnv</a> a)</li></ul>","name":"ActivityDef ActivityDefinitionEnv activityDefinition","module":"Temporal.Worker","link":"Temporal-Worker.html#t:ActivityDef"},{"display_html":"<a href=\"#v:addErrorConverter\">addErrorConverter</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:Exception\" title=\"Control.Exception.Annotated\">Exception</a> e =&gt; (e -&gt; <a href=\"Temporal-Exception.html#t:ApplicationFailure\" title=\"Temporal.Exception\">ApplicationFailure</a>) -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"addErrorConverter","module":"Temporal.Worker","link":"Temporal-Worker.html#v:addErrorConverter"},{"display_html":"<a href=\"#v:setLogger\">setLogger</a> :: (<a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:Loc\" title=\"Control.Monad.Logger\">Loc</a> -&gt; <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:LogSource\" title=\"Control.Monad.Logger\">LogSource</a> -&gt; <a href=\"https://hackage.haskell.org/package/monad-logger-0.3.40/docs/Control-Monad-Logger.html#t:LogLevel\" title=\"Control.Monad.Logger\">LogLevel</a> -&gt; <a href=\"https://hackage.haskell.org/package/fast-logger-3.2.4/docs/System-Log-FastLogger.html#t:LogStr\" title=\"System.Log.FastLogger\">LogStr</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> ()) -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setLogger","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setLogger"},{"display_html":"<a href=\"#v:setTracerProvider\">setTracerProvider</a> :: <a href=\"https://hackage.haskell.org/package/hs-opentelemetry-api-0.1.0.0/docs/OpenTelemetry-Trace-Core.html#t:TracerProvider\" title=\"OpenTelemetry.Trace.Core\">TracerProvider</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setTracerProvider","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setTracerProvider"},{"display_html":"<a href=\"#v:setNamespace\">setNamespace</a> :: <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setNamespace","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setNamespace"},{"display_html":"<a href=\"#v:setTaskQueue\">setTaskQueue</a> :: <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setTaskQueue","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setTaskQueue"},{"display_html":"<a href=\"#v:setBuildId\">setBuildId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setBuildId","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setBuildId"},{"display_html":"<a href=\"#v:setIdentity\">setIdentity</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setIdentity","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setIdentity"},{"display_html":"<a href=\"#v:setMaxCachedWorkflows\">setMaxCachedWorkflows</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxCachedWorkflows","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxCachedWorkflows"},{"display_html":"<a href=\"#v:setMaxOutstandingWorkflowTasks\">setMaxOutstandingWorkflowTasks</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxOutstandingWorkflowTasks","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxOutstandingWorkflowTasks"},{"display_html":"<a href=\"#v:setMaxOutstandingActivities\">setMaxOutstandingActivities</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxOutstandingActivities","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxOutstandingActivities"},{"display_html":"<a href=\"#v:setMaxOutstandingLocalActivities\">setMaxOutstandingLocalActivities</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxOutstandingLocalActivities","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxOutstandingLocalActivities"},{"display_html":"<a href=\"#v:setMaxConcurrentWorkflowTaskPolls\">setMaxConcurrentWorkflowTaskPolls</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxConcurrentWorkflowTaskPolls","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxConcurrentWorkflowTaskPolls"},{"display_html":"<a href=\"#v:setNonstickyToStickyPollRatio\">setNonstickyToStickyPollRatio</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Float\" title=\"GHC.Exts\">Float</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setNonstickyToStickyPollRatio","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setNonstickyToStickyPollRatio"},{"display_html":"<a href=\"#v:setMaxConcurrentActivityTaskPolls\">setMaxConcurrentActivityTaskPolls</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxConcurrentActivityTaskPolls","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxConcurrentActivityTaskPolls"},{"display_html":"<a href=\"#v:setNoRemoteActivities\">setNoRemoteActivities</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setNoRemoteActivities","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setNoRemoteActivities"},{"display_html":"<a href=\"#v:setStickyQueueScheduleToStartTimeoutMillis\">setStickyQueueScheduleToStartTimeoutMillis</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setStickyQueueScheduleToStartTimeoutMillis","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setStickyQueueScheduleToStartTimeoutMillis"},{"display_html":"<a href=\"#v:setMaxHeartbeatThrottleIntervalMillis\">setMaxHeartbeatThrottleIntervalMillis</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxHeartbeatThrottleIntervalMillis","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxHeartbeatThrottleIntervalMillis"},{"display_html":"<a href=\"#v:setDefaultHeartbeatThrottleIntervalMillis\">setDefaultHeartbeatThrottleIntervalMillis</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setDefaultHeartbeatThrottleIntervalMillis","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setDefaultHeartbeatThrottleIntervalMillis"},{"display_html":"<a href=\"#v:setMaxActivitiesPerSecond\">setMaxActivitiesPerSecond</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxActivitiesPerSecond","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxActivitiesPerSecond"},{"display_html":"<a href=\"#v:setMaxTaskQueueActivitiesPerSecond\">setMaxTaskQueueActivitiesPerSecond</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setMaxTaskQueueActivitiesPerSecond","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setMaxTaskQueueActivitiesPerSecond"},{"display_html":"<a href=\"#v:setGracefulShutdownPeriodMillis\">setGracefulShutdownPeriodMillis</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word64\" title=\"Data.Word\">Word64</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setGracefulShutdownPeriodMillis","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setGracefulShutdownPeriodMillis"},{"display_html":"<a href=\"#v:addInterceptors\">addInterceptors</a> :: <a href=\"Temporal-Interceptor.html#t:Interceptors\" title=\"Temporal.Interceptor\">Interceptors</a> actEnv -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"addInterceptors","module":"Temporal.Worker","link":"Temporal-Worker.html#v:addInterceptors"},{"display_html":"<a href=\"#v:setPayloadProcessor\">setPayloadProcessor</a> :: <a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a> -&gt; <a href=\"Temporal-Worker.html#t:ConfigM\" title=\"Temporal.Worker\">ConfigM</a> actEnv ()","name":"setPayloadProcessor","module":"Temporal.Worker","link":"Temporal-Worker.html#v:setPayloadProcessor"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WorkflowId\">WorkflowId</a> = <a href=\"#v:WorkflowId\">WorkflowId</a> {<ul class=\"subs\"><li><a href=\"#v:rawWorkflowId\">rawWorkflowId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"WorkflowId WorkflowId rawWorkflowId","module":"Temporal.Worker","link":"Temporal-Worker.html#t:WorkflowId"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Workflow\">Workflow</a> a","name":"Workflow","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Workflow"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowDefinition\">WorkflowDefinition</a> = <a href=\"#v:WorkflowDefinition\">WorkflowDefinition</a> {<ul class=\"subs\"><li><a href=\"#v:workflowName\">workflowName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:workflowRun\">workflowRun</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> (<a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>))</li></ul>}","name":"WorkflowDefinition WorkflowDefinition workflowName workflowRun","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowDefinition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownWorkflow\">KnownWorkflow</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result = <a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec args result =&gt; <a href=\"#v:KnownWorkflow\">KnownWorkflow</a> {<ul class=\"subs\"><li><a href=\"#v:knownWorkflowCodec\">knownWorkflowCodec</a> :: codec</li><li><a href=\"#v:knownWorkflowName\">knownWorkflowName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"KnownWorkflow KnownWorkflow knownWorkflowCodec knownWorkflowName","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:KnownWorkflow"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ProvidedWorkflow\">ProvidedWorkflow</a> f = <a href=\"#v:ProvidedWorkflow\">ProvidedWorkflow</a> {<ul class=\"subs\"><li><a href=\"#v:definition\">definition</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowDefinition\" title=\"Temporal.Workflow\">WorkflowDefinition</a></li><li><a href=\"#v:reference\">reference</a> :: <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f) (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> f)</li></ul>}","name":"ProvidedWorkflow definition ProvidedWorkflow reference","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ProvidedWorkflow"},{"display_html":"<a href=\"#v:provideWorkflow\">provideWorkflow</a> :: <span class=\"keyword\">forall</span> codec f. (f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> f)), <a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f) (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> f)) =&gt; codec -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; (<a href=\"https://hackage.haskell.org/package/require-callstack-0.2.0.1/docs/RequireCallStack.html#t:RequireCallStackImpl\" title=\"RequireCallStack\">RequireCallStackImpl</a> =&gt; f) -&gt; <a href=\"Temporal-Workflow.html#t:ProvidedWorkflow\" title=\"Temporal.Workflow\">ProvidedWorkflow</a> f","name":"provideWorkflow","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:provideWorkflow"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Task\">Task</a> a","name":"Task","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Task"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:StartToClose\">StartToClose</a> = <a href=\"#v:StartToClose\">StartToClose</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"StartToClose StartToClose","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StartToClose"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ScheduleToClose\">ScheduleToClose</a> = <a href=\"#v:ScheduleToClose\">ScheduleToClose</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>","name":"ScheduleToClose ScheduleToClose","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ScheduleToClose"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:These\">These</a> a b<ul class=\"subs\"><li>= <a href=\"#v:This\">This</a> a</li><li>| <a href=\"#v:That\">That</a> b</li><li>| <a href=\"#v:These\">These</a> a b</li></ul>","name":"These These This That","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:These"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ActivityRef\">ActivityRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityArgs\">ActivityArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityResult\">ActivityResult</a> f</li><li><a href=\"#v:activityRef\">activityRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownActivity\" title=\"Temporal.Workflow\">KnownActivity</a> (<a href=\"Temporal-Workflow.html#t:ActivityArgs\" title=\"Temporal.Workflow\">ActivityArgs</a> f) (<a href=\"Temporal-Workflow.html#t:ActivityResult\" title=\"Temporal.Workflow\">ActivityResult</a> f)</li></ul>","name":"ActivityRef ActivityResult ActivityArgs activityRef","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ActivityRef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownActivity\">KnownActivity</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result = <a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec args result =&gt; <a href=\"#v:KnownActivity\">KnownActivity</a> {<ul class=\"subs\"><li><a href=\"#v:knownActivityCodec\">knownActivityCodec</a> :: codec</li><li><a href=\"#v:knownActivityName\">knownActivityName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"KnownActivity KnownActivity knownActivityCodec knownActivityName","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:KnownActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StartActivityOptions\">StartActivityOptions</a> = <a href=\"#v:StartActivityOptions\">StartActivityOptions</a> {<ul class=\"subs\"><li><a href=\"#v:activityId\">activityId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:ActivityId\" title=\"Temporal.Workflow\">ActivityId</a></li><li><a href=\"#v:taskQueue\">taskQueue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a></li><li><a href=\"#v:timeout\">timeout</a> :: <a href=\"Temporal-Workflow.html#t:ActivityTimeoutPolicy\" title=\"Temporal.Workflow\">ActivityTimeoutPolicy</a></li><li><a href=\"#v:scheduleToStartTimeout\">scheduleToStartTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:heartbeatTimeout\">heartbeatTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:cancellationType\">cancellationType</a> :: <a href=\"Temporal-Workflow.html#t:ActivityCancellationType\" title=\"Temporal.Workflow\">ActivityCancellationType</a></li><li><a href=\"#v:headers\">headers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:disableEagerExecution\">disableEagerExecution</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"StartActivityOptions timeout activityId taskQueue scheduleToStartTimeout retryPolicy heartbeatTimeout headers cancellationType StartActivityOptions disableEagerExecution","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StartActivityOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityCancellationType\">ActivityCancellationType</a><ul class=\"subs\"><li>= <a href=\"#v:ActivityCancellationTryCancel\">ActivityCancellationTryCancel</a></li><li>| <a href=\"#v:ActivityCancellationWaitCancellationCompleted\">ActivityCancellationWaitCancellationCompleted</a></li><li>| <a href=\"#v:ActivityCancellationAbandon\">ActivityCancellationAbandon</a></li></ul>","name":"ActivityCancellationType ActivityCancellationTryCancel ActivityCancellationWaitCancellationCompleted ActivityCancellationAbandon","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ActivityCancellationType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityTimeoutPolicy\">ActivityTimeoutPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:StartToCloseTimeout\">StartToCloseTimeout</a> !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li>| <a href=\"#v:ScheduleToCloseTimeout\">ScheduleToCloseTimeout</a> !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li>| <a href=\"#v:StartToCloseAndScheduleToCloseTimeout\">StartToCloseAndScheduleToCloseTimeout</a> !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li></ul>","name":"ActivityTimeoutPolicy StartToCloseTimeout ScheduleToCloseTimeout StartToCloseAndScheduleToCloseTimeout","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ActivityTimeoutPolicy"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:StartActivityTimeoutOption\">StartActivityTimeoutOption</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toStartActivityTimeoutOption\">toStartActivityTimeoutOption</a> :: a -&gt; <a href=\"Temporal-Workflow.html#t:ActivityTimeoutPolicy\" title=\"Temporal.Workflow\">ActivityTimeoutPolicy</a></li></ul>","name":"StartActivityTimeoutOption toStartActivityTimeoutOption","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StartActivityTimeoutOption"},{"display_html":"<a href=\"#v:defaultStartActivityOptions\">defaultStartActivityOptions</a> :: <a href=\"Temporal-Workflow.html#t:StartActivityTimeoutOption\" title=\"Temporal.Workflow\">StartActivityTimeoutOption</a> timeout =&gt; timeout -&gt; <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a>","name":"defaultStartActivityOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultStartActivityOptions"},{"display_html":"<a href=\"#v:startActivity\">startActivity</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:ActivityRef\" title=\"Temporal.Workflow\">ActivityRef</a> activity) =&gt; activity -&gt; <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:ActivityArgs\" title=\"Temporal.Workflow\">ActivityArgs</a> activity <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:Task\" title=\"Temporal.Workflow\">Task</a> (<a href=\"Temporal-Workflow.html#t:ActivityResult\" title=\"Temporal.Workflow\">ActivityResult</a> activity))","name":"startActivity","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:startActivity"},{"display_html":"<a href=\"#v:executeActivity\">executeActivity</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:ActivityRef\" title=\"Temporal.Workflow\">ActivityRef</a> activity) =&gt; activity -&gt; <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:ActivityArgs\" title=\"Temporal.Workflow\">ActivityArgs</a> activity <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:ActivityResult\" title=\"Temporal.Workflow\">ActivityResult</a> activity)","name":"executeActivity","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:executeActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StartLocalActivityOptions\">StartLocalActivityOptions</a> = <a href=\"#v:StartLocalActivityOptions\">StartLocalActivityOptions</a> {<ul class=\"subs\"><li><a href=\"#v:activityId\">activityId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:ActivityId\" title=\"Temporal.Workflow\">ActivityId</a></li><li><a href=\"#v:scheduleToCloseTimeout\">scheduleToCloseTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:scheduleToStartTimeout\">scheduleToStartTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:startToCloseTimeout\">startToCloseTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:localRetryThreshold\">localRetryThreshold</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:cancellationType\">cancellationType</a> :: <a href=\"Temporal-Workflow.html#t:ActivityCancellationType\" title=\"Temporal.Workflow\">ActivityCancellationType</a></li><li><a href=\"#v:headers\">headers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"StartLocalActivityOptions activityId scheduleToStartTimeout retryPolicy scheduleToCloseTimeout startToCloseTimeout headers cancellationType localRetryThreshold StartLocalActivityOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StartLocalActivityOptions"},{"display_html":"<a href=\"#v:defaultStartLocalActivityOptions\">defaultStartLocalActivityOptions</a> :: <a href=\"Temporal-Workflow.html#t:StartLocalActivityOptions\" title=\"Temporal.Workflow\">StartLocalActivityOptions</a>","name":"defaultStartLocalActivityOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultStartLocalActivityOptions"},{"display_html":"<a href=\"#v:startLocalActivity\">startLocalActivity</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:ActivityRef\" title=\"Temporal.Workflow\">ActivityRef</a> act) =&gt; act -&gt; <a href=\"Temporal-Workflow.html#t:StartLocalActivityOptions\" title=\"Temporal.Workflow\">StartLocalActivityOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:ActivityArgs\" title=\"Temporal.Workflow\">ActivityArgs</a> act <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:Task\" title=\"Temporal.Workflow\">Task</a> (<a href=\"Temporal-Workflow.html#t:ActivityResult\" title=\"Temporal.Workflow\">ActivityResult</a> act))","name":"startLocalActivity","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:startLocalActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StartChildWorkflowOptions\">StartChildWorkflowOptions</a> = <a href=\"#v:StartChildWorkflowOptions\">StartChildWorkflowOptions</a> {<ul class=\"subs\"><li><a href=\"#v:cancellationType\">cancellationType</a> :: <a href=\"Temporal-Workflow.html#t:ChildWorkflowCancellationType\" title=\"Temporal.Workflow\">ChildWorkflowCancellationType</a></li><li><a href=\"#v:parentClosePolicy\">parentClosePolicy</a> :: <a href=\"Temporal-Workflow.html#t:ParentClosePolicy\" title=\"Temporal.Workflow\">ParentClosePolicy</a></li><li><a href=\"#v:timeoutOptions\">timeoutOptions</a> :: <a href=\"Temporal-Workflow.html#t:TimeoutOptions\" title=\"Temporal.Workflow\">TimeoutOptions</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:cronSchedule\">cronSchedule</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:initialMemo\">initialMemo</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a></li><li><a href=\"#v:headers\">headers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:workflowIdReusePolicy\">workflowIdReusePolicy</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowIdReusePolicy\" title=\"Temporal.Workflow\">WorkflowIdReusePolicy</a></li><li><a href=\"#v:workflowId\">workflowId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:WorkflowId\" title=\"Temporal.Workflow\">WorkflowId</a></li><li><a href=\"#v:taskQueue\">taskQueue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a></li></ul>}","name":"StartChildWorkflowOptions workflowId taskQueue searchAttributes retryPolicy cronSchedule parentClosePolicy workflowIdReusePolicy headers cancellationType StartChildWorkflowOptions timeoutOptions initialMemo","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StartChildWorkflowOptions"},{"display_html":"<a href=\"#v:defaultChildWorkflowOptions\">defaultChildWorkflowOptions</a> :: <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a>","name":"defaultChildWorkflowOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultChildWorkflowOptions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowRef\">WorkflowRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowArgs\">WorkflowArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowResult\">WorkflowResult</a> f</li><li><a href=\"#v:workflowRef\">workflowRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> (<a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> f) (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> f)</li></ul>","name":"WorkflowRef WorkflowArgs WorkflowResult workflowRef","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowRef"},{"display_html":"<a href=\"#v:startChildWorkflow\">startChildWorkflow</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf) =&gt; wf -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf))","name":"startChildWorkflow","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:startChildWorkflow"},{"display_html":"<a href=\"#v:executeChildWorkflow\">executeChildWorkflow</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf) =&gt; wf -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf)","name":"executeChildWorkflow","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:executeChildWorkflow"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChildWorkflowHandle\">ChildWorkflowHandle</a> result","name":"ChildWorkflowHandle","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ChildWorkflowHandle"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Wait\">Wait</a> h <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:WaitResult\">WaitResult</a> h</li><li><a href=\"#v:wait\">wait</a> :: h -&gt; <a href=\"Temporal-Workflow.html#t:WaitResult\" title=\"Temporal.Workflow\">WaitResult</a> h</li></ul>","name":"Wait wait WaitResult","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Wait"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Cancel\">Cancel</a> h <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:CancelResult\">CancelResult</a> h</li><li><a href=\"#v:cancel\">cancel</a> :: h -&gt; <a href=\"Temporal-Workflow.html#t:CancelResult\" title=\"Temporal.Workflow\">CancelResult</a> h</li></ul>","name":"Cancel cancel CancelResult","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Cancel"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowHandle\">WorkflowHandle</a> (h :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:signal\">signal</a> :: <span class=\"keyword\">forall</span> ref (result :: k). (<a href=\"Temporal-Workflow.html#t:SignalRef\" title=\"Temporal.Workflow\">SignalRef</a> ref, <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>) =&gt; h result -&gt; ref -&gt; <a href=\"Temporal-Workflow.html#t:SignalArgs\" title=\"Temporal.Workflow\">SignalArgs</a> ref <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:Task\" title=\"Temporal.Workflow\">Task</a> ())</li></ul>","name":"WorkflowHandle signal","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowHandle"},{"display_html":"<a href=\"#v:waitChildWorkflowResult\">waitChildWorkflowResult</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> result -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> result","name":"waitChildWorkflowResult","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:waitChildWorkflowResult"},{"display_html":"<a href=\"#v:waitChildWorkflowStart\">waitChildWorkflowStart</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> result -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"waitChildWorkflowStart","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:waitChildWorkflowStart"},{"display_html":"<a href=\"#v:cancelChildWorkflowExecution\">cancelChildWorkflowExecution</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:ChildWorkflowHandle\" title=\"Temporal.Workflow\">ChildWorkflowHandle</a> result -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"cancelChildWorkflowExecution","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:cancelChildWorkflowExecution"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ExternalWorkflowHandle\">ExternalWorkflowHandle</a> result","name":"ExternalWorkflowHandle","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ExternalWorkflowHandle"},{"display_html":"<a href=\"#v:getExternalWorkflowHandle\">getExternalWorkflowHandle</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:WorkflowId\" title=\"Temporal.Workflow\">WorkflowId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:ExternalWorkflowHandle\" title=\"Temporal.Workflow\">ExternalWorkflowHandle</a> result)","name":"getExternalWorkflowHandle","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:getExternalWorkflowHandle"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Info\">Info</a> = <a href=\"#v:Info\">Info</a> {<ul class=\"subs\"><li><a href=\"#v:historyLength\">historyLength</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:attempt\">attempt</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a></li><li><a href=\"#v:continuedRunId\">continuedRunId</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a>)</li><li><a href=\"#v:cronSchedule\">cronSchedule</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>)</li><li><a href=\"#v:executionTimeout\">executionTimeout</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)</li><li><a href=\"#v:headers\">headers</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:namespace\">namespace</a> :: !<a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a></li><li><a href=\"#v:parent\">parent</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:ParentInfo\" title=\"Temporal.Workflow\">ParentInfo</a>)</li><li><a href=\"#v:rawMemo\">rawMemo</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a>)</li><li><a href=\"#v:runId\">runId</a> :: !<a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li><li><a href=\"#v:runTimeout\">runTimeout</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)</li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a>)</li><li><a href=\"#v:startTime\">startTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:taskQueue\">taskQueue</a> :: !<a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a></li><li><a href=\"#v:taskTimeout\">taskTimeout</a> :: !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:workflowId\">workflowId</a> :: !<a href=\"Temporal-Workflow.html#t:WorkflowId\" title=\"Temporal.Workflow\">WorkflowId</a></li><li><a href=\"#v:workflowType\">workflowType</a> :: !<a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li><li><a href=\"#v:continueAsNewSuggested\">continueAsNewSuggested</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"Info Info startTime workflowId runId namespace workflowType taskQueue searchAttributes retryPolicy cronSchedule attempt historyLength headers continueAsNewSuggested parent executionTimeout runTimeout taskTimeout continuedRunId rawMemo","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Info"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RetryPolicy\">RetryPolicy</a> = <a href=\"#v:RetryPolicy\">RetryPolicy</a> {<ul class=\"subs\"><li><a href=\"#v:initialInterval\">initialInterval</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:backoffCoefficient\">backoffCoefficient</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Exts.html#t:Double\" title=\"GHC.Exts\">Double</a></li><li><a href=\"#v:maximumInterval\">maximumInterval</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:maximumAttempts\">maximumAttempts</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li><a href=\"#v:nonRetryableErrorTypes\">nonRetryableErrorTypes</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"RetryPolicy initialInterval backoffCoefficient maximumInterval maximumAttempts nonRetryableErrorTypes RetryPolicy","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:RetryPolicy"},{"display_html":"<a href=\"#v:defaultRetryPolicy\">defaultRetryPolicy</a> :: <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a>","name":"defaultRetryPolicy","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultRetryPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParentInfo\">ParentInfo</a> = <a href=\"#v:ParentInfo\">ParentInfo</a> {<ul class=\"subs\"><li><a href=\"#v:parentNamespace\">parentNamespace</a> :: <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a></li><li><a href=\"#v:parentRunId\">parentRunId</a> :: <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li><li><a href=\"#v:parentWorkflowId\">parentWorkflowId</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowId\" title=\"Temporal.Workflow\">WorkflowId</a></li></ul>}","name":"ParentInfo ParentInfo parentNamespace parentRunId parentWorkflowId","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ParentInfo"},{"display_html":"<a href=\"#v:info\">info</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"Temporal-Workflow.html#t:Info\" title=\"Temporal.Workflow\">Info</a>","name":"info","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:info"},{"display_html":"<a href=\"#v:getMemoValues\">getMemoValues</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)","name":"getMemoValues","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:getMemoValues"},{"display_html":"<a href=\"#v:lookupMemoValue\">lookupMemoValue</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)","name":"lookupMemoValue","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:lookupMemoValue"},{"display_html":"<a href=\"#v:upsertSearchAttributes\">upsertSearchAttributes</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"upsertSearchAttributes","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:upsertSearchAttributes"},{"display_html":"<a href=\"#v:patched\">patched</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:PatchId\" title=\"Temporal.Workflow\">PatchId</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"patched","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:patched"},{"display_html":"<a href=\"#v:deprecatePatch\">deprecatePatch</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:PatchId\" title=\"Temporal.Workflow\">PatchId</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"deprecatePatch","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:deprecatePatch"},{"display_html":"<a href=\"#v:race\">race</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b)","name":"race","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:race"},{"display_html":"<a href=\"#v:race_\">race_</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"race_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:race_"},{"display_html":"<a href=\"#v:concurrently\">concurrently</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (a, b)","name":"concurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:concurrently"},{"display_html":"<a href=\"#v:concurrently_\">concurrently_</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"concurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:concurrently_"},{"display_html":"<a href=\"#v:mapConcurrently\">mapConcurrently</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t =&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; t a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (t b)","name":"mapConcurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:mapConcurrently"},{"display_html":"<a href=\"#v:mapConcurrently_\">mapConcurrently_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; t a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"mapConcurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:mapConcurrently_"},{"display_html":"<a href=\"#v:replicateConcurrently\">replicateConcurrently</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> [a]","name":"replicateConcurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:replicateConcurrently"},{"display_html":"<a href=\"#v:replicateConcurrently_\">replicateConcurrently_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int\" title=\"Data.Int\">Int</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"replicateConcurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:replicateConcurrently_"},{"display_html":"<a href=\"#v:forConcurrently\">forConcurrently</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t =&gt; t a -&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (t b)","name":"forConcurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:forConcurrently"},{"display_html":"<a href=\"#v:forConcurrently_\">forConcurrently_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t a -&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"forConcurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:forConcurrently_"},{"display_html":"<a href=\"#v:traverseConcurrently\">traverseConcurrently</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t =&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; t a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (t b)","name":"traverseConcurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:traverseConcurrently"},{"display_html":"<a href=\"#v:traverseConcurrently_\">traverseConcurrently_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; (a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b) -&gt; t a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"traverseConcurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:traverseConcurrently_"},{"display_html":"<a href=\"#v:sequenceConcurrently\">sequenceConcurrently</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Traversable.html#t:Traversable\" title=\"Data.Traversable\">Traversable</a> t =&gt; t (<a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (t a)","name":"sequenceConcurrently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:sequenceConcurrently"},{"display_html":"<a href=\"#v:sequenceConcurrently_\">sequenceConcurrently_</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Foldable.html#t:Foldable\" title=\"Data.Foldable\">Foldable</a> t =&gt; t (<a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"sequenceConcurrently_","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:sequenceConcurrently_"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ConcurrentWorkflow\">ConcurrentWorkflow</a> a = <a href=\"#v:ConcurrentWorkflow\">ConcurrentWorkflow</a> {<ul class=\"subs\"><li><a href=\"#v:runConcurrentWorkflowActions\">runConcurrentWorkflowActions</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a</li></ul>}","name":"ConcurrentWorkflow ConcurrentWorkflow runConcurrentWorkflowActions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ConcurrentWorkflow"},{"display_html":"<a href=\"#v:independently\">independently</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> b -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (a, b)","name":"independently","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:independently"},{"display_html":"<a href=\"#v:biselect\">biselect</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a c) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a (b, c))","name":"biselect","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:biselect"},{"display_html":"<a href=\"#v:biselectOpt\">biselectOpt</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; (l -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a b) -&gt; (r -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> a c) -&gt; (a -&gt; t) -&gt; ((b, c) -&gt; t) -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> l -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> r -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> t","name":"biselectOpt","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:biselectOpt"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:QueryRef\">QueryRef</a> query <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:QueryArgs\">QueryArgs</a> query :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:QueryResult\">QueryResult</a> query</li><li><a href=\"#v:queryRef\">queryRef</a> :: query -&gt; <a href=\"Temporal-Workflow.html#t:KnownQuery\" title=\"Temporal.Workflow\">KnownQuery</a> (<a href=\"Temporal-Workflow.html#t:QueryArgs\" title=\"Temporal.Workflow\">QueryArgs</a> query) (<a href=\"Temporal-Workflow.html#t:QueryResult\" title=\"Temporal.Workflow\">QueryResult</a> query)</li></ul>","name":"QueryRef QueryResult QueryArgs queryRef","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:QueryRef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Query\">Query</a> a","name":"Query","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Query"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownQuery\">KnownQuery</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result = (<a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> codec result, <a href=\"Temporal-Payload.html#t:ApplyPayloads\" title=\"Temporal.Payload\">ApplyPayloads</a> codec args, <a href=\"Temporal-Workflow.html#t:GatherArgs\" title=\"Temporal.Workflow\">GatherArgs</a> codec args) =&gt; <a href=\"#v:KnownQuery\">KnownQuery</a> {<ul class=\"subs\"><li><a href=\"#v:queryName\">queryName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:queryCodec\">queryCodec</a> :: codec</li></ul>}","name":"KnownQuery KnownQuery queryName queryCodec","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:KnownQuery"},{"display_html":"<a href=\"#v:setQueryHandler\">setQueryHandler</a> :: (<a href=\"Temporal-Workflow.html#t:QueryRef\" title=\"Temporal.Workflow\">QueryRef</a> query, f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (<a href=\"Temporal-Workflow.html#t:QueryArgs\" title=\"Temporal.Workflow\">QueryArgs</a> query <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Query\" title=\"Temporal.Workflow\">Query</a> (<a href=\"Temporal-Workflow.html#t:QueryResult\" title=\"Temporal.Workflow\">QueryResult</a> query)), <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>) =&gt; query -&gt; f -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"setQueryHandler","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:setQueryHandler"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:SignalRef\">SignalRef</a> sig <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:SignalArgs\">SignalArgs</a> sig :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><a href=\"#v:signalRef\">signalRef</a> :: sig -&gt; <a href=\"Temporal-Workflow.html#t:KnownSignal\" title=\"Temporal.Workflow\">KnownSignal</a> (<a href=\"Temporal-Workflow.html#t:SignalArgs\" title=\"Temporal.Workflow\">SignalArgs</a> sig)</li></ul>","name":"SignalRef SignalArgs signalRef","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:SignalRef"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownSignal\">KnownSignal</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) = (<a href=\"Temporal-Payload.html#t:ApplyPayloads\" title=\"Temporal.Payload\">ApplyPayloads</a> codec args, <a href=\"Temporal-Workflow.html#t:GatherArgs\" title=\"Temporal.Workflow\">GatherArgs</a> codec args) =&gt; <a href=\"#v:KnownSignal\">KnownSignal</a> {<ul class=\"subs\"><li><a href=\"#v:signalName\">signalName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:signalCodec\">signalCodec</a> :: codec</li></ul>}","name":"KnownSignal signalName KnownSignal signalCodec","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:KnownSignal"},{"display_html":"<a href=\"#v:setSignalHandler\">setSignalHandler</a> :: (<a href=\"Temporal-Workflow.html#t:ValidSignalHandler\" title=\"Temporal.Workflow\">ValidSignalHandler</a> f, <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Temporal-Workflow.html#t:SignalRef\" title=\"Temporal.Workflow\">SignalRef</a> ref, <a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> <a href=\"Temporal-Workflow.html#t:SignalArgs\" title=\"Temporal.Workflow\">SignalArgs</a> ref) =&gt; ref -&gt; f -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"setSignalHandler","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:setSignalHandler"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:ValidSignalHandler\">ValidSignalHandler</a> f = (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (), (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> f)","name":"ValidSignalHandler","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ValidSignalHandler"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Condition\">Condition</a> a","name":"Condition","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Condition"},{"display_html":"<a href=\"#v:waitCondition\">waitCondition</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Condition\" title=\"Temporal.Workflow\">Condition</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"waitCondition","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:waitCondition"},{"display_html":"<a href=\"#v:unsafeAsyncEffectSink\">unsafeAsyncEffectSink</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> () -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"unsafeAsyncEffectSink","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:unsafeAsyncEffectSink"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StateVar\">StateVar</a> a","name":"StateVar","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:StateVar"},{"display_html":"<a href=\"#v:newStateVar\">newStateVar</a> :: a -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:StateVar\" title=\"Temporal.Workflow\">StateVar</a> a)","name":"newStateVar","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:newStateVar"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:MonadReadStateVar\">MonadReadStateVar</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:readStateVar\">readStateVar</a> :: <a href=\"Temporal-Workflow.html#t:StateVar\" title=\"Temporal.Workflow\">StateVar</a> a -&gt; m a</li></ul>","name":"MonadReadStateVar readStateVar","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:MonadReadStateVar"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:MonadWriteStateVar\">MonadWriteStateVar</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:writeStateVar\">writeStateVar</a> :: <a href=\"Temporal-Workflow.html#t:StateVar\" title=\"Temporal.Workflow\">StateVar</a> a -&gt; a -&gt; m ()</li><li><a href=\"#v:modifyStateVar\">modifyStateVar</a> :: <a href=\"Temporal-Workflow.html#t:StateVar\" title=\"Temporal.Workflow\">StateVar</a> a -&gt; (a -&gt; a) -&gt; m ()</li></ul>","name":"MonadWriteStateVar writeStateVar modifyStateVar","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:MonadWriteStateVar"},{"display_html":"<a href=\"#v:now\">now</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:UTCTime\" title=\"Data.Time.Clock\">UTCTime</a>","name":"now","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:now"},{"display_html":"<a href=\"#v:time\">time</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>","name":"time","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:time"},{"display_html":"<a href=\"#v:sleep\">sleep</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"sleep","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:sleep"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Timer\">Timer</a>","name":"Timer","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Timer"},{"display_html":"<a href=\"#v:createTimer\">createTimer</a> :: <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a> -&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:Timer\" title=\"Temporal.Workflow\">Timer</a>)","name":"createTimer","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:createTimer"},{"display_html":"<a href=\"#v:scheduledTime\">scheduledTime</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock.html#t:UTCTime\" title=\"Data.Time.Clock\">UTCTime</a>)","name":"scheduledTime","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:scheduledTime"},{"display_html":"<a href=\"#v:isCancelRequested\">isCancelRequested</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isCancelRequested","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:isCancelRequested"},{"display_html":"<a href=\"#v:waitCancellation\">waitCancellation</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> ()","name":"waitCancellation","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:waitCancellation"},{"display_html":"<a href=\"#v:randomGen\">randomGen</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"Temporal-Workflow.html#t:WorkflowGenM\" title=\"Temporal.Workflow\">WorkflowGenM</a>","name":"randomGen","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:randomGen"},{"display_html":"<a href=\"#v:uuid4\">uuid4</a> :: <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/uuid-1.3.15/docs/Data-UUID.html#t:UUID\" title=\"Data.UUID\">UUID</a>","name":"uuid4","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:uuid4"},{"display_html":"<a href=\"#v:uuid7\">uuid7</a> :: <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> <a href=\"https://hackage.haskell.org/package/uuid-1.3.15/docs/Data-UUID.html#t:UUID\" title=\"Data.UUID\">UUID</a>","name":"uuid7","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:uuid7"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowGenM\">WorkflowGenM</a>","name":"WorkflowGenM","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowGenM"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ContinueAsNewOptions\">ContinueAsNewOptions</a> = <a href=\"#v:ContinueAsNewOptions\">ContinueAsNewOptions</a> {<ul class=\"subs\"><li><a href=\"#v:taskQueue\">taskQueue</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a></li><li><a href=\"#v:runTimeout\">runTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:taskTimeout\">taskTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:memo\">memo</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a></li><li><a href=\"#v:headers\">headers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"ContinueAsNewOptions taskQueue searchAttributes retryPolicy memo headers ContinueAsNewOptions runTimeout taskTimeout","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ContinueAsNewOptions"},{"display_html":"<a href=\"#v:defaultContinueAsNewOptions\">defaultContinueAsNewOptions</a> :: <a href=\"Temporal-Workflow.html#t:ContinueAsNewOptions\" title=\"Temporal.Workflow\">ContinueAsNewOptions</a>","name":"defaultContinueAsNewOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultContinueAsNewOptions"},{"display_html":"<a href=\"#v:continueAsNew\">continueAsNew</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf =&gt; wf -&gt; <a href=\"Temporal-Workflow.html#t:ContinueAsNewOptions\" title=\"Temporal.Workflow\">ContinueAsNewOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Workflow.html#t::-45--62-:\" title=\"Temporal.Workflow\">:-&gt;:</a> <a href=\"Temporal-Workflow.html#t:Workflow\" title=\"Temporal.Workflow\">Workflow</a> (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf)","name":"continueAsNew","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:continueAsNew"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:GatherArgs\">GatherArgs</a> codec (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) = (<a href=\"Temporal-Payload.html#t:VarArgs\" title=\"Temporal.Payload\">VarArgs</a> args, <a href=\"Temporal-Payload.html#t:AllArgs\" title=\"Temporal.Payload\">AllArgs</a> (<a href=\"Temporal-Payload.html#t:Codec\" title=\"Temporal.Payload\">Codec</a> codec) args)","name":"GatherArgs","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:GatherArgs"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ActivityId\">ActivityId</a> = <a href=\"#v:ActivityId\">ActivityId</a> {<ul class=\"subs\"><li><a href=\"#v:rawActivityId\">rawActivityId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ActivityId ActivityId rawActivityId","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ActivityId"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WorkflowId\">WorkflowId</a> = <a href=\"#v:WorkflowId\">WorkflowId</a> {<ul class=\"subs\"><li><a href=\"#v:rawWorkflowId\">rawWorkflowId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"WorkflowId WorkflowId rawWorkflowId","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowId"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Namespace\">Namespace</a> = <a href=\"#v:Namespace\">Namespace</a> {<ul class=\"subs\"><li><a href=\"#v:rawNamespace\">rawNamespace</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"Namespace Namespace rawNamespace","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:Namespace"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TaskQueue\">TaskQueue</a> = <a href=\"#v:TaskQueue\">TaskQueue</a> {<ul class=\"subs\"><li><a href=\"#v:rawTaskQueue\">rawTaskQueue</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"TaskQueue TaskQueue rawTaskQueue","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:TaskQueue"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:PatchId\">PatchId</a> = <a href=\"#v:PatchId\">PatchId</a> {<ul class=\"subs\"><li><a href=\"#v:rawPatchId\">rawPatchId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"PatchId PatchId rawPatchId","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:PatchId"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:RunId\">RunId</a> = <a href=\"#v:RunId\">RunId</a> {<ul class=\"subs\"><li><a href=\"#v:rawRunId\">rawRunId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"RunId RunId rawRunId","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:RunId"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ParentClosePolicy\">ParentClosePolicy</a><ul class=\"subs\"><li>= <a href=\"#v:ParentClosePolicyUnspecified\">ParentClosePolicyUnspecified</a></li><li>| <a href=\"#v:ParentClosePolicyTerminate\">ParentClosePolicyTerminate</a></li><li>| <a href=\"#v:ParentClosePolicyAbandon\">ParentClosePolicyAbandon</a></li><li>| <a href=\"#v:ParentClosePolicyRequestCancel\">ParentClosePolicyRequestCancel</a></li></ul>","name":"ParentClosePolicy ParentClosePolicyUnspecified ParentClosePolicyTerminate ParentClosePolicyAbandon ParentClosePolicyRequestCancel","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ParentClosePolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ChildWorkflowCancellationType\">ChildWorkflowCancellationType</a><ul class=\"subs\"><li>= <a href=\"#v:ChildWorkflowCancellationAbandon\">ChildWorkflowCancellationAbandon</a></li><li>| <a href=\"#v:ChildWorkflowCancellationTryCancel\">ChildWorkflowCancellationTryCancel</a></li><li>| <a href=\"#v:ChildWorkflowCancellationWaitCancellationCompleted\">ChildWorkflowCancellationWaitCancellationCompleted</a></li><li>| <a href=\"#v:ChildWorkflowCancellationWaitCancellationRequested\">ChildWorkflowCancellationWaitCancellationRequested</a></li></ul>","name":"ChildWorkflowCancellationType ChildWorkflowCancellationAbandon ChildWorkflowCancellationTryCancel ChildWorkflowCancellationWaitCancellationCompleted ChildWorkflowCancellationWaitCancellationRequested","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:ChildWorkflowCancellationType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowIdReusePolicy\">WorkflowIdReusePolicy</a><ul class=\"subs\"><li>= <a href=\"#v:WorkflowIdReusePolicyUnspecified\">WorkflowIdReusePolicyUnspecified</a></li><li>| <a href=\"#v:WorkflowIdReusePolicyAllowDuplicate\">WorkflowIdReusePolicyAllowDuplicate</a></li><li>| <a href=\"#v:WorkflowIdReusePolicyAllowDuplicateFailedOnly\">WorkflowIdReusePolicyAllowDuplicateFailedOnly</a></li><li>| <a href=\"#v:WorkflowIdReusePolicyRejectDuplicate\">WorkflowIdReusePolicyRejectDuplicate</a></li><li>| <a href=\"#v:WorkflowIdReusePolicyTerminateIfRunning\">WorkflowIdReusePolicyTerminateIfRunning</a></li></ul>","name":"WorkflowIdReusePolicy WorkflowIdReusePolicyUnspecified WorkflowIdReusePolicyAllowDuplicate WorkflowIdReusePolicyAllowDuplicateFailedOnly WorkflowIdReusePolicyRejectDuplicate WorkflowIdReusePolicyTerminateIfRunning","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowIdReusePolicy"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WorkflowType\">WorkflowType</a> = <a href=\"#v:WorkflowType\">WorkflowType</a> {<ul class=\"subs\"><li><a href=\"#v:rawWorkflowType\">rawWorkflowType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"WorkflowType WorkflowType rawWorkflowType","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:WorkflowType"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:RequireCallStack\">RequireCallStack</a> = (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/GHC-Stack.html#t:HasCallStack\" title=\"GHC.Stack\">HasCallStack</a>, <a href=\"https://hackage.haskell.org/package/require-callstack-0.2.0.1/docs/RequireCallStack.html#t:RequireCallStackImpl\" title=\"RequireCallStack\">RequireCallStackImpl</a>)","name":"RequireCallStack","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:RequireCallStack"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TimeoutOptions\">TimeoutOptions</a> = <a href=\"#v:TimeoutOptions\">TimeoutOptions</a> {<ul class=\"subs\"><li><a href=\"#v:executionTimeout\">executionTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:runTimeout\">runTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:taskTimeout\">taskTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li></ul>}","name":"TimeoutOptions TimeoutOptions executionTimeout runTimeout taskTimeout","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t:TimeoutOptions"},{"display_html":"<a href=\"#v:defaultTimeoutOptions\">defaultTimeoutOptions</a> :: <a href=\"Temporal-Workflow.html#t:TimeoutOptions\" title=\"Temporal.Workflow\">TimeoutOptions</a>","name":"defaultTimeoutOptions","module":"Temporal.Workflow","link":"Temporal-Workflow.html#v:defaultTimeoutOptions"},{"display_html":"<span class=\"keyword\">type family</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) <a href=\"#t::-45--62-:\">:-&gt;:</a> result <span class=\"keyword\">where ...</span>","name":":->:","module":"Temporal.Workflow","link":"Temporal-Workflow.html#t::-45--62-:"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IndexedValueType\">IndexedValueType</a><ul class=\"subs\"><li>= <a href=\"#v:Text\">Text</a></li><li>| <a href=\"#v:Keyword\">Keyword</a></li><li>| <a href=\"#v:Int\">Int</a></li><li>| <a href=\"#v:Double\">Double</a></li><li>| <a href=\"#v:Bool\">Bool</a></li><li>| <a href=\"#v:Datetime\">Datetime</a></li><li>| <a href=\"#v:KeywordList\">KeywordList</a></li><li>| <a href=\"#v:UnrecognizedIndexedValueType\">UnrecognizedIndexedValueType</a></li></ul>","name":"IndexedValueType UnrecognizedIndexedValueType Keyword KeywordList Datetime Bool Text Int Double","module":"Temporal.Operator","link":"Temporal-Operator.html#t:IndexedValueType"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SearchAttributes\">SearchAttributes</a> = <a href=\"#v:SearchAttributes\">SearchAttributes</a> {<ul class=\"subs\"><li><a href=\"#v:customAttributes\">customAttributes</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-Operator.html#t:IndexedValueType\" title=\"Temporal.Operator\">IndexedValueType</a></li><li><a href=\"#v:systemAttributes\">systemAttributes</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-Operator.html#t:IndexedValueType\" title=\"Temporal.Operator\">IndexedValueType</a></li><li><a href=\"#v:storageSchema\">storageSchema</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"SearchAttributes SearchAttributes customAttributes storageSchema systemAttributes","module":"Temporal.Operator","link":"Temporal-Operator.html#t:SearchAttributes"},{"display_html":"<a href=\"#v:searchAttributeTypeFromProto\">searchAttributeTypeFromProto</a> :: <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Enums-V1-Common.html#t:IndexedValueType\" title=\"Proto.Temporal.Api.Enums.V1.Common\">IndexedValueType</a> -&gt; <a href=\"Temporal-Operator.html#t:IndexedValueType\" title=\"Temporal.Operator\">IndexedValueType</a>","name":"searchAttributeTypeFromProto","module":"Temporal.Operator","link":"Temporal-Operator.html#v:searchAttributeTypeFromProto"},{"display_html":"<a href=\"#v:searchAttributeTypeToProto\">searchAttributeTypeToProto</a> :: <a href=\"Temporal-Operator.html#t:IndexedValueType\" title=\"Temporal.Operator\">IndexedValueType</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Enums-V1-Common.html#t:IndexedValueType\" title=\"Proto.Temporal.Api.Enums.V1.Common\">IndexedValueType</a>","name":"searchAttributeTypeToProto","module":"Temporal.Operator","link":"Temporal-Operator.html#v:searchAttributeTypeToProto"},{"display_html":"<a href=\"#v:listSearchAttributes\">listSearchAttributes</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:RpcError\" title=\"Temporal.Core.Client\">RpcError</a> <a href=\"Temporal-Operator.html#t:SearchAttributes\" title=\"Temporal.Operator\">SearchAttributes</a>)","name":"listSearchAttributes","module":"Temporal.Operator","link":"Temporal-Operator.html#v:listSearchAttributes"},{"display_html":"<a href=\"#v:addSearchAttributes\">addSearchAttributes</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a> -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-Operator.html#t:IndexedValueType\" title=\"Temporal.Operator\">IndexedValueType</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:RpcError\" title=\"Temporal.Core.Client\">RpcError</a> ())","name":"addSearchAttributes","module":"Temporal.Operator","link":"Temporal-Operator.html#v:addSearchAttributes"},{"display_html":"<a href=\"#v:defaultHeaderKey\">defaultHeaderKey</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>","name":"defaultHeaderKey","module":"Temporal.Contrib.OpenTelemetry","link":"Temporal-Contrib-OpenTelemetry.html#v:defaultHeaderKey"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:OpenTelemetryInterceptorOptions\">OpenTelemetryInterceptorOptions</a> = <a href=\"#v:OpenTelemetryInterceptorOptions\">OpenTelemetryInterceptorOptions</a> {<ul class=\"subs\"><li><a href=\"#v:tracerProvider\">tracerProvider</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/hs-opentelemetry-api-0.1.0.0/docs/OpenTelemetry-Trace-Core.html#t:TracerProvider\" title=\"OpenTelemetry.Trace.Core\">TracerProvider</a></li><li><a href=\"#v:headerKey\">headerKey</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"OpenTelemetryInterceptorOptions OpenTelemetryInterceptorOptions tracerProvider headerKey","module":"Temporal.Contrib.OpenTelemetry","link":"Temporal-Contrib-OpenTelemetry.html#t:OpenTelemetryInterceptorOptions"},{"display_html":"<a href=\"#v:defaultOpenTelemetryInterceptorOptions\">defaultOpenTelemetryInterceptorOptions</a> :: <a href=\"Temporal-Contrib-OpenTelemetry.html#t:OpenTelemetryInterceptorOptions\" title=\"Temporal.Contrib.OpenTelemetry\">OpenTelemetryInterceptorOptions</a>","name":"defaultOpenTelemetryInterceptorOptions","module":"Temporal.Contrib.OpenTelemetry","link":"Temporal-Contrib-OpenTelemetry.html#v:defaultOpenTelemetryInterceptorOptions"},{"display_html":"<a href=\"#v:headersPropagator\">headersPropagator</a> :: <a href=\"https://hackage.haskell.org/package/hs-opentelemetry-api-0.1.0.0/docs/OpenTelemetry-Propagator.html#t:Propagator\" title=\"OpenTelemetry.Propagator\">Propagator</a> <a href=\"https://hackage.haskell.org/package/hs-opentelemetry-api-0.1.0.0/docs/OpenTelemetry-Context.html#t:Context\" title=\"OpenTelemetry.Context\">Context</a> (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>) (<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)","name":"headersPropagator","module":"Temporal.Contrib.OpenTelemetry","link":"Temporal-Contrib-OpenTelemetry.html#v:headersPropagator"},{"display_html":"<a href=\"#v:makeOpenTelemetryInterceptor\">makeOpenTelemetryInterceptor</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; m (<a href=\"Temporal-Interceptor.html#t:Interceptors\" title=\"Temporal.Interceptor\">Interceptors</a> env)","name":"makeOpenTelemetryInterceptor","module":"Temporal.Contrib.OpenTelemetry","link":"Temporal-Contrib-OpenTelemetry.html#v:makeOpenTelemetryInterceptor"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowClient\">WorkflowClient</a>","name":"WorkflowClient","module":"Temporal.Client","link":"Temporal-Client.html#t:WorkflowClient"},{"display_html":"<a href=\"#v:workflowClient\">workflowClient</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Client.html#t:WorkflowClientConfig\" title=\"Temporal.Client\">WorkflowClientConfig</a> -&gt; m <a href=\"Temporal-Client.html#t:WorkflowClient\" title=\"Temporal.Client\">WorkflowClient</a>","name":"workflowClient","module":"Temporal.Client","link":"Temporal-Client.html#v:workflowClient"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowClientConfig\">WorkflowClientConfig</a> = <a href=\"#v:WorkflowClientConfig\">WorkflowClientConfig</a> {<ul class=\"subs\"><li><a href=\"#v:namespace\">namespace</a> :: !<a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a></li><li><a href=\"#v:interceptors\">interceptors</a> :: !<a href=\"Temporal-Interceptor.html#t:ClientInterceptors\" title=\"Temporal.Interceptor\">ClientInterceptors</a></li><li><a href=\"#v:payloadProcessor\">payloadProcessor</a> :: !<a href=\"Temporal-Payload.html#t:PayloadProcessor\" title=\"Temporal.Payload\">PayloadProcessor</a></li></ul>}","name":"WorkflowClientConfig namespace WorkflowClientConfig interceptors payloadProcessor","module":"Temporal.Client","link":"Temporal-Client.html#t:WorkflowClientConfig"},{"display_html":"<a href=\"#v:mkWorkflowClientConfig\">mkWorkflowClientConfig</a> :: <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a> -&gt; <a href=\"Temporal-Client.html#t:WorkflowClientConfig\" title=\"Temporal.Client\">WorkflowClientConfig</a>","name":"mkWorkflowClientConfig","module":"Temporal.Client","link":"Temporal-Client.html#v:mkWorkflowClientConfig"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:HasWorkflowClient\">HasWorkflowClient</a> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:askWorkflowClient\">askWorkflowClient</a> :: m <a href=\"Temporal-Client.html#t:WorkflowClient\" title=\"Temporal.Client\">WorkflowClient</a></li></ul>","name":"HasWorkflowClient askWorkflowClient","module":"Temporal.Client","link":"Temporal-Client.html#t:HasWorkflowClient"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StartWorkflowOptions\">StartWorkflowOptions</a> = <a href=\"#v:StartWorkflowOptions\">StartWorkflowOptions</a> {<ul class=\"subs\"><li><a href=\"#v:taskQueue\">taskQueue</a> :: <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a></li><li><a href=\"#v:followRuns\">followRuns</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:workflowIdReusePolicy\">workflowIdReusePolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:WorkflowIdReusePolicy\" title=\"Temporal.Workflow\">WorkflowIdReusePolicy</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:cronSchedule\">cronSchedule</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:memo\">memo</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a>)</li><li><a href=\"#v:headers\">headers</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:timeouts\">timeouts</a> :: <a href=\"Temporal-Client.html#t:TimeoutOptions\" title=\"Temporal.Client\">TimeoutOptions</a></li><li><a href=\"#v:requestEagerExecution\">requestEagerExecution</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:workflowStartDelay\">workflowStartDelay</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li></ul>}","name":"StartWorkflowOptions taskQueue searchAttributes retryPolicy cronSchedule memo requestEagerExecution workflowIdReusePolicy workflowStartDelay headers StartWorkflowOptions followRuns timeouts","module":"Temporal.Client","link":"Temporal-Client.html#t:StartWorkflowOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TimeoutOptions\">TimeoutOptions</a> = <a href=\"#v:TimeoutOptions\">TimeoutOptions</a> {<ul class=\"subs\"><li><a href=\"#v:executionTimeout\">executionTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:runTimeout\">runTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:taskTimeout\">taskTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li></ul>}","name":"TimeoutOptions TimeoutOptions executionTimeout runTimeout taskTimeout","module":"Temporal.Client","link":"Temporal-Client.html#t:TimeoutOptions"},{"display_html":"<a href=\"#v:startWorkflowOptions\">startWorkflowOptions</a> :: <a href=\"Temporal-Workflow.html#t:TaskQueue\" title=\"Temporal.Workflow\">TaskQueue</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a>","name":"startWorkflowOptions","module":"Temporal.Client","link":"Temporal-Client.html#v:startWorkflowOptions"},{"display_html":"<a href=\"#v:start\">start</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) wf. (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf) =&gt; wf -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf))","name":"start","module":"Temporal.Client","link":"Temporal-Client.html#v:start"},{"display_html":"<a href=\"#v:startFromPayloads\">startFromPayloads</a> :: <span class=\"keyword\">forall</span> m (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result. (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m) =&gt; <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> args result -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:UnencodedPayload\" title=\"Temporal.Payload\">UnencodedPayload</a> -&gt; m (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> result)","name":"startFromPayloads","module":"Temporal.Client","link":"Temporal-Client.html#v:startFromPayloads"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowHandle\">WorkflowHandle</a> a","name":"WorkflowHandle","module":"Temporal.Client","link":"Temporal-Client.html#t:WorkflowHandle"},{"display_html":"<a href=\"#v:execute\">execute</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) wf. (<a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf) =&gt; wf -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf)","name":"execute","module":"Temporal.Client","link":"Temporal-Client.html#v:execute"},{"display_html":"<a href=\"#v:waitWorkflowResult\">waitWorkflowResult</a> :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> a, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m) =&gt; <a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a -&gt; m a","name":"waitWorkflowResult","module":"Temporal.Client","link":"Temporal-Client.html#v:waitWorkflowResult"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TerminationOptions\">TerminationOptions</a> = <a href=\"#v:TerminationOptions\">TerminationOptions</a> {<ul class=\"subs\"><li><a href=\"#v:terminationReason\">terminationReason</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:terminationDetails\">terminationDetails</a> :: [<a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>]</li><li><a href=\"#v:firstExecutionRunId\">firstExecutionRunId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li></ul>}","name":"TerminationOptions firstExecutionRunId TerminationOptions terminationReason terminationDetails","module":"Temporal.Client","link":"Temporal-Client.html#t:TerminationOptions"},{"display_html":"<a href=\"#v:terminate\">terminate</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a -&gt; <a href=\"Temporal-Client.html#t:TerminationOptions\" title=\"Temporal.Client\">TerminationOptions</a> -&gt; m ()","name":"terminate","module":"Temporal.Client","link":"Temporal-Client.html#v:terminate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryOptions\">QueryOptions</a> = <a href=\"#v:QueryOptions\">QueryOptions</a> {<ul class=\"subs\"><li><a href=\"#v:queryRejectCondition\">queryRejectCondition</a> :: <a href=\"Temporal-Client.html#t:QueryRejectCondition\" title=\"Temporal.Client\">QueryRejectCondition</a></li><li><a href=\"#v:queryHeaders\">queryHeaders</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"QueryOptions queryRejectCondition QueryOptions queryHeaders","module":"Temporal.Client","link":"Temporal-Client.html#t:QueryOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryRejectCondition\">QueryRejectCondition</a><ul class=\"subs\"><li>= <a href=\"#v:QueryRejectConditionRejectNone\">QueryRejectConditionRejectNone</a></li><li>| <a href=\"#v:QueryRejectConditionNotOpen\">QueryRejectConditionNotOpen</a></li><li>| <a href=\"#v:QueryRejectConditionNotCompletedCleanly\">QueryRejectConditionNotCompletedCleanly</a></li></ul>","name":"QueryRejectCondition QueryRejectConditionRejectNone QueryRejectConditionNotOpen QueryRejectConditionNotCompletedCleanly","module":"Temporal.Client","link":"Temporal-Client.html#t:QueryRejectCondition"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:QueryRejected\">QueryRejected</a> = <a href=\"#v:QueryRejected\">QueryRejected</a> {<ul class=\"subs\"><li><a href=\"#v:status\">status</a> :: <a href=\"Temporal-Client.html#t:WorkflowExecutionStatus\" title=\"Temporal.Client\">WorkflowExecutionStatus</a></li></ul>}","name":"QueryRejected status QueryRejected","module":"Temporal.Client","link":"Temporal-Client.html#t:QueryRejected"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowExecutionStatus\">WorkflowExecutionStatus</a><ul class=\"subs\"><li>= <a href=\"#v:Running\">Running</a></li><li>| <a href=\"#v:Completed\">Completed</a></li><li>| <a href=\"#v:Failed\">Failed</a></li><li>| <a href=\"#v:Canceled\">Canceled</a></li><li>| <a href=\"#v:Terminated\">Terminated</a></li><li>| <a href=\"#v:ContinuedAsNew\">ContinuedAsNew</a></li><li>| <a href=\"#v:TimedOut\">TimedOut</a></li><li>| <a href=\"#v:UnknownStatus\">UnknownStatus</a></li></ul>","name":"WorkflowExecutionStatus Failed Running Terminated Completed Canceled ContinuedAsNew TimedOut UnknownStatus","module":"Temporal.Client","link":"Temporal-Client.html#t:WorkflowExecutionStatus"},{"display_html":"<a href=\"#v:defaultQueryOptions\">defaultQueryOptions</a> :: <a href=\"Temporal-Client.html#t:QueryOptions\" title=\"Temporal.Client\">QueryOptions</a>","name":"defaultQueryOptions","module":"Temporal.Client","link":"Temporal-Client.html#v:defaultQueryOptions"},{"display_html":"<a href=\"#v:query\">query</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) query a. (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Workflow.html#t:QueryRef\" title=\"Temporal.Workflow\">QueryRef</a> query) =&gt; <a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a -&gt; query -&gt; <a href=\"Temporal-Client.html#t:QueryOptions\" title=\"Temporal.Client\">QueryOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:QueryArgs\" title=\"Temporal.Workflow\">QueryArgs</a> query <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"Temporal-Client.html#t:QueryRejected\" title=\"Temporal.Client\">QueryRejected</a> (<a href=\"Temporal-Workflow.html#t:QueryResult\" title=\"Temporal.Workflow\">QueryResult</a> query))","name":"query","module":"Temporal.Client","link":"Temporal-Client.html#v:query"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SignalOptions\">SignalOptions</a> = <a href=\"#v:SignalOptions\">SignalOptions</a> {<ul class=\"subs\"><li><a href=\"#v:requestId\">requestId</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:skipGenerateWorkflowTask\">skipGenerateWorkflowTask</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:headers\">headers</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li></ul>}","name":"SignalOptions requestId skipGenerateWorkflowTask headers SignalOptions","module":"Temporal.Client","link":"Temporal-Client.html#t:SignalOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownSignal\">KnownSignal</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) = (<a href=\"Temporal-Payload.html#t:ApplyPayloads\" title=\"Temporal.Payload\">ApplyPayloads</a> codec args, <a href=\"Temporal-Payload.html#t:GatherArgs\" title=\"Temporal.Payload\">GatherArgs</a> codec args) =&gt; <a href=\"#v:KnownSignal\">KnownSignal</a> {<ul class=\"subs\"><li><a href=\"#v:signalName\">signalName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:signalCodec\">signalCodec</a> :: codec</li></ul>}","name":"KnownSignal signalName KnownSignal signalCodec","module":"Temporal.Client","link":"Temporal-Client.html#t:KnownSignal"},{"display_html":"<a href=\"#v:signal\">signal</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) sig a. (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Workflow.html#t:SignalRef\" title=\"Temporal.Workflow\">SignalRef</a> sig) =&gt; <a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a -&gt; sig -&gt; <a href=\"Temporal-Client.html#t:SignalOptions\" title=\"Temporal.Client\">SignalOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:SignalArgs\" title=\"Temporal.Workflow\">SignalArgs</a> sig <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m ()","name":"signal","module":"Temporal.Client","link":"Temporal-Client.html#v:signal"},{"display_html":"<a href=\"#v:defaultSignalOptions\">defaultSignalOptions</a> :: <a href=\"Temporal-Client.html#t:SignalOptions\" title=\"Temporal.Client\">SignalOptions</a>","name":"defaultSignalOptions","module":"Temporal.Client","link":"Temporal-Client.html#v:defaultSignalOptions"},{"display_html":"<a href=\"#v:signalWithStart\">signalWithStart</a> :: <span class=\"keyword\">forall</span> wf sig (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf, <a href=\"Temporal-Workflow.html#t:SignalRef\" title=\"Temporal.Workflow\">SignalRef</a> sig) =&gt; wf -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; sig -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> (<a href=\"Temporal-Workflow.html#t:SignalArgs\" title=\"Temporal.Workflow\">SignalArgs</a> sig <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> (<a href=\"Temporal-Workflow.html#t:WorkflowResult\" title=\"Temporal.Workflow\">WorkflowResult</a> wf)))","name":"signalWithStart","module":"Temporal.Client","link":"Temporal-Client.html#v:signalWithStart"},{"display_html":"<a href=\"#v:getHandle\">getHandle</a> :: <span class=\"keyword\">forall</span> m (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) a. (<a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m) =&gt; <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> args a -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a> -&gt; m (<a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a)","name":"getHandle","module":"Temporal.Client","link":"Temporal-Client.html#v:getHandle"},{"display_html":"<a href=\"#v:fetchHistory\">fetchHistory</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client.html#t:WorkflowHandle\" title=\"Temporal.Client\">WorkflowHandle</a> a -&gt; m <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:History\" title=\"Proto.Temporal.Api.History.V1.Message\">History</a>","name":"fetchHistory","module":"Temporal.Client","link":"Temporal-Client.html#v:fetchHistory"},{"display_html":"<a href=\"#v:streamEvents\">streamEvents</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m) =&gt; <a href=\"Temporal-Client.html#t:FollowOption\" title=\"Temporal.Client\">FollowOption</a> -&gt; <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Workflowservice-V1-RequestResponse.html#t:GetWorkflowExecutionHistoryRequest\" title=\"Proto.Temporal.Api.Workflowservice.V1.RequestResponse\">GetWorkflowExecutionHistoryRequest</a> -&gt; <a href=\"https://hackage.haskell.org/package/conduit-1.3.6/docs/Data-Conduit.html#t:ConduitT\" title=\"Data.Conduit\">ConduitT</a> () <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-History-V1-Message.html#t:HistoryEvent\" title=\"Proto.Temporal.Api.History.V1.Message\">HistoryEvent</a> m ()","name":"streamEvents","module":"Temporal.Client","link":"Temporal-Client.html#v:streamEvents"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FollowOption\">FollowOption</a><ul class=\"subs\"><li>= <a href=\"#v:FollowRuns\">FollowRuns</a></li><li>| <a href=\"#v:ThisRunOnly\">ThisRunOnly</a></li></ul>","name":"FollowOption FollowRuns ThisRunOnly","module":"Temporal.Client","link":"Temporal-Client.html#t:FollowOption"},{"display_html":"<a href=\"#v:mkScheduleClient\">mkScheduleClient</a> :: <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a>","name":"mkScheduleClient","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:mkScheduleClient"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleClient\">ScheduleClient</a>","name":"ScheduleClient","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleClient"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CreateScheduleRequest\">CreateScheduleRequest</a> = <a href=\"#v:CreateScheduleRequest\">CreateScheduleRequest</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleId\">scheduleId</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a></li><li><a href=\"#v:schedule\">schedule</a> :: !<a href=\"Temporal-Client-Schedule.html#t:Schedule\" title=\"Temporal.Client.Schedule\">Schedule</a></li><li><a href=\"#v:initialPatch\">initialPatch</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Schedule.html#t:SchedulePatch\" title=\"Temporal.Client.Schedule\">SchedulePatch</a>)</li><li><a href=\"#v:memo\">memo</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:requestId\">requestId</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a>)</li></ul>}","name":"CreateScheduleRequest requestId searchAttributes memo scheduleId schedule initialPatch CreateScheduleRequest","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:CreateScheduleRequest"},{"display_html":"<a href=\"#v:createSchedule\">createSchedule</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:CreateScheduleRequest\" title=\"Temporal.Client.Schedule\">CreateScheduleRequest</a> -&gt; m <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>","name":"createSchedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:createSchedule"},{"display_html":"<a href=\"#v:deleteSchedule\">deleteSchedule</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a> -&gt; m ()","name":"deleteSchedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:deleteSchedule"},{"display_html":"<a href=\"#v:listSchedules\">listSchedules</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ListSchedulesOptions\" title=\"Temporal.Client.Schedule\">ListSchedulesOptions</a> -&gt; <a href=\"https://hackage.haskell.org/package/conduit-1.3.6/docs/Data-Conduit.html#t:ConduitT\" title=\"Data.Conduit\">ConduitT</a> () (<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Client-Schedule.html#t:ScheduleListEntry\" title=\"Temporal.Client.Schedule\">ScheduleListEntry</a>) m ()","name":"listSchedules","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:listSchedules"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleListInfo\">ScheduleListInfo</a> = <a href=\"#v:ScheduleListInfo\">ScheduleListInfo</a> {<ul class=\"subs\"><li><a href=\"#v:spec\">spec</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Schedule.html#t:ScheduleSpec\" title=\"Temporal.Client.Schedule\">ScheduleSpec</a>)</li><li><a href=\"#v:workflowType\">workflowType</a> :: !<a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li><li><a href=\"#v:notes\">notes</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:paused\">paused</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:recentActions\">recentActions</a> :: ![<a href=\"Temporal-Client-Schedule.html#t:ScheduleActionResult\" title=\"Temporal.Client.Schedule\">ScheduleActionResult</a>]</li><li><a href=\"#v:futureActionTimes\">futureActionTimes</a> :: ![<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>]</li></ul>}","name":"ScheduleListInfo workflowType spec notes recentActions futureActionTimes paused ScheduleListInfo","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleListInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleListEntry\">ScheduleListEntry</a> = <a href=\"#v:ScheduleListEntry\">ScheduleListEntry</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleId\">scheduleId</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a></li><li><a href=\"#v:memo\">memo</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a>)</li><li><a href=\"#v:info\">info</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Schedule.html#t:ScheduleListInfo\" title=\"Temporal.Client.Schedule\">ScheduleListInfo</a>)</li></ul>}","name":"ScheduleListEntry info searchAttributes memo scheduleId ScheduleListEntry","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleListEntry"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleActionResult\">ScheduleActionResult</a> = <a href=\"#v:ScheduleActionResult\">ScheduleActionResult</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleTime\">scheduleTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:actualTime\">actualTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:startWorkflowResult\">startWorkflowResult</a> :: !<a href=\"Temporal-Client-Schedule.html#t:WorkflowExecution\" title=\"Temporal.Client.Schedule\">WorkflowExecution</a></li></ul>}","name":"ScheduleActionResult scheduleTime actualTime startWorkflowResult ScheduleActionResult","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleActionResult"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ListSchedulesOptions\">ListSchedulesOptions</a> = <a href=\"#v:ListSchedulesOptions\">ListSchedulesOptions</a> {<ul class=\"subs\"><li><a href=\"#v:maximumPageSize\">maximumPageSize</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li></ul>}","name":"ListSchedulesOptions maximumPageSize ListSchedulesOptions","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ListSchedulesOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ListScheduleMatchingTimesOptions\">ListScheduleMatchingTimesOptions</a> = <a href=\"#v:ListScheduleMatchingTimesOptions\">ListScheduleMatchingTimesOptions</a> {<ul class=\"subs\"><li><a href=\"#v:scheduleId\">scheduleId</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a></li><li><a href=\"#v:startTime\">startTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:endTime\">endTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li></ul>}","name":"ListScheduleMatchingTimesOptions startTime endTime scheduleId ListScheduleMatchingTimesOptions","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ListScheduleMatchingTimesOptions"},{"display_html":"<a href=\"#v:listScheduleMatchingTimes\">listScheduleMatchingTimes</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ListScheduleMatchingTimesOptions\" title=\"Temporal.Client.Schedule\">ListScheduleMatchingTimesOptions</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>)","name":"listScheduleMatchingTimes","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:listScheduleMatchingTimes"},{"display_html":"<a href=\"#v:describeSchedule\">describeSchedule</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a> -&gt; m <a href=\"Temporal-Client-Schedule.html#t:DescribeScheduleResponse\" title=\"Temporal.Client.Schedule\">DescribeScheduleResponse</a>","name":"describeSchedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:describeSchedule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DescribeScheduleResponse\">DescribeScheduleResponse</a> = <a href=\"#v:DescribeScheduleResponse\">DescribeScheduleResponse</a> {<ul class=\"subs\"><li><a href=\"#v:schedule\">schedule</a> :: !<a href=\"Temporal-Client-Schedule.html#t:Schedule\" title=\"Temporal.Client.Schedule\">Schedule</a></li><li><a href=\"#v:info\">info</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleInfo\" title=\"Temporal.Client.Schedule\">ScheduleInfo</a></li><li><a href=\"#v:memo\">memo</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li><li><a href=\"#v:searchAttributes\">searchAttributes</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeKey\" title=\"Temporal.SearchAttributes\">SearchAttributeKey</a> <a href=\"Temporal-SearchAttributes.html#t:SearchAttributeType\" title=\"Temporal.SearchAttributes\">SearchAttributeType</a>)</li><li><a href=\"#v:conflictToken\">conflictToken</a> :: !<a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"DescribeScheduleResponse info searchAttributes memo schedule conflictToken DescribeScheduleResponse","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:DescribeScheduleResponse"},{"display_html":"<a href=\"#v:patchSchedule\">patchSchedule</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:SchedulePatch\" title=\"Temporal.Client.Schedule\">SchedulePatch</a> -&gt; m ()","name":"patchSchedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:patchSchedule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SchedulePatch\">SchedulePatch</a> = <a href=\"#v:SchedulePatch\">SchedulePatch</a> {<ul class=\"subs\"><li><a href=\"#v:triggerImmediately\">triggerImmediately</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Schedule.html#t:TriggerImmediatelyRequest\" title=\"Temporal.Client.Schedule\">TriggerImmediatelyRequest</a>)</li><li><a href=\"#v:backfillRequest\">backfillRequest</a> :: ![<a href=\"Temporal-Client-Schedule.html#t:BackfillRequest\" title=\"Temporal.Client.Schedule\">BackfillRequest</a>]</li><li><a href=\"#v:pauseState\">pauseState</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> PauseState)</li><li><a href=\"#v:requestId\">requestId</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"SchedulePatch requestId triggerImmediately backfillRequest SchedulePatch pauseState","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:SchedulePatch"},{"display_html":"<a href=\"#v:updateSchedule\">updateSchedule</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleClient\" title=\"Temporal.Client.Schedule\">ScheduleClient</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:ScheduleId\" title=\"Temporal.Client.Schedule\">ScheduleId</a> -&gt; <a href=\"Temporal-Client-Schedule.html#t:UpdateScheduleRequest\" title=\"Temporal.Client.Schedule\">UpdateScheduleRequest</a> -&gt; m ()","name":"updateSchedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:updateSchedule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:UpdateScheduleRequest\">UpdateScheduleRequest</a> = <a href=\"#v:UpdateScheduleRequest\">UpdateScheduleRequest</a> {<ul class=\"subs\"><li><a href=\"#v:schedule\">schedule</a> :: !<a href=\"Temporal-Client-Schedule.html#t:Schedule\" title=\"Temporal.Client.Schedule\">Schedule</a></li><li><a href=\"#v:conflictToken\">conflictToken</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>)</li><li><a href=\"#v:requestId\">requestId</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"UpdateScheduleRequest requestId schedule conflictToken UpdateScheduleRequest","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:UpdateScheduleRequest"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ScheduleId\">ScheduleId</a> = <a href=\"#v:ScheduleId\">ScheduleId</a> {<ul class=\"subs\"><li><a href=\"#v:rawScheduleId\">rawScheduleId</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ScheduleId ScheduleId rawScheduleId","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleId"},{"display_html":"<a href=\"#v:scheduleSpec\">scheduleSpec</a> :: <a href=\"Temporal-Client-Schedule.html#t:ScheduleSpec\" title=\"Temporal.Client.Schedule\">ScheduleSpec</a>","name":"scheduleSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:scheduleSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleSpec\">ScheduleSpec</a> = <a href=\"#v:ScheduleSpec\">ScheduleSpec</a> {<ul class=\"subs\"><li><a href=\"#v:structuredCalendar\">structuredCalendar</a> :: [<a href=\"Temporal-Client-Schedule.html#t:StructuredCalendarSpec\" title=\"Temporal.Client.Schedule\">StructuredCalendarSpec</a>]</li><li><a href=\"#v:cronString\">cronString</a> :: [<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>]</li><li><a href=\"#v:calendar\">calendar</a> :: [<a href=\"Temporal-Client-Schedule.html#t:CalendarSpec\" title=\"Temporal.Client.Schedule\">CalendarSpec</a>]</li><li><a href=\"#v:interval\">interval</a> :: [<a href=\"Temporal-Client-Schedule.html#t:IntervalSpec\" title=\"Temporal.Client.Schedule\">IntervalSpec</a>]</li><li><a href=\"#v:excludeCalendar\">excludeCalendar</a> :: [<a href=\"Temporal-Client-Schedule.html#t:CalendarSpec\" title=\"Temporal.Client.Schedule\">CalendarSpec</a>]</li><li><a href=\"#v:excludeStructuredCalendar\">excludeStructuredCalendar</a> :: [<a href=\"Temporal-Client-Schedule.html#t:StructuredCalendarSpec\" title=\"Temporal.Client.Schedule\">StructuredCalendarSpec</a>]</li><li><a href=\"#v:startTime\">startTime</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:endTime\">endTime</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:jitter\">jitter</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:timezoneName\">timezoneName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:timezoneData\">timezoneData</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"ScheduleSpec startTime endTime interval structuredCalendar cronString calendar excludeCalendar excludeStructuredCalendar jitter timezoneName timezoneData ScheduleSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Schedule\">Schedule</a> = <a href=\"#v:Schedule\">Schedule</a> {<ul class=\"subs\"><li><a href=\"#v:spec\">spec</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleSpec\" title=\"Temporal.Client.Schedule\">ScheduleSpec</a></li><li><a href=\"#v:action\">action</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleAction\" title=\"Temporal.Client.Schedule\">ScheduleAction</a></li><li><a href=\"#v:policies\">policies</a> :: !<a href=\"Temporal-Client-Schedule.html#t:SchedulePolicies\" title=\"Temporal.Client.Schedule\">SchedulePolicies</a></li><li><a href=\"#v:state\">state</a> :: !<a href=\"Temporal-Client-Schedule.html#t:ScheduleState\" title=\"Temporal.Client.Schedule\">ScheduleState</a></li></ul>}","name":"Schedule state spec action policies Schedule","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:Schedule"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:TriggerImmediatelyRequest\">TriggerImmediatelyRequest</a> = <a href=\"#v:TriggerImmediatelyRequest\">TriggerImmediatelyRequest</a> {<ul class=\"subs\"><li><a href=\"#v:overlapPolicy\">overlapPolicy</a> :: !<a href=\"Temporal-Client-Schedule.html#t:OverlapPolicy\" title=\"Temporal.Client.Schedule\">OverlapPolicy</a></li></ul>}","name":"TriggerImmediatelyRequest overlapPolicy TriggerImmediatelyRequest","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:TriggerImmediatelyRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BackfillRequest\">BackfillRequest</a> = <a href=\"#v:BackfillRequest\">BackfillRequest</a> {<ul class=\"subs\"><li><a href=\"#v:startTime\">startTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:endTime\">endTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:overlapPolicy\">overlapPolicy</a> :: !<a href=\"Temporal-Client-Schedule.html#t:OverlapPolicy\" title=\"Temporal.Client.Schedule\">OverlapPolicy</a></li></ul>}","name":"BackfillRequest startTime endTime overlapPolicy BackfillRequest","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:BackfillRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:StructuredCalendarSpec\">StructuredCalendarSpec</a> = <a href=\"#v:StructuredCalendarSpec\">StructuredCalendarSpec</a> {<ul class=\"subs\"><li><a href=\"#v:second\">second</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:minute\">minute</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:hour\">hour</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:dayOfMonth\">dayOfMonth</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:month\">month</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:year\">year</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:dayOfWeek\">dayOfWeek</a> :: [<a href=\"Temporal-Client-Schedule.html#t:Range\" title=\"Temporal.Client.Schedule\">Range</a>]</li><li><a href=\"#v:comment\">comment</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"StructuredCalendarSpec month second comment minute hour dayOfMonth year dayOfWeek StructuredCalendarSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:StructuredCalendarSpec"},{"display_html":"<a href=\"#v:structuredCalendarSpec\">structuredCalendarSpec</a> :: <a href=\"Temporal-Client-Schedule.html#t:StructuredCalendarSpec\" title=\"Temporal.Client.Schedule\">StructuredCalendarSpec</a>","name":"structuredCalendarSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:structuredCalendarSpec"},{"display_html":"<a href=\"#v:calendarSpec\">calendarSpec</a> :: <a href=\"Temporal-Client-Schedule.html#t:CalendarSpec\" title=\"Temporal.Client.Schedule\">CalendarSpec</a>","name":"calendarSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:calendarSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CalendarSpec\">CalendarSpec</a> = <a href=\"#v:CalendarSpec\">CalendarSpec</a> {<ul class=\"subs\"><li><a href=\"#v:second\">second</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:minute\">minute</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:hour\">hour</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:dayOfMonth\">dayOfMonth</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:month\">month</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:year\">year</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:dayOfWeek\">dayOfWeek</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:comment\">comment</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"CalendarSpec month second comment minute hour dayOfMonth year dayOfWeek CalendarSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:CalendarSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:IntervalSpec\">IntervalSpec</a> = <a href=\"#v:IntervalSpec\">IntervalSpec</a> {<ul class=\"subs\"><li><a href=\"#v:interval\">interval</a> :: !<a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:phase\">phase</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)</li></ul>}","name":"IntervalSpec phase interval IntervalSpec","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:IntervalSpec"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowExecution\">WorkflowExecution</a> = <a href=\"#v:WorkflowExecution\">WorkflowExecution</a> {<ul class=\"subs\"><li><a href=\"#v:workflowId\">workflowId</a> :: !<a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a></li><li><a href=\"#v:runId\">runId</a> :: !<a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li></ul>}","name":"WorkflowExecution workflowId runId WorkflowExecution","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:WorkflowExecution"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleInfo\">ScheduleInfo</a> = <a href=\"#v:ScheduleInfo\">ScheduleInfo</a> {<ul class=\"subs\"><li><a href=\"#v:actionCount\">actionCount</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:missedCatchupWindow\">missedCatchupWindow</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:overlapSkipped\">overlapSkipped</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:runningWorkflows\">runningWorkflows</a> :: [<a href=\"Temporal-Client-Schedule.html#t:WorkflowExecution\" title=\"Temporal.Client.Schedule\">WorkflowExecution</a>]</li><li><a href=\"#v:recentActions\">recentActions</a> :: [<a href=\"Temporal-Client-Schedule.html#t:ScheduleActionResult\" title=\"Temporal.Client.Schedule\">ScheduleActionResult</a>]</li><li><a href=\"#v:futureActionTimes\">futureActionTimes</a> :: [<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>]</li><li><a href=\"#v:createTime\">createTime</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>)</li><li><a href=\"#v:updateTime\">updateTime</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a>)</li><li><a href=\"#v:invalidScheduleError\">invalidScheduleError</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"ScheduleInfo createTime actionCount missedCatchupWindow overlapSkipped runningWorkflows recentActions futureActionTimes updateTime invalidScheduleError ScheduleInfo","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleInfo"},{"display_html":"<a href=\"#v:mkScheduleAction\">mkScheduleAction</a> :: <span class=\"keyword\">forall</span> wf (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Workflow.html#t:WorkflowRef\" title=\"Temporal.Workflow\">WorkflowRef</a> wf) =&gt; wf -&gt; <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a> -&gt; <a href=\"Temporal-Client.html#t:StartWorkflowOptions\" title=\"Temporal.Client\">StartWorkflowOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowArgs\" title=\"Temporal.Workflow\">WorkflowArgs</a> wf <a href=\"Temporal-Payload.html#t::-45--62-:\" title=\"Temporal.Payload\">:-&gt;:</a> m <a href=\"Temporal-Client-Schedule.html#t:ScheduleAction\" title=\"Temporal.Client.Schedule\">ScheduleAction</a>","name":"mkScheduleAction","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#v:mkScheduleAction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleAction\">ScheduleAction</a><ul class=\"subs\"><li>= <a href=\"#v:StartWorkflow\">StartWorkflow</a> <a href=\"https://hackage.haskell.org/package/temporal-api-protos-1.0.0.0/docs/Proto-Temporal-Api-Workflow-V1-Message.html#t:NewWorkflowExecutionInfo\" title=\"Proto.Temporal.Api.Workflow.V1.Message\">NewWorkflowExecutionInfo</a></li><li>| <a href=\"#v:ScheduleActionUnrecognized\">ScheduleActionUnrecognized</a></li></ul>","name":"ScheduleAction StartWorkflow ScheduleActionUnrecognized","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleAction"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SchedulePolicies\">SchedulePolicies</a> = <a href=\"#v:SchedulePolicies\">SchedulePolicies</a> {<ul class=\"subs\"><li><a href=\"#v:overlapPolicy\">overlapPolicy</a> :: !<a href=\"Temporal-Client-Schedule.html#t:OverlapPolicy\" title=\"Temporal.Client.Schedule\">OverlapPolicy</a></li><li><a href=\"#v:catchupWindow\">catchupWindow</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)</li><li><a href=\"#v:pauseOnFailure\">pauseOnFailure</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"SchedulePolicies overlapPolicy catchupWindow pauseOnFailure SchedulePolicies","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:SchedulePolicies"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ScheduleState\">ScheduleState</a> = <a href=\"#v:ScheduleState\">ScheduleState</a> {<ul class=\"subs\"><li><a href=\"#v:notes\">notes</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:paused\">paused</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:limitedActions\">limitedActions</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:remainingActions\">remainingActions</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li></ul>}","name":"ScheduleState notes paused limitedActions remainingActions ScheduleState","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:ScheduleState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:OverlapPolicy\">OverlapPolicy</a><ul class=\"subs\"><li>= <a href=\"#v:Unspecified\">Unspecified</a></li><li>| <a href=\"#v:Skip\">Skip</a></li><li>| <a href=\"#v:BufferOne\">BufferOne</a></li><li>| <a href=\"#v:BufferAll\">BufferAll</a></li><li>| <a href=\"#v:CancelOther\">CancelOther</a></li><li>| <a href=\"#v:TerminateOther\">TerminateOther</a></li><li>| <a href=\"#v:AllowAll\">AllowAll</a></li><li>| <a href=\"#v:OverlapPolicyUnrecognized\">OverlapPolicyUnrecognized</a></li></ul>","name":"OverlapPolicy Skip Unspecified BufferOne BufferAll CancelOther TerminateOther AllowAll OverlapPolicyUnrecognized","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:OverlapPolicy"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Range\">Range</a> = <a href=\"#v:Range\">Range</a> {<ul class=\"subs\"><li><a href=\"#v:start\">start</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li><a href=\"#v:end\">end</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li><li><a href=\"#v:step\">step</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li></ul>}","name":"Range step start end Range","module":"Temporal.Client.Schedule","link":"Temporal-Client-Schedule.html#t:Range"},{"display_html":"module <a href=\"Temporal-Duration.html\">Temporal.Duration</a>","name":"","module":"Temporal.Client.Schedule","link":""},{"display_html":"<a href=\"#v:listNamespaces\">listNamespaces</a> :: <span class=\"keyword\">forall</span> (m :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m, <a href=\"Temporal-Client.html#t:HasWorkflowClient\" title=\"Temporal.Client\">HasWorkflowClient</a> m) =&gt; <a href=\"Temporal-Client-Namespace.html#t:ListNamespacesRequest\" title=\"Temporal.Client.Namespace\">ListNamespacesRequest</a> -&gt; <a href=\"https://hackage.haskell.org/package/conduit-1.3.6/docs/Data-Conduit.html#t:ConduitT\" title=\"Data.Conduit\">ConduitT</a> () <a href=\"Temporal-Client-Namespace.html#t:DescribeNamespaceResponse\" title=\"Temporal.Client.Namespace\">DescribeNamespaceResponse</a> m ()","name":"listNamespaces","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#v:listNamespaces"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ListNamespacesRequest\">ListNamespacesRequest</a> = <a href=\"#v:ListNamespacesRequest\">ListNamespacesRequest</a> {<ul class=\"subs\"><li><a href=\"#v:filter\">filter</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Namespace.html#t:NamespaceFilter\" title=\"Temporal.Client.Namespace\">NamespaceFilter</a>)</li><li><a href=\"#v:pageSize\">pageSize</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int32\" title=\"Data.Int\">Int32</a></li></ul>}","name":"ListNamespacesRequest filter pageSize ListNamespacesRequest","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:ListNamespacesRequest"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:DescribeNamespaceResponse\">DescribeNamespaceResponse</a> = <a href=\"#v:DescribeNamespaceResponse\">DescribeNamespaceResponse</a> {<ul class=\"subs\"><li><a href=\"#v:namespaceInfo\">namespaceInfo</a> :: !<a href=\"Temporal-Client-Namespace.html#t:NamespaceInfo\" title=\"Temporal.Client.Namespace\">NamespaceInfo</a></li><li><a href=\"#v:config\">config</a> :: !<a href=\"Temporal-Client-Namespace.html#t:NamespaceConfig\" title=\"Temporal.Client.Namespace\">NamespaceConfig</a></li><li><a href=\"#v:replicationConfig\">replicationConfig</a> :: !<a href=\"Temporal-Client-Namespace.html#t:NamespaceReplicationConfig\" title=\"Temporal.Client.Namespace\">NamespaceReplicationConfig</a></li><li><a href=\"#v:failoverVersion\">failoverVersion</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li><li><a href=\"#v:isGlobalNamespace\">isGlobalNamespace</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:failoverHistory\">failoverHistory</a> :: !(<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Client-Namespace.html#t:FailoverStatus\" title=\"Temporal.Client.Namespace\">FailoverStatus</a>)</li></ul>}","name":"DescribeNamespaceResponse failoverVersion namespaceInfo config replicationConfig isGlobalNamespace failoverHistory DescribeNamespaceResponse","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:DescribeNamespaceResponse"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceFilter\">NamespaceFilter</a> = <a href=\"#v:NamespaceFilter\">NamespaceFilter</a> {<ul class=\"subs\"><li><a href=\"#v:includeDeleted\">includeDeleted</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"NamespaceFilter includeDeleted NamespaceFilter","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceFilter"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceState\">NamespaceState</a><ul class=\"subs\"><li>= <a href=\"#v:NamespaceStateUnspecified\">NamespaceStateUnspecified</a></li><li>| <a href=\"#v:NamespaceStateRegistered\">NamespaceStateRegistered</a></li><li>| <a href=\"#v:NamespaceStateDeprecated\">NamespaceStateDeprecated</a></li><li>| <a href=\"#v:NamespaceStateDeleted\">NamespaceStateDeleted</a></li><li>| <a href=\"#v:NamespaceStateUnrecognized\">NamespaceStateUnrecognized</a></li></ul>","name":"NamespaceState NamespaceStateDeleted NamespaceStateDeprecated NamespaceStateRegistered NamespaceStateUnrecognized NamespaceStateUnspecified","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceInfo\">NamespaceInfo</a> = <a href=\"#v:NamespaceInfo\">NamespaceInfo</a> {<ul class=\"subs\"><li><a href=\"#v:name\">name</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:state\">state</a> :: !<a href=\"Temporal-Client-Namespace.html#t:NamespaceState\" title=\"Temporal.Client.Namespace\">NamespaceState</a></li><li><a href=\"#v:description\">description</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:ownerEmail\">ownerEmail</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:id\">id</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:data-39-\">data'</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>)</li><li><a href=\"#v:capabilities\">capabilities</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Namespace.html#t:NamespaceCapabilities\" title=\"Temporal.Client.Namespace\">NamespaceCapabilities</a>)</li><li><a href=\"#v:supportsSchedules\">supportsSchedules</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"NamespaceInfo id state name data' description ownerEmail capabilities supportsSchedules NamespaceInfo","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceCapabilities\">NamespaceCapabilities</a> = <a href=\"#v:NamespaceCapabilities\">NamespaceCapabilities</a> {<ul class=\"subs\"><li><a href=\"#v:eagerWorkflowStart\">eagerWorkflowStart</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:syncUpdate\">syncUpdate</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:asyncUpdate\">asyncUpdate</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"NamespaceCapabilities eagerWorkflowStart syncUpdate asyncUpdate NamespaceCapabilities","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceCapabilities"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ArchivalState\">ArchivalState</a><ul class=\"subs\"><li>= <a href=\"#v:ArchivalStateUnspecified\">ArchivalStateUnspecified</a></li><li>| <a href=\"#v:ArchivalStateDisabled\">ArchivalStateDisabled</a></li><li>| <a href=\"#v:ArchivalStateEnabled\">ArchivalStateEnabled</a></li><li>| <a href=\"#v:ArchivalStateUnrecognized\">ArchivalStateUnrecognized</a></li></ul>","name":"ArchivalState ArchivalStateDisabled ArchivalStateEnabled ArchivalStateUnrecognized ArchivalStateUnspecified","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:ArchivalState"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BadBinaryInfo\">BadBinaryInfo</a> = <a href=\"#v:BadBinaryInfo\">BadBinaryInfo</a> {<ul class=\"subs\"><li><a href=\"#v:reason\">reason</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:operator\">operator</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:createTime\">createTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li></ul>}","name":"BadBinaryInfo reason operator createTime BadBinaryInfo","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:BadBinaryInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BadBinaries\">BadBinaries</a> = <a href=\"#v:BadBinaries\">BadBinaries</a> {<ul class=\"subs\"><li><a href=\"#v:binaries\">binaries</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Client-Namespace.html#t:BadBinaryInfo\" title=\"Temporal.Client.Namespace\">BadBinaryInfo</a>)</li></ul>}","name":"BadBinaries binaries BadBinaries","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:BadBinaries"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceConfig\">NamespaceConfig</a> = <a href=\"#v:NamespaceConfig\">NamespaceConfig</a> {<ul class=\"subs\"><li><a href=\"#v:workflowExecutionRetentionTtl\">workflowExecutionRetentionTtl</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a>)</li><li><a href=\"#v:badBinaries\">badBinaries</a> :: !(<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Client-Namespace.html#t:BadBinaries\" title=\"Temporal.Client.Namespace\">BadBinaries</a>)</li><li><a href=\"#v:historyArchivalState\">historyArchivalState</a> :: !<a href=\"Temporal-Client-Namespace.html#t:ArchivalState\" title=\"Temporal.Client.Namespace\">ArchivalState</a></li><li><a href=\"#v:historyArchivalUri\">historyArchivalUri</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:visibilityArchivalState\">visibilityArchivalState</a> :: !<a href=\"Temporal-Client-Namespace.html#t:ArchivalState\" title=\"Temporal.Client.Namespace\">ArchivalState</a></li><li><a href=\"#v:visibilityArchivalUri\">visibilityArchivalUri</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:customSearchAttributeAliases\">customSearchAttributeAliases</a> :: !(<a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>)</li></ul>}","name":"NamespaceConfig workflowExecutionRetentionTtl badBinaries historyArchivalState historyArchivalUri visibilityArchivalState visibilityArchivalUri customSearchAttributeAliases NamespaceConfig","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:NamespaceReplicationConfig\">NamespaceReplicationConfig</a> = <a href=\"#v:NamespaceReplicationConfig\">NamespaceReplicationConfig</a> {<ul class=\"subs\"><li><a href=\"#v:activeClusterName\">activeClusterName</a> :: !<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:clusters\">clusters</a> :: !(<a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> ClusterReplicationConfig)</li><li><a href=\"#v:state\">state</a> :: !ReplicationState</li></ul>}","name":"NamespaceReplicationConfig state clusters activeClusterName NamespaceReplicationConfig","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:NamespaceReplicationConfig"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FailoverStatus\">FailoverStatus</a> = <a href=\"#v:FailoverStatus\">FailoverStatus</a> {<ul class=\"subs\"><li><a href=\"#v:failoverTime\">failoverTime</a> :: !<a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:failoverVersion\">failoverVersion</a> :: !<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Int.html#t:Int64\" title=\"Data.Int\">Int64</a></li></ul>}","name":"FailoverStatus failoverTime failoverVersion FailoverStatus","module":"Temporal.Client.Namespace","link":"Temporal-Client-Namespace.html#t:FailoverStatus"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Activity\">Activity</a> env a","name":"Activity","module":"Temporal.Activity","link":"Temporal-Activity.html#t:Activity"},{"display_html":"<a href=\"#v:heartbeat\">heartbeat</a> :: [<a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>] -&gt; <a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env ()","name":"heartbeat","module":"Temporal.Activity","link":"Temporal-Activity.html#v:heartbeat"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityInfo\">ActivityInfo</a> = <a href=\"#v:ActivityInfo\">ActivityInfo</a> {<ul class=\"subs\"><li><a href=\"#v:workflowNamespace\">workflowNamespace</a> :: <a href=\"Temporal-Workflow.html#t:Namespace\" title=\"Temporal.Workflow\">Namespace</a></li><li><a href=\"#v:workflowType\">workflowType</a> :: <a href=\"Temporal-Workflow.html#t:WorkflowType\" title=\"Temporal.Workflow\">WorkflowType</a></li><li><a href=\"#v:workflowId\">workflowId</a> :: <a href=\"Temporal-Worker.html#t:WorkflowId\" title=\"Temporal.Worker\">WorkflowId</a></li><li><a href=\"#v:runId\">runId</a> :: <a href=\"Temporal-Workflow.html#t:RunId\" title=\"Temporal.Workflow\">RunId</a></li><li><a href=\"#v:activityId\">activityId</a> :: <a href=\"Temporal-Workflow.html#t:ActivityId\" title=\"Temporal.Workflow\">ActivityId</a></li><li><a href=\"#v:activityType\">activityType</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:headerFields\">headerFields</a> :: <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:heartbeatDetails\">heartbeatDetails</a> :: <a href=\"https://hackage.haskell.org/package/vector-0.13.1.0/docs/Data-Vector.html#t:Vector\" title=\"Data.Vector\">Vector</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a></li><li><a href=\"#v:scheduledTime\">scheduledTime</a> :: <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:currentAttemptScheduledTime\">currentAttemptScheduledTime</a> :: <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:startedTime\">startedTime</a> :: <a href=\"https://hackage.haskell.org/package/time-1.12.2/docs/Data-Time-Clock-System.html#t:SystemTime\" title=\"Data.Time.Clock.System\">SystemTime</a></li><li><a href=\"#v:attempt\">attempt</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Word.html#t:Word32\" title=\"Data.Word\">Word32</a></li><li><a href=\"#v:scheduleToCloseTimeout\">scheduleToCloseTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:startToCloseTimeout\">startToCloseTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:heartbeatTimeout\">heartbeatTimeout</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Duration.html#t:Duration\" title=\"Temporal.Duration\">Duration</a></li><li><a href=\"#v:retryPolicy\">retryPolicy</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"Temporal-Workflow.html#t:RetryPolicy\" title=\"Temporal.Workflow\">RetryPolicy</a></li><li><a href=\"#v:isLocal\">isLocal</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li><li><a href=\"#v:taskToken\">taskToken</a> :: <a href=\"Temporal-Activity.html#t:TaskToken\" title=\"Temporal.Activity\">TaskToken</a></li></ul>}","name":"ActivityInfo workflowId runId activityType activityId workflowType scheduledTime retryPolicy scheduleToCloseTimeout startToCloseTimeout heartbeatTimeout attempt heartbeatDetails startedTime taskToken workflowNamespace currentAttemptScheduledTime headerFields isLocal ActivityInfo","module":"Temporal.Activity","link":"Temporal-Activity.html#t:ActivityInfo"},{"display_html":"<a href=\"#v:askActivityInfo\">askActivityInfo</a> :: <a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env <a href=\"Temporal-Activity.html#t:ActivityInfo\" title=\"Temporal.Activity\">ActivityInfo</a>","name":"askActivityInfo","module":"Temporal.Activity","link":"Temporal-Activity.html#v:askActivityInfo"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityCancelReason\">ActivityCancelReason</a><ul class=\"subs\"><li>= <a href=\"#v:NotFound\">NotFound</a></li><li>| <a href=\"#v:CancelRequested\">CancelRequested</a></li><li>| <a href=\"#v:Timeout\">Timeout</a></li><li>| <a href=\"#v:WorkerShutdown\">WorkerShutdown</a></li><li>| <a href=\"#v:UnknownCancellationReason\">UnknownCancellationReason</a></li></ul>","name":"ActivityCancelReason Timeout NotFound CancelRequested WorkerShutdown UnknownCancellationReason","module":"Temporal.Activity","link":"Temporal-Activity.html#t:ActivityCancelReason"},{"display_html":"<a href=\"#v:activityWorkflowClient\">activityWorkflowClient</a> :: <a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env <a href=\"Temporal-Client.html#t:WorkflowClient\" title=\"Temporal.Client\">WorkflowClient</a>","name":"activityWorkflowClient","module":"Temporal.Activity","link":"Temporal-Activity.html#v:activityWorkflowClient"},{"display_html":"<a href=\"#v:askActivityClient\">askActivityClient</a> :: <a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a>","name":"askActivityClient","module":"Temporal.Activity","link":"Temporal-Activity.html#v:askActivityClient"},{"display_html":"<a href=\"#v:provideActivity\">provideActivity</a> :: <span class=\"keyword\">forall</span> codec env f. (f <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f <a href=\"Temporal-Activity.html#t::-45--62-:\" title=\"Temporal.Activity\">:-&gt;:</a> <a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> (<a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env) f)), <a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f) (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> (<a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env) f)) =&gt; codec -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a> -&gt; f -&gt; <a href=\"Temporal-Activity.html#t:ProvidedActivity\" title=\"Temporal.Activity\">ProvidedActivity</a> env f","name":"provideActivity","module":"Temporal.Activity","link":"Temporal-Activity.html#v:provideActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ProvidedActivity\">ProvidedActivity</a> env f = <a href=\"#v:ProvidedActivity\">ProvidedActivity</a> {<ul class=\"subs\"><li><a href=\"#v:definition\">definition</a> :: <a href=\"Temporal-Activity.html#t:ActivityDefinition\" title=\"Temporal.Activity\">ActivityDefinition</a> env</li><li><a href=\"#v:reference\">reference</a> :: <a href=\"Temporal-Activity.html#t:KnownActivity\" title=\"Temporal.Activity\">KnownActivity</a> (<a href=\"Temporal-Payload.html#t:ArgsOf\" title=\"Temporal.Payload\">ArgsOf</a> f) (<a href=\"Temporal-Payload.html#t:ResultOf\" title=\"Temporal.Payload\">ResultOf</a> (<a href=\"Temporal-Activity.html#t:Activity\" title=\"Temporal.Activity\">Activity</a> env) f)</li></ul>}","name":"ProvidedActivity definition ProvidedActivity reference","module":"Temporal.Activity","link":"Temporal-Activity.html#t:ProvidedActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:KnownActivity\">KnownActivity</a> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) result = <a href=\"Temporal-Payload.html#t:FunctionSupportsCodec\" title=\"Temporal.Payload\">FunctionSupportsCodec</a> codec args result =&gt; <a href=\"#v:KnownActivity\">KnownActivity</a> {<ul class=\"subs\"><li><a href=\"#v:knownActivityCodec\">knownActivityCodec</a> :: codec</li><li><a href=\"#v:knownActivityName\">knownActivityName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li></ul>}","name":"KnownActivity KnownActivity knownActivityCodec knownActivityName","module":"Temporal.Activity","link":"Temporal-Activity.html#t:KnownActivity"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityDefinition\">ActivityDefinition</a> env = <a href=\"#v:ActivityDefinition\">ActivityDefinition</a> {<ul class=\"subs\"><li><a href=\"#v:activityName\">activityName</a> :: <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:activityRun\">activityRun</a> :: ActivityEnv env -&gt; <a href=\"Temporal-Interceptor.html#t:ExecuteActivityInput\" title=\"Temporal.Interceptor\">ExecuteActivityInput</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Prelude.html#t:IO\" title=\"Prelude\">IO</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Payload.html#t:Payload\" title=\"Temporal.Payload\">Payload</a>)</li></ul>}","name":"ActivityDefinition ActivityDefinition activityName activityRun","module":"Temporal.Activity","link":"Temporal-Activity.html#t:ActivityDefinition"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TaskToken\">TaskToken</a> = <a href=\"#v:TaskToken\">TaskToken</a> {<ul class=\"subs\"><li><a href=\"#v:rawTaskToken\">rawTaskToken</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a></li></ul>}","name":"TaskToken TaskToken rawTaskToken","module":"Temporal.Activity","link":"Temporal-Activity.html#t:TaskToken"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:CompleteAsync\">CompleteAsync</a> = <a href=\"#v:CompleteAsync\">CompleteAsync</a>","name":"CompleteAsync CompleteAsync","module":"Temporal.Activity","link":"Temporal-Activity.html#t:CompleteAsync"},{"display_html":"<a href=\"#v:completeAsync\">completeAsync</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; m ()","name":"completeAsync","module":"Temporal.Activity","link":"Temporal-Activity.html#v:completeAsync"},{"display_html":"<span class=\"keyword\">type family</span> (args :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]) <a href=\"#t::-45--62-:\">:-&gt;:</a> result <span class=\"keyword\">where ...</span>","name":":->:","module":"Temporal.Activity","link":"Temporal-Activity.html#t::-45--62-:"},{"display_html":"<a href=\"#v:discoverDefinitions\">discoverDefinitions</a> :: (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> env) =&gt; [<a href=\"Temporal-TH.html#t:SomeDict\" title=\"Temporal.TH\">SomeDict</a> <a href=\"Temporal-TH.html#t:WorkflowFn\" title=\"Temporal.TH\">WorkflowFn</a>] -&gt; [<a href=\"Temporal-TH.html#t:SomeDict\" title=\"Temporal.TH\">SomeDict</a> <a href=\"Temporal-TH.html#t:ActivityFn\" title=\"Temporal.TH\">ActivityFn</a>] -&gt; <a href=\"Temporal-Worker.html#t:Definitions\" title=\"Temporal.Worker\">Definitions</a> env","name":"discoverDefinitions","module":"Temporal.TH","link":"Temporal-TH.html#v:discoverDefinitions"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SomeDict\">SomeDict</a> = <a href=\"Temporal-TH.html#t:SomeDictOf\" title=\"Temporal.TH\">SomeDictOf</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"SomeDict","module":"Temporal.TH","link":"Temporal-TH.html#t:SomeDict"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeDictOf\">SomeDictOf</a> (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:SomeDictOf\">SomeDictOf</a> :: <span class=\"keyword\">forall</span> {k} (c :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Constraint\" title=\"Data.Kind\">Constraint</a>) (a :: k) (f :: k -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). c a =&gt; f a -&gt; <a href=\"Temporal-TH.html#t:SomeDictOf\" title=\"Temporal.TH\">SomeDictOf</a> f c</li></ul>","name":"SomeDictOf SomeDictOf","module":"Temporal.TH","link":"Temporal-TH.html#t:SomeDictOf"},{"display_html":"<a href=\"#v:registerActivity\">registerActivity</a> :: (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quote\" title=\"Language.Haskell.TH.Syntax\">Quote</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quasi\" title=\"Language.Haskell.TH.Syntax\">Quasi</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"registerActivity","module":"Temporal.TH","link":"Temporal-TH.html#v:registerActivity"},{"display_html":"<a href=\"#v:registerActivityWithOptions\">registerActivityWithOptions</a> :: <span class=\"keyword\">forall</span> codec m. (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quote\" title=\"Language.Haskell.TH.Syntax\">Quote</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quasi\" title=\"Language.Haskell.TH.Syntax\">Quasi</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> codec) =&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"Temporal-TH.html#t:ActivityConfig\" title=\"Temporal.TH\">ActivityConfig</a> codec -&gt; m [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"registerActivityWithOptions","module":"Temporal.TH","link":"Temporal-TH.html#v:registerActivityWithOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ActivityConfig\">ActivityConfig</a> c = <a href=\"#v:ActivityConfig\">ActivityConfig</a> {<ul class=\"subs\"><li><a href=\"#v:activityConfigNameOverride\">activityConfigNameOverride</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:activityConfigAliases\">activityConfigAliases</a> :: [<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>]</li><li><a href=\"#v:activityConfigCodec\">activityConfigCodec</a> :: c</li></ul>}","name":"ActivityConfig ActivityConfig activityConfigNameOverride activityConfigAliases activityConfigCodec","module":"Temporal.TH","link":"Temporal-TH.html#t:ActivityConfig"},{"display_html":"<a href=\"#v:defaultActivityConfig\">defaultActivityConfig</a> :: <a href=\"Temporal-TH.html#t:ActivityConfig\" title=\"Temporal.TH\">ActivityConfig</a> <a href=\"Temporal-Payload.html#t:JSON\" title=\"Temporal.Payload\">JSON</a>","name":"defaultActivityConfig","module":"Temporal.TH","link":"Temporal-TH.html#v:defaultActivityConfig"},{"display_html":"<a href=\"#v:registerWorkflow\">registerWorkflow</a> :: (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quote\" title=\"Language.Haskell.TH.Syntax\">Quote</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quasi\" title=\"Language.Haskell.TH.Syntax\">Quasi</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; m [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"registerWorkflow","module":"Temporal.TH","link":"Temporal-TH.html#v:registerWorkflow"},{"display_html":"<a href=\"#v:registerWorkflowWithOptions\">registerWorkflowWithOptions</a> :: <span class=\"keyword\">forall</span> codec m. (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quote\" title=\"Language.Haskell.TH.Syntax\">Quote</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quasi\" title=\"Language.Haskell.TH.Syntax\">Quasi</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> codec) =&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"Temporal-TH.html#t:WorkflowConfig\" title=\"Temporal.TH\">WorkflowConfig</a> codec -&gt; m [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"registerWorkflowWithOptions","module":"Temporal.TH","link":"Temporal-TH.html#v:registerWorkflowWithOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:WorkflowConfig\">WorkflowConfig</a> codec = <a href=\"#v:WorkflowConfig\">WorkflowConfig</a> {<ul class=\"subs\"><li><a href=\"#v:workflowConfigNameOverride\">workflowConfigNameOverride</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Maybe.html#t:Maybe\" title=\"Data.Maybe\">Maybe</a> <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:workflowConfigAliases\">workflowConfigAliases</a> :: [<a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a>]</li><li><a href=\"#v:workflowConfigCodec\">workflowConfigCodec</a> :: codec</li></ul>}","name":"WorkflowConfig WorkflowConfig workflowConfigNameOverride workflowConfigAliases workflowConfigCodec","module":"Temporal.TH","link":"Temporal-TH.html#t:WorkflowConfig"},{"display_html":"<a href=\"#v:defaultWorkflowConfig\">defaultWorkflowConfig</a> :: <a href=\"Temporal-TH.html#t:WorkflowConfig\" title=\"Temporal.TH\">WorkflowConfig</a> <a href=\"Temporal-Payload.html#t:JSON\" title=\"Temporal.Payload\">JSON</a>","name":"defaultWorkflowConfig","module":"Temporal.TH","link":"Temporal-TH.html#v:defaultWorkflowConfig"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Fn\">Fn</a> t <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:FnType\">FnType</a> t</li><li><a href=\"#v:fnName\">fnName</a> :: t -&gt; <a href=\"https://hackage.haskell.org/package/text-2.1.1/docs/Data-Text.html#t:Text\" title=\"Data.Text\">Text</a></li><li><a href=\"#v:fnDefinition\">fnDefinition</a> :: t -&gt; <a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a> =&gt; <a href=\"Temporal-TH.html#t:FnType\" title=\"Temporal.TH\">FnType</a> t</li><li><a href=\"#v:fnSing\">fnSing</a> :: t</li></ul>","name":"Fn FnType fnName fnDefinition fnSing","module":"Temporal.TH","link":"Temporal-TH.html#t:Fn"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Temporal-TH.html#t:Fn\" title=\"Temporal.TH\">Fn</a> f =&gt; <a href=\"#t:WorkflowFn\">WorkflowFn</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowCodec\">WorkflowCodec</a> f</li><li><a href=\"#v:workflowImpl\">workflowImpl</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:ProvidedWorkflow\" title=\"Temporal.Workflow\">ProvidedWorkflow</a> (<a href=\"Temporal-TH.html#t:FnType\" title=\"Temporal.TH\">FnType</a> f)</li><li><a href=\"#v:workflowConfig\">workflowConfig</a> :: f -&gt; <a href=\"Temporal-TH.html#t:WorkflowConfig\" title=\"Temporal.TH\">WorkflowConfig</a> (<a href=\"Temporal-TH.html#t:WorkflowCodec\" title=\"Temporal.TH\">WorkflowCodec</a> f)</li></ul>","name":"WorkflowFn WorkflowCodec workflowImpl workflowConfig $dmworkflowImpl $dmworkflowConfig","module":"Temporal.TH","link":"Temporal-TH.html#t:WorkflowFn"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowRef\">WorkflowRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowArgs\">WorkflowArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowResult\">WorkflowResult</a> f</li><li><a href=\"#v:workflowRef\">workflowRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> (<a href=\"Temporal-TH.html#t:WorkflowArgs\" title=\"Temporal.TH\">WorkflowArgs</a> f) (<a href=\"Temporal-TH.html#t:WorkflowResult\" title=\"Temporal.TH\">WorkflowResult</a> f)</li></ul>","name":"WorkflowRef WorkflowArgs WorkflowResult workflowRef","module":"Temporal.TH","link":"Temporal-TH.html#t:WorkflowRef"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowDef\">WorkflowDef</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:workflowDefinition\">workflowDefinition</a> :: a -&gt; <a href=\"Temporal-Workflow.html#t:WorkflowDefinition\" title=\"Temporal.Workflow\">WorkflowDefinition</a></li></ul>","name":"WorkflowDef workflowDefinition","module":"Temporal.TH","link":"Temporal-TH.html#t:WorkflowDef"},{"display_html":"<span class=\"keyword\">class</span> (<a href=\"Temporal-TH.html#t:Fn\" title=\"Temporal.TH\">Fn</a> f, <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Dynamic.html#t:Typeable\" title=\"Data.Dynamic\">Typeable</a> (FnActivityEnv (<a href=\"Temporal-TH.html#t:FnType\" title=\"Temporal.TH\">FnType</a> f))) =&gt; <a href=\"#t:ActivityFn\">ActivityFn</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityCodec\">ActivityCodec</a> f</li><li><a href=\"#v:activityEnvType\">activityEnvType</a> :: f -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Typeable.html#t:TypeRep\" title=\"Data.Typeable\">TypeRep</a></li><li><a href=\"#v:activityImpl\">activityImpl</a> :: f -&gt; <a href=\"Temporal-Activity.html#t:ProvidedActivity\" title=\"Temporal.Activity\">ProvidedActivity</a> (FnActivityEnv (<a href=\"Temporal-TH.html#t:FnType\" title=\"Temporal.TH\">FnType</a> f)) (<a href=\"Temporal-TH.html#t:FnType\" title=\"Temporal.TH\">FnType</a> f)</li><li><a href=\"#v:activityConfig\">activityConfig</a> :: f -&gt; <a href=\"Temporal-TH.html#t:ActivityConfig\" title=\"Temporal.TH\">ActivityConfig</a> (<a href=\"Temporal-TH.html#t:ActivityCodec\" title=\"Temporal.TH\">ActivityCodec</a> f)</li></ul>","name":"ActivityFn ActivityCodec activityEnvType activityImpl activityConfig $dmactivityEnvType $dmactivityImpl $dmactivityConfig","module":"Temporal.TH","link":"Temporal-TH.html#t:ActivityFn"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ActivityRef\">ActivityRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityArgs\">ActivityArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityResult\">ActivityResult</a> f</li><li><a href=\"#v:activityRef\">activityRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownActivity\" title=\"Temporal.Workflow\">KnownActivity</a> (<a href=\"Temporal-TH.html#t:ActivityArgs\" title=\"Temporal.TH\">ActivityArgs</a> f) (<a href=\"Temporal-TH.html#t:ActivityResult\" title=\"Temporal.TH\">ActivityResult</a> f)</li></ul>","name":"ActivityRef ActivityResult ActivityArgs activityRef","module":"Temporal.TH","link":"Temporal-TH.html#t:ActivityRef"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ActivityDef\">ActivityDef</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityDefinitionEnv\">ActivityDefinitionEnv</a> a</li><li><a href=\"#v:activityDefinition\">activityDefinition</a> :: a -&gt; <a href=\"Temporal-Activity.html#t:ActivityDefinition\" title=\"Temporal.Activity\">ActivityDefinition</a> (<a href=\"Temporal-TH.html#t:ActivityDefinitionEnv\" title=\"Temporal.TH\">ActivityDefinitionEnv</a> a)</li></ul>","name":"ActivityDef ActivityDefinitionEnv activityDefinition","module":"Temporal.TH","link":"Temporal-TH.html#t:ActivityDef"},{"display_html":"<a href=\"#v:fnSingE\">fnSingE</a> :: (<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quote\" title=\"Language.Haskell.TH.Syntax\">Quote</a> m, <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Quasi\" title=\"Language.Haskell.TH.Syntax\">Quasi</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; m <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"fnSingE","module":"Temporal.TH","link":"Temporal-TH.html#v:fnSingE"},{"display_html":"<a href=\"#v:fnSingDataAndConName\">fnSingDataAndConName</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a>","name":"fnSingDataAndConName","module":"Temporal.TH","link":"Temporal-TH.html#v:fnSingDataAndConName"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:ActivityImpl\">ActivityImpl</a> f = <a href=\"#v:ActivityImpl\">ActivityImpl</a> f","name":"ActivityImpl ActivityImpl","module":"Temporal.TH","link":"Temporal-TH.html#t:ActivityImpl"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WorkflowImpl\">WorkflowImpl</a> f = <a href=\"#v:WorkflowImpl\">WorkflowImpl</a> f","name":"WorkflowImpl WorkflowImpl","module":"Temporal.TH","link":"Temporal-TH.html#t:WorkflowImpl"},{"display_html":"<a href=\"#v:bringRegisteredTemporalFunctionsIntoScope\">bringRegisteredTemporalFunctionsIntoScope</a> :: <a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"https://hackage.haskell.org/package/template-haskell-2.22.0.0/docs/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"bringRegisteredTemporalFunctionsIntoScope","module":"Temporal.TH","link":"Temporal-TH.html#v:bringRegisteredTemporalFunctionsIntoScope"},{"display_html":"<a href=\"#v:refs\">refs</a> :: <a href=\"Temporal-Bundle.html#t:CanUseAsRefs\" title=\"Temporal.Bundle\">CanUseAsRefs</a> r codec =&gt; codec -&gt; <a href=\"Temporal-Bundle.html#t:Refs\" title=\"Temporal.Bundle\">Refs</a> r","name":"refs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:refs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Refs\">Refs</a> (f :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; k) = f <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a>","name":"Refs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Refs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Ref\">Ref</a> a b","name":"Ref","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Ref"},{"display_html":"<a href=\"#v:defs\">defs</a> :: <a href=\"Temporal-Bundle.html#t:CanUseAsDefs\" title=\"Temporal.Bundle\">CanUseAsDefs</a> f codec env =&gt; codec -&gt; <a href=\"Temporal-Bundle.html#t:Impl\" title=\"Temporal.Bundle\">Impl</a> f -&gt; <a href=\"Temporal-Bundle.html#t:Defs\" title=\"Temporal.Bundle\">Defs</a> env f","name":"defs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:defs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Defs\">Defs</a> env (f :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; k) = f (<a href=\"Temporal-Bundle.html#t:Def\" title=\"Temporal.Bundle\">Def</a> env)","name":"Defs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Defs"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Def\">Def</a> a b c","name":"Def","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Def"},{"display_html":"<a href=\"#v:collectTemporalDefinitions\">collectTemporalDefinitions</a> :: <span class=\"keyword\">forall</span> rec actEnv (f :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>). (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> rec, <a href=\"Data-EvalRecord.html#t:AllRecF\" title=\"Data.EvalRecord\">AllRecF</a> (<a href=\"Temporal-Worker.html#t:ToDefinitions\" title=\"Temporal.Worker\">ToDefinitions</a> actEnv) f rec) =&gt; rec f -&gt; <a href=\"Temporal-Worker.html#t:Definitions\" title=\"Temporal.Worker\">Definitions</a> actEnv","name":"collectTemporalDefinitions","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:collectTemporalDefinitions"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Impl\">Impl</a> (f :: (a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; k) = f (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:Pure\" title=\"Fcf.Combinators\">Pure</a> :: a -&gt; a -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"Impl","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Impl"},{"display_html":"<a href=\"#v:inWorkflowProxies\">inWorkflowProxies</a> :: <span class=\"keyword\">forall</span> synchronicity rec. (<a href=\"Temporal-Workflow.html#t:RequireCallStack\" title=\"Temporal.Workflow\">RequireCallStack</a>, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> rec, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> (<a href=\"Data-EvalRecord.html#t:ClassF\" title=\"Data.EvalRecord\">ClassF</a> (<a href=\"Temporal-Bundle.html#t:UseAsInWorkflowProxy\" title=\"Temporal.Bundle\">UseAsInWorkflowProxy</a> synchronicity) <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a>) rec, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec) =&gt; synchronicity -&gt; rec (<a href=\"Temporal-Bundle.html#t:RefStartOptions\" title=\"Temporal.Bundle\">RefStartOptions</a> <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a>) -&gt; rec <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a> -&gt; rec (<a href=\"Temporal-Bundle.html#t:InWorkflowProxies\" title=\"Temporal.Bundle\">InWorkflowProxies</a> synchronicity <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a>)","name":"inWorkflowProxies","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:inWorkflowProxies"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:InWorkflowProxies\">InWorkflowProxies</a> a b c","name":"InWorkflowProxies","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:InWorkflowProxies"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:InWorkflowProxyOptions\">InWorkflowProxyOptions</a> = <a href=\"Temporal-Bundle.html#t:RefStartOptions\" title=\"Temporal.Bundle\">RefStartOptions</a> <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:-60--61--60-\" title=\"Fcf.Combinators\">&lt;=&lt;</a> <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a>","name":"InWorkflowProxyOptions","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:InWorkflowProxyOptions"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:RefStartOptions\">RefStartOptions</a> a b","name":"RefStartOptions","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:RefStartOptions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:UseAsInWorkflowProxy\">UseAsInWorkflowProxy</a> synchronicity ref <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:useAsInWorkflowProxy\">useAsInWorkflowProxy</a> :: synchronicity -&gt; ref -&gt; (<a href=\"Temporal-Bundle.html#t:RefStartOptions\" title=\"Temporal.Bundle\">RefStartOptions</a> <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> ref) -&gt; <a href=\"Temporal-Bundle.html#t:InWorkflowProxies\" title=\"Temporal.Bundle\">InWorkflowProxies</a> synchronicity <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> ref</li></ul>","name":"UseAsInWorkflowProxy useAsInWorkflowProxy","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:UseAsInWorkflowProxy"},{"display_html":"<a href=\"#v:provideDefaultOptions\">provideDefaultOptions</a> :: (<a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> rec, <a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> rec, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> <a href=\"Temporal-Bundle.html#t:FieldToStartOptionDefaults\" title=\"Temporal.Bundle\">FieldToStartOptionDefaults</a> rec) =&gt; <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; rec <a href=\"Temporal-Bundle.html#t:RefStartOptions\" title=\"Temporal.Bundle\">RefStartOptions</a>","name":"provideDefaultOptions","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:provideDefaultOptions"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:FieldToStartOptionDefaults\">FieldToStartOptionDefaults</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:refStartOptionsDefaults\">refStartOptionsDefaults</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> f -&gt; <a href=\"Temporal-Workflow.html#t:StartActivityOptions\" title=\"Temporal.Workflow\">StartActivityOptions</a> -&gt; <a href=\"Temporal-Workflow.html#t:StartChildWorkflowOptions\" title=\"Temporal.Workflow\">StartChildWorkflowOptions</a> -&gt; <a href=\"Temporal-Bundle.html#t:RefStartOptionsType\" title=\"Temporal.Bundle\">RefStartOptionsType</a> f</li></ul>","name":"FieldToStartOptionDefaults refStartOptionsDefaults","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:FieldToStartOptionDefaults"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:RefStartOptionsType\">RefStartOptionsType</a> f <span class=\"keyword\">where ...</span>","name":"RefStartOptionsType","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:RefStartOptionsType"},{"display_html":"<a href=\"#v:withTaskQueues\">withTaskQueues</a> :: (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m, <a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Bundle.html#t:WorkerConfigs\" title=\"Temporal.Bundle\">WorkerConfigs</a> env rec -&gt; (<a href=\"Temporal-Bundle.html#t:Workers\" title=\"Temporal.Bundle\">Workers</a> env rec -&gt; m a) -&gt; m a","name":"withTaskQueues","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:withTaskQueues"},{"display_html":"<a href=\"#v:linkTaskQueues\">linkTaskQueues</a> :: <span class=\"keyword\">forall</span> m rec env. (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m) =&gt; <a href=\"Temporal-Bundle.html#t:Workers\" title=\"Temporal.Bundle\">Workers</a> env rec -&gt; m ()","name":"linkTaskQueues","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:linkTaskQueues"},{"display_html":"<a href=\"#v:startTaskQueues\">startTaskQueues</a> :: (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m, <a href=\"https://hackage.haskell.org/package/exceptions-0.10.7/docs/Control-Monad-Catch.html#t:MonadCatch\" title=\"Control.Monad.Catch\">MonadCatch</a> m) =&gt; <a href=\"https://hackage.haskell.org/package/temporal-sdk-core-0.1.0.0/docs/Temporal-Core-Client.html#t:Client\" title=\"Temporal.Core.Client\">Client</a> -&gt; <a href=\"Temporal-Bundle.html#t:WorkerConfigs\" title=\"Temporal.Bundle\">WorkerConfigs</a> env rec -&gt; m (<a href=\"Temporal-Bundle.html#t:Workers\" title=\"Temporal.Bundle\">Workers</a> env rec)","name":"startTaskQueues","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:startTaskQueues"},{"display_html":"<a href=\"#v:shutdownTaskQueues\">shutdownTaskQueues</a> :: <span class=\"keyword\">forall</span> m rec env. (<a href=\"Data-EvalRecord.html#t:TraversableRec\" title=\"Data.EvalRecord\">TraversableRec</a> rec, <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadUnliftIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadUnliftIO</a> m) =&gt; <a href=\"Temporal-Bundle.html#t:Workers\" title=\"Temporal.Bundle\">Workers</a> env rec -&gt; m (rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:ConstFn\" title=\"Fcf.Combinators\">ConstFn</a> (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated.html#t:SomeException\" title=\"Control.Exception.Annotated\">SomeException</a> ()) :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>))","name":"shutdownTaskQueues","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:shutdownTaskQueues"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:WorkerConfigs\">WorkerConfigs</a> env (rec :: (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; k) = rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:ConstFn\" title=\"Fcf.Combinators\">ConstFn</a> (<a href=\"Temporal-Worker.html#t:WorkerConfig\" title=\"Temporal.Worker\">WorkerConfig</a> env) :: b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"WorkerConfigs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:WorkerConfigs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Workers\">Workers</a> env (rec :: (b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; k) = rec (<a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Combinators.html#t:ConstFn\" title=\"Fcf.Combinators\">ConstFn</a> (<a href=\"Temporal-Worker.html#t:Worker\" title=\"Temporal.Worker\">Worker</a> env) :: b -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>)","name":"Workers","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Workers"},{"display_html":"<a href=\"#v:coerceRec\">coerceRec</a> :: <span class=\"keyword\">forall</span> (c :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (d :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) rec. <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> (<a href=\"Temporal-Bundle.html#t:Equate\" title=\"Temporal.Bundle\">Equate</a> c d) rec =&gt; rec c -&gt; rec d","name":"coerceRec","module":"Temporal.Bundle","link":"Temporal-Bundle.html#v:coerceRec"},{"display_html":"<span class=\"keyword\">class</span> (c <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Type-Equality.html#t:-126-\" title=\"Data.Type.Equality\">~</a> (d <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> a) =&gt; <a href=\"#t:Equate\">Equate</a> (c :: k1 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) (d :: k1 -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> k) (a :: k1)","name":"Equate","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:Equate"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ProxySync\">ProxySync</a> = <a href=\"#v:ProxySync\">ProxySync</a>","name":"ProxySync ProxySync","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:ProxySync"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ProxyAsync\">ProxyAsync</a> = <a href=\"#v:ProxyAsync\">ProxyAsync</a>","name":"ProxyAsync ProxyAsync","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:ProxyAsync"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CanUseAsRefs\">CanUseAsRefs</a> (f :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) codec = (<a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> f, <a href=\"Data-EvalRecord.html#t:WitnessFieldTypes\" title=\"Data.EvalRecord\">WitnessFieldTypes</a> f, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> (<a href=\"Temporal-Bundle.html#t:RefFromFunction\" title=\"Temporal.Bundle\">RefFromFunction</a> codec) f, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> f)","name":"CanUseAsRefs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:CanUseAsRefs"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CanUseAsDefs\">CanUseAsDefs</a> (f :: (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:Exp\" title=\"Fcf.Core\">Exp</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) codec env = (<a href=\"Data-EvalRecord.html#t:ConstraintsRec\" title=\"Data.EvalRecord\">ConstraintsRec</a> f, <a href=\"Data-EvalRecord.html#t:WitnessFieldTypes\" title=\"Data.EvalRecord\">WitnessFieldTypes</a> f, <a href=\"Data-EvalRecord.html#t:AllRec\" title=\"Data.EvalRecord\">AllRec</a> (<a href=\"Temporal-Bundle.html#t:DefFromFunction\" title=\"Temporal.Bundle\">DefFromFunction</a> codec env) f, <a href=\"Data-EvalRecord.html#t:ApplicativeRec\" title=\"Data.EvalRecord\">ApplicativeRec</a> f)","name":"CanUseAsDefs","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:CanUseAsDefs"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Temporal-Bundle.html#t:RefFromFunction-39-\" title=\"Temporal.Bundle\">RefFromFunction'</a> codec f f =&gt; <a href=\"#t:RefFromFunction\">RefFromFunction</a> codec f","name":"RefFromFunction","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:RefFromFunction"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:RefFromFunction-39-\">RefFromFunction'</a> codec f original <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:refFromFunction\">refFromFunction</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> f -&gt; codec -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> original -&gt; <a href=\"Temporal-Bundle.html#t:Ref\" title=\"Temporal.Bundle\">Ref</a> <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> original</li></ul>","name":"RefFromFunction' refFromFunction","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:RefFromFunction-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"Temporal-Bundle.html#t:DefFromFunction-39-\" title=\"Temporal.Bundle\">DefFromFunction'</a> codec env f f =&gt; <a href=\"#t:DefFromFunction\">DefFromFunction</a> codec env f","name":"DefFromFunction","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:DefFromFunction"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:DefFromFunction-39-\">DefFromFunction'</a> codec env f original <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:defFromFunction\">defFromFunction</a> :: <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Proxy.html#t:Proxy\" title=\"Data.Proxy\">Proxy</a> f -&gt; codec -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; original -&gt; <a href=\"Temporal-Bundle.html#t:Def\" title=\"Temporal.Bundle\">Def</a> env <a href=\"https://hackage.haskell.org/package/first-class-families-0.8.1.0/docs/Fcf-Core.html#t:-64--64-\" title=\"Fcf.Core\">@@</a> original</li></ul>","name":"DefFromFunction' defFromFunction","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:DefFromFunction-39-"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:WorkflowRef\">WorkflowRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowArgs\">WorkflowArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:WorkflowResult\">WorkflowResult</a> f</li><li><a href=\"#v:workflowRef\">workflowRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownWorkflow\" title=\"Temporal.Workflow\">KnownWorkflow</a> (<a href=\"Temporal-Bundle.html#t:WorkflowArgs\" title=\"Temporal.Bundle\">WorkflowArgs</a> f) (<a href=\"Temporal-Bundle.html#t:WorkflowResult\" title=\"Temporal.Bundle\">WorkflowResult</a> f)</li></ul>","name":"WorkflowRef WorkflowArgs WorkflowResult workflowRef","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:WorkflowRef"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:ActivityRef\">ActivityRef</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityArgs\">ActivityArgs</a> f :: [<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>]</li><li><span class=\"keyword\">type</span> <a href=\"#t:ActivityResult\">ActivityResult</a> f</li><li><a href=\"#v:activityRef\">activityRef</a> :: f -&gt; <a href=\"Temporal-Workflow.html#t:KnownActivity\" title=\"Temporal.Workflow\">KnownActivity</a> (<a href=\"Temporal-Bundle.html#t:ActivityArgs\" title=\"Temporal.Bundle\">ActivityArgs</a> f) (<a href=\"Temporal-Bundle.html#t:ActivityResult\" title=\"Temporal.Bundle\">ActivityResult</a> f)</li></ul>","name":"ActivityRef ActivityResult ActivityArgs activityRef","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:ActivityRef"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:InnerActivityResult\">InnerActivityResult</a> f <span class=\"keyword\">where ...</span>","name":"InnerActivityResult","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:InnerActivityResult"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ApplyDef\">ApplyDef</a> f <span class=\"keyword\">where ...</span>","name":"ApplyDef","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:ApplyDef"},{"display_html":"<span class=\"keyword\">type family</span> <a href=\"#t:ApplyRef\">ApplyRef</a> original f <span class=\"keyword\">where ...</span>","name":"ApplyRef","module":"Temporal.Bundle","link":"Temporal-Bundle.html#t:ApplyRef"}]