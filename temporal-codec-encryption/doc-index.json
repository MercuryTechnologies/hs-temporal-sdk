[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Key\">Key</a>","name":"Key","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#t:Key"},{"display_html":"<a href=\"#v:keyFromBytes\">keyFromBytes</a> :: <a href=\"https://hackage.haskell.org/package/memory-0.18.0/docs/Data-ByteArray.html#t:ScrubbedBytes\" title=\"Data.ByteArray\">ScrubbedBytes</a> -&gt; <a href=\"Temporal-Codec-Encryption.html#t:Key\" title=\"Temporal.Codec.Encryption\">Key</a>","name":"keyFromBytes","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:keyFromBytes"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Cipher\">Cipher</a>","name":"Cipher","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#t:Cipher"},{"display_html":"<a href=\"#v:keyToBase64\">keyToBase64</a> :: <a href=\"Temporal-Codec-Encryption.html#t:Key\" title=\"Temporal.Codec.Encryption\">Key</a> -&gt; <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>","name":"keyToBase64","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:keyToBase64"},{"display_html":"<a href=\"#v:keyFromBase64\">keyFromBase64</a> :: <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Codec-Encryption.html#t:Key\" title=\"Temporal.Codec.Encryption\">Key</a>","name":"keyFromBase64","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:keyFromBase64"},{"display_html":"<a href=\"#v:genSecretKey\">genSecretKey</a> :: <a href=\"https://hackage.haskell.org/package/crypton-0.34/docs/Crypto-Random-Types.html#t:MonadRandom\" title=\"Crypto.Random.Types\">MonadRandom</a> m =&gt; m <a href=\"Temporal-Codec-Encryption.html#t:Key\" title=\"Temporal.Codec.Encryption\">Key</a>","name":"genSecretKey","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:genSecretKey"},{"display_html":"<a href=\"#v:initCipher\">initCipher</a> :: <a href=\"Temporal-Codec-Encryption.html#t:Key\" title=\"Temporal.Codec.Encryption\">Key</a> -&gt; <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Codec-Encryption.html#t:Cipher\" title=\"Temporal.Codec.Encryption\">Cipher</a>","name":"initCipher","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:initCipher"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Encrypted\">Encrypted</a>","name":"Encrypted","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#t:Encrypted"},{"display_html":"<a href=\"#v:mkEncryptionCodec\">mkEncryptionCodec</a> :: <a href=\"https://hackage.haskell.org/package/annotated-exception-0.2.0.5/docs/Control-Exception-Annotated-UnliftIO.html#t:MonadIO\" title=\"Control.Exception.Annotated.UnliftIO\">MonadIO</a> m =&gt; (<a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a>, <a href=\"Temporal-Codec-Encryption.html#t:Cipher\" title=\"Temporal.Codec.Encryption\">Cipher</a>) -&gt; <a href=\"https://hackage.haskell.org/package/containers-0.7/docs/Data-Map-Strict.html#t:Map\" title=\"Data.Map.Strict\">Map</a> <a href=\"https://hackage.haskell.org/package/bytestring-0.12.1.0/docs/Data-ByteString.html#t:ByteString\" title=\"Data.ByteString\">ByteString</a> <a href=\"Temporal-Codec-Encryption.html#t:Cipher\" title=\"Temporal.Codec.Encryption\">Cipher</a> -&gt; m (<a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-Either.html#t:Either\" title=\"Data.Either\">Either</a> <a href=\"https://hackage.haskell.org/package/base-4.20.0.0/docs/Data-String.html#t:String\" title=\"Data.String\">String</a> <a href=\"Temporal-Codec-Encryption.html#t:Encrypted\" title=\"Temporal.Codec.Encryption\">Encrypted</a>)","name":"mkEncryptionCodec","module":"Temporal.Codec.Encryption","link":"Temporal-Codec-Encryption.html#v:mkEncryptionCodec"}]