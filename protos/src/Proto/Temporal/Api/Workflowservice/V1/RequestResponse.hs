{- This file was auto-generated from temporal/api/workflowservice/v1/request_response.proto by the proto-lens-protoc program. -}
{-# LANGUAGE ScopedTypeVariables, DataKinds, TypeFamilies, UndecidableInstances, GeneralizedNewtypeDeriving, MultiParamTypeClasses, FlexibleContexts, FlexibleInstances, PatternSynonyms, MagicHash, NoImplicitPrelude, DataKinds, BangPatterns, TypeApplications, OverloadedStrings, DerivingStrategies#-}
{-# OPTIONS_GHC -Wno-unused-imports#-}
{-# OPTIONS_GHC -Wno-duplicate-exports#-}
{-# OPTIONS_GHC -Wno-dodgy-exports#-}
module Proto.Temporal.Api.Workflowservice.V1.RequestResponse (
        CountWorkflowExecutionsRequest(),
        CountWorkflowExecutionsResponse(),
        CountWorkflowExecutionsResponse'AggregationGroup(),
        CreateScheduleRequest(), CreateScheduleResponse(),
        CreateWorkflowRuleRequest(), CreateWorkflowRuleResponse(),
        DeleteScheduleRequest(), DeleteScheduleResponse(),
        DeleteWorkerDeploymentRequest(), DeleteWorkerDeploymentResponse(),
        DeleteWorkerDeploymentVersionRequest(),
        DeleteWorkerDeploymentVersionResponse(),
        DeleteWorkflowExecutionRequest(),
        DeleteWorkflowExecutionResponse(), DeleteWorkflowRuleRequest(),
        DeleteWorkflowRuleResponse(), DeprecateNamespaceRequest(),
        DeprecateNamespaceResponse(), DescribeBatchOperationRequest(),
        DescribeBatchOperationResponse(), DescribeDeploymentRequest(),
        DescribeDeploymentResponse(), DescribeNamespaceRequest(),
        DescribeNamespaceResponse(), DescribeScheduleRequest(),
        DescribeScheduleResponse(), DescribeTaskQueueRequest(),
        DescribeTaskQueueResponse(),
        DescribeTaskQueueResponse'VersionsInfoEntry(),
        DescribeWorkerDeploymentRequest(),
        DescribeWorkerDeploymentResponse(),
        DescribeWorkerDeploymentVersionRequest(),
        DescribeWorkerDeploymentVersionResponse(),
        DescribeWorkflowExecutionRequest(),
        DescribeWorkflowExecutionResponse(), DescribeWorkflowRuleRequest(),
        DescribeWorkflowRuleResponse(), ExecuteMultiOperationRequest(),
        ExecuteMultiOperationRequest'Operation(),
        ExecuteMultiOperationRequest'Operation'Operation(..),
        _ExecuteMultiOperationRequest'Operation'StartWorkflow,
        _ExecuteMultiOperationRequest'Operation'UpdateWorkflow,
        ExecuteMultiOperationResponse(),
        ExecuteMultiOperationResponse'Response(),
        ExecuteMultiOperationResponse'Response'Response(..),
        _ExecuteMultiOperationResponse'Response'StartWorkflow,
        _ExecuteMultiOperationResponse'Response'UpdateWorkflow,
        GetClusterInfoRequest(), GetClusterInfoResponse(),
        GetClusterInfoResponse'SupportedClientsEntry(),
        GetCurrentDeploymentRequest(), GetCurrentDeploymentResponse(),
        GetDeploymentReachabilityRequest(),
        GetDeploymentReachabilityResponse(), GetSearchAttributesRequest(),
        GetSearchAttributesResponse(),
        GetSearchAttributesResponse'KeysEntry(), GetSystemInfoRequest(),
        GetSystemInfoResponse(), GetSystemInfoResponse'Capabilities(),
        GetWorkerBuildIdCompatibilityRequest(),
        GetWorkerBuildIdCompatibilityResponse(),
        GetWorkerTaskReachabilityRequest(),
        GetWorkerTaskReachabilityResponse(),
        GetWorkerVersioningRulesRequest(),
        GetWorkerVersioningRulesResponse(),
        GetWorkflowExecutionHistoryRequest(),
        GetWorkflowExecutionHistoryResponse(),
        GetWorkflowExecutionHistoryReverseRequest(),
        GetWorkflowExecutionHistoryReverseResponse(),
        ListArchivedWorkflowExecutionsRequest(),
        ListArchivedWorkflowExecutionsResponse(),
        ListBatchOperationsRequest(), ListBatchOperationsResponse(),
        ListClosedWorkflowExecutionsRequest(),
        ListClosedWorkflowExecutionsRequest'Filters(..),
        _ListClosedWorkflowExecutionsRequest'ExecutionFilter,
        _ListClosedWorkflowExecutionsRequest'TypeFilter,
        _ListClosedWorkflowExecutionsRequest'StatusFilter,
        ListClosedWorkflowExecutionsResponse(), ListDeploymentsRequest(),
        ListDeploymentsResponse(), ListNamespacesRequest(),
        ListNamespacesResponse(), ListOpenWorkflowExecutionsRequest(),
        ListOpenWorkflowExecutionsRequest'Filters(..),
        _ListOpenWorkflowExecutionsRequest'ExecutionFilter,
        _ListOpenWorkflowExecutionsRequest'TypeFilter,
        ListOpenWorkflowExecutionsResponse(),
        ListScheduleMatchingTimesRequest(),
        ListScheduleMatchingTimesResponse(), ListSchedulesRequest(),
        ListSchedulesResponse(), ListTaskQueuePartitionsRequest(),
        ListTaskQueuePartitionsResponse(), ListWorkerDeploymentsRequest(),
        ListWorkerDeploymentsResponse(),
        ListWorkerDeploymentsResponse'WorkerDeploymentSummary(),
        ListWorkflowExecutionsRequest(), ListWorkflowExecutionsResponse(),
        ListWorkflowRulesRequest(), ListWorkflowRulesResponse(),
        PatchScheduleRequest(), PatchScheduleResponse(),
        PauseActivityRequest(), PauseActivityRequest'Activity(..),
        _PauseActivityRequest'Id, _PauseActivityRequest'Type,
        PauseActivityResponse(), PollActivityTaskQueueRequest(),
        PollActivityTaskQueueResponse(), PollNexusTaskQueueRequest(),
        PollNexusTaskQueueResponse(), PollWorkflowExecutionUpdateRequest(),
        PollWorkflowExecutionUpdateResponse(),
        PollWorkflowTaskQueueRequest(), PollWorkflowTaskQueueResponse(),
        PollWorkflowTaskQueueResponse'QueriesEntry(),
        QueryWorkflowRequest(), QueryWorkflowResponse(),
        RecordActivityTaskHeartbeatByIdRequest(),
        RecordActivityTaskHeartbeatByIdResponse(),
        RecordActivityTaskHeartbeatRequest(),
        RecordActivityTaskHeartbeatResponse(), RegisterNamespaceRequest(),
        RegisterNamespaceRequest'DataEntry(), RegisterNamespaceResponse(),
        RequestCancelWorkflowExecutionRequest(),
        RequestCancelWorkflowExecutionResponse(), ResetActivityRequest(),
        ResetActivityRequest'Activity(..), _ResetActivityRequest'Id,
        _ResetActivityRequest'Type, ResetActivityResponse(),
        ResetStickyTaskQueueRequest(), ResetStickyTaskQueueResponse(),
        ResetWorkflowExecutionRequest(), ResetWorkflowExecutionResponse(),
        RespondActivityTaskCanceledByIdRequest(),
        RespondActivityTaskCanceledByIdResponse(),
        RespondActivityTaskCanceledRequest(),
        RespondActivityTaskCanceledResponse(),
        RespondActivityTaskCompletedByIdRequest(),
        RespondActivityTaskCompletedByIdResponse(),
        RespondActivityTaskCompletedRequest(),
        RespondActivityTaskCompletedResponse(),
        RespondActivityTaskFailedByIdRequest(),
        RespondActivityTaskFailedByIdResponse(),
        RespondActivityTaskFailedRequest(),
        RespondActivityTaskFailedResponse(),
        RespondNexusTaskCompletedRequest(),
        RespondNexusTaskCompletedResponse(),
        RespondNexusTaskFailedRequest(), RespondNexusTaskFailedResponse(),
        RespondQueryTaskCompletedRequest(),
        RespondQueryTaskCompletedResponse(),
        RespondWorkflowTaskCompletedRequest(),
        RespondWorkflowTaskCompletedRequest'Capabilities(),
        RespondWorkflowTaskCompletedRequest'QueryResultsEntry(),
        RespondWorkflowTaskCompletedResponse(),
        RespondWorkflowTaskFailedRequest(),
        RespondWorkflowTaskFailedResponse(),
        ScanWorkflowExecutionsRequest(), ScanWorkflowExecutionsResponse(),
        SetCurrentDeploymentRequest(), SetCurrentDeploymentResponse(),
        SetWorkerDeploymentCurrentVersionRequest(),
        SetWorkerDeploymentCurrentVersionResponse(),
        SetWorkerDeploymentRampingVersionRequest(),
        SetWorkerDeploymentRampingVersionResponse(),
        ShutdownWorkerRequest(), ShutdownWorkerResponse(),
        SignalWithStartWorkflowExecutionRequest(),
        SignalWithStartWorkflowExecutionResponse(),
        SignalWorkflowExecutionRequest(),
        SignalWorkflowExecutionResponse(), StartBatchOperationRequest(),
        StartBatchOperationRequest'Operation(..),
        _StartBatchOperationRequest'TerminationOperation,
        _StartBatchOperationRequest'SignalOperation,
        _StartBatchOperationRequest'CancellationOperation,
        _StartBatchOperationRequest'DeletionOperation,
        _StartBatchOperationRequest'ResetOperation,
        _StartBatchOperationRequest'UpdateWorkflowOptionsOperation,
        _StartBatchOperationRequest'UnpauseActivitiesOperation,
        StartBatchOperationResponse(), StartWorkflowExecutionRequest(),
        StartWorkflowExecutionResponse(), StopBatchOperationRequest(),
        StopBatchOperationResponse(), TerminateWorkflowExecutionRequest(),
        TerminateWorkflowExecutionResponse(), TriggerWorkflowRuleRequest(),
        TriggerWorkflowRuleRequest'Rule(..),
        _TriggerWorkflowRuleRequest'Id, _TriggerWorkflowRuleRequest'Spec,
        TriggerWorkflowRuleResponse(), UnpauseActivityRequest(),
        UnpauseActivityRequest'Activity(..), _UnpauseActivityRequest'Id,
        _UnpauseActivityRequest'Type, _UnpauseActivityRequest'UnpauseAll,
        UnpauseActivityResponse(), UpdateActivityOptionsRequest(),
        UpdateActivityOptionsRequest'Activity(..),
        _UpdateActivityOptionsRequest'Id,
        _UpdateActivityOptionsRequest'Type,
        UpdateActivityOptionsResponse(), UpdateNamespaceRequest(),
        UpdateNamespaceResponse(), UpdateScheduleRequest(),
        UpdateScheduleResponse(),
        UpdateWorkerBuildIdCompatibilityRequest(),
        UpdateWorkerBuildIdCompatibilityRequest'Operation(..),
        _UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet,
        _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId,
        _UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId,
        _UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet,
        _UpdateWorkerBuildIdCompatibilityRequest'MergeSets',
        UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion(),
        UpdateWorkerBuildIdCompatibilityRequest'MergeSets(),
        UpdateWorkerBuildIdCompatibilityResponse(),
        UpdateWorkerDeploymentVersionMetadataRequest(),
        UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry(),
        UpdateWorkerDeploymentVersionMetadataResponse(),
        UpdateWorkerVersioningRulesRequest(),
        UpdateWorkerVersioningRulesRequest'Operation(..),
        _UpdateWorkerVersioningRulesRequest'InsertAssignmentRule,
        _UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule,
        _UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule,
        _UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule,
        _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule,
        _UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule,
        _UpdateWorkerVersioningRulesRequest'CommitBuildId',
        UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule(),
        UpdateWorkerVersioningRulesRequest'CommitBuildId(),
        UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule(),
        UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule(),
        UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule(),
        UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule(),
        UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule(),
        UpdateWorkerVersioningRulesResponse(),
        UpdateWorkflowExecutionOptionsRequest(),
        UpdateWorkflowExecutionOptionsResponse(),
        UpdateWorkflowExecutionRequest(), UpdateWorkflowExecutionResponse()
    ) where
import qualified Data.ProtoLens.Runtime.Control.DeepSeq as Control.DeepSeq
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Prism as Data.ProtoLens.Prism
import qualified Data.ProtoLens.Runtime.Prelude as Prelude
import qualified Data.ProtoLens.Runtime.Data.Int as Data.Int
import qualified Data.ProtoLens.Runtime.Data.Monoid as Data.Monoid
import qualified Data.ProtoLens.Runtime.Data.Word as Data.Word
import qualified Data.ProtoLens.Runtime.Data.ProtoLens as Data.ProtoLens
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Bytes as Data.ProtoLens.Encoding.Bytes
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Growing as Data.ProtoLens.Encoding.Growing
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Parser.Unsafe as Data.ProtoLens.Encoding.Parser.Unsafe
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Wire as Data.ProtoLens.Encoding.Wire
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Field as Data.ProtoLens.Field
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Message.Enum as Data.ProtoLens.Message.Enum
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Service.Types as Data.ProtoLens.Service.Types
import qualified Data.ProtoLens.Runtime.Lens.Family2 as Lens.Family2
import qualified Data.ProtoLens.Runtime.Lens.Family2.Unchecked as Lens.Family2.Unchecked
import qualified Data.ProtoLens.Runtime.Data.Text as Data.Text
import qualified Data.ProtoLens.Runtime.Data.Map as Data.Map
import qualified Data.ProtoLens.Runtime.Data.ByteString as Data.ByteString
import qualified Data.ProtoLens.Runtime.Data.ByteString.Char8 as Data.ByteString.Char8
import qualified Data.ProtoLens.Runtime.Data.Text.Encoding as Data.Text.Encoding
import qualified Data.ProtoLens.Runtime.Data.Vector as Data.Vector
import qualified Data.ProtoLens.Runtime.Data.Vector.Generic as Data.Vector.Generic
import qualified Data.ProtoLens.Runtime.Data.Vector.Unboxed as Data.Vector.Unboxed
import qualified Data.ProtoLens.Runtime.Text.Read as Text.Read
import qualified Proto.Google.Protobuf.Duration
import qualified Proto.Google.Protobuf.FieldMask
import qualified Proto.Google.Protobuf.Timestamp
import qualified Proto.Temporal.Api.Activity.V1.Message
import qualified Proto.Temporal.Api.Batch.V1.Message
import qualified Proto.Temporal.Api.Command.V1.Message
import qualified Proto.Temporal.Api.Common.V1.Message
import qualified Proto.Temporal.Api.Deployment.V1.Message
import qualified Proto.Temporal.Api.Enums.V1.BatchOperation
import qualified Proto.Temporal.Api.Enums.V1.Common
import qualified Proto.Temporal.Api.Enums.V1.Deployment
import qualified Proto.Temporal.Api.Enums.V1.FailedCause
import qualified Proto.Temporal.Api.Enums.V1.Namespace
import qualified Proto.Temporal.Api.Enums.V1.Query
import qualified Proto.Temporal.Api.Enums.V1.Reset
import qualified Proto.Temporal.Api.Enums.V1.TaskQueue
import qualified Proto.Temporal.Api.Enums.V1.Update
import qualified Proto.Temporal.Api.Enums.V1.Workflow
import qualified Proto.Temporal.Api.Failure.V1.Message
import qualified Proto.Temporal.Api.Filter.V1.Message
import qualified Proto.Temporal.Api.History.V1.Message
import qualified Proto.Temporal.Api.Namespace.V1.Message
import qualified Proto.Temporal.Api.Nexus.V1.Message
import qualified Proto.Temporal.Api.Protocol.V1.Message
import qualified Proto.Temporal.Api.Query.V1.Message
import qualified Proto.Temporal.Api.Replication.V1.Message
import qualified Proto.Temporal.Api.Rules.V1.Message
import qualified Proto.Temporal.Api.Schedule.V1.Message
import qualified Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata
import qualified Proto.Temporal.Api.Sdk.V1.UserMetadata
import qualified Proto.Temporal.Api.Taskqueue.V1.Message
import qualified Proto.Temporal.Api.Update.V1.Message
import qualified Proto.Temporal.Api.Version.V1.Message
import qualified Proto.Temporal.Api.Workflow.V1.Message
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' CountWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' CountWorkflowExecutionsRequest Data.Text.Text@ -}
data CountWorkflowExecutionsRequest
  = CountWorkflowExecutionsRequest'_constructor {_CountWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                 _CountWorkflowExecutionsRequest'query :: !Data.Text.Text,
                                                 _CountWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CountWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_CountWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsRequest "query" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsRequest'query
           (\ x__ y__ -> x__ {_CountWorkflowExecutionsRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Message CountWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CountWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \\RSCountWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\DC4\n\
      \\ENQquery\CAN\STX \SOH(\tR\ENQquery"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"query")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, query__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CountWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_CountWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = CountWorkflowExecutionsRequest'_constructor
        {_CountWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _CountWorkflowExecutionsRequest'query = Data.ProtoLens.fieldDefault,
         _CountWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CountWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser CountWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "CountWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"query") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData CountWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CountWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CountWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_CountWorkflowExecutionsRequest'query x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.count' @:: Lens' CountWorkflowExecutionsResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.groups' @:: Lens' CountWorkflowExecutionsResponse [CountWorkflowExecutionsResponse'AggregationGroup]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'groups' @:: Lens' CountWorkflowExecutionsResponse (Data.Vector.Vector CountWorkflowExecutionsResponse'AggregationGroup)@ -}
data CountWorkflowExecutionsResponse
  = CountWorkflowExecutionsResponse'_constructor {_CountWorkflowExecutionsResponse'count :: !Data.Int.Int64,
                                                  _CountWorkflowExecutionsResponse'groups :: !(Data.Vector.Vector CountWorkflowExecutionsResponse'AggregationGroup),
                                                  _CountWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CountWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse "count" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'count
           (\ x__ y__ -> x__ {_CountWorkflowExecutionsResponse'count = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse "groups" [CountWorkflowExecutionsResponse'AggregationGroup] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'groups
           (\ x__ y__ -> x__ {_CountWorkflowExecutionsResponse'groups = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse "vec'groups" (Data.Vector.Vector CountWorkflowExecutionsResponse'AggregationGroup) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'groups
           (\ x__ y__ -> x__ {_CountWorkflowExecutionsResponse'groups = y__}))
        Prelude.id
instance Data.ProtoLens.Message CountWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CountWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\USCountWorkflowExecutionsResponse\DC2\DC4\n\
      \\ENQcount\CAN\SOH \SOH(\ETXR\ENQcount\DC2i\n\
      \\ACKgroups\CAN\STX \ETX(\v2Q.temporal.api.workflowservice.v1.CountWorkflowExecutionsResponse.AggregationGroupR\ACKgroups\SUBl\n\
      \\DLEAggregationGroup\DC2B\n\
      \\fgroup_values\CAN\SOH \ETX(\v2\US.temporal.api.common.v1.PayloadR\vgroupValues\DC2\DC4\n\
      \\ENQcount\CAN\STX \SOH(\ETXR\ENQcount"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        count__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"count")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsResponse
        groups__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "groups"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor CountWorkflowExecutionsResponse'AggregationGroup)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"groups")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, count__field_descriptor),
           (Data.ProtoLens.Tag 2, groups__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CountWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_CountWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = CountWorkflowExecutionsResponse'_constructor
        {_CountWorkflowExecutionsResponse'count = Data.ProtoLens.fieldDefault,
         _CountWorkflowExecutionsResponse'groups = Data.Vector.Generic.empty,
         _CountWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CountWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld CountWorkflowExecutionsResponse'AggregationGroup
             -> Data.ProtoLens.Encoding.Bytes.Parser CountWorkflowExecutionsResponse
        loop x mutable'groups
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'groups <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                            mutable'groups)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'groups") frozen'groups x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "count"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"count") y x)
                                  mutable'groups
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "groups"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'groups y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'groups
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'groups <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                  Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'groups)
          "CountWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"count") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'groups") _x))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData CountWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CountWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CountWorkflowExecutionsResponse'count x__)
                (Control.DeepSeq.deepseq
                   (_CountWorkflowExecutionsResponse'groups x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.groupValues' @:: Lens' CountWorkflowExecutionsResponse'AggregationGroup [Proto.Temporal.Api.Common.V1.Message.Payload]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'groupValues' @:: Lens' CountWorkflowExecutionsResponse'AggregationGroup (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Payload)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.count' @:: Lens' CountWorkflowExecutionsResponse'AggregationGroup Data.Int.Int64@ -}
data CountWorkflowExecutionsResponse'AggregationGroup
  = CountWorkflowExecutionsResponse'AggregationGroup'_constructor {_CountWorkflowExecutionsResponse'AggregationGroup'groupValues :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Payload),
                                                                   _CountWorkflowExecutionsResponse'AggregationGroup'count :: !Data.Int.Int64,
                                                                   _CountWorkflowExecutionsResponse'AggregationGroup'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CountWorkflowExecutionsResponse'AggregationGroup where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse'AggregationGroup "groupValues" [Proto.Temporal.Api.Common.V1.Message.Payload] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'AggregationGroup'groupValues
           (\ x__ y__
              -> x__
                   {_CountWorkflowExecutionsResponse'AggregationGroup'groupValues = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse'AggregationGroup "vec'groupValues" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Payload) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'AggregationGroup'groupValues
           (\ x__ y__
              -> x__
                   {_CountWorkflowExecutionsResponse'AggregationGroup'groupValues = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CountWorkflowExecutionsResponse'AggregationGroup "count" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CountWorkflowExecutionsResponse'AggregationGroup'count
           (\ x__ y__
              -> x__
                   {_CountWorkflowExecutionsResponse'AggregationGroup'count = y__}))
        Prelude.id
instance Data.ProtoLens.Message CountWorkflowExecutionsResponse'AggregationGroup where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CountWorkflowExecutionsResponse.AggregationGroup"
  packedMessageDescriptor _
    = "\n\
      \\DLEAggregationGroup\DC2B\n\
      \\fgroup_values\CAN\SOH \ETX(\v2\US.temporal.api.common.v1.PayloadR\vgroupValues\DC2\DC4\n\
      \\ENQcount\CAN\STX \SOH(\ETXR\ENQcount"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        groupValues__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "group_values"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payload)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"groupValues")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsResponse'AggregationGroup
        count__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"count")) ::
              Data.ProtoLens.FieldDescriptor CountWorkflowExecutionsResponse'AggregationGroup
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, groupValues__field_descriptor),
           (Data.ProtoLens.Tag 2, count__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CountWorkflowExecutionsResponse'AggregationGroup'_unknownFields
        (\ x__ y__
           -> x__
                {_CountWorkflowExecutionsResponse'AggregationGroup'_unknownFields = y__})
  defMessage
    = CountWorkflowExecutionsResponse'AggregationGroup'_constructor
        {_CountWorkflowExecutionsResponse'AggregationGroup'groupValues = Data.Vector.Generic.empty,
         _CountWorkflowExecutionsResponse'AggregationGroup'count = Data.ProtoLens.fieldDefault,
         _CountWorkflowExecutionsResponse'AggregationGroup'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CountWorkflowExecutionsResponse'AggregationGroup
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Payload
             -> Data.ProtoLens.Encoding.Bytes.Parser CountWorkflowExecutionsResponse'AggregationGroup
        loop x mutable'groupValues
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'groupValues <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                              (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                 mutable'groupValues)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'groupValues") frozen'groupValues
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "group_values"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'groupValues y)
                                loop x v
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "count"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"count") y x)
                                  mutable'groupValues
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'groupValues
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'groupValues <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'groupValues)
          "AggregationGroup"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'groupValues") _x))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"count") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData CountWorkflowExecutionsResponse'AggregationGroup where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CountWorkflowExecutionsResponse'AggregationGroup'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_CountWorkflowExecutionsResponse'AggregationGroup'groupValues x__)
                (Control.DeepSeq.deepseq
                   (_CountWorkflowExecutionsResponse'AggregationGroup'count x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' CreateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' CreateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.schedule' @:: Lens' CreateScheduleRequest Proto.Temporal.Api.Schedule.V1.Message.Schedule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'schedule' @:: Lens' CreateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.initialPatch' @:: Lens' CreateScheduleRequest Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'initialPatch' @:: Lens' CreateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' CreateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' CreateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.memo' @:: Lens' CreateScheduleRequest Proto.Temporal.Api.Common.V1.Message.Memo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'memo' @:: Lens' CreateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.searchAttributes' @:: Lens' CreateScheduleRequest Proto.Temporal.Api.Common.V1.Message.SearchAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'searchAttributes' @:: Lens' CreateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes)@ -}
data CreateScheduleRequest
  = CreateScheduleRequest'_constructor {_CreateScheduleRequest'namespace :: !Data.Text.Text,
                                        _CreateScheduleRequest'scheduleId :: !Data.Text.Text,
                                        _CreateScheduleRequest'schedule :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule),
                                        _CreateScheduleRequest'initialPatch :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch),
                                        _CreateScheduleRequest'identity :: !Data.Text.Text,
                                        _CreateScheduleRequest'requestId :: !Data.Text.Text,
                                        _CreateScheduleRequest'memo :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo),
                                        _CreateScheduleRequest'searchAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes),
                                        _CreateScheduleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CreateScheduleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'namespace
           (\ x__ y__ -> x__ {_CreateScheduleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'scheduleId
           (\ x__ y__ -> x__ {_CreateScheduleRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "schedule" Proto.Temporal.Api.Schedule.V1.Message.Schedule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'schedule
           (\ x__ y__ -> x__ {_CreateScheduleRequest'schedule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "maybe'schedule" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'schedule
           (\ x__ y__ -> x__ {_CreateScheduleRequest'schedule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "initialPatch" Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'initialPatch
           (\ x__ y__ -> x__ {_CreateScheduleRequest'initialPatch = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "maybe'initialPatch" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'initialPatch
           (\ x__ y__ -> x__ {_CreateScheduleRequest'initialPatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'identity
           (\ x__ y__ -> x__ {_CreateScheduleRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'requestId
           (\ x__ y__ -> x__ {_CreateScheduleRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "memo" Proto.Temporal.Api.Common.V1.Message.Memo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'memo
           (\ x__ y__ -> x__ {_CreateScheduleRequest'memo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "maybe'memo" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'memo
           (\ x__ y__ -> x__ {_CreateScheduleRequest'memo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "searchAttributes" Proto.Temporal.Api.Common.V1.Message.SearchAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'searchAttributes
           (\ x__ y__ -> x__ {_CreateScheduleRequest'searchAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateScheduleRequest "maybe'searchAttributes" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleRequest'searchAttributes
           (\ x__ y__ -> x__ {_CreateScheduleRequest'searchAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Message CreateScheduleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CreateScheduleRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKCreateScheduleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId\DC2>\n\
      \\bschedule\CAN\ETX \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2L\n\
      \\rinitial_patch\CAN\EOT \SOH(\v2'.temporal.api.schedule.v1.SchedulePatchR\finitialPatch\DC2\SUB\n\
      \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\ACK \SOH(\tR\trequestId\DC20\n\
      \\EOTmemo\CAN\a \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
      \\DC1search_attributes\CAN\b \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        schedule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.Schedule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'schedule")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        initialPatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "initial_patch"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'initialPatch")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        memo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "memo"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Memo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'memo")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
        searchAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "search_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.SearchAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'searchAttributes")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor),
           (Data.ProtoLens.Tag 3, schedule__field_descriptor),
           (Data.ProtoLens.Tag 4, initialPatch__field_descriptor),
           (Data.ProtoLens.Tag 5, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, requestId__field_descriptor),
           (Data.ProtoLens.Tag 7, memo__field_descriptor),
           (Data.ProtoLens.Tag 8, searchAttributes__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CreateScheduleRequest'_unknownFields
        (\ x__ y__ -> x__ {_CreateScheduleRequest'_unknownFields = y__})
  defMessage
    = CreateScheduleRequest'_constructor
        {_CreateScheduleRequest'namespace = Data.ProtoLens.fieldDefault,
         _CreateScheduleRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _CreateScheduleRequest'schedule = Prelude.Nothing,
         _CreateScheduleRequest'initialPatch = Prelude.Nothing,
         _CreateScheduleRequest'identity = Data.ProtoLens.fieldDefault,
         _CreateScheduleRequest'requestId = Data.ProtoLens.fieldDefault,
         _CreateScheduleRequest'memo = Prelude.Nothing,
         _CreateScheduleRequest'searchAttributes = Prelude.Nothing,
         _CreateScheduleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CreateScheduleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser CreateScheduleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "schedule"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"schedule") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "initial_patch"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"initialPatch") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "memo"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"memo") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "search_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"searchAttributes") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "CreateScheduleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'schedule") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'initialPatch") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'memo") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'searchAttributes") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                     (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))))
instance Control.DeepSeq.NFData CreateScheduleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CreateScheduleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CreateScheduleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_CreateScheduleRequest'scheduleId x__)
                   (Control.DeepSeq.deepseq
                      (_CreateScheduleRequest'schedule x__)
                      (Control.DeepSeq.deepseq
                         (_CreateScheduleRequest'initialPatch x__)
                         (Control.DeepSeq.deepseq
                            (_CreateScheduleRequest'identity x__)
                            (Control.DeepSeq.deepseq
                               (_CreateScheduleRequest'requestId x__)
                               (Control.DeepSeq.deepseq
                                  (_CreateScheduleRequest'memo x__)
                                  (Control.DeepSeq.deepseq
                                     (_CreateScheduleRequest'searchAttributes x__) ()))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' CreateScheduleResponse Data.ByteString.ByteString@ -}
data CreateScheduleResponse
  = CreateScheduleResponse'_constructor {_CreateScheduleResponse'conflictToken :: !Data.ByteString.ByteString,
                                         _CreateScheduleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CreateScheduleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CreateScheduleResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateScheduleResponse'conflictToken
           (\ x__ y__ -> x__ {_CreateScheduleResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message CreateScheduleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CreateScheduleResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNCreateScheduleResponse\DC2%\n\
      \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor CreateScheduleResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, conflictToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CreateScheduleResponse'_unknownFields
        (\ x__ y__ -> x__ {_CreateScheduleResponse'_unknownFields = y__})
  defMessage
    = CreateScheduleResponse'_constructor
        {_CreateScheduleResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _CreateScheduleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CreateScheduleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser CreateScheduleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "CreateScheduleResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"conflictToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData CreateScheduleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CreateScheduleResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CreateScheduleResponse'conflictToken x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' CreateWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.spec' @:: Lens' CreateWorkflowRuleRequest Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'spec' @:: Lens' CreateWorkflowRuleRequest (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.forceScan' @:: Lens' CreateWorkflowRuleRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' CreateWorkflowRuleRequest Data.Text.Text@ -}
data CreateWorkflowRuleRequest
  = CreateWorkflowRuleRequest'_constructor {_CreateWorkflowRuleRequest'namespace :: !Data.Text.Text,
                                            _CreateWorkflowRuleRequest'spec :: !(Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec),
                                            _CreateWorkflowRuleRequest'forceScan :: !Prelude.Bool,
                                            _CreateWorkflowRuleRequest'requestId :: !Data.Text.Text,
                                            _CreateWorkflowRuleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CreateWorkflowRuleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleRequest'namespace
           (\ x__ y__ -> x__ {_CreateWorkflowRuleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleRequest "spec" Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleRequest'spec
           (\ x__ y__ -> x__ {_CreateWorkflowRuleRequest'spec = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleRequest "maybe'spec" (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleRequest'spec
           (\ x__ y__ -> x__ {_CreateWorkflowRuleRequest'spec = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleRequest "forceScan" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleRequest'forceScan
           (\ x__ y__ -> x__ {_CreateWorkflowRuleRequest'forceScan = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleRequest'requestId
           (\ x__ y__ -> x__ {_CreateWorkflowRuleRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Message CreateWorkflowRuleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CreateWorkflowRuleRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMCreateWorkflowRuleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2;\n\
      \\EOTspec\CAN\STX \SOH(\v2'.temporal.api.rules.v1.WorkflowRuleSpecR\EOTspec\DC2\GS\n\
      \\n\
      \force_scan\CAN\ETX \SOH(\bR\tforceScan\DC2\GS\n\
      \\n\
      \request_id\CAN\EOT \SOH(\tR\trequestId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleRequest
        spec__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "spec"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'spec")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleRequest
        forceScan__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "force_scan"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"forceScan")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, spec__field_descriptor),
           (Data.ProtoLens.Tag 3, forceScan__field_descriptor),
           (Data.ProtoLens.Tag 4, requestId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CreateWorkflowRuleRequest'_unknownFields
        (\ x__ y__
           -> x__ {_CreateWorkflowRuleRequest'_unknownFields = y__})
  defMessage
    = CreateWorkflowRuleRequest'_constructor
        {_CreateWorkflowRuleRequest'namespace = Data.ProtoLens.fieldDefault,
         _CreateWorkflowRuleRequest'spec = Prelude.Nothing,
         _CreateWorkflowRuleRequest'forceScan = Data.ProtoLens.fieldDefault,
         _CreateWorkflowRuleRequest'requestId = Data.ProtoLens.fieldDefault,
         _CreateWorkflowRuleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CreateWorkflowRuleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser CreateWorkflowRuleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "spec"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"spec") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "force_scan"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"forceScan") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "CreateWorkflowRuleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'spec") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"forceScan") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData CreateWorkflowRuleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CreateWorkflowRuleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CreateWorkflowRuleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_CreateWorkflowRuleRequest'spec x__)
                   (Control.DeepSeq.deepseq
                      (_CreateWorkflowRuleRequest'forceScan x__)
                      (Control.DeepSeq.deepseq
                         (_CreateWorkflowRuleRequest'requestId x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' CreateWorkflowRuleResponse Proto.Temporal.Api.Rules.V1.Message.WorkflowRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' CreateWorkflowRuleResponse (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jobId' @:: Lens' CreateWorkflowRuleResponse Data.Text.Text@ -}
data CreateWorkflowRuleResponse
  = CreateWorkflowRuleResponse'_constructor {_CreateWorkflowRuleResponse'rule :: !(Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule),
                                             _CreateWorkflowRuleResponse'jobId :: !Data.Text.Text,
                                             _CreateWorkflowRuleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CreateWorkflowRuleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleResponse "rule" Proto.Temporal.Api.Rules.V1.Message.WorkflowRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleResponse'rule
           (\ x__ y__ -> x__ {_CreateWorkflowRuleResponse'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleResponse "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleResponse'rule
           (\ x__ y__ -> x__ {_CreateWorkflowRuleResponse'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CreateWorkflowRuleResponse "jobId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CreateWorkflowRuleResponse'jobId
           (\ x__ y__ -> x__ {_CreateWorkflowRuleResponse'jobId = y__}))
        Prelude.id
instance Data.ProtoLens.Message CreateWorkflowRuleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.CreateWorkflowRuleResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBCreateWorkflowRuleResponse\DC27\n\
      \\EOTrule\CAN\SOH \SOH(\v2#.temporal.api.rules.v1.WorkflowRuleR\EOTrule\DC2\NAK\n\
      \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleResponse
        jobId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "job_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"jobId")) ::
              Data.ProtoLens.FieldDescriptor CreateWorkflowRuleResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, rule__field_descriptor),
           (Data.ProtoLens.Tag 2, jobId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CreateWorkflowRuleResponse'_unknownFields
        (\ x__ y__
           -> x__ {_CreateWorkflowRuleResponse'_unknownFields = y__})
  defMessage
    = CreateWorkflowRuleResponse'_constructor
        {_CreateWorkflowRuleResponse'rule = Prelude.Nothing,
         _CreateWorkflowRuleResponse'jobId = Data.ProtoLens.fieldDefault,
         _CreateWorkflowRuleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CreateWorkflowRuleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser CreateWorkflowRuleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "job_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jobId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "CreateWorkflowRuleResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"jobId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData CreateWorkflowRuleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CreateWorkflowRuleResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CreateWorkflowRuleResponse'rule x__)
                (Control.DeepSeq.deepseq
                   (_CreateWorkflowRuleResponse'jobId x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeleteScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' DeleteScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' DeleteScheduleRequest Data.Text.Text@ -}
data DeleteScheduleRequest
  = DeleteScheduleRequest'_constructor {_DeleteScheduleRequest'namespace :: !Data.Text.Text,
                                        _DeleteScheduleRequest'scheduleId :: !Data.Text.Text,
                                        _DeleteScheduleRequest'identity :: !Data.Text.Text,
                                        _DeleteScheduleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteScheduleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeleteScheduleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteScheduleRequest'namespace
           (\ x__ y__ -> x__ {_DeleteScheduleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteScheduleRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteScheduleRequest'scheduleId
           (\ x__ y__ -> x__ {_DeleteScheduleRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteScheduleRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteScheduleRequest'identity
           (\ x__ y__ -> x__ {_DeleteScheduleRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeleteScheduleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteScheduleRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKDeleteScheduleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeleteScheduleRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor DeleteScheduleRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor DeleteScheduleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteScheduleRequest'_unknownFields
        (\ x__ y__ -> x__ {_DeleteScheduleRequest'_unknownFields = y__})
  defMessage
    = DeleteScheduleRequest'_constructor
        {_DeleteScheduleRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeleteScheduleRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _DeleteScheduleRequest'identity = Data.ProtoLens.fieldDefault,
         _DeleteScheduleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteScheduleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteScheduleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteScheduleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData DeleteScheduleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteScheduleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeleteScheduleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeleteScheduleRequest'scheduleId x__)
                   (Control.DeepSeq.deepseq
                      (_DeleteScheduleRequest'identity x__) ())))
{- | Fields :
      -}
data DeleteScheduleResponse
  = DeleteScheduleResponse'_constructor {_DeleteScheduleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteScheduleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeleteScheduleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteScheduleResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNDeleteScheduleResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteScheduleResponse'_unknownFields
        (\ x__ y__ -> x__ {_DeleteScheduleResponse'_unknownFields = y__})
  defMessage
    = DeleteScheduleResponse'_constructor
        {_DeleteScheduleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteScheduleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteScheduleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteScheduleResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeleteScheduleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteScheduleResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeleteWorkerDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentName' @:: Lens' DeleteWorkerDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' DeleteWorkerDeploymentRequest Data.Text.Text@ -}
data DeleteWorkerDeploymentRequest
  = DeleteWorkerDeploymentRequest'_constructor {_DeleteWorkerDeploymentRequest'namespace :: !Data.Text.Text,
                                                _DeleteWorkerDeploymentRequest'deploymentName :: !Data.Text.Text,
                                                _DeleteWorkerDeploymentRequest'identity :: !Data.Text.Text,
                                                _DeleteWorkerDeploymentRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkerDeploymentRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentRequest'namespace
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentRequest "deploymentName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentRequest'deploymentName
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentRequest'deploymentName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentRequest'identity
           (\ x__ y__ -> x__ {_DeleteWorkerDeploymentRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeleteWorkerDeploymentRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkerDeploymentRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSDeleteWorkerDeploymentRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
      \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentRequest
        deploymentName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"deploymentName")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deploymentName__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkerDeploymentRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkerDeploymentRequest'_unknownFields = y__})
  defMessage
    = DeleteWorkerDeploymentRequest'_constructor
        {_DeleteWorkerDeploymentRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentRequest'deploymentName = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentRequest'identity = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkerDeploymentRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkerDeploymentRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "deployment_name"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentName") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteWorkerDeploymentRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"deploymentName") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData DeleteWorkerDeploymentRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkerDeploymentRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeleteWorkerDeploymentRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeleteWorkerDeploymentRequest'deploymentName x__)
                   (Control.DeepSeq.deepseq
                      (_DeleteWorkerDeploymentRequest'identity x__) ())))
{- | Fields :
      -}
data DeleteWorkerDeploymentResponse
  = DeleteWorkerDeploymentResponse'_constructor {_DeleteWorkerDeploymentResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkerDeploymentResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeleteWorkerDeploymentResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkerDeploymentResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSDeleteWorkerDeploymentResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkerDeploymentResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkerDeploymentResponse'_unknownFields = y__})
  defMessage
    = DeleteWorkerDeploymentResponse'_constructor
        {_DeleteWorkerDeploymentResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkerDeploymentResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkerDeploymentResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteWorkerDeploymentResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeleteWorkerDeploymentResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkerDeploymentResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeleteWorkerDeploymentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.version' @:: Lens' DeleteWorkerDeploymentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.skipDrainage' @:: Lens' DeleteWorkerDeploymentVersionRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' DeleteWorkerDeploymentVersionRequest Data.Text.Text@ -}
data DeleteWorkerDeploymentVersionRequest
  = DeleteWorkerDeploymentVersionRequest'_constructor {_DeleteWorkerDeploymentVersionRequest'namespace :: !Data.Text.Text,
                                                       _DeleteWorkerDeploymentVersionRequest'version :: !Data.Text.Text,
                                                       _DeleteWorkerDeploymentVersionRequest'skipDrainage :: !Prelude.Bool,
                                                       _DeleteWorkerDeploymentVersionRequest'identity :: !Data.Text.Text,
                                                       _DeleteWorkerDeploymentVersionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkerDeploymentVersionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentVersionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentVersionRequest'namespace
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentVersionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentVersionRequest "version" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentVersionRequest'version
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentVersionRequest'version = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentVersionRequest "skipDrainage" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentVersionRequest'skipDrainage
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentVersionRequest'skipDrainage = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkerDeploymentVersionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkerDeploymentVersionRequest'identity
           (\ x__ y__
              -> x__ {_DeleteWorkerDeploymentVersionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeleteWorkerDeploymentVersionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkerDeploymentVersionRequest"
  packedMessageDescriptor _
    = "\n\
      \$DeleteWorkerDeploymentVersionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
      \\aversion\CAN\STX \SOH(\tR\aversion\DC2#\n\
      \\rskip_drainage\CAN\ETX \SOH(\bR\fskipDrainage\DC2\SUB\n\
      \\bidentity\CAN\EOT \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentVersionRequest
        version__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"version")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentVersionRequest
        skipDrainage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "skip_drainage"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"skipDrainage")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentVersionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkerDeploymentVersionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, version__field_descriptor),
           (Data.ProtoLens.Tag 3, skipDrainage__field_descriptor),
           (Data.ProtoLens.Tag 4, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkerDeploymentVersionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_DeleteWorkerDeploymentVersionRequest'_unknownFields = y__})
  defMessage
    = DeleteWorkerDeploymentVersionRequest'_constructor
        {_DeleteWorkerDeploymentVersionRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentVersionRequest'version = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentVersionRequest'skipDrainage = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentVersionRequest'identity = Data.ProtoLens.fieldDefault,
         _DeleteWorkerDeploymentVersionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkerDeploymentVersionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkerDeploymentVersionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "version"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"version") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "skip_drainage"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"skipDrainage") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteWorkerDeploymentVersionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"version") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"skipDrainage") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData DeleteWorkerDeploymentVersionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkerDeploymentVersionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeleteWorkerDeploymentVersionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeleteWorkerDeploymentVersionRequest'version x__)
                   (Control.DeepSeq.deepseq
                      (_DeleteWorkerDeploymentVersionRequest'skipDrainage x__)
                      (Control.DeepSeq.deepseq
                         (_DeleteWorkerDeploymentVersionRequest'identity x__) ()))))
{- | Fields :
      -}
data DeleteWorkerDeploymentVersionResponse
  = DeleteWorkerDeploymentVersionResponse'_constructor {_DeleteWorkerDeploymentVersionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkerDeploymentVersionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeleteWorkerDeploymentVersionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkerDeploymentVersionResponse"
  packedMessageDescriptor _
    = "\n\
      \%DeleteWorkerDeploymentVersionResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkerDeploymentVersionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_DeleteWorkerDeploymentVersionResponse'_unknownFields = y__})
  defMessage
    = DeleteWorkerDeploymentVersionResponse'_constructor
        {_DeleteWorkerDeploymentVersionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkerDeploymentVersionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkerDeploymentVersionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteWorkerDeploymentVersionResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeleteWorkerDeploymentVersionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkerDeploymentVersionResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeleteWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' DeleteWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' DeleteWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@ -}
data DeleteWorkflowExecutionRequest
  = DeleteWorkflowExecutionRequest'_constructor {_DeleteWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                 _DeleteWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                 _DeleteWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeleteWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_DeleteWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_DeleteWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DeleteWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_DeleteWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeleteWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \\RSDeleteWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = DeleteWorkflowExecutionRequest'_constructor
        {_DeleteWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeleteWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _DeleteWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkflowExecutionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DeleteWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeleteWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeleteWorkflowExecutionRequest'workflowExecution x__) ()))
{- | Fields :
      -}
data DeleteWorkflowExecutionResponse
  = DeleteWorkflowExecutionResponse'_constructor {_DeleteWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeleteWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\USDeleteWorkflowExecutionResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = DeleteWorkflowExecutionResponse'_constructor
        {_DeleteWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeleteWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkflowExecutionResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeleteWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ruleId' @:: Lens' DeleteWorkflowRuleRequest Data.Text.Text@ -}
data DeleteWorkflowRuleRequest
  = DeleteWorkflowRuleRequest'_constructor {_DeleteWorkflowRuleRequest'namespace :: !Data.Text.Text,
                                            _DeleteWorkflowRuleRequest'ruleId :: !Data.Text.Text,
                                            _DeleteWorkflowRuleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkflowRuleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeleteWorkflowRuleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkflowRuleRequest'namespace
           (\ x__ y__ -> x__ {_DeleteWorkflowRuleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeleteWorkflowRuleRequest "ruleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeleteWorkflowRuleRequest'ruleId
           (\ x__ y__ -> x__ {_DeleteWorkflowRuleRequest'ruleId = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeleteWorkflowRuleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkflowRuleRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMDeleteWorkflowRuleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ETB\n\
      \\arule_id\CAN\STX \SOH(\tR\ACKruleId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkflowRuleRequest
        ruleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"ruleId")) ::
              Data.ProtoLens.FieldDescriptor DeleteWorkflowRuleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, ruleId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkflowRuleRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkflowRuleRequest'_unknownFields = y__})
  defMessage
    = DeleteWorkflowRuleRequest'_constructor
        {_DeleteWorkflowRuleRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeleteWorkflowRuleRequest'ruleId = Data.ProtoLens.fieldDefault,
         _DeleteWorkflowRuleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkflowRuleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkflowRuleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "rule_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"ruleId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteWorkflowRuleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"ruleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DeleteWorkflowRuleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkflowRuleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeleteWorkflowRuleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeleteWorkflowRuleRequest'ruleId x__) ()))
{- | Fields :
      -}
data DeleteWorkflowRuleResponse
  = DeleteWorkflowRuleResponse'_constructor {_DeleteWorkflowRuleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeleteWorkflowRuleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeleteWorkflowRuleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeleteWorkflowRuleResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBDeleteWorkflowRuleResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeleteWorkflowRuleResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DeleteWorkflowRuleResponse'_unknownFields = y__})
  defMessage
    = DeleteWorkflowRuleResponse'_constructor
        {_DeleteWorkflowRuleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeleteWorkflowRuleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeleteWorkflowRuleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteWorkflowRuleResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeleteWorkflowRuleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeleteWorkflowRuleResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DeprecateNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.securityToken' @:: Lens' DeprecateNamespaceRequest Data.Text.Text@ -}
data DeprecateNamespaceRequest
  = DeprecateNamespaceRequest'_constructor {_DeprecateNamespaceRequest'namespace :: !Data.Text.Text,
                                            _DeprecateNamespaceRequest'securityToken :: !Data.Text.Text,
                                            _DeprecateNamespaceRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeprecateNamespaceRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DeprecateNamespaceRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeprecateNamespaceRequest'namespace
           (\ x__ y__ -> x__ {_DeprecateNamespaceRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DeprecateNamespaceRequest "securityToken" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DeprecateNamespaceRequest'securityToken
           (\ x__ y__
              -> x__ {_DeprecateNamespaceRequest'securityToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message DeprecateNamespaceRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeprecateNamespaceRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMDeprecateNamespaceRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2%\n\
      \\SOsecurity_token\CAN\STX \SOH(\tR\rsecurityToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DeprecateNamespaceRequest
        securityToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "security_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"securityToken")) ::
              Data.ProtoLens.FieldDescriptor DeprecateNamespaceRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, securityToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeprecateNamespaceRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DeprecateNamespaceRequest'_unknownFields = y__})
  defMessage
    = DeprecateNamespaceRequest'_constructor
        {_DeprecateNamespaceRequest'namespace = Data.ProtoLens.fieldDefault,
         _DeprecateNamespaceRequest'securityToken = Data.ProtoLens.fieldDefault,
         _DeprecateNamespaceRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeprecateNamespaceRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DeprecateNamespaceRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "security_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"securityToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeprecateNamespaceRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"securityToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DeprecateNamespaceRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeprecateNamespaceRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DeprecateNamespaceRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DeprecateNamespaceRequest'securityToken x__) ()))
{- | Fields :
      -}
data DeprecateNamespaceResponse
  = DeprecateNamespaceResponse'_constructor {_DeprecateNamespaceResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DeprecateNamespaceResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message DeprecateNamespaceResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DeprecateNamespaceResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBDeprecateNamespaceResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DeprecateNamespaceResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DeprecateNamespaceResponse'_unknownFields = y__})
  defMessage
    = DeprecateNamespaceResponse'_constructor
        {_DeprecateNamespaceResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DeprecateNamespaceResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DeprecateNamespaceResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeprecateNamespaceResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData DeprecateNamespaceResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DeprecateNamespaceResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jobId' @:: Lens' DescribeBatchOperationRequest Data.Text.Text@ -}
data DescribeBatchOperationRequest
  = DescribeBatchOperationRequest'_constructor {_DescribeBatchOperationRequest'namespace :: !Data.Text.Text,
                                                _DescribeBatchOperationRequest'jobId :: !Data.Text.Text,
                                                _DescribeBatchOperationRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeBatchOperationRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeBatchOperationRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationRequest'namespace
           (\ x__ y__
              -> x__ {_DescribeBatchOperationRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationRequest "jobId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationRequest'jobId
           (\ x__ y__ -> x__ {_DescribeBatchOperationRequest'jobId = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeBatchOperationRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeBatchOperationRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSDescribeBatchOperationRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\NAK\n\
      \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationRequest
        jobId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "job_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"jobId")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, jobId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeBatchOperationRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeBatchOperationRequest'_unknownFields = y__})
  defMessage
    = DescribeBatchOperationRequest'_constructor
        {_DescribeBatchOperationRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationRequest'jobId = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeBatchOperationRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeBatchOperationRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "job_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jobId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeBatchOperationRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"jobId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeBatchOperationRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeBatchOperationRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeBatchOperationRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeBatchOperationRequest'jobId x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.operationType' @:: Lens' DescribeBatchOperationResponse Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jobId' @:: Lens' DescribeBatchOperationResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.state' @:: Lens' DescribeBatchOperationResponse Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationState@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startTime' @:: Lens' DescribeBatchOperationResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startTime' @:: Lens' DescribeBatchOperationResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.closeTime' @:: Lens' DescribeBatchOperationResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'closeTime' @:: Lens' DescribeBatchOperationResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.totalOperationCount' @:: Lens' DescribeBatchOperationResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.completeOperationCount' @:: Lens' DescribeBatchOperationResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failureOperationCount' @:: Lens' DescribeBatchOperationResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' DescribeBatchOperationResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' DescribeBatchOperationResponse Data.Text.Text@ -}
data DescribeBatchOperationResponse
  = DescribeBatchOperationResponse'_constructor {_DescribeBatchOperationResponse'operationType :: !Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationType,
                                                 _DescribeBatchOperationResponse'jobId :: !Data.Text.Text,
                                                 _DescribeBatchOperationResponse'state :: !Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationState,
                                                 _DescribeBatchOperationResponse'startTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                 _DescribeBatchOperationResponse'closeTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                 _DescribeBatchOperationResponse'totalOperationCount :: !Data.Int.Int64,
                                                 _DescribeBatchOperationResponse'completeOperationCount :: !Data.Int.Int64,
                                                 _DescribeBatchOperationResponse'failureOperationCount :: !Data.Int.Int64,
                                                 _DescribeBatchOperationResponse'identity :: !Data.Text.Text,
                                                 _DescribeBatchOperationResponse'reason :: !Data.Text.Text,
                                                 _DescribeBatchOperationResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeBatchOperationResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "operationType" Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'operationType
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'operationType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "jobId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'jobId
           (\ x__ y__ -> x__ {_DescribeBatchOperationResponse'jobId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "state" Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationState where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'state
           (\ x__ y__ -> x__ {_DescribeBatchOperationResponse'state = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "startTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'startTime
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'startTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "maybe'startTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'startTime
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'startTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "closeTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'closeTime
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'closeTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "maybe'closeTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'closeTime
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'closeTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "totalOperationCount" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'totalOperationCount
           (\ x__ y__
              -> x__
                   {_DescribeBatchOperationResponse'totalOperationCount = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "completeOperationCount" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'completeOperationCount
           (\ x__ y__
              -> x__
                   {_DescribeBatchOperationResponse'completeOperationCount = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "failureOperationCount" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'failureOperationCount
           (\ x__ y__
              -> x__
                   {_DescribeBatchOperationResponse'failureOperationCount = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'identity
           (\ x__ y__
              -> x__ {_DescribeBatchOperationResponse'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeBatchOperationResponse "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeBatchOperationResponse'reason
           (\ x__ y__ -> x__ {_DescribeBatchOperationResponse'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeBatchOperationResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeBatchOperationResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSDescribeBatchOperationResponse\DC2P\n\
      \\SOoperation_type\CAN\SOH \SOH(\SO2).temporal.api.enums.v1.BatchOperationTypeR\roperationType\DC2\NAK\n\
      \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\DC2@\n\
      \\ENQstate\CAN\ETX \SOH(\SO2*.temporal.api.enums.v1.BatchOperationStateR\ENQstate\DC29\n\
      \\n\
      \start_time\CAN\EOT \SOH(\v2\SUB.google.protobuf.TimestampR\tstartTime\DC29\n\
      \\n\
      \close_time\CAN\ENQ \SOH(\v2\SUB.google.protobuf.TimestampR\tcloseTime\DC22\n\
      \\NAKtotal_operation_count\CAN\ACK \SOH(\ETXR\DC3totalOperationCount\DC28\n\
      \\CANcomplete_operation_count\CAN\a \SOH(\ETXR\SYNcompleteOperationCount\DC26\n\
      \\ETBfailure_operation_count\CAN\b \SOH(\ETXR\NAKfailureOperationCount\DC2\SUB\n\
      \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\SYN\n\
      \\ACKreason\CAN\n\
      \ \SOH(\tR\ACKreason"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        operationType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "operation_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"operationType")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        jobId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "job_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"jobId")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        state__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "state"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.BatchOperation.BatchOperationState)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"state")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        startTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startTime")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        closeTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "close_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'closeTime")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        totalOperationCount__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "total_operation_count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"totalOperationCount")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        completeOperationCount__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "complete_operation_count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"completeOperationCount")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        failureOperationCount__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failure_operation_count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"failureOperationCount")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor DescribeBatchOperationResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, operationType__field_descriptor),
           (Data.ProtoLens.Tag 2, jobId__field_descriptor),
           (Data.ProtoLens.Tag 3, state__field_descriptor),
           (Data.ProtoLens.Tag 4, startTime__field_descriptor),
           (Data.ProtoLens.Tag 5, closeTime__field_descriptor),
           (Data.ProtoLens.Tag 6, totalOperationCount__field_descriptor),
           (Data.ProtoLens.Tag 7, completeOperationCount__field_descriptor),
           (Data.ProtoLens.Tag 8, failureOperationCount__field_descriptor),
           (Data.ProtoLens.Tag 9, identity__field_descriptor),
           (Data.ProtoLens.Tag 10, reason__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeBatchOperationResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeBatchOperationResponse'_unknownFields = y__})
  defMessage
    = DescribeBatchOperationResponse'_constructor
        {_DescribeBatchOperationResponse'operationType = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'jobId = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'state = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'startTime = Prelude.Nothing,
         _DescribeBatchOperationResponse'closeTime = Prelude.Nothing,
         _DescribeBatchOperationResponse'totalOperationCount = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'completeOperationCount = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'failureOperationCount = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'identity = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'reason = Data.ProtoLens.fieldDefault,
         _DescribeBatchOperationResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeBatchOperationResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeBatchOperationResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "operation_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"operationType") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "job_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jobId") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "state"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"state") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"startTime") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "close_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"closeTime") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "total_operation_count"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"totalOperationCount") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "complete_operation_count"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"completeOperationCount") y x)
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "failure_operation_count"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"failureOperationCount") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeBatchOperationResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"operationType") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                         Prelude.fromEnum _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"jobId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"state") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                               Prelude.fromEnum _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'startTime") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'closeTime") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"totalOperationCount") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral
                                        _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"completeOperationCount") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           Prelude.fromIntegral _v))
                               ((Data.Monoid.<>)
                                  (let
                                     _v
                                       = Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"failureOperationCount") _x
                                   in
                                     if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                         Data.Monoid.mempty
                                     else
                                         (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                                           ((Prelude..)
                                              Data.ProtoLens.Encoding.Bytes.putVarInt
                                              Prelude.fromIntegral _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"identity") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                              ((Prelude..)
                                                 (\ bs
                                                    -> (Data.Monoid.<>)
                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                            (Prelude.fromIntegral
                                                               (Data.ByteString.length bs)))
                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                            bs))
                                                 Data.Text.Encoding.encodeUtf8 _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"reason") _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                 ((Prelude..)
                                                    (\ bs
                                                       -> (Data.Monoid.<>)
                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                               (Prelude.fromIntegral
                                                                  (Data.ByteString.length bs)))
                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                               bs))
                                                    Data.Text.Encoding.encodeUtf8 _v))
                                        (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                           (Lens.Family2.view
                                              Data.ProtoLens.unknownFields _x)))))))))))
instance Control.DeepSeq.NFData DescribeBatchOperationResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeBatchOperationResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeBatchOperationResponse'operationType x__)
                (Control.DeepSeq.deepseq
                   (_DescribeBatchOperationResponse'jobId x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeBatchOperationResponse'state x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeBatchOperationResponse'startTime x__)
                         (Control.DeepSeq.deepseq
                            (_DescribeBatchOperationResponse'closeTime x__)
                            (Control.DeepSeq.deepseq
                               (_DescribeBatchOperationResponse'totalOperationCount x__)
                               (Control.DeepSeq.deepseq
                                  (_DescribeBatchOperationResponse'completeOperationCount x__)
                                  (Control.DeepSeq.deepseq
                                     (_DescribeBatchOperationResponse'failureOperationCount x__)
                                     (Control.DeepSeq.deepseq
                                        (_DescribeBatchOperationResponse'identity x__)
                                        (Control.DeepSeq.deepseq
                                           (_DescribeBatchOperationResponse'reason x__) ()))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' DescribeDeploymentRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' DescribeDeploymentRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@ -}
data DescribeDeploymentRequest
  = DescribeDeploymentRequest'_constructor {_DescribeDeploymentRequest'namespace :: !Data.Text.Text,
                                            _DescribeDeploymentRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                            _DescribeDeploymentRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeDeploymentRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeDeploymentRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeDeploymentRequest'namespace
           (\ x__ y__ -> x__ {_DescribeDeploymentRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeDeploymentRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeDeploymentRequest'deployment
           (\ x__ y__ -> x__ {_DescribeDeploymentRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeDeploymentRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeDeploymentRequest'deployment
           (\ x__ y__ -> x__ {_DescribeDeploymentRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeDeploymentRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeDeploymentRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMDescribeDeploymentRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
      \\n\
      \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deployment"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeDeploymentRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor DescribeDeploymentRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deployment__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeDeploymentRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeDeploymentRequest'_unknownFields = y__})
  defMessage
    = DescribeDeploymentRequest'_constructor
        {_DescribeDeploymentRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeDeploymentRequest'deployment = Prelude.Nothing,
         _DescribeDeploymentRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeDeploymentRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeDeploymentRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeDeploymentRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'deployment") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeDeploymentRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeDeploymentRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeDeploymentRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeDeploymentRequest'deployment x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentInfo' @:: Lens' DescribeDeploymentResponse Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentInfo' @:: Lens' DescribeDeploymentResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)@ -}
data DescribeDeploymentResponse
  = DescribeDeploymentResponse'_constructor {_DescribeDeploymentResponse'deploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo),
                                             _DescribeDeploymentResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeDeploymentResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeDeploymentResponse "deploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeDeploymentResponse'deploymentInfo
           (\ x__ y__
              -> x__ {_DescribeDeploymentResponse'deploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeDeploymentResponse "maybe'deploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeDeploymentResponse'deploymentInfo
           (\ x__ y__
              -> x__ {_DescribeDeploymentResponse'deploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeDeploymentResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeDeploymentResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBDescribeDeploymentResponse\DC2S\n\
      \\SIdeployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SOdeploymentInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        deploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeDeploymentResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, deploymentInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeDeploymentResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeDeploymentResponse'_unknownFields = y__})
  defMessage
    = DescribeDeploymentResponse'_constructor
        {_DescribeDeploymentResponse'deploymentInfo = Prelude.Nothing,
         _DescribeDeploymentResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeDeploymentResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeDeploymentResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentInfo") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeDeploymentResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'deploymentInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData DescribeDeploymentResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeDeploymentResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeDeploymentResponse'deploymentInfo x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' DescribeNamespaceRequest Data.Text.Text@ -}
data DescribeNamespaceRequest
  = DescribeNamespaceRequest'_constructor {_DescribeNamespaceRequest'namespace :: !Data.Text.Text,
                                           _DescribeNamespaceRequest'id :: !Data.Text.Text,
                                           _DescribeNamespaceRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeNamespaceRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeNamespaceRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceRequest'namespace
           (\ x__ y__ -> x__ {_DescribeNamespaceRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceRequest'id
           (\ x__ y__ -> x__ {_DescribeNamespaceRequest'id = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeNamespaceRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeNamespaceRequest"
  packedMessageDescriptor _
    = "\n\
      \\CANDescribeNamespaceRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SO\n\
      \\STXid\CAN\STX \SOH(\tR\STXid"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"id")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, id__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeNamespaceRequest'_unknownFields
        (\ x__ y__ -> x__ {_DescribeNamespaceRequest'_unknownFields = y__})
  defMessage
    = DescribeNamespaceRequest'_constructor
        {_DescribeNamespaceRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeNamespaceRequest'id = Data.ProtoLens.fieldDefault,
         _DescribeNamespaceRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeNamespaceRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeNamespaceRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeNamespaceRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"id") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeNamespaceRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeNamespaceRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeNamespaceRequest'namespace x__)
                (Control.DeepSeq.deepseq (_DescribeNamespaceRequest'id x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespaceInfo' @:: Lens' DescribeNamespaceResponse Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'namespaceInfo' @:: Lens' DescribeNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.config' @:: Lens' DescribeNamespaceResponse Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'config' @:: Lens' DescribeNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.replicationConfig' @:: Lens' DescribeNamespaceResponse Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'replicationConfig' @:: Lens' DescribeNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failoverVersion' @:: Lens' DescribeNamespaceResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.isGlobalNamespace' @:: Lens' DescribeNamespaceResponse Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failoverHistory' @:: Lens' DescribeNamespaceResponse [Proto.Temporal.Api.Replication.V1.Message.FailoverStatus]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'failoverHistory' @:: Lens' DescribeNamespaceResponse (Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.FailoverStatus)@ -}
data DescribeNamespaceResponse
  = DescribeNamespaceResponse'_constructor {_DescribeNamespaceResponse'namespaceInfo :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo),
                                            _DescribeNamespaceResponse'config :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig),
                                            _DescribeNamespaceResponse'replicationConfig :: !(Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig),
                                            _DescribeNamespaceResponse'failoverVersion :: !Data.Int.Int64,
                                            _DescribeNamespaceResponse'isGlobalNamespace :: !Prelude.Bool,
                                            _DescribeNamespaceResponse'failoverHistory :: !(Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.FailoverStatus),
                                            _DescribeNamespaceResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeNamespaceResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "namespaceInfo" Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'namespaceInfo
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'namespaceInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "maybe'namespaceInfo" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'namespaceInfo
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'namespaceInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "config" Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'config
           (\ x__ y__ -> x__ {_DescribeNamespaceResponse'config = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "maybe'config" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'config
           (\ x__ y__ -> x__ {_DescribeNamespaceResponse'config = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "replicationConfig" Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'replicationConfig
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'replicationConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "maybe'replicationConfig" (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'replicationConfig
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'replicationConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "failoverVersion" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'failoverVersion
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'failoverVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "isGlobalNamespace" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'isGlobalNamespace
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'isGlobalNamespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "failoverHistory" [Proto.Temporal.Api.Replication.V1.Message.FailoverStatus] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'failoverHistory
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'failoverHistory = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeNamespaceResponse "vec'failoverHistory" (Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.FailoverStatus) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeNamespaceResponse'failoverHistory
           (\ x__ y__
              -> x__ {_DescribeNamespaceResponse'failoverHistory = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeNamespaceResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeNamespaceResponse"
  packedMessageDescriptor _
    = "\n\
      \\EMDescribeNamespaceResponse\DC2O\n\
      \\SOnamespace_info\CAN\SOH \SOH(\v2(.temporal.api.namespace.v1.NamespaceInfoR\rnamespaceInfo\DC2B\n\
      \\ACKconfig\CAN\STX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
      \\DC2replication_config\CAN\ETX \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2)\n\
      \\DLEfailover_version\CAN\EOT \SOH(\ETXR\SIfailoverVersion\DC2.\n\
      \\DC3is_global_namespace\CAN\ENQ \SOH(\bR\DC1isGlobalNamespace\DC2V\n\
      \\DLEfailover_history\CAN\ACK \ETX(\v2+.temporal.api.replication.v1.FailoverStatusR\SIfailoverHistory"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespaceInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'namespaceInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
        config__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'config")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
        replicationConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "replication_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'replicationConfig")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
        failoverVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failover_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"failoverVersion")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
        isGlobalNamespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "is_global_namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"isGlobalNamespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
        failoverHistory__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failover_history"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Replication.V1.Message.FailoverStatus)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"failoverHistory")) ::
              Data.ProtoLens.FieldDescriptor DescribeNamespaceResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespaceInfo__field_descriptor),
           (Data.ProtoLens.Tag 2, config__field_descriptor),
           (Data.ProtoLens.Tag 3, replicationConfig__field_descriptor),
           (Data.ProtoLens.Tag 4, failoverVersion__field_descriptor),
           (Data.ProtoLens.Tag 5, isGlobalNamespace__field_descriptor),
           (Data.ProtoLens.Tag 6, failoverHistory__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeNamespaceResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeNamespaceResponse'_unknownFields = y__})
  defMessage
    = DescribeNamespaceResponse'_constructor
        {_DescribeNamespaceResponse'namespaceInfo = Prelude.Nothing,
         _DescribeNamespaceResponse'config = Prelude.Nothing,
         _DescribeNamespaceResponse'replicationConfig = Prelude.Nothing,
         _DescribeNamespaceResponse'failoverVersion = Data.ProtoLens.fieldDefault,
         _DescribeNamespaceResponse'isGlobalNamespace = Data.ProtoLens.fieldDefault,
         _DescribeNamespaceResponse'failoverHistory = Data.Vector.Generic.empty,
         _DescribeNamespaceResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeNamespaceResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Replication.V1.Message.FailoverStatus
             -> Data.ProtoLens.Encoding.Bytes.Parser DescribeNamespaceResponse
        loop x mutable'failoverHistory
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'failoverHistory <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'failoverHistory)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'failoverHistory")
                              frozen'failoverHistory x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "namespace_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"namespaceInfo") y x)
                                  mutable'failoverHistory
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "config"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"config") y x)
                                  mutable'failoverHistory
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "replication_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"replicationConfig") y x)
                                  mutable'failoverHistory
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "failover_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"failoverVersion") y x)
                                  mutable'failoverHistory
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "is_global_namespace"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"isGlobalNamespace") y x)
                                  mutable'failoverHistory
                        50
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "failover_history"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'failoverHistory y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'failoverHistory
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'failoverHistory <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'failoverHistory)
          "DescribeNamespaceResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'namespaceInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'config") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'replicationConfig") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"failoverVersion") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"isGlobalNamespace") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage _v))
                               (Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"vec'failoverHistory") _x))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData DescribeNamespaceResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeNamespaceResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeNamespaceResponse'namespaceInfo x__)
                (Control.DeepSeq.deepseq
                   (_DescribeNamespaceResponse'config x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeNamespaceResponse'replicationConfig x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeNamespaceResponse'failoverVersion x__)
                         (Control.DeepSeq.deepseq
                            (_DescribeNamespaceResponse'isGlobalNamespace x__)
                            (Control.DeepSeq.deepseq
                               (_DescribeNamespaceResponse'failoverHistory x__) ()))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' DescribeScheduleRequest Data.Text.Text@ -}
data DescribeScheduleRequest
  = DescribeScheduleRequest'_constructor {_DescribeScheduleRequest'namespace :: !Data.Text.Text,
                                          _DescribeScheduleRequest'scheduleId :: !Data.Text.Text,
                                          _DescribeScheduleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeScheduleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeScheduleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleRequest'namespace
           (\ x__ y__ -> x__ {_DescribeScheduleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeScheduleRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleRequest'scheduleId
           (\ x__ y__ -> x__ {_DescribeScheduleRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeScheduleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeScheduleRequest"
  packedMessageDescriptor _
    = "\n\
      \\ETBDescribeScheduleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeScheduleRequest'_unknownFields
        (\ x__ y__ -> x__ {_DescribeScheduleRequest'_unknownFields = y__})
  defMessage
    = DescribeScheduleRequest'_constructor
        {_DescribeScheduleRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeScheduleRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _DescribeScheduleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeScheduleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeScheduleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeScheduleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeScheduleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeScheduleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeScheduleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeScheduleRequest'scheduleId x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.schedule' @:: Lens' DescribeScheduleResponse Proto.Temporal.Api.Schedule.V1.Message.Schedule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'schedule' @:: Lens' DescribeScheduleResponse (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.info' @:: Lens' DescribeScheduleResponse Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'info' @:: Lens' DescribeScheduleResponse (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.memo' @:: Lens' DescribeScheduleResponse Proto.Temporal.Api.Common.V1.Message.Memo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'memo' @:: Lens' DescribeScheduleResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.searchAttributes' @:: Lens' DescribeScheduleResponse Proto.Temporal.Api.Common.V1.Message.SearchAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'searchAttributes' @:: Lens' DescribeScheduleResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' DescribeScheduleResponse Data.ByteString.ByteString@ -}
data DescribeScheduleResponse
  = DescribeScheduleResponse'_constructor {_DescribeScheduleResponse'schedule :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule),
                                           _DescribeScheduleResponse'info :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo),
                                           _DescribeScheduleResponse'memo :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo),
                                           _DescribeScheduleResponse'searchAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes),
                                           _DescribeScheduleResponse'conflictToken :: !Data.ByteString.ByteString,
                                           _DescribeScheduleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeScheduleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "schedule" Proto.Temporal.Api.Schedule.V1.Message.Schedule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'schedule
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'schedule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "maybe'schedule" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'schedule
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'schedule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "info" Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'info
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'info = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "maybe'info" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'info
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'info = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "memo" Proto.Temporal.Api.Common.V1.Message.Memo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'memo
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'memo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "maybe'memo" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'memo
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'memo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "searchAttributes" Proto.Temporal.Api.Common.V1.Message.SearchAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'searchAttributes
           (\ x__ y__
              -> x__ {_DescribeScheduleResponse'searchAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "maybe'searchAttributes" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'searchAttributes
           (\ x__ y__
              -> x__ {_DescribeScheduleResponse'searchAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeScheduleResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeScheduleResponse'conflictToken
           (\ x__ y__ -> x__ {_DescribeScheduleResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeScheduleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeScheduleResponse"
  packedMessageDescriptor _
    = "\n\
      \\CANDescribeScheduleResponse\DC2>\n\
      \\bschedule\CAN\SOH \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2:\n\
      \\EOTinfo\CAN\STX \SOH(\v2&.temporal.api.schedule.v1.ScheduleInfoR\EOTinfo\DC20\n\
      \\EOTmemo\CAN\ETX \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
      \\DC1search_attributes\CAN\EOT \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC2%\n\
      \\SOconflict_token\CAN\ENQ \SOH(\fR\rconflictToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        schedule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.Schedule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'schedule")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleResponse
        info__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.ScheduleInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'info")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleResponse
        memo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "memo"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Memo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'memo")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleResponse
        searchAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "search_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.SearchAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'searchAttributes")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleResponse
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor DescribeScheduleResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, schedule__field_descriptor),
           (Data.ProtoLens.Tag 2, info__field_descriptor),
           (Data.ProtoLens.Tag 3, memo__field_descriptor),
           (Data.ProtoLens.Tag 4, searchAttributes__field_descriptor),
           (Data.ProtoLens.Tag 5, conflictToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeScheduleResponse'_unknownFields
        (\ x__ y__ -> x__ {_DescribeScheduleResponse'_unknownFields = y__})
  defMessage
    = DescribeScheduleResponse'_constructor
        {_DescribeScheduleResponse'schedule = Prelude.Nothing,
         _DescribeScheduleResponse'info = Prelude.Nothing,
         _DescribeScheduleResponse'memo = Prelude.Nothing,
         _DescribeScheduleResponse'searchAttributes = Prelude.Nothing,
         _DescribeScheduleResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _DescribeScheduleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeScheduleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeScheduleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "schedule"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"schedule") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "info"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"info") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "memo"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"memo") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "search_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"searchAttributes") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeScheduleResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'schedule") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'info") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'memo") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'searchAttributes") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"conflictToken") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     _v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData DescribeScheduleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeScheduleResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeScheduleResponse'schedule x__)
                (Control.DeepSeq.deepseq
                   (_DescribeScheduleResponse'info x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeScheduleResponse'memo x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeScheduleResponse'searchAttributes x__)
                         (Control.DeepSeq.deepseq
                            (_DescribeScheduleResponse'conflictToken x__) ())))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' DescribeTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' DescribeTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueueType' @:: Lens' DescribeTaskQueueRequest Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.includeTaskQueueStatus' @:: Lens' DescribeTaskQueueRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.apiMode' @:: Lens' DescribeTaskQueueRequest Proto.Temporal.Api.Enums.V1.TaskQueue.DescribeTaskQueueMode@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versions' @:: Lens' DescribeTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'versions' @:: Lens' DescribeTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueueTypes' @:: Lens' DescribeTaskQueueRequest [Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'taskQueueTypes' @:: Lens' DescribeTaskQueueRequest (Data.Vector.Vector Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reportStats' @:: Lens' DescribeTaskQueueRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reportPollers' @:: Lens' DescribeTaskQueueRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reportTaskReachability' @:: Lens' DescribeTaskQueueRequest Prelude.Bool@ -}
data DescribeTaskQueueRequest
  = DescribeTaskQueueRequest'_constructor {_DescribeTaskQueueRequest'namespace :: !Data.Text.Text,
                                           _DescribeTaskQueueRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                           _DescribeTaskQueueRequest'taskQueueType :: !Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType,
                                           _DescribeTaskQueueRequest'includeTaskQueueStatus :: !Prelude.Bool,
                                           _DescribeTaskQueueRequest'apiMode :: !Proto.Temporal.Api.Enums.V1.TaskQueue.DescribeTaskQueueMode,
                                           _DescribeTaskQueueRequest'versions :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection),
                                           _DescribeTaskQueueRequest'taskQueueTypes :: !(Data.Vector.Vector Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType),
                                           _DescribeTaskQueueRequest'reportStats :: !Prelude.Bool,
                                           _DescribeTaskQueueRequest'reportPollers :: !Prelude.Bool,
                                           _DescribeTaskQueueRequest'reportTaskReachability :: !Prelude.Bool,
                                           _DescribeTaskQueueRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeTaskQueueRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'namespace
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "taskQueueType" Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'taskQueueType
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'taskQueueType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "includeTaskQueueStatus" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'includeTaskQueueStatus
           (\ x__ y__
              -> x__ {_DescribeTaskQueueRequest'includeTaskQueueStatus = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "apiMode" Proto.Temporal.Api.Enums.V1.TaskQueue.DescribeTaskQueueMode where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'apiMode
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'apiMode = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "versions" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'versions
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'versions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "maybe'versions" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'versions
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'versions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "taskQueueTypes" [Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'taskQueueTypes
           (\ x__ y__
              -> x__ {_DescribeTaskQueueRequest'taskQueueTypes = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "vec'taskQueueTypes" (Data.Vector.Vector Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'taskQueueTypes
           (\ x__ y__
              -> x__ {_DescribeTaskQueueRequest'taskQueueTypes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "reportStats" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'reportStats
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'reportStats = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "reportPollers" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'reportPollers
           (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'reportPollers = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueRequest "reportTaskReachability" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueRequest'reportTaskReachability
           (\ x__ y__
              -> x__ {_DescribeTaskQueueRequest'reportTaskReachability = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeTaskQueueRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeTaskQueueRequest"
  packedMessageDescriptor _
    = "\n\
      \\CANDescribeTaskQueueRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
      \\n\
      \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2L\n\
      \\SItask_queue_type\CAN\ETX \SOH(\SO2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\DC29\n\
      \\EMinclude_task_queue_status\CAN\EOT \SOH(\bR\SYNincludeTaskQueueStatus\DC2G\n\
      \\bapi_mode\CAN\ENQ \SOH(\SO2,.temporal.api.enums.v1.DescribeTaskQueueModeR\aapiMode\DC2P\n\
      \\bversions\CAN\ACK \SOH(\v24.temporal.api.taskqueue.v1.TaskQueueVersionSelectionR\bversions\DC2N\n\
      \\DLEtask_queue_types\CAN\a \ETX(\SO2$.temporal.api.enums.v1.TaskQueueTypeR\SOtaskQueueTypes\DC2!\n\
      \\freport_stats\CAN\b \SOH(\bR\vreportStats\DC2%\n\
      \\SOreport_pollers\CAN\t \SOH(\bR\rreportPollers\DC28\n\
      \\CANreport_task_reachability\CAN\n\
      \ \SOH(\bR\SYNreportTaskReachability"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        taskQueueType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskQueueType")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        includeTaskQueueStatus__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "include_task_queue_status"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"includeTaskQueueStatus")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        apiMode__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "api_mode"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.TaskQueue.DescribeTaskQueueMode)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"apiMode")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        versions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionSelection)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'versions")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        taskQueueTypes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue_types"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Packed
                 (Data.ProtoLens.Field.field @"taskQueueTypes")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        reportStats__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "report_stats"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"reportStats")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        reportPollers__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "report_pollers"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"reportPollers")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
        reportTaskReachability__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "report_task_reachability"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"reportTaskReachability")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, taskQueueType__field_descriptor),
           (Data.ProtoLens.Tag 4, includeTaskQueueStatus__field_descriptor),
           (Data.ProtoLens.Tag 5, apiMode__field_descriptor),
           (Data.ProtoLens.Tag 6, versions__field_descriptor),
           (Data.ProtoLens.Tag 7, taskQueueTypes__field_descriptor),
           (Data.ProtoLens.Tag 8, reportStats__field_descriptor),
           (Data.ProtoLens.Tag 9, reportPollers__field_descriptor),
           (Data.ProtoLens.Tag 10, reportTaskReachability__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeTaskQueueRequest'_unknownFields
        (\ x__ y__ -> x__ {_DescribeTaskQueueRequest'_unknownFields = y__})
  defMessage
    = DescribeTaskQueueRequest'_constructor
        {_DescribeTaskQueueRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'taskQueue = Prelude.Nothing,
         _DescribeTaskQueueRequest'taskQueueType = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'includeTaskQueueStatus = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'apiMode = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'versions = Prelude.Nothing,
         _DescribeTaskQueueRequest'taskQueueTypes = Data.Vector.Generic.empty,
         _DescribeTaskQueueRequest'reportStats = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'reportPollers = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'reportTaskReachability = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeTaskQueueRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Enums.V1.TaskQueue.TaskQueueType
             -> Data.ProtoLens.Encoding.Bytes.Parser DescribeTaskQueueRequest
        loop x mutable'taskQueueTypes
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'taskQueueTypes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                 (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                    mutable'taskQueueTypes)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'taskQueueTypes")
                              frozen'taskQueueTypes x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'taskQueueTypes
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                                  mutable'taskQueueTypes
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "task_queue_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"taskQueueType") y x)
                                  mutable'taskQueueTypes
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "include_task_queue_status"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"includeTaskQueueStatus") y x)
                                  mutable'taskQueueTypes
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "api_mode"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"apiMode") y x)
                                  mutable'taskQueueTypes
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "versions"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"versions") y x)
                                  mutable'taskQueueTypes
                        56
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (Prelude.fmap
                                           Prelude.toEnum
                                           (Prelude.fmap
                                              Prelude.fromIntegral
                                              Data.ProtoLens.Encoding.Bytes.getVarInt))
                                        "task_queue_types"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'taskQueueTypes y)
                                loop x v
                        58
                          -> do y <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                        Data.ProtoLens.Encoding.Bytes.isolate
                                          (Prelude.fromIntegral len)
                                          ((let
                                              ploop qs
                                                = do packedEnd <- Data.ProtoLens.Encoding.Bytes.atEnd
                                                     if packedEnd then
                                                         Prelude.return qs
                                                     else
                                                         do !q <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                    (Prelude.fmap
                                                                       Prelude.toEnum
                                                                       (Prelude.fmap
                                                                          Prelude.fromIntegral
                                                                          Data.ProtoLens.Encoding.Bytes.getVarInt))
                                                                    "task_queue_types"
                                                            qs' <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                                     (Data.ProtoLens.Encoding.Growing.append
                                                                        qs q)
                                                            ploop qs'
                                            in ploop)
                                             mutable'taskQueueTypes)
                                loop x y
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "report_stats"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"reportStats") y x)
                                  mutable'taskQueueTypes
                        72
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "report_pollers"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"reportPollers") y x)
                                  mutable'taskQueueTypes
                        80
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "report_task_reachability"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"reportTaskReachability") y x)
                                  mutable'taskQueueTypes
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'taskQueueTypes
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'taskQueueTypes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'taskQueueTypes)
          "DescribeTaskQueueRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"taskQueueType") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                               Prelude.fromEnum _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"includeTaskQueueStatus") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0) _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"apiMode") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt
                                        Prelude.fromIntegral)
                                     Prelude.fromEnum _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'versions") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (let
                                  p = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"vec'taskQueueTypes") _x
                                in
                                  if Data.Vector.Generic.null p then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           (Data.ProtoLens.Encoding.Bytes.runBuilder
                                              (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                 ((Prelude..)
                                                    ((Prelude..)
                                                       Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       Prelude.fromIntegral)
                                                    Prelude.fromEnum)
                                                 p))))
                               ((Data.Monoid.<>)
                                  (let
                                     _v
                                       = Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"reportStats") _x
                                   in
                                     if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                         Data.Monoid.mempty
                                     else
                                         (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                                           ((Prelude..)
                                              Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (\ b -> if b then 1 else 0) _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"reportPollers") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 72)
                                              ((Prelude..)
                                                 Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (\ b -> if b then 1 else 0) _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field
                                                    @"reportTaskReachability")
                                                 _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 80)
                                                 ((Prelude..)
                                                    Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (\ b -> if b then 1 else 0) _v))
                                        (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                           (Lens.Family2.view
                                              Data.ProtoLens.unknownFields _x)))))))))))
instance Control.DeepSeq.NFData DescribeTaskQueueRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeTaskQueueRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeTaskQueueRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeTaskQueueRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeTaskQueueRequest'taskQueueType x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeTaskQueueRequest'includeTaskQueueStatus x__)
                         (Control.DeepSeq.deepseq
                            (_DescribeTaskQueueRequest'apiMode x__)
                            (Control.DeepSeq.deepseq
                               (_DescribeTaskQueueRequest'versions x__)
                               (Control.DeepSeq.deepseq
                                  (_DescribeTaskQueueRequest'taskQueueTypes x__)
                                  (Control.DeepSeq.deepseq
                                     (_DescribeTaskQueueRequest'reportStats x__)
                                     (Control.DeepSeq.deepseq
                                        (_DescribeTaskQueueRequest'reportPollers x__)
                                        (Control.DeepSeq.deepseq
                                           (_DescribeTaskQueueRequest'reportTaskReachability x__)
                                           ()))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pollers' @:: Lens' DescribeTaskQueueResponse [Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'pollers' @:: Lens' DescribeTaskQueueResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueueStatus' @:: Lens' DescribeTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueueStatus' @:: Lens' DescribeTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versionsInfo' @:: Lens' DescribeTaskQueueResponse (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versioningInfo' @:: Lens' DescribeTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'versioningInfo' @:: Lens' DescribeTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo)@ -}
data DescribeTaskQueueResponse
  = DescribeTaskQueueResponse'_constructor {_DescribeTaskQueueResponse'pollers :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo),
                                            _DescribeTaskQueueResponse'taskQueueStatus :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus),
                                            _DescribeTaskQueueResponse'versionsInfo :: !(Data.Map.Map Data.Text.Text Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo),
                                            _DescribeTaskQueueResponse'versioningInfo :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo),
                                            _DescribeTaskQueueResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeTaskQueueResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "pollers" [Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'pollers
           (\ x__ y__ -> x__ {_DescribeTaskQueueResponse'pollers = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "vec'pollers" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'pollers
           (\ x__ y__ -> x__ {_DescribeTaskQueueResponse'pollers = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "taskQueueStatus" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'taskQueueStatus
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'taskQueueStatus = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "maybe'taskQueueStatus" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'taskQueueStatus
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'taskQueueStatus = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "versionsInfo" (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'versionsInfo
           (\ x__ y__ -> x__ {_DescribeTaskQueueResponse'versionsInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "versioningInfo" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'versioningInfo
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'versioningInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse "maybe'versioningInfo" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'versioningInfo
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'versioningInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeTaskQueueResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeTaskQueueResponse"
  packedMessageDescriptor _
    = "\n\
      \\EMDescribeTaskQueueResponse\DC2?\n\
      \\apollers\CAN\SOH \ETX(\v2%.temporal.api.taskqueue.v1.PollerInfoR\apollers\DC2V\n\
      \\DC1task_queue_status\CAN\STX \SOH(\v2*.temporal.api.taskqueue.v1.TaskQueueStatusR\SItaskQueueStatus\DC2q\n\
      \\rversions_info\CAN\ETX \ETX(\v2L.temporal.api.workflowservice.v1.DescribeTaskQueueResponse.VersionsInfoEntryR\fversionsInfo\DC2[\n\
      \\SIversioning_info\CAN\EOT \SOH(\v22.temporal.api.taskqueue.v1.TaskQueueVersioningInfoR\SOversioningInfo\SUBp\n\
      \\DC1VersionsInfoEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2E\n\
      \\ENQvalue\CAN\STX \SOH(\v2/.temporal.api.taskqueue.v1.TaskQueueVersionInfoR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        pollers__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "pollers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"pollers")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse
        taskQueueStatus__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue_status"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueStatus)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueueStatus")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse
        versionsInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versions_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor DescribeTaskQueueResponse'VersionsInfoEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"versionsInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse
        versioningInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versioning_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersioningInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'versioningInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, pollers__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueueStatus__field_descriptor),
           (Data.ProtoLens.Tag 3, versionsInfo__field_descriptor),
           (Data.ProtoLens.Tag 4, versioningInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeTaskQueueResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeTaskQueueResponse'_unknownFields = y__})
  defMessage
    = DescribeTaskQueueResponse'_constructor
        {_DescribeTaskQueueResponse'pollers = Data.Vector.Generic.empty,
         _DescribeTaskQueueResponse'taskQueueStatus = Prelude.Nothing,
         _DescribeTaskQueueResponse'versionsInfo = Data.Map.empty,
         _DescribeTaskQueueResponse'versioningInfo = Prelude.Nothing,
         _DescribeTaskQueueResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeTaskQueueResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.PollerInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser DescribeTaskQueueResponse
        loop x mutable'pollers
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'pollers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'pollers)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'pollers") frozen'pollers x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "pollers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'pollers y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue_status"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"taskQueueStatus") y x)
                                  mutable'pollers
                        26
                          -> do !(entry :: DescribeTaskQueueResponse'VersionsInfoEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                             (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                 Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                   (Prelude.fromIntegral
                                                                                                      len)
                                                                                                   Data.ProtoLens.parseMessage)
                                                                                             "versions_info"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"versionsInfo")
                                        (\ !t -> Data.Map.insert key value t) x)
                                     mutable'pollers)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "versioning_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"versioningInfo") y x)
                                  mutable'pollers
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'pollers
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'pollers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'pollers)
          "DescribeTaskQueueResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'pollers") _x))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'taskQueueStatus") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (Data.Monoid.mconcat
                      (Prelude.map
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"key") (Prelude.fst _v)
                                       (Lens.Family2.set
                                          (Data.ProtoLens.Field.field @"value") (Prelude.snd _v)
                                          (Data.ProtoLens.defMessage ::
                                             DescribeTaskQueueResponse'VersionsInfoEntry)))))
                         (Data.Map.toList
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"versionsInfo") _x))))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'versioningInfo") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData DescribeTaskQueueResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeTaskQueueResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeTaskQueueResponse'pollers x__)
                (Control.DeepSeq.deepseq
                   (_DescribeTaskQueueResponse'taskQueueStatus x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeTaskQueueResponse'versionsInfo x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeTaskQueueResponse'versioningInfo x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' DescribeTaskQueueResponse'VersionsInfoEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' DescribeTaskQueueResponse'VersionsInfoEntry Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'value' @:: Lens' DescribeTaskQueueResponse'VersionsInfoEntry (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo)@ -}
data DescribeTaskQueueResponse'VersionsInfoEntry
  = DescribeTaskQueueResponse'VersionsInfoEntry'_constructor {_DescribeTaskQueueResponse'VersionsInfoEntry'key :: !Data.Text.Text,
                                                              _DescribeTaskQueueResponse'VersionsInfoEntry'value :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo),
                                                              _DescribeTaskQueueResponse'VersionsInfoEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeTaskQueueResponse'VersionsInfoEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse'VersionsInfoEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'VersionsInfoEntry'key
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'VersionsInfoEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse'VersionsInfoEntry "value" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'VersionsInfoEntry'value
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'VersionsInfoEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeTaskQueueResponse'VersionsInfoEntry "maybe'value" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeTaskQueueResponse'VersionsInfoEntry'value
           (\ x__ y__
              -> x__ {_DescribeTaskQueueResponse'VersionsInfoEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeTaskQueueResponse'VersionsInfoEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeTaskQueueResponse.VersionsInfoEntry"
  packedMessageDescriptor _
    = "\n\
      \\DC1VersionsInfoEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2E\n\
      \\ENQvalue\CAN\STX \SOH(\v2/.temporal.api.taskqueue.v1.TaskQueueVersionInfoR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse'VersionsInfoEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueVersionInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor DescribeTaskQueueResponse'VersionsInfoEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeTaskQueueResponse'VersionsInfoEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_DescribeTaskQueueResponse'VersionsInfoEntry'_unknownFields = y__})
  defMessage
    = DescribeTaskQueueResponse'VersionsInfoEntry'_constructor
        {_DescribeTaskQueueResponse'VersionsInfoEntry'key = Data.ProtoLens.fieldDefault,
         _DescribeTaskQueueResponse'VersionsInfoEntry'value = Prelude.Nothing,
         _DescribeTaskQueueResponse'VersionsInfoEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeTaskQueueResponse'VersionsInfoEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeTaskQueueResponse'VersionsInfoEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "VersionsInfoEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeTaskQueueResponse'VersionsInfoEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeTaskQueueResponse'VersionsInfoEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeTaskQueueResponse'VersionsInfoEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_DescribeTaskQueueResponse'VersionsInfoEntry'value x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeWorkerDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentName' @:: Lens' DescribeWorkerDeploymentRequest Data.Text.Text@ -}
data DescribeWorkerDeploymentRequest
  = DescribeWorkerDeploymentRequest'_constructor {_DescribeWorkerDeploymentRequest'namespace :: !Data.Text.Text,
                                                  _DescribeWorkerDeploymentRequest'deploymentName :: !Data.Text.Text,
                                                  _DescribeWorkerDeploymentRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkerDeploymentRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentRequest'namespace
           (\ x__ y__
              -> x__ {_DescribeWorkerDeploymentRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentRequest "deploymentName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentRequest'deploymentName
           (\ x__ y__
              -> x__ {_DescribeWorkerDeploymentRequest'deploymentName = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkerDeploymentRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkerDeploymentRequest"
  packedMessageDescriptor _
    = "\n\
      \\USDescribeWorkerDeploymentRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
      \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentRequest
        deploymentName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"deploymentName")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deploymentName__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkerDeploymentRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkerDeploymentRequest'_unknownFields = y__})
  defMessage
    = DescribeWorkerDeploymentRequest'_constructor
        {_DescribeWorkerDeploymentRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeWorkerDeploymentRequest'deploymentName = Data.ProtoLens.fieldDefault,
         _DescribeWorkerDeploymentRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkerDeploymentRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkerDeploymentRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "deployment_name"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentName") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeWorkerDeploymentRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"deploymentName") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeWorkerDeploymentRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkerDeploymentRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkerDeploymentRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkerDeploymentRequest'deploymentName x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' DescribeWorkerDeploymentResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerDeploymentInfo' @:: Lens' DescribeWorkerDeploymentResponse Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerDeploymentInfo' @:: Lens' DescribeWorkerDeploymentResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo)@ -}
data DescribeWorkerDeploymentResponse
  = DescribeWorkerDeploymentResponse'_constructor {_DescribeWorkerDeploymentResponse'conflictToken :: !Data.ByteString.ByteString,
                                                   _DescribeWorkerDeploymentResponse'workerDeploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo),
                                                   _DescribeWorkerDeploymentResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkerDeploymentResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentResponse'conflictToken
           (\ x__ y__
              -> x__ {_DescribeWorkerDeploymentResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentResponse "workerDeploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentResponse'workerDeploymentInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkerDeploymentResponse'workerDeploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentResponse "maybe'workerDeploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentResponse'workerDeploymentInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkerDeploymentResponse'workerDeploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkerDeploymentResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkerDeploymentResponse"
  packedMessageDescriptor _
    = "\n\
      \ DescribeWorkerDeploymentResponse\DC2%\n\
      \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2f\n\
      \\SYNworker_deployment_info\CAN\STX \SOH(\v20.temporal.api.deployment.v1.WorkerDeploymentInfoR\DC4workerDeploymentInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentResponse
        workerDeploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerDeploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 2, workerDeploymentInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkerDeploymentResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkerDeploymentResponse'_unknownFields = y__})
  defMessage
    = DescribeWorkerDeploymentResponse'_constructor
        {_DescribeWorkerDeploymentResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _DescribeWorkerDeploymentResponse'workerDeploymentInfo = Prelude.Nothing,
         _DescribeWorkerDeploymentResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkerDeploymentResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkerDeploymentResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerDeploymentInfo") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeWorkerDeploymentResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"conflictToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workerDeploymentInfo") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeWorkerDeploymentResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkerDeploymentResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkerDeploymentResponse'conflictToken x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkerDeploymentResponse'workerDeploymentInfo x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeWorkerDeploymentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.version' @:: Lens' DescribeWorkerDeploymentVersionRequest Data.Text.Text@ -}
data DescribeWorkerDeploymentVersionRequest
  = DescribeWorkerDeploymentVersionRequest'_constructor {_DescribeWorkerDeploymentVersionRequest'namespace :: !Data.Text.Text,
                                                         _DescribeWorkerDeploymentVersionRequest'version :: !Data.Text.Text,
                                                         _DescribeWorkerDeploymentVersionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkerDeploymentVersionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentVersionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentVersionRequest'namespace
           (\ x__ y__
              -> x__ {_DescribeWorkerDeploymentVersionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentVersionRequest "version" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentVersionRequest'version
           (\ x__ y__
              -> x__ {_DescribeWorkerDeploymentVersionRequest'version = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkerDeploymentVersionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkerDeploymentVersionRequest"
  packedMessageDescriptor _
    = "\n\
      \&DescribeWorkerDeploymentVersionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
      \\aversion\CAN\STX \SOH(\tR\aversion"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentVersionRequest
        version__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"version")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentVersionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, version__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkerDeploymentVersionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_DescribeWorkerDeploymentVersionRequest'_unknownFields = y__})
  defMessage
    = DescribeWorkerDeploymentVersionRequest'_constructor
        {_DescribeWorkerDeploymentVersionRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeWorkerDeploymentVersionRequest'version = Data.ProtoLens.fieldDefault,
         _DescribeWorkerDeploymentVersionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkerDeploymentVersionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkerDeploymentVersionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "version"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"version") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeWorkerDeploymentVersionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"version") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeWorkerDeploymentVersionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkerDeploymentVersionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkerDeploymentVersionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkerDeploymentVersionRequest'version x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerDeploymentVersionInfo' @:: Lens' DescribeWorkerDeploymentVersionResponse Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerDeploymentVersionInfo' @:: Lens' DescribeWorkerDeploymentVersionResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo)@ -}
data DescribeWorkerDeploymentVersionResponse
  = DescribeWorkerDeploymentVersionResponse'_constructor {_DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo),
                                                          _DescribeWorkerDeploymentVersionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkerDeploymentVersionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentVersionResponse "workerDeploymentVersionInfo" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkerDeploymentVersionResponse "maybe'workerDeploymentVersionInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkerDeploymentVersionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkerDeploymentVersionResponse"
  packedMessageDescriptor _
    = "\n\
      \'DescribeWorkerDeploymentVersionResponse\DC2|\n\
      \\RSworker_deployment_version_info\CAN\SOH \SOH(\v27.temporal.api.deployment.v1.WorkerDeploymentVersionInfoR\ESCworkerDeploymentVersionInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        workerDeploymentVersionInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_deployment_version_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentVersionInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'workerDeploymentVersionInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkerDeploymentVersionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, 
            workerDeploymentVersionInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkerDeploymentVersionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_DescribeWorkerDeploymentVersionResponse'_unknownFields = y__})
  defMessage
    = DescribeWorkerDeploymentVersionResponse'_constructor
        {_DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo = Prelude.Nothing,
         _DescribeWorkerDeploymentVersionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkerDeploymentVersionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkerDeploymentVersionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_deployment_version_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerDeploymentVersionInfo") y
                                     x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeWorkerDeploymentVersionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'workerDeploymentVersionInfo")
                    _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData DescribeWorkerDeploymentVersionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkerDeploymentVersionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkerDeploymentVersionResponse'workerDeploymentVersionInfo
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' DescribeWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' DescribeWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@ -}
data DescribeWorkflowExecutionRequest
  = DescribeWorkflowExecutionRequest'_constructor {_DescribeWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                   _DescribeWorkflowExecutionRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                   _DescribeWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionRequest'execution
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionRequest'execution
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \ DescribeWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = DescribeWorkflowExecutionRequest'_constructor
        {_DescribeWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeWorkflowExecutionRequest'execution = Prelude.Nothing,
         _DescribeWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkflowExecutionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DescribeWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkflowExecutionRequest'execution x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executionConfig' @:: Lens' DescribeWorkflowExecutionResponse Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'executionConfig' @:: Lens' DescribeWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionInfo' @:: Lens' DescribeWorkflowExecutionResponse Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionInfo' @:: Lens' DescribeWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pendingActivities' @:: Lens' DescribeWorkflowExecutionResponse [Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'pendingActivities' @:: Lens' DescribeWorkflowExecutionResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pendingChildren' @:: Lens' DescribeWorkflowExecutionResponse [Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'pendingChildren' @:: Lens' DescribeWorkflowExecutionResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pendingWorkflowTask' @:: Lens' DescribeWorkflowExecutionResponse Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'pendingWorkflowTask' @:: Lens' DescribeWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.callbacks' @:: Lens' DescribeWorkflowExecutionResponse [Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'callbacks' @:: Lens' DescribeWorkflowExecutionResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pendingNexusOperations' @:: Lens' DescribeWorkflowExecutionResponse [Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'pendingNexusOperations' @:: Lens' DescribeWorkflowExecutionResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExtendedInfo' @:: Lens' DescribeWorkflowExecutionResponse Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExtendedInfo' @:: Lens' DescribeWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo)@ -}
data DescribeWorkflowExecutionResponse
  = DescribeWorkflowExecutionResponse'_constructor {_DescribeWorkflowExecutionResponse'executionConfig :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig),
                                                    _DescribeWorkflowExecutionResponse'workflowExecutionInfo :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                    _DescribeWorkflowExecutionResponse'pendingActivities :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo),
                                                    _DescribeWorkflowExecutionResponse'pendingChildren :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo),
                                                    _DescribeWorkflowExecutionResponse'pendingWorkflowTask :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo),
                                                    _DescribeWorkflowExecutionResponse'callbacks :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo),
                                                    _DescribeWorkflowExecutionResponse'pendingNexusOperations :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo),
                                                    _DescribeWorkflowExecutionResponse'workflowExtendedInfo :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo),
                                                    _DescribeWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "executionConfig" Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'executionConfig
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'executionConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "maybe'executionConfig" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'executionConfig
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'executionConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "workflowExecutionInfo" Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'workflowExecutionInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'workflowExecutionInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "maybe'workflowExecutionInfo" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'workflowExecutionInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'workflowExecutionInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "pendingActivities" [Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingActivities
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingActivities = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "vec'pendingActivities" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingActivities
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingActivities = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "pendingChildren" [Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingChildren
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'pendingChildren = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "vec'pendingChildren" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingChildren
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'pendingChildren = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "pendingWorkflowTask" Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingWorkflowTask
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingWorkflowTask = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "maybe'pendingWorkflowTask" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingWorkflowTask
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingWorkflowTask = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "callbacks" [Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'callbacks
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'callbacks = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "vec'callbacks" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'callbacks
           (\ x__ y__
              -> x__ {_DescribeWorkflowExecutionResponse'callbacks = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "pendingNexusOperations" [Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingNexusOperations
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingNexusOperations = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "vec'pendingNexusOperations" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'pendingNexusOperations
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'pendingNexusOperations = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "workflowExtendedInfo" Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'workflowExtendedInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'workflowExtendedInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowExecutionResponse "maybe'workflowExtendedInfo" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowExecutionResponse'workflowExtendedInfo
           (\ x__ y__
              -> x__
                   {_DescribeWorkflowExecutionResponse'workflowExtendedInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \!DescribeWorkflowExecutionResponse\DC2\\\n\
      \\DLEexecution_config\CAN\SOH \SOH(\v21.temporal.api.workflow.v1.WorkflowExecutionConfigR\SIexecutionConfig\DC2g\n\
      \\ETBworkflow_execution_info\CAN\STX \SOH(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\NAKworkflowExecutionInfo\DC2\\\n\
      \\DC2pending_activities\CAN\ETX \ETX(\v2-.temporal.api.workflow.v1.PendingActivityInfoR\DC1pendingActivities\DC2^\n\
      \\DLEpending_children\CAN\EOT \ETX(\v23.temporal.api.workflow.v1.PendingChildExecutionInfoR\SIpendingChildren\DC2e\n\
      \\NAKpending_workflow_task\CAN\ENQ \SOH(\v21.temporal.api.workflow.v1.PendingWorkflowTaskInfoR\DC3pendingWorkflowTask\DC2D\n\
      \\tcallbacks\CAN\ACK \ETX(\v2&.temporal.api.workflow.v1.CallbackInfoR\tcallbacks\DC2m\n\
      \\CANpending_nexus_operations\CAN\a \ETX(\v23.temporal.api.workflow.v1.PendingNexusOperationInfoR\SYNpendingNexusOperations\DC2m\n\
      \\SYNworkflow_extended_info\CAN\b \SOH(\v27.temporal.api.workflow.v1.WorkflowExecutionExtendedInfoR\DC4workflowExtendedInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executionConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'executionConfig")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        workflowExecutionInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecutionInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        pendingActivities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "pending_activities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"pendingActivities")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        pendingChildren__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "pending_children"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"pendingChildren")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        pendingWorkflowTask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "pending_workflow_task"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.PendingWorkflowTaskInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'pendingWorkflowTask")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        callbacks__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "callbacks"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"callbacks")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        pendingNexusOperations__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "pending_nexus_operations"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"pendingNexusOperations")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
        workflowExtendedInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_extended_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionExtendedInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExtendedInfo")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowExecutionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executionConfig__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecutionInfo__field_descriptor),
           (Data.ProtoLens.Tag 3, pendingActivities__field_descriptor),
           (Data.ProtoLens.Tag 4, pendingChildren__field_descriptor),
           (Data.ProtoLens.Tag 5, pendingWorkflowTask__field_descriptor),
           (Data.ProtoLens.Tag 6, callbacks__field_descriptor),
           (Data.ProtoLens.Tag 7, pendingNexusOperations__field_descriptor),
           (Data.ProtoLens.Tag 8, workflowExtendedInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = DescribeWorkflowExecutionResponse'_constructor
        {_DescribeWorkflowExecutionResponse'executionConfig = Prelude.Nothing,
         _DescribeWorkflowExecutionResponse'workflowExecutionInfo = Prelude.Nothing,
         _DescribeWorkflowExecutionResponse'pendingActivities = Data.Vector.Generic.empty,
         _DescribeWorkflowExecutionResponse'pendingChildren = Data.Vector.Generic.empty,
         _DescribeWorkflowExecutionResponse'pendingWorkflowTask = Prelude.Nothing,
         _DescribeWorkflowExecutionResponse'callbacks = Data.Vector.Generic.empty,
         _DescribeWorkflowExecutionResponse'pendingNexusOperations = Data.Vector.Generic.empty,
         _DescribeWorkflowExecutionResponse'workflowExtendedInfo = Prelude.Nothing,
         _DescribeWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.CallbackInfo
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.PendingActivityInfo
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.PendingChildExecutionInfo
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.PendingNexusOperationInfo
                      -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkflowExecutionResponse
        loop
          x
          mutable'callbacks
          mutable'pendingActivities
          mutable'pendingChildren
          mutable'pendingNexusOperations
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'callbacks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                               mutable'callbacks)
                      frozen'pendingActivities <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                    (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                       mutable'pendingActivities)
                      frozen'pendingChildren <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'pendingChildren)
                      frozen'pendingNexusOperations <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                            mutable'pendingNexusOperations)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'callbacks") frozen'callbacks
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'pendingActivities")
                                 frozen'pendingActivities
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'pendingChildren")
                                    frozen'pendingChildren
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'pendingNexusOperations")
                                       frozen'pendingNexusOperations x)))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"executionConfig") y x)
                                  mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren mutable'pendingNexusOperations
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionInfo") y x)
                                  mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren mutable'pendingNexusOperations
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "pending_activities"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'pendingActivities y)
                                loop
                                  x mutable'callbacks v mutable'pendingChildren
                                  mutable'pendingNexusOperations
                        34
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "pending_children"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'pendingChildren y)
                                loop
                                  x mutable'callbacks mutable'pendingActivities v
                                  mutable'pendingNexusOperations
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "pending_workflow_task"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"pendingWorkflowTask") y x)
                                  mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren mutable'pendingNexusOperations
                        50
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "callbacks"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'callbacks y)
                                loop
                                  x v mutable'pendingActivities mutable'pendingChildren
                                  mutable'pendingNexusOperations
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "pending_nexus_operations"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'pendingNexusOperations y)
                                loop
                                  x mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren v
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_extended_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExtendedInfo") y x)
                                  mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren mutable'pendingNexusOperations
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'callbacks mutable'pendingActivities
                                  mutable'pendingChildren mutable'pendingNexusOperations
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'callbacks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                     Data.ProtoLens.Encoding.Growing.new
              mutable'pendingActivities <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             Data.ProtoLens.Encoding.Growing.new
              mutable'pendingChildren <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              mutable'pendingNexusOperations <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'callbacks
                mutable'pendingActivities mutable'pendingChildren
                mutable'pendingNexusOperations)
          "DescribeWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'executionConfig") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecutionInfo") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage _v))
                      (Lens.Family2.view
                         (Data.ProtoLens.Field.field @"vec'pendingActivities") _x))
                   ((Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage _v))
                         (Lens.Family2.view
                            (Data.ProtoLens.Field.field @"vec'pendingChildren") _x))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'pendingWorkflowTask") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage _v))
                               (Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"vec'callbacks") _x))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.ProtoLens.encodeMessage _v))
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"vec'pendingNexusOperations") _x))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'workflowExtendedInfo")
                                         _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                     (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))))
instance Control.DeepSeq.NFData DescribeWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkflowExecutionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkflowExecutionResponse'executionConfig x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkflowExecutionResponse'workflowExecutionInfo x__)
                   (Control.DeepSeq.deepseq
                      (_DescribeWorkflowExecutionResponse'pendingActivities x__)
                      (Control.DeepSeq.deepseq
                         (_DescribeWorkflowExecutionResponse'pendingChildren x__)
                         (Control.DeepSeq.deepseq
                            (_DescribeWorkflowExecutionResponse'pendingWorkflowTask x__)
                            (Control.DeepSeq.deepseq
                               (_DescribeWorkflowExecutionResponse'callbacks x__)
                               (Control.DeepSeq.deepseq
                                  (_DescribeWorkflowExecutionResponse'pendingNexusOperations x__)
                                  (Control.DeepSeq.deepseq
                                     (_DescribeWorkflowExecutionResponse'workflowExtendedInfo x__)
                                     ()))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' DescribeWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ruleId' @:: Lens' DescribeWorkflowRuleRequest Data.Text.Text@ -}
data DescribeWorkflowRuleRequest
  = DescribeWorkflowRuleRequest'_constructor {_DescribeWorkflowRuleRequest'namespace :: !Data.Text.Text,
                                              _DescribeWorkflowRuleRequest'ruleId :: !Data.Text.Text,
                                              _DescribeWorkflowRuleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkflowRuleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkflowRuleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowRuleRequest'namespace
           (\ x__ y__ -> x__ {_DescribeWorkflowRuleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DescribeWorkflowRuleRequest "ruleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowRuleRequest'ruleId
           (\ x__ y__ -> x__ {_DescribeWorkflowRuleRequest'ruleId = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkflowRuleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkflowRuleRequest"
  packedMessageDescriptor _
    = "\n\
      \\ESCDescribeWorkflowRuleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ETB\n\
      \\arule_id\CAN\STX \SOH(\tR\ACKruleId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowRuleRequest
        ruleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"ruleId")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowRuleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, ruleId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkflowRuleRequest'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkflowRuleRequest'_unknownFields = y__})
  defMessage
    = DescribeWorkflowRuleRequest'_constructor
        {_DescribeWorkflowRuleRequest'namespace = Data.ProtoLens.fieldDefault,
         _DescribeWorkflowRuleRequest'ruleId = Data.ProtoLens.fieldDefault,
         _DescribeWorkflowRuleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkflowRuleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkflowRuleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "rule_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"ruleId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeWorkflowRuleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"ruleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DescribeWorkflowRuleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkflowRuleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkflowRuleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_DescribeWorkflowRuleRequest'ruleId x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' DescribeWorkflowRuleResponse Proto.Temporal.Api.Rules.V1.Message.WorkflowRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' DescribeWorkflowRuleResponse (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)@ -}
data DescribeWorkflowRuleResponse
  = DescribeWorkflowRuleResponse'_constructor {_DescribeWorkflowRuleResponse'rule :: !(Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule),
                                               _DescribeWorkflowRuleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DescribeWorkflowRuleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DescribeWorkflowRuleResponse "rule" Proto.Temporal.Api.Rules.V1.Message.WorkflowRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowRuleResponse'rule
           (\ x__ y__ -> x__ {_DescribeWorkflowRuleResponse'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DescribeWorkflowRuleResponse "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DescribeWorkflowRuleResponse'rule
           (\ x__ y__ -> x__ {_DescribeWorkflowRuleResponse'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Message DescribeWorkflowRuleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.DescribeWorkflowRuleResponse"
  packedMessageDescriptor _
    = "\n\
      \\FSDescribeWorkflowRuleResponse\DC27\n\
      \\EOTrule\CAN\SOH \SOH(\v2#.temporal.api.rules.v1.WorkflowRuleR\EOTrule"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor DescribeWorkflowRuleResponse
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, rule__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DescribeWorkflowRuleResponse'_unknownFields
        (\ x__ y__
           -> x__ {_DescribeWorkflowRuleResponse'_unknownFields = y__})
  defMessage
    = DescribeWorkflowRuleResponse'_constructor
        {_DescribeWorkflowRuleResponse'rule = Prelude.Nothing,
         _DescribeWorkflowRuleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DescribeWorkflowRuleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser DescribeWorkflowRuleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DescribeWorkflowRuleResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData DescribeWorkflowRuleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DescribeWorkflowRuleResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DescribeWorkflowRuleResponse'rule x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ExecuteMultiOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.operations' @:: Lens' ExecuteMultiOperationRequest [ExecuteMultiOperationRequest'Operation]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'operations' @:: Lens' ExecuteMultiOperationRequest (Data.Vector.Vector ExecuteMultiOperationRequest'Operation)@ -}
data ExecuteMultiOperationRequest
  = ExecuteMultiOperationRequest'_constructor {_ExecuteMultiOperationRequest'namespace :: !Data.Text.Text,
                                               _ExecuteMultiOperationRequest'operations :: !(Data.Vector.Vector ExecuteMultiOperationRequest'Operation),
                                               _ExecuteMultiOperationRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ExecuteMultiOperationRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'namespace
           (\ x__ y__ -> x__ {_ExecuteMultiOperationRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest "operations" [ExecuteMultiOperationRequest'Operation] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'operations
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'operations = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest "vec'operations" (Data.Vector.Vector ExecuteMultiOperationRequest'Operation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'operations
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'operations = y__}))
        Prelude.id
instance Data.ProtoLens.Message ExecuteMultiOperationRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ExecuteMultiOperationRequest"
  packedMessageDescriptor _
    = "\n\
      \\FSExecuteMultiOperationRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2g\n\
      \\n\
      \operations\CAN\STX \ETX(\v2G.temporal.api.workflowservice.v1.ExecuteMultiOperationRequest.OperationR\n\
      \operations\SUB\237\SOH\n\
      \\tOperation\DC2g\n\
      \\SOstart_workflow\CAN\SOH \SOH(\v2>.temporal.api.workflowservice.v1.StartWorkflowExecutionRequestH\NULR\rstartWorkflow\DC2j\n\
      \\SIupdate_workflow\CAN\STX \SOH(\v2?.temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequestH\NULR\SOupdateWorkflowB\v\n\
      \\toperation"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationRequest
        operations__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "operations"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor ExecuteMultiOperationRequest'Operation)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"operations")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, operations__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ExecuteMultiOperationRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ExecuteMultiOperationRequest'_unknownFields = y__})
  defMessage
    = ExecuteMultiOperationRequest'_constructor
        {_ExecuteMultiOperationRequest'namespace = Data.ProtoLens.fieldDefault,
         _ExecuteMultiOperationRequest'operations = Data.Vector.Generic.empty,
         _ExecuteMultiOperationRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ExecuteMultiOperationRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld ExecuteMultiOperationRequest'Operation
             -> Data.ProtoLens.Encoding.Bytes.Parser ExecuteMultiOperationRequest
        loop x mutable'operations
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'operations <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'operations)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'operations") frozen'operations
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'operations
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "operations"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'operations y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'operations
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'operations <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'operations)
          "ExecuteMultiOperationRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'operations") _x))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ExecuteMultiOperationRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ExecuteMultiOperationRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ExecuteMultiOperationRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ExecuteMultiOperationRequest'operations x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'operation' @:: Lens' ExecuteMultiOperationRequest'Operation (Prelude.Maybe ExecuteMultiOperationRequest'Operation'Operation)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startWorkflow' @:: Lens' ExecuteMultiOperationRequest'Operation (Prelude.Maybe StartWorkflowExecutionRequest)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startWorkflow' @:: Lens' ExecuteMultiOperationRequest'Operation StartWorkflowExecutionRequest@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateWorkflow' @:: Lens' ExecuteMultiOperationRequest'Operation (Prelude.Maybe UpdateWorkflowExecutionRequest)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateWorkflow' @:: Lens' ExecuteMultiOperationRequest'Operation UpdateWorkflowExecutionRequest@ -}
data ExecuteMultiOperationRequest'Operation
  = ExecuteMultiOperationRequest'Operation'_constructor {_ExecuteMultiOperationRequest'Operation'operation :: !(Prelude.Maybe ExecuteMultiOperationRequest'Operation'Operation),
                                                         _ExecuteMultiOperationRequest'Operation'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ExecuteMultiOperationRequest'Operation where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data ExecuteMultiOperationRequest'Operation'Operation
  = ExecuteMultiOperationRequest'Operation'StartWorkflow !StartWorkflowExecutionRequest |
    ExecuteMultiOperationRequest'Operation'UpdateWorkflow !UpdateWorkflowExecutionRequest
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest'Operation "maybe'operation" (Prelude.Maybe ExecuteMultiOperationRequest'Operation'Operation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'Operation'operation
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'Operation'operation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest'Operation "maybe'startWorkflow" (Prelude.Maybe StartWorkflowExecutionRequest) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'Operation'operation
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'Operation'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ExecuteMultiOperationRequest'Operation'StartWorkflow x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ExecuteMultiOperationRequest'Operation'StartWorkflow y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest'Operation "startWorkflow" StartWorkflowExecutionRequest where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'Operation'operation
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'Operation'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ExecuteMultiOperationRequest'Operation'StartWorkflow x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ExecuteMultiOperationRequest'Operation'StartWorkflow y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest'Operation "maybe'updateWorkflow" (Prelude.Maybe UpdateWorkflowExecutionRequest) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'Operation'operation
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'Operation'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ExecuteMultiOperationRequest'Operation'UpdateWorkflow x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ExecuteMultiOperationRequest'Operation'UpdateWorkflow y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationRequest'Operation "updateWorkflow" UpdateWorkflowExecutionRequest where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationRequest'Operation'operation
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationRequest'Operation'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ExecuteMultiOperationRequest'Operation'UpdateWorkflow x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ExecuteMultiOperationRequest'Operation'UpdateWorkflow y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message ExecuteMultiOperationRequest'Operation where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ExecuteMultiOperationRequest.Operation"
  packedMessageDescriptor _
    = "\n\
      \\tOperation\DC2g\n\
      \\SOstart_workflow\CAN\SOH \SOH(\v2>.temporal.api.workflowservice.v1.StartWorkflowExecutionRequestH\NULR\rstartWorkflow\DC2j\n\
      \\SIupdate_workflow\CAN\STX \SOH(\v2?.temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequestH\NULR\SOupdateWorkflowB\v\n\
      \\toperation"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        startWorkflow__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_workflow"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor StartWorkflowExecutionRequest)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startWorkflow")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationRequest'Operation
        updateWorkflow__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_workflow"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkflowExecutionRequest)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateWorkflow")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationRequest'Operation
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, startWorkflow__field_descriptor),
           (Data.ProtoLens.Tag 2, updateWorkflow__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ExecuteMultiOperationRequest'Operation'_unknownFields
        (\ x__ y__
           -> x__
                {_ExecuteMultiOperationRequest'Operation'_unknownFields = y__})
  defMessage
    = ExecuteMultiOperationRequest'Operation'_constructor
        {_ExecuteMultiOperationRequest'Operation'operation = Prelude.Nothing,
         _ExecuteMultiOperationRequest'Operation'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ExecuteMultiOperationRequest'Operation
          -> Data.ProtoLens.Encoding.Bytes.Parser ExecuteMultiOperationRequest'Operation
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_workflow"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startWorkflow") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_workflow"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"updateWorkflow") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Operation"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'operation") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just (ExecuteMultiOperationRequest'Operation'StartWorkflow v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage v)
                (Prelude.Just (ExecuteMultiOperationRequest'Operation'UpdateWorkflow v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData ExecuteMultiOperationRequest'Operation where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ExecuteMultiOperationRequest'Operation'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ExecuteMultiOperationRequest'Operation'operation x__) ())
instance Control.DeepSeq.NFData ExecuteMultiOperationRequest'Operation'Operation where
  rnf (ExecuteMultiOperationRequest'Operation'StartWorkflow x__)
    = Control.DeepSeq.rnf x__
  rnf (ExecuteMultiOperationRequest'Operation'UpdateWorkflow x__)
    = Control.DeepSeq.rnf x__
_ExecuteMultiOperationRequest'Operation'StartWorkflow ::
  Data.ProtoLens.Prism.Prism' ExecuteMultiOperationRequest'Operation'Operation StartWorkflowExecutionRequest
_ExecuteMultiOperationRequest'Operation'StartWorkflow
  = Data.ProtoLens.Prism.prism'
      ExecuteMultiOperationRequest'Operation'StartWorkflow
      (\ p__
         -> case p__ of
              (ExecuteMultiOperationRequest'Operation'StartWorkflow p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ExecuteMultiOperationRequest'Operation'UpdateWorkflow ::
  Data.ProtoLens.Prism.Prism' ExecuteMultiOperationRequest'Operation'Operation UpdateWorkflowExecutionRequest
_ExecuteMultiOperationRequest'Operation'UpdateWorkflow
  = Data.ProtoLens.Prism.prism'
      ExecuteMultiOperationRequest'Operation'UpdateWorkflow
      (\ p__
         -> case p__ of
              (ExecuteMultiOperationRequest'Operation'UpdateWorkflow p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.responses' @:: Lens' ExecuteMultiOperationResponse [ExecuteMultiOperationResponse'Response]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'responses' @:: Lens' ExecuteMultiOperationResponse (Data.Vector.Vector ExecuteMultiOperationResponse'Response)@ -}
data ExecuteMultiOperationResponse
  = ExecuteMultiOperationResponse'_constructor {_ExecuteMultiOperationResponse'responses :: !(Data.Vector.Vector ExecuteMultiOperationResponse'Response),
                                                _ExecuteMultiOperationResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ExecuteMultiOperationResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse "responses" [ExecuteMultiOperationResponse'Response] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'responses
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'responses = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse "vec'responses" (Data.Vector.Vector ExecuteMultiOperationResponse'Response) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'responses
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'responses = y__}))
        Prelude.id
instance Data.ProtoLens.Message ExecuteMultiOperationResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ExecuteMultiOperationResponse"
  packedMessageDescriptor _
    = "\n\
      \\GSExecuteMultiOperationResponse\DC2e\n\
      \\tresponses\CAN\SOH \ETX(\v2G.temporal.api.workflowservice.v1.ExecuteMultiOperationResponse.ResponseR\tresponses\SUB\237\SOH\n\
      \\bResponse\DC2h\n\
      \\SOstart_workflow\CAN\SOH \SOH(\v2?.temporal.api.workflowservice.v1.StartWorkflowExecutionResponseH\NULR\rstartWorkflow\DC2k\n\
      \\SIupdate_workflow\CAN\STX \SOH(\v2@.temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponseH\NULR\SOupdateWorkflowB\n\
      \\n\
      \\bresponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        responses__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "responses"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor ExecuteMultiOperationResponse'Response)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responses")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, responses__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ExecuteMultiOperationResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ExecuteMultiOperationResponse'_unknownFields = y__})
  defMessage
    = ExecuteMultiOperationResponse'_constructor
        {_ExecuteMultiOperationResponse'responses = Data.Vector.Generic.empty,
         _ExecuteMultiOperationResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ExecuteMultiOperationResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld ExecuteMultiOperationResponse'Response
             -> Data.ProtoLens.Encoding.Bytes.Parser ExecuteMultiOperationResponse
        loop x mutable'responses
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'responses <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                               mutable'responses)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'responses") frozen'responses x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "responses"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'responses y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'responses
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'responses <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                     Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'responses)
          "ExecuteMultiOperationResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'responses") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData ExecuteMultiOperationResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ExecuteMultiOperationResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ExecuteMultiOperationResponse'responses x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'response' @:: Lens' ExecuteMultiOperationResponse'Response (Prelude.Maybe ExecuteMultiOperationResponse'Response'Response)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startWorkflow' @:: Lens' ExecuteMultiOperationResponse'Response (Prelude.Maybe StartWorkflowExecutionResponse)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startWorkflow' @:: Lens' ExecuteMultiOperationResponse'Response StartWorkflowExecutionResponse@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateWorkflow' @:: Lens' ExecuteMultiOperationResponse'Response (Prelude.Maybe UpdateWorkflowExecutionResponse)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateWorkflow' @:: Lens' ExecuteMultiOperationResponse'Response UpdateWorkflowExecutionResponse@ -}
data ExecuteMultiOperationResponse'Response
  = ExecuteMultiOperationResponse'Response'_constructor {_ExecuteMultiOperationResponse'Response'response :: !(Prelude.Maybe ExecuteMultiOperationResponse'Response'Response),
                                                         _ExecuteMultiOperationResponse'Response'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ExecuteMultiOperationResponse'Response where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data ExecuteMultiOperationResponse'Response'Response
  = ExecuteMultiOperationResponse'Response'StartWorkflow !StartWorkflowExecutionResponse |
    ExecuteMultiOperationResponse'Response'UpdateWorkflow !UpdateWorkflowExecutionResponse
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse'Response "maybe'response" (Prelude.Maybe ExecuteMultiOperationResponse'Response'Response) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'Response'response
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'Response'response = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse'Response "maybe'startWorkflow" (Prelude.Maybe StartWorkflowExecutionResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'Response'response
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'Response'response = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ExecuteMultiOperationResponse'Response'StartWorkflow x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ExecuteMultiOperationResponse'Response'StartWorkflow y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse'Response "startWorkflow" StartWorkflowExecutionResponse where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'Response'response
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'Response'response = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ExecuteMultiOperationResponse'Response'StartWorkflow x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ExecuteMultiOperationResponse'Response'StartWorkflow y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse'Response "maybe'updateWorkflow" (Prelude.Maybe UpdateWorkflowExecutionResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'Response'response
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'Response'response = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ExecuteMultiOperationResponse'Response'UpdateWorkflow x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ExecuteMultiOperationResponse'Response'UpdateWorkflow y__))
instance Data.ProtoLens.Field.HasField ExecuteMultiOperationResponse'Response "updateWorkflow" UpdateWorkflowExecutionResponse where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ExecuteMultiOperationResponse'Response'response
           (\ x__ y__
              -> x__ {_ExecuteMultiOperationResponse'Response'response = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ExecuteMultiOperationResponse'Response'UpdateWorkflow x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ExecuteMultiOperationResponse'Response'UpdateWorkflow y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message ExecuteMultiOperationResponse'Response where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ExecuteMultiOperationResponse.Response"
  packedMessageDescriptor _
    = "\n\
      \\bResponse\DC2h\n\
      \\SOstart_workflow\CAN\SOH \SOH(\v2?.temporal.api.workflowservice.v1.StartWorkflowExecutionResponseH\NULR\rstartWorkflow\DC2k\n\
      \\SIupdate_workflow\CAN\STX \SOH(\v2@.temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponseH\NULR\SOupdateWorkflowB\n\
      \\n\
      \\bresponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        startWorkflow__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_workflow"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor StartWorkflowExecutionResponse)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startWorkflow")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationResponse'Response
        updateWorkflow__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_workflow"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkflowExecutionResponse)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateWorkflow")) ::
              Data.ProtoLens.FieldDescriptor ExecuteMultiOperationResponse'Response
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, startWorkflow__field_descriptor),
           (Data.ProtoLens.Tag 2, updateWorkflow__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ExecuteMultiOperationResponse'Response'_unknownFields
        (\ x__ y__
           -> x__
                {_ExecuteMultiOperationResponse'Response'_unknownFields = y__})
  defMessage
    = ExecuteMultiOperationResponse'Response'_constructor
        {_ExecuteMultiOperationResponse'Response'response = Prelude.Nothing,
         _ExecuteMultiOperationResponse'Response'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ExecuteMultiOperationResponse'Response
          -> Data.ProtoLens.Encoding.Bytes.Parser ExecuteMultiOperationResponse'Response
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_workflow"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startWorkflow") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_workflow"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"updateWorkflow") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Response"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'response") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just (ExecuteMultiOperationResponse'Response'StartWorkflow v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage v)
                (Prelude.Just (ExecuteMultiOperationResponse'Response'UpdateWorkflow v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData ExecuteMultiOperationResponse'Response where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ExecuteMultiOperationResponse'Response'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ExecuteMultiOperationResponse'Response'response x__) ())
instance Control.DeepSeq.NFData ExecuteMultiOperationResponse'Response'Response where
  rnf (ExecuteMultiOperationResponse'Response'StartWorkflow x__)
    = Control.DeepSeq.rnf x__
  rnf (ExecuteMultiOperationResponse'Response'UpdateWorkflow x__)
    = Control.DeepSeq.rnf x__
_ExecuteMultiOperationResponse'Response'StartWorkflow ::
  Data.ProtoLens.Prism.Prism' ExecuteMultiOperationResponse'Response'Response StartWorkflowExecutionResponse
_ExecuteMultiOperationResponse'Response'StartWorkflow
  = Data.ProtoLens.Prism.prism'
      ExecuteMultiOperationResponse'Response'StartWorkflow
      (\ p__
         -> case p__ of
              (ExecuteMultiOperationResponse'Response'StartWorkflow p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ExecuteMultiOperationResponse'Response'UpdateWorkflow ::
  Data.ProtoLens.Prism.Prism' ExecuteMultiOperationResponse'Response'Response UpdateWorkflowExecutionResponse
_ExecuteMultiOperationResponse'Response'UpdateWorkflow
  = Data.ProtoLens.Prism.prism'
      ExecuteMultiOperationResponse'Response'UpdateWorkflow
      (\ p__
         -> case p__ of
              (ExecuteMultiOperationResponse'Response'UpdateWorkflow p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data GetClusterInfoRequest
  = GetClusterInfoRequest'_constructor {_GetClusterInfoRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetClusterInfoRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message GetClusterInfoRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetClusterInfoRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKGetClusterInfoRequest"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetClusterInfoRequest'_unknownFields
        (\ x__ y__ -> x__ {_GetClusterInfoRequest'_unknownFields = y__})
  defMessage
    = GetClusterInfoRequest'_constructor
        {_GetClusterInfoRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetClusterInfoRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetClusterInfoRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetClusterInfoRequest"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData GetClusterInfoRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetClusterInfoRequest'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.supportedClients' @:: Lens' GetClusterInfoResponse (Data.Map.Map Data.Text.Text Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.serverVersion' @:: Lens' GetClusterInfoResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.clusterId' @:: Lens' GetClusterInfoResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versionInfo' @:: Lens' GetClusterInfoResponse Proto.Temporal.Api.Version.V1.Message.VersionInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'versionInfo' @:: Lens' GetClusterInfoResponse (Prelude.Maybe Proto.Temporal.Api.Version.V1.Message.VersionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.clusterName' @:: Lens' GetClusterInfoResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.historyShardCount' @:: Lens' GetClusterInfoResponse Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.persistenceStore' @:: Lens' GetClusterInfoResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.visibilityStore' @:: Lens' GetClusterInfoResponse Data.Text.Text@ -}
data GetClusterInfoResponse
  = GetClusterInfoResponse'_constructor {_GetClusterInfoResponse'supportedClients :: !(Data.Map.Map Data.Text.Text Data.Text.Text),
                                         _GetClusterInfoResponse'serverVersion :: !Data.Text.Text,
                                         _GetClusterInfoResponse'clusterId :: !Data.Text.Text,
                                         _GetClusterInfoResponse'versionInfo :: !(Prelude.Maybe Proto.Temporal.Api.Version.V1.Message.VersionInfo),
                                         _GetClusterInfoResponse'clusterName :: !Data.Text.Text,
                                         _GetClusterInfoResponse'historyShardCount :: !Data.Int.Int32,
                                         _GetClusterInfoResponse'persistenceStore :: !Data.Text.Text,
                                         _GetClusterInfoResponse'visibilityStore :: !Data.Text.Text,
                                         _GetClusterInfoResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetClusterInfoResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "supportedClients" (Data.Map.Map Data.Text.Text Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'supportedClients
           (\ x__ y__
              -> x__ {_GetClusterInfoResponse'supportedClients = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "serverVersion" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'serverVersion
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'serverVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "clusterId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'clusterId
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'clusterId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "versionInfo" Proto.Temporal.Api.Version.V1.Message.VersionInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'versionInfo
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'versionInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "maybe'versionInfo" (Prelude.Maybe Proto.Temporal.Api.Version.V1.Message.VersionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'versionInfo
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'versionInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "clusterName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'clusterName
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'clusterName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "historyShardCount" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'historyShardCount
           (\ x__ y__
              -> x__ {_GetClusterInfoResponse'historyShardCount = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "persistenceStore" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'persistenceStore
           (\ x__ y__
              -> x__ {_GetClusterInfoResponse'persistenceStore = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse "visibilityStore" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'visibilityStore
           (\ x__ y__ -> x__ {_GetClusterInfoResponse'visibilityStore = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetClusterInfoResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetClusterInfoResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNGetClusterInfoResponse\DC2z\n\
      \\DC1supported_clients\CAN\SOH \ETX(\v2M.temporal.api.workflowservice.v1.GetClusterInfoResponse.SupportedClientsEntryR\DLEsupportedClients\DC2%\n\
      \\SOserver_version\CAN\STX \SOH(\tR\rserverVersion\DC2\GS\n\
      \\n\
      \cluster_id\CAN\ETX \SOH(\tR\tclusterId\DC2G\n\
      \\fversion_info\CAN\EOT \SOH(\v2$.temporal.api.version.v1.VersionInfoR\vversionInfo\DC2!\n\
      \\fcluster_name\CAN\ENQ \SOH(\tR\vclusterName\DC2.\n\
      \\DC3history_shard_count\CAN\ACK \SOH(\ENQR\DC1historyShardCount\DC2+\n\
      \\DC1persistence_store\CAN\a \SOH(\tR\DLEpersistenceStore\DC2)\n\
      \\DLEvisibility_store\CAN\b \SOH(\tR\SIvisibilityStore\SUBC\n\
      \\NAKSupportedClientsEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
      \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        supportedClients__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "supported_clients"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor GetClusterInfoResponse'SupportedClientsEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"supportedClients")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        serverVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "server_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"serverVersion")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        clusterId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"clusterId")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        versionInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Version.V1.Message.VersionInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'versionInfo")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        clusterName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"clusterName")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        historyShardCount__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history_shard_count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"historyShardCount")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        persistenceStore__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "persistence_store"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"persistenceStore")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
        visibilityStore__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "visibility_store"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"visibilityStore")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, supportedClients__field_descriptor),
           (Data.ProtoLens.Tag 2, serverVersion__field_descriptor),
           (Data.ProtoLens.Tag 3, clusterId__field_descriptor),
           (Data.ProtoLens.Tag 4, versionInfo__field_descriptor),
           (Data.ProtoLens.Tag 5, clusterName__field_descriptor),
           (Data.ProtoLens.Tag 6, historyShardCount__field_descriptor),
           (Data.ProtoLens.Tag 7, persistenceStore__field_descriptor),
           (Data.ProtoLens.Tag 8, visibilityStore__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetClusterInfoResponse'_unknownFields
        (\ x__ y__ -> x__ {_GetClusterInfoResponse'_unknownFields = y__})
  defMessage
    = GetClusterInfoResponse'_constructor
        {_GetClusterInfoResponse'supportedClients = Data.Map.empty,
         _GetClusterInfoResponse'serverVersion = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'clusterId = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'versionInfo = Prelude.Nothing,
         _GetClusterInfoResponse'clusterName = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'historyShardCount = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'persistenceStore = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'visibilityStore = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetClusterInfoResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetClusterInfoResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !(entry :: GetClusterInfoResponse'SupportedClientsEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                              (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                  Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                    (Prelude.fromIntegral
                                                                                                       len)
                                                                                                    Data.ProtoLens.parseMessage)
                                                                                              "supported_clients"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"supportedClients")
                                        (\ !t -> Data.Map.insert key value t) x))
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "server_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"serverVersion") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "cluster_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"clusterId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "version_info"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"versionInfo") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "cluster_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"clusterName") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "history_shard_count"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"historyShardCount") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "persistence_store"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"persistenceStore") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "visibility_store"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"visibilityStore") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetClusterInfoResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.Monoid.mconcat
                (Prelude.map
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"key") (Prelude.fst _v)
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"value") (Prelude.snd _v)
                                    (Data.ProtoLens.defMessage ::
                                       GetClusterInfoResponse'SupportedClientsEntry)))))
                   (Data.Map.toList
                      (Lens.Family2.view
                         (Data.ProtoLens.Field.field @"supportedClients") _x))))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"serverVersion") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"clusterId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'versionInfo") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view (Data.ProtoLens.Field.field @"clusterName") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"historyShardCount") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral
                                        _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"persistenceStore") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((Prelude..)
                                           (\ bs
                                              -> (Data.Monoid.<>)
                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                      (Prelude.fromIntegral
                                                         (Data.ByteString.length bs)))
                                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           Data.Text.Encoding.encodeUtf8 _v))
                               ((Data.Monoid.<>)
                                  (let
                                     _v
                                       = Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"visibilityStore") _x
                                   in
                                     if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                         Data.Monoid.mempty
                                     else
                                         (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                           ((Prelude..)
                                              (\ bs
                                                 -> (Data.Monoid.<>)
                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                         (Prelude.fromIntegral
                                                            (Data.ByteString.length bs)))
                                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                              Data.Text.Encoding.encodeUtf8 _v))
                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                     (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))))
instance Control.DeepSeq.NFData GetClusterInfoResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetClusterInfoResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetClusterInfoResponse'supportedClients x__)
                (Control.DeepSeq.deepseq
                   (_GetClusterInfoResponse'serverVersion x__)
                   (Control.DeepSeq.deepseq
                      (_GetClusterInfoResponse'clusterId x__)
                      (Control.DeepSeq.deepseq
                         (_GetClusterInfoResponse'versionInfo x__)
                         (Control.DeepSeq.deepseq
                            (_GetClusterInfoResponse'clusterName x__)
                            (Control.DeepSeq.deepseq
                               (_GetClusterInfoResponse'historyShardCount x__)
                               (Control.DeepSeq.deepseq
                                  (_GetClusterInfoResponse'persistenceStore x__)
                                  (Control.DeepSeq.deepseq
                                     (_GetClusterInfoResponse'visibilityStore x__) ()))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' GetClusterInfoResponse'SupportedClientsEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' GetClusterInfoResponse'SupportedClientsEntry Data.Text.Text@ -}
data GetClusterInfoResponse'SupportedClientsEntry
  = GetClusterInfoResponse'SupportedClientsEntry'_constructor {_GetClusterInfoResponse'SupportedClientsEntry'key :: !Data.Text.Text,
                                                               _GetClusterInfoResponse'SupportedClientsEntry'value :: !Data.Text.Text,
                                                               _GetClusterInfoResponse'SupportedClientsEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetClusterInfoResponse'SupportedClientsEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse'SupportedClientsEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'SupportedClientsEntry'key
           (\ x__ y__
              -> x__ {_GetClusterInfoResponse'SupportedClientsEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetClusterInfoResponse'SupportedClientsEntry "value" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetClusterInfoResponse'SupportedClientsEntry'value
           (\ x__ y__
              -> x__
                   {_GetClusterInfoResponse'SupportedClientsEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetClusterInfoResponse'SupportedClientsEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetClusterInfoResponse.SupportedClientsEntry"
  packedMessageDescriptor _
    = "\n\
      \\NAKSupportedClientsEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
      \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse'SupportedClientsEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"value")) ::
              Data.ProtoLens.FieldDescriptor GetClusterInfoResponse'SupportedClientsEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetClusterInfoResponse'SupportedClientsEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_GetClusterInfoResponse'SupportedClientsEntry'_unknownFields = y__})
  defMessage
    = GetClusterInfoResponse'SupportedClientsEntry'_constructor
        {_GetClusterInfoResponse'SupportedClientsEntry'key = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'SupportedClientsEntry'value = Data.ProtoLens.fieldDefault,
         _GetClusterInfoResponse'SupportedClientsEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetClusterInfoResponse'SupportedClientsEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser GetClusterInfoResponse'SupportedClientsEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "SupportedClientsEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"value") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetClusterInfoResponse'SupportedClientsEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetClusterInfoResponse'SupportedClientsEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetClusterInfoResponse'SupportedClientsEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_GetClusterInfoResponse'SupportedClientsEntry'value x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetCurrentDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.seriesName' @:: Lens' GetCurrentDeploymentRequest Data.Text.Text@ -}
data GetCurrentDeploymentRequest
  = GetCurrentDeploymentRequest'_constructor {_GetCurrentDeploymentRequest'namespace :: !Data.Text.Text,
                                              _GetCurrentDeploymentRequest'seriesName :: !Data.Text.Text,
                                              _GetCurrentDeploymentRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetCurrentDeploymentRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetCurrentDeploymentRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetCurrentDeploymentRequest'namespace
           (\ x__ y__ -> x__ {_GetCurrentDeploymentRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetCurrentDeploymentRequest "seriesName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetCurrentDeploymentRequest'seriesName
           (\ x__ y__ -> x__ {_GetCurrentDeploymentRequest'seriesName = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetCurrentDeploymentRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetCurrentDeploymentRequest"
  packedMessageDescriptor _
    = "\n\
      \\ESCGetCurrentDeploymentRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vseries_name\CAN\STX \SOH(\tR\n\
      \seriesName"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetCurrentDeploymentRequest
        seriesName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "series_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"seriesName")) ::
              Data.ProtoLens.FieldDescriptor GetCurrentDeploymentRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, seriesName__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetCurrentDeploymentRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetCurrentDeploymentRequest'_unknownFields = y__})
  defMessage
    = GetCurrentDeploymentRequest'_constructor
        {_GetCurrentDeploymentRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetCurrentDeploymentRequest'seriesName = Data.ProtoLens.fieldDefault,
         _GetCurrentDeploymentRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetCurrentDeploymentRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetCurrentDeploymentRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "series_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"seriesName") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetCurrentDeploymentRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"seriesName") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetCurrentDeploymentRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetCurrentDeploymentRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetCurrentDeploymentRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetCurrentDeploymentRequest'seriesName x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.currentDeploymentInfo' @:: Lens' GetCurrentDeploymentResponse Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'currentDeploymentInfo' @:: Lens' GetCurrentDeploymentResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)@ -}
data GetCurrentDeploymentResponse
  = GetCurrentDeploymentResponse'_constructor {_GetCurrentDeploymentResponse'currentDeploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo),
                                               _GetCurrentDeploymentResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetCurrentDeploymentResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetCurrentDeploymentResponse "currentDeploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetCurrentDeploymentResponse'currentDeploymentInfo
           (\ x__ y__
              -> x__
                   {_GetCurrentDeploymentResponse'currentDeploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetCurrentDeploymentResponse "maybe'currentDeploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetCurrentDeploymentResponse'currentDeploymentInfo
           (\ x__ y__
              -> x__
                   {_GetCurrentDeploymentResponse'currentDeploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetCurrentDeploymentResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetCurrentDeploymentResponse"
  packedMessageDescriptor _
    = "\n\
      \\FSGetCurrentDeploymentResponse\DC2b\n\
      \\ETBcurrent_deployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\NAKcurrentDeploymentInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        currentDeploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "current_deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'currentDeploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor GetCurrentDeploymentResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, currentDeploymentInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetCurrentDeploymentResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetCurrentDeploymentResponse'_unknownFields = y__})
  defMessage
    = GetCurrentDeploymentResponse'_constructor
        {_GetCurrentDeploymentResponse'currentDeploymentInfo = Prelude.Nothing,
         _GetCurrentDeploymentResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetCurrentDeploymentResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetCurrentDeploymentResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "current_deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"currentDeploymentInfo") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetCurrentDeploymentResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'currentDeploymentInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData GetCurrentDeploymentResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetCurrentDeploymentResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetCurrentDeploymentResponse'currentDeploymentInfo x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetDeploymentReachabilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' GetDeploymentReachabilityRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' GetDeploymentReachabilityRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@ -}
data GetDeploymentReachabilityRequest
  = GetDeploymentReachabilityRequest'_constructor {_GetDeploymentReachabilityRequest'namespace :: !Data.Text.Text,
                                                   _GetDeploymentReachabilityRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                   _GetDeploymentReachabilityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetDeploymentReachabilityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityRequest'namespace
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityRequest'deployment
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityRequest'deployment
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetDeploymentReachabilityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetDeploymentReachabilityRequest"
  packedMessageDescriptor _
    = "\n\
      \ GetDeploymentReachabilityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
      \\n\
      \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deployment"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetDeploymentReachabilityRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor GetDeploymentReachabilityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deployment__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetDeploymentReachabilityRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetDeploymentReachabilityRequest'_unknownFields = y__})
  defMessage
    = GetDeploymentReachabilityRequest'_constructor
        {_GetDeploymentReachabilityRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetDeploymentReachabilityRequest'deployment = Prelude.Nothing,
         _GetDeploymentReachabilityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetDeploymentReachabilityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetDeploymentReachabilityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetDeploymentReachabilityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'deployment") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetDeploymentReachabilityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetDeploymentReachabilityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetDeploymentReachabilityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetDeploymentReachabilityRequest'deployment x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentInfo' @:: Lens' GetDeploymentReachabilityResponse Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentInfo' @:: Lens' GetDeploymentReachabilityResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reachability' @:: Lens' GetDeploymentReachabilityResponse Proto.Temporal.Api.Enums.V1.Deployment.DeploymentReachability@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.lastUpdateTime' @:: Lens' GetDeploymentReachabilityResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'lastUpdateTime' @:: Lens' GetDeploymentReachabilityResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@ -}
data GetDeploymentReachabilityResponse
  = GetDeploymentReachabilityResponse'_constructor {_GetDeploymentReachabilityResponse'deploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo),
                                                    _GetDeploymentReachabilityResponse'reachability :: !Proto.Temporal.Api.Enums.V1.Deployment.DeploymentReachability,
                                                    _GetDeploymentReachabilityResponse'lastUpdateTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                    _GetDeploymentReachabilityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetDeploymentReachabilityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityResponse "deploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityResponse'deploymentInfo
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityResponse'deploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityResponse "maybe'deploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityResponse'deploymentInfo
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityResponse'deploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityResponse "reachability" Proto.Temporal.Api.Enums.V1.Deployment.DeploymentReachability where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityResponse'reachability
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityResponse'reachability = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityResponse "lastUpdateTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityResponse'lastUpdateTime
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityResponse'lastUpdateTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetDeploymentReachabilityResponse "maybe'lastUpdateTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetDeploymentReachabilityResponse'lastUpdateTime
           (\ x__ y__
              -> x__ {_GetDeploymentReachabilityResponse'lastUpdateTime = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetDeploymentReachabilityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetDeploymentReachabilityResponse"
  packedMessageDescriptor _
    = "\n\
      \!GetDeploymentReachabilityResponse\DC2S\n\
      \\SIdeployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SOdeploymentInfo\DC2Q\n\
      \\freachability\CAN\STX \SOH(\SO2-.temporal.api.enums.v1.DeploymentReachabilityR\freachability\DC2D\n\
      \\DLElast_update_time\CAN\ETX \SOH(\v2\SUB.google.protobuf.TimestampR\SOlastUpdateTime"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        deploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor GetDeploymentReachabilityResponse
        reachability__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reachability"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Deployment.DeploymentReachability)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"reachability")) ::
              Data.ProtoLens.FieldDescriptor GetDeploymentReachabilityResponse
        lastUpdateTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "last_update_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'lastUpdateTime")) ::
              Data.ProtoLens.FieldDescriptor GetDeploymentReachabilityResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, deploymentInfo__field_descriptor),
           (Data.ProtoLens.Tag 2, reachability__field_descriptor),
           (Data.ProtoLens.Tag 3, lastUpdateTime__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetDeploymentReachabilityResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetDeploymentReachabilityResponse'_unknownFields = y__})
  defMessage
    = GetDeploymentReachabilityResponse'_constructor
        {_GetDeploymentReachabilityResponse'deploymentInfo = Prelude.Nothing,
         _GetDeploymentReachabilityResponse'reachability = Data.ProtoLens.fieldDefault,
         _GetDeploymentReachabilityResponse'lastUpdateTime = Prelude.Nothing,
         _GetDeploymentReachabilityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetDeploymentReachabilityResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetDeploymentReachabilityResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentInfo") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "reachability"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"reachability") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "last_update_time"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"lastUpdateTime") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetDeploymentReachabilityResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'deploymentInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"reachability") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'lastUpdateTime") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData GetDeploymentReachabilityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetDeploymentReachabilityResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetDeploymentReachabilityResponse'deploymentInfo x__)
                (Control.DeepSeq.deepseq
                   (_GetDeploymentReachabilityResponse'reachability x__)
                   (Control.DeepSeq.deepseq
                      (_GetDeploymentReachabilityResponse'lastUpdateTime x__) ())))
{- | Fields :
      -}
data GetSearchAttributesRequest
  = GetSearchAttributesRequest'_constructor {_GetSearchAttributesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSearchAttributesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message GetSearchAttributesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSearchAttributesRequest"
  packedMessageDescriptor _
    = "\n\
      \\SUBGetSearchAttributesRequest"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSearchAttributesRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetSearchAttributesRequest'_unknownFields = y__})
  defMessage
    = GetSearchAttributesRequest'_constructor
        {_GetSearchAttributesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSearchAttributesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSearchAttributesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetSearchAttributesRequest"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData GetSearchAttributesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSearchAttributesRequest'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.keys' @:: Lens' GetSearchAttributesResponse (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Enums.V1.Common.IndexedValueType)@ -}
data GetSearchAttributesResponse
  = GetSearchAttributesResponse'_constructor {_GetSearchAttributesResponse'keys :: !(Data.Map.Map Data.Text.Text Proto.Temporal.Api.Enums.V1.Common.IndexedValueType),
                                              _GetSearchAttributesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSearchAttributesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetSearchAttributesResponse "keys" (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Enums.V1.Common.IndexedValueType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSearchAttributesResponse'keys
           (\ x__ y__ -> x__ {_GetSearchAttributesResponse'keys = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetSearchAttributesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSearchAttributesResponse"
  packedMessageDescriptor _
    = "\n\
      \\ESCGetSearchAttributesResponse\DC2Z\n\
      \\EOTkeys\CAN\SOH \ETX(\v2F.temporal.api.workflowservice.v1.GetSearchAttributesResponse.KeysEntryR\EOTkeys\SUB`\n\
      \\tKeysEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2=\n\
      \\ENQvalue\CAN\STX \SOH(\SO2'.temporal.api.enums.v1.IndexedValueTypeR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        keys__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "keys"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor GetSearchAttributesResponse'KeysEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"keys")) ::
              Data.ProtoLens.FieldDescriptor GetSearchAttributesResponse
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, keys__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSearchAttributesResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetSearchAttributesResponse'_unknownFields = y__})
  defMessage
    = GetSearchAttributesResponse'_constructor
        {_GetSearchAttributesResponse'keys = Data.Map.empty,
         _GetSearchAttributesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSearchAttributesResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSearchAttributesResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !(entry :: GetSearchAttributesResponse'KeysEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                           Data.ProtoLens.Encoding.Bytes.isolate
                                                                                             (Prelude.fromIntegral
                                                                                                len)
                                                                                             Data.ProtoLens.parseMessage)
                                                                                       "keys"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"keys")
                                        (\ !t -> Data.Map.insert key value t) x))
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetSearchAttributesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.Monoid.mconcat
                (Prelude.map
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"key") (Prelude.fst _v)
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"value") (Prelude.snd _v)
                                    (Data.ProtoLens.defMessage ::
                                       GetSearchAttributesResponse'KeysEntry)))))
                   (Data.Map.toList
                      (Lens.Family2.view (Data.ProtoLens.Field.field @"keys") _x))))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData GetSearchAttributesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSearchAttributesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetSearchAttributesResponse'keys x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' GetSearchAttributesResponse'KeysEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' GetSearchAttributesResponse'KeysEntry Proto.Temporal.Api.Enums.V1.Common.IndexedValueType@ -}
data GetSearchAttributesResponse'KeysEntry
  = GetSearchAttributesResponse'KeysEntry'_constructor {_GetSearchAttributesResponse'KeysEntry'key :: !Data.Text.Text,
                                                        _GetSearchAttributesResponse'KeysEntry'value :: !Proto.Temporal.Api.Enums.V1.Common.IndexedValueType,
                                                        _GetSearchAttributesResponse'KeysEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSearchAttributesResponse'KeysEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetSearchAttributesResponse'KeysEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSearchAttributesResponse'KeysEntry'key
           (\ x__ y__
              -> x__ {_GetSearchAttributesResponse'KeysEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSearchAttributesResponse'KeysEntry "value" Proto.Temporal.Api.Enums.V1.Common.IndexedValueType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSearchAttributesResponse'KeysEntry'value
           (\ x__ y__
              -> x__ {_GetSearchAttributesResponse'KeysEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetSearchAttributesResponse'KeysEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSearchAttributesResponse.KeysEntry"
  packedMessageDescriptor _
    = "\n\
      \\tKeysEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2=\n\
      \\ENQvalue\CAN\STX \SOH(\SO2'.temporal.api.enums.v1.IndexedValueTypeR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor GetSearchAttributesResponse'KeysEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Common.IndexedValueType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"value")) ::
              Data.ProtoLens.FieldDescriptor GetSearchAttributesResponse'KeysEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSearchAttributesResponse'KeysEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_GetSearchAttributesResponse'KeysEntry'_unknownFields = y__})
  defMessage
    = GetSearchAttributesResponse'KeysEntry'_constructor
        {_GetSearchAttributesResponse'KeysEntry'key = Data.ProtoLens.fieldDefault,
         _GetSearchAttributesResponse'KeysEntry'value = Data.ProtoLens.fieldDefault,
         _GetSearchAttributesResponse'KeysEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSearchAttributesResponse'KeysEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSearchAttributesResponse'KeysEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "KeysEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"value") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetSearchAttributesResponse'KeysEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSearchAttributesResponse'KeysEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetSearchAttributesResponse'KeysEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_GetSearchAttributesResponse'KeysEntry'value x__) ()))
{- | Fields :
      -}
data GetSystemInfoRequest
  = GetSystemInfoRequest'_constructor {_GetSystemInfoRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSystemInfoRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message GetSystemInfoRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSystemInfoRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4GetSystemInfoRequest"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSystemInfoRequest'_unknownFields
        (\ x__ y__ -> x__ {_GetSystemInfoRequest'_unknownFields = y__})
  defMessage
    = GetSystemInfoRequest'_constructor
        {_GetSystemInfoRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSystemInfoRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSystemInfoRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetSystemInfoRequest"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData GetSystemInfoRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSystemInfoRequest'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.serverVersion' @:: Lens' GetSystemInfoResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.capabilities' @:: Lens' GetSystemInfoResponse GetSystemInfoResponse'Capabilities@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'capabilities' @:: Lens' GetSystemInfoResponse (Prelude.Maybe GetSystemInfoResponse'Capabilities)@ -}
data GetSystemInfoResponse
  = GetSystemInfoResponse'_constructor {_GetSystemInfoResponse'serverVersion :: !Data.Text.Text,
                                        _GetSystemInfoResponse'capabilities :: !(Prelude.Maybe GetSystemInfoResponse'Capabilities),
                                        _GetSystemInfoResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSystemInfoResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse "serverVersion" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'serverVersion
           (\ x__ y__ -> x__ {_GetSystemInfoResponse'serverVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse "capabilities" GetSystemInfoResponse'Capabilities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'capabilities
           (\ x__ y__ -> x__ {_GetSystemInfoResponse'capabilities = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse "maybe'capabilities" (Prelude.Maybe GetSystemInfoResponse'Capabilities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'capabilities
           (\ x__ y__ -> x__ {_GetSystemInfoResponse'capabilities = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetSystemInfoResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSystemInfoResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKGetSystemInfoResponse\DC2%\n\
      \\SOserver_version\CAN\SOH \SOH(\tR\rserverVersion\DC2g\n\
      \\fcapabilities\CAN\STX \SOH(\v2C.temporal.api.workflowservice.v1.GetSystemInfoResponse.CapabilitiesR\fcapabilities\SUB\210\EOT\n\
      \\fCapabilities\DC25\n\
      \\ETBsignal_and_query_header\CAN\SOH \SOH(\bR\DC4signalAndQueryHeader\DC2D\n\
      \\RSinternal_error_differentiation\CAN\STX \SOH(\bR\FSinternalErrorDifferentiation\DC2K\n\
      \\"activity_failure_include_heartbeat\CAN\ETX \SOH(\bR\USactivityFailureIncludeHeartbeat\DC2-\n\
      \\DC2supports_schedules\CAN\EOT \SOH(\bR\DC1supportsSchedules\DC2<\n\
      \\SUBencoded_failure_attributes\CAN\ENQ \SOH(\bR\CANencodedFailureAttributes\DC29\n\
      \\EMbuild_id_based_versioning\CAN\ACK \SOH(\bR\SYNbuildIdBasedVersioning\DC2\US\n\
      \\vupsert_memo\CAN\a \SOH(\bR\n\
      \upsertMemo\DC20\n\
      \\DC4eager_workflow_start\CAN\b \SOH(\bR\DC2eagerWorkflowStart\DC2!\n\
      \\fsdk_metadata\CAN\t \SOH(\bR\vsdkMetadata\DC2D\n\
      \\UScount_group_by_execution_status\CAN\n\
      \ \SOH(\bR\ESCcountGroupByExecutionStatus\DC2\DC4\n\
      \\ENQnexus\CAN\v \SOH(\bR\ENQnexus"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        serverVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "server_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"serverVersion")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse
        capabilities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "capabilities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor GetSystemInfoResponse'Capabilities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'capabilities")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, serverVersion__field_descriptor),
           (Data.ProtoLens.Tag 2, capabilities__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSystemInfoResponse'_unknownFields
        (\ x__ y__ -> x__ {_GetSystemInfoResponse'_unknownFields = y__})
  defMessage
    = GetSystemInfoResponse'_constructor
        {_GetSystemInfoResponse'serverVersion = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'capabilities = Prelude.Nothing,
         _GetSystemInfoResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSystemInfoResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSystemInfoResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "server_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"serverVersion") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "capabilities"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"capabilities") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GetSystemInfoResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"serverVersion") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'capabilities") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetSystemInfoResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSystemInfoResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetSystemInfoResponse'serverVersion x__)
                (Control.DeepSeq.deepseq
                   (_GetSystemInfoResponse'capabilities x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.signalAndQueryHeader' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.internalErrorDifferentiation' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityFailureIncludeHeartbeat' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.supportsSchedules' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.encodedFailureAttributes' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.buildIdBasedVersioning' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.upsertMemo' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.eagerWorkflowStart' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.sdkMetadata' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.countGroupByExecutionStatus' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nexus' @:: Lens' GetSystemInfoResponse'Capabilities Prelude.Bool@ -}
data GetSystemInfoResponse'Capabilities
  = GetSystemInfoResponse'Capabilities'_constructor {_GetSystemInfoResponse'Capabilities'signalAndQueryHeader :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'internalErrorDifferentiation :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'activityFailureIncludeHeartbeat :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'supportsSchedules :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'encodedFailureAttributes :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'buildIdBasedVersioning :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'upsertMemo :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'eagerWorkflowStart :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'sdkMetadata :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'countGroupByExecutionStatus :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'nexus :: !Prelude.Bool,
                                                     _GetSystemInfoResponse'Capabilities'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetSystemInfoResponse'Capabilities where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "signalAndQueryHeader" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'signalAndQueryHeader
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'signalAndQueryHeader = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "internalErrorDifferentiation" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'internalErrorDifferentiation
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'internalErrorDifferentiation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "activityFailureIncludeHeartbeat" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'activityFailureIncludeHeartbeat
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'activityFailureIncludeHeartbeat = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "supportsSchedules" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'supportsSchedules
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'supportsSchedules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "encodedFailureAttributes" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'encodedFailureAttributes
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'encodedFailureAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "buildIdBasedVersioning" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'buildIdBasedVersioning
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'buildIdBasedVersioning = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "upsertMemo" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'upsertMemo
           (\ x__ y__
              -> x__ {_GetSystemInfoResponse'Capabilities'upsertMemo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "eagerWorkflowStart" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'eagerWorkflowStart
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'eagerWorkflowStart = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "sdkMetadata" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'sdkMetadata
           (\ x__ y__
              -> x__ {_GetSystemInfoResponse'Capabilities'sdkMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "countGroupByExecutionStatus" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'countGroupByExecutionStatus
           (\ x__ y__
              -> x__
                   {_GetSystemInfoResponse'Capabilities'countGroupByExecutionStatus = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetSystemInfoResponse'Capabilities "nexus" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetSystemInfoResponse'Capabilities'nexus
           (\ x__ y__
              -> x__ {_GetSystemInfoResponse'Capabilities'nexus = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetSystemInfoResponse'Capabilities where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetSystemInfoResponse.Capabilities"
  packedMessageDescriptor _
    = "\n\
      \\fCapabilities\DC25\n\
      \\ETBsignal_and_query_header\CAN\SOH \SOH(\bR\DC4signalAndQueryHeader\DC2D\n\
      \\RSinternal_error_differentiation\CAN\STX \SOH(\bR\FSinternalErrorDifferentiation\DC2K\n\
      \\"activity_failure_include_heartbeat\CAN\ETX \SOH(\bR\USactivityFailureIncludeHeartbeat\DC2-\n\
      \\DC2supports_schedules\CAN\EOT \SOH(\bR\DC1supportsSchedules\DC2<\n\
      \\SUBencoded_failure_attributes\CAN\ENQ \SOH(\bR\CANencodedFailureAttributes\DC29\n\
      \\EMbuild_id_based_versioning\CAN\ACK \SOH(\bR\SYNbuildIdBasedVersioning\DC2\US\n\
      \\vupsert_memo\CAN\a \SOH(\bR\n\
      \upsertMemo\DC20\n\
      \\DC4eager_workflow_start\CAN\b \SOH(\bR\DC2eagerWorkflowStart\DC2!\n\
      \\fsdk_metadata\CAN\t \SOH(\bR\vsdkMetadata\DC2D\n\
      \\UScount_group_by_execution_status\CAN\n\
      \ \SOH(\bR\ESCcountGroupByExecutionStatus\DC2\DC4\n\
      \\ENQnexus\CAN\v \SOH(\bR\ENQnexus"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        signalAndQueryHeader__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "signal_and_query_header"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"signalAndQueryHeader")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        internalErrorDifferentiation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "internal_error_differentiation"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"internalErrorDifferentiation")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        activityFailureIncludeHeartbeat__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_failure_include_heartbeat"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityFailureIncludeHeartbeat")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        supportsSchedules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "supports_schedules"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"supportsSchedules")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        encodedFailureAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "encoded_failure_attributes"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"encodedFailureAttributes")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        buildIdBasedVersioning__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "build_id_based_versioning"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"buildIdBasedVersioning")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        upsertMemo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "upsert_memo"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"upsertMemo")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        eagerWorkflowStart__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "eager_workflow_start"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"eagerWorkflowStart")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        sdkMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "sdk_metadata"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"sdkMetadata")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        countGroupByExecutionStatus__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "count_group_by_execution_status"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"countGroupByExecutionStatus")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
        nexus__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "nexus"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"nexus")) ::
              Data.ProtoLens.FieldDescriptor GetSystemInfoResponse'Capabilities
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, signalAndQueryHeader__field_descriptor),
           (Data.ProtoLens.Tag 2, 
            internalErrorDifferentiation__field_descriptor),
           (Data.ProtoLens.Tag 3, 
            activityFailureIncludeHeartbeat__field_descriptor),
           (Data.ProtoLens.Tag 4, supportsSchedules__field_descriptor),
           (Data.ProtoLens.Tag 5, encodedFailureAttributes__field_descriptor),
           (Data.ProtoLens.Tag 6, buildIdBasedVersioning__field_descriptor),
           (Data.ProtoLens.Tag 7, upsertMemo__field_descriptor),
           (Data.ProtoLens.Tag 8, eagerWorkflowStart__field_descriptor),
           (Data.ProtoLens.Tag 9, sdkMetadata__field_descriptor),
           (Data.ProtoLens.Tag 10, 
            countGroupByExecutionStatus__field_descriptor),
           (Data.ProtoLens.Tag 11, nexus__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetSystemInfoResponse'Capabilities'_unknownFields
        (\ x__ y__
           -> x__ {_GetSystemInfoResponse'Capabilities'_unknownFields = y__})
  defMessage
    = GetSystemInfoResponse'Capabilities'_constructor
        {_GetSystemInfoResponse'Capabilities'signalAndQueryHeader = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'internalErrorDifferentiation = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'activityFailureIncludeHeartbeat = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'supportsSchedules = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'encodedFailureAttributes = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'buildIdBasedVersioning = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'upsertMemo = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'eagerWorkflowStart = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'sdkMetadata = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'countGroupByExecutionStatus = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'nexus = Data.ProtoLens.fieldDefault,
         _GetSystemInfoResponse'Capabilities'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetSystemInfoResponse'Capabilities
          -> Data.ProtoLens.Encoding.Bytes.Parser GetSystemInfoResponse'Capabilities
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "signal_and_query_header"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"signalAndQueryHeader") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "internal_error_differentiation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"internalErrorDifferentiation") y
                                     x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "activity_failure_include_heartbeat"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityFailureIncludeHeartbeat")
                                     y x)
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "supports_schedules"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"supportsSchedules") y x)
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "encoded_failure_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"encodedFailureAttributes") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "build_id_based_versioning"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"buildIdBasedVersioning") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "upsert_memo"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"upsertMemo") y x)
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "eager_workflow_start"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"eagerWorkflowStart") y x)
                        72
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "sdk_metadata"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"sdkMetadata") y x)
                        80
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "count_group_by_execution_status"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"countGroupByExecutionStatus") y
                                     x)
                        88
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "nexus"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"nexus") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Capabilities"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"signalAndQueryHeader") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"internalErrorDifferentiation") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"activityFailureIncludeHeartbeat") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"supportsSchedules") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0) _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"encodedFailureAttributes") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"buildIdBasedVersioning") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (\ b -> if b then 1 else 0) _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"upsertMemo") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (\ b -> if b then 1 else 0) _v))
                               ((Data.Monoid.<>)
                                  (let
                                     _v
                                       = Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"eagerWorkflowStart") _x
                                   in
                                     if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                         Data.Monoid.mempty
                                     else
                                         (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                                           ((Prelude..)
                                              Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (\ b -> if b then 1 else 0) _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"sdkMetadata") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 72)
                                              ((Prelude..)
                                                 Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (\ b -> if b then 1 else 0) _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field
                                                    @"countGroupByExecutionStatus")
                                                 _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 80)
                                                 ((Prelude..)
                                                    Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (\ b -> if b then 1 else 0) _v))
                                        ((Data.Monoid.<>)
                                           (let
                                              _v
                                                = Lens.Family2.view
                                                    (Data.ProtoLens.Field.field @"nexus") _x
                                            in
                                              if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                  Data.Monoid.mempty
                                              else
                                                  (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 88)
                                                    ((Prelude..)
                                                       Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (\ b -> if b then 1 else 0) _v))
                                           (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                              (Lens.Family2.view
                                                 Data.ProtoLens.unknownFields _x))))))))))))
instance Control.DeepSeq.NFData GetSystemInfoResponse'Capabilities where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetSystemInfoResponse'Capabilities'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetSystemInfoResponse'Capabilities'signalAndQueryHeader x__)
                (Control.DeepSeq.deepseq
                   (_GetSystemInfoResponse'Capabilities'internalErrorDifferentiation
                      x__)
                   (Control.DeepSeq.deepseq
                      (_GetSystemInfoResponse'Capabilities'activityFailureIncludeHeartbeat
                         x__)
                      (Control.DeepSeq.deepseq
                         (_GetSystemInfoResponse'Capabilities'supportsSchedules x__)
                         (Control.DeepSeq.deepseq
                            (_GetSystemInfoResponse'Capabilities'encodedFailureAttributes x__)
                            (Control.DeepSeq.deepseq
                               (_GetSystemInfoResponse'Capabilities'buildIdBasedVersioning x__)
                               (Control.DeepSeq.deepseq
                                  (_GetSystemInfoResponse'Capabilities'upsertMemo x__)
                                  (Control.DeepSeq.deepseq
                                     (_GetSystemInfoResponse'Capabilities'eagerWorkflowStart x__)
                                     (Control.DeepSeq.deepseq
                                        (_GetSystemInfoResponse'Capabilities'sdkMetadata x__)
                                        (Control.DeepSeq.deepseq
                                           (_GetSystemInfoResponse'Capabilities'countGroupByExecutionStatus
                                              x__)
                                           (Control.DeepSeq.deepseq
                                              (_GetSystemInfoResponse'Capabilities'nexus x__)
                                              ())))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' GetWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maxSets' @:: Lens' GetWorkerBuildIdCompatibilityRequest Data.Int.Int32@ -}
data GetWorkerBuildIdCompatibilityRequest
  = GetWorkerBuildIdCompatibilityRequest'_constructor {_GetWorkerBuildIdCompatibilityRequest'namespace :: !Data.Text.Text,
                                                       _GetWorkerBuildIdCompatibilityRequest'taskQueue :: !Data.Text.Text,
                                                       _GetWorkerBuildIdCompatibilityRequest'maxSets :: !Data.Int.Int32,
                                                       _GetWorkerBuildIdCompatibilityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerBuildIdCompatibilityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerBuildIdCompatibilityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerBuildIdCompatibilityRequest'namespace
           (\ x__ y__
              -> x__ {_GetWorkerBuildIdCompatibilityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerBuildIdCompatibilityRequest "taskQueue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerBuildIdCompatibilityRequest'taskQueue
           (\ x__ y__
              -> x__ {_GetWorkerBuildIdCompatibilityRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerBuildIdCompatibilityRequest "maxSets" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerBuildIdCompatibilityRequest'maxSets
           (\ x__ y__
              -> x__ {_GetWorkerBuildIdCompatibilityRequest'maxSets = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerBuildIdCompatibilityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityRequest"
  packedMessageDescriptor _
    = "\n\
      \$GetWorkerBuildIdCompatibilityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
      \\n\
      \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2\EM\n\
      \\bmax_sets\CAN\ETX \SOH(\ENQR\amaxSets"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerBuildIdCompatibilityRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskQueue")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerBuildIdCompatibilityRequest
        maxSets__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_sets"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"maxSets")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerBuildIdCompatibilityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, maxSets__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerBuildIdCompatibilityRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_GetWorkerBuildIdCompatibilityRequest'_unknownFields = y__})
  defMessage
    = GetWorkerBuildIdCompatibilityRequest'_constructor
        {_GetWorkerBuildIdCompatibilityRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetWorkerBuildIdCompatibilityRequest'taskQueue = Data.ProtoLens.fieldDefault,
         _GetWorkerBuildIdCompatibilityRequest'maxSets = Data.ProtoLens.fieldDefault,
         _GetWorkerBuildIdCompatibilityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerBuildIdCompatibilityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerBuildIdCompatibilityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "max_sets"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"maxSets") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetWorkerBuildIdCompatibilityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskQueue") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"maxSets") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData GetWorkerBuildIdCompatibilityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerBuildIdCompatibilityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerBuildIdCompatibilityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkerBuildIdCompatibilityRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkerBuildIdCompatibilityRequest'maxSets x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.majorVersionSets' @:: Lens' GetWorkerBuildIdCompatibilityResponse [Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'majorVersionSets' @:: Lens' GetWorkerBuildIdCompatibilityResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet)@ -}
data GetWorkerBuildIdCompatibilityResponse
  = GetWorkerBuildIdCompatibilityResponse'_constructor {_GetWorkerBuildIdCompatibilityResponse'majorVersionSets :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet),
                                                        _GetWorkerBuildIdCompatibilityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerBuildIdCompatibilityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerBuildIdCompatibilityResponse "majorVersionSets" [Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerBuildIdCompatibilityResponse'majorVersionSets
           (\ x__ y__
              -> x__
                   {_GetWorkerBuildIdCompatibilityResponse'majorVersionSets = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerBuildIdCompatibilityResponse "vec'majorVersionSets" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerBuildIdCompatibilityResponse'majorVersionSets
           (\ x__ y__
              -> x__
                   {_GetWorkerBuildIdCompatibilityResponse'majorVersionSets = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerBuildIdCompatibilityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityResponse"
  packedMessageDescriptor _
    = "\n\
      \%GetWorkerBuildIdCompatibilityResponse\DC2]\n\
      \\DC2major_version_sets\CAN\SOH \ETX(\v2/.temporal.api.taskqueue.v1.CompatibleVersionSetR\DLEmajorVersionSets"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        majorVersionSets__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "major_version_sets"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"majorVersionSets")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerBuildIdCompatibilityResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, majorVersionSets__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerBuildIdCompatibilityResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_GetWorkerBuildIdCompatibilityResponse'_unknownFields = y__})
  defMessage
    = GetWorkerBuildIdCompatibilityResponse'_constructor
        {_GetWorkerBuildIdCompatibilityResponse'majorVersionSets = Data.Vector.Generic.empty,
         _GetWorkerBuildIdCompatibilityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerBuildIdCompatibilityResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleVersionSet
             -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerBuildIdCompatibilityResponse
        loop x mutable'majorVersionSets
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'majorVersionSets <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                      mutable'majorVersionSets)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'majorVersionSets")
                              frozen'majorVersionSets x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "major_version_sets"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'majorVersionSets y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'majorVersionSets
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'majorVersionSets <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'majorVersionSets)
          "GetWorkerBuildIdCompatibilityResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'majorVersionSets") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData GetWorkerBuildIdCompatibilityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerBuildIdCompatibilityResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerBuildIdCompatibilityResponse'majorVersionSets x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetWorkerTaskReachabilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.buildIds' @:: Lens' GetWorkerTaskReachabilityRequest [Data.Text.Text]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'buildIds' @:: Lens' GetWorkerTaskReachabilityRequest (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueues' @:: Lens' GetWorkerTaskReachabilityRequest [Data.Text.Text]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'taskQueues' @:: Lens' GetWorkerTaskReachabilityRequest (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reachability' @:: Lens' GetWorkerTaskReachabilityRequest Proto.Temporal.Api.Enums.V1.TaskQueue.TaskReachability@ -}
data GetWorkerTaskReachabilityRequest
  = GetWorkerTaskReachabilityRequest'_constructor {_GetWorkerTaskReachabilityRequest'namespace :: !Data.Text.Text,
                                                   _GetWorkerTaskReachabilityRequest'buildIds :: !(Data.Vector.Vector Data.Text.Text),
                                                   _GetWorkerTaskReachabilityRequest'taskQueues :: !(Data.Vector.Vector Data.Text.Text),
                                                   _GetWorkerTaskReachabilityRequest'reachability :: !Proto.Temporal.Api.Enums.V1.TaskQueue.TaskReachability,
                                                   _GetWorkerTaskReachabilityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerTaskReachabilityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'namespace
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "buildIds" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'buildIds
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'buildIds = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "vec'buildIds" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'buildIds
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'buildIds = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "taskQueues" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'taskQueues
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'taskQueues = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "vec'taskQueues" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'taskQueues
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'taskQueues = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityRequest "reachability" Proto.Temporal.Api.Enums.V1.TaskQueue.TaskReachability where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityRequest'reachability
           (\ x__ y__
              -> x__ {_GetWorkerTaskReachabilityRequest'reachability = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerTaskReachabilityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerTaskReachabilityRequest"
  packedMessageDescriptor _
    = "\n\
      \ GetWorkerTaskReachabilityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tbuild_ids\CAN\STX \ETX(\tR\bbuildIds\DC2\US\n\
      \\vtask_queues\CAN\ETX \ETX(\tR\n\
      \taskQueues\DC2K\n\
      \\freachability\CAN\EOT \SOH(\SO2'.temporal.api.enums.v1.TaskReachabilityR\freachability"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerTaskReachabilityRequest
        buildIds__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "build_ids"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"buildIds")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerTaskReachabilityRequest
        taskQueues__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queues"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"taskQueues")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerTaskReachabilityRequest
        reachability__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reachability"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.TaskQueue.TaskReachability)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"reachability")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerTaskReachabilityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, buildIds__field_descriptor),
           (Data.ProtoLens.Tag 3, taskQueues__field_descriptor),
           (Data.ProtoLens.Tag 4, reachability__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerTaskReachabilityRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkerTaskReachabilityRequest'_unknownFields = y__})
  defMessage
    = GetWorkerTaskReachabilityRequest'_constructor
        {_GetWorkerTaskReachabilityRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetWorkerTaskReachabilityRequest'buildIds = Data.Vector.Generic.empty,
         _GetWorkerTaskReachabilityRequest'taskQueues = Data.Vector.Generic.empty,
         _GetWorkerTaskReachabilityRequest'reachability = Data.ProtoLens.fieldDefault,
         _GetWorkerTaskReachabilityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerTaskReachabilityRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerTaskReachabilityRequest
        loop x mutable'buildIds mutable'taskQueues
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'buildIds <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'buildIds)
                      frozen'taskQueues <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'taskQueues)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'buildIds") frozen'buildIds
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'taskQueues") frozen'taskQueues
                                 x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'buildIds mutable'taskQueues
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.getText
                                              (Prelude.fromIntegral len))
                                        "build_ids"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'buildIds y)
                                loop x v mutable'taskQueues
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.getText
                                              (Prelude.fromIntegral len))
                                        "task_queues"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'taskQueues y)
                                loop x mutable'buildIds v
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "reachability"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"reachability") y x)
                                  mutable'buildIds mutable'taskQueues
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'buildIds mutable'taskQueues
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'buildIds <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              mutable'taskQueues <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'buildIds mutable'taskQueues)
          "GetWorkerTaskReachabilityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.Text.Encoding.encodeUtf8 _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'buildIds") _x))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.Text.Encoding.encodeUtf8 _v))
                      (Lens.Family2.view
                         (Data.ProtoLens.Field.field @"vec'taskQueues") _x))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"reachability") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                                  Prelude.fromEnum _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData GetWorkerTaskReachabilityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerTaskReachabilityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerTaskReachabilityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkerTaskReachabilityRequest'buildIds x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkerTaskReachabilityRequest'taskQueues x__)
                      (Control.DeepSeq.deepseq
                         (_GetWorkerTaskReachabilityRequest'reachability x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.buildIdReachability' @:: Lens' GetWorkerTaskReachabilityResponse [Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'buildIdReachability' @:: Lens' GetWorkerTaskReachabilityResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability)@ -}
data GetWorkerTaskReachabilityResponse
  = GetWorkerTaskReachabilityResponse'_constructor {_GetWorkerTaskReachabilityResponse'buildIdReachability :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability),
                                                    _GetWorkerTaskReachabilityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerTaskReachabilityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityResponse "buildIdReachability" [Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityResponse'buildIdReachability
           (\ x__ y__
              -> x__
                   {_GetWorkerTaskReachabilityResponse'buildIdReachability = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerTaskReachabilityResponse "vec'buildIdReachability" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerTaskReachabilityResponse'buildIdReachability
           (\ x__ y__
              -> x__
                   {_GetWorkerTaskReachabilityResponse'buildIdReachability = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerTaskReachabilityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerTaskReachabilityResponse"
  packedMessageDescriptor _
    = "\n\
      \!GetWorkerTaskReachabilityResponse\DC2b\n\
      \\NAKbuild_id_reachability\CAN\SOH \ETX(\v2..temporal.api.taskqueue.v1.BuildIdReachabilityR\DC3buildIdReachability"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        buildIdReachability__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "build_id_reachability"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"buildIdReachability")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerTaskReachabilityResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, buildIdReachability__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerTaskReachabilityResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkerTaskReachabilityResponse'_unknownFields = y__})
  defMessage
    = GetWorkerTaskReachabilityResponse'_constructor
        {_GetWorkerTaskReachabilityResponse'buildIdReachability = Data.Vector.Generic.empty,
         _GetWorkerTaskReachabilityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerTaskReachabilityResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdReachability
             -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerTaskReachabilityResponse
        loop x mutable'buildIdReachability
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'buildIdReachability <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                      (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                         mutable'buildIdReachability)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'buildIdReachability")
                              frozen'buildIdReachability x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "build_id_reachability"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'buildIdReachability y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'buildIdReachability
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'buildIdReachability <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'buildIdReachability)
          "GetWorkerTaskReachabilityResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'buildIdReachability") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData GetWorkerTaskReachabilityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerTaskReachabilityResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerTaskReachabilityResponse'buildIdReachability x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetWorkerVersioningRulesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' GetWorkerVersioningRulesRequest Data.Text.Text@ -}
data GetWorkerVersioningRulesRequest
  = GetWorkerVersioningRulesRequest'_constructor {_GetWorkerVersioningRulesRequest'namespace :: !Data.Text.Text,
                                                  _GetWorkerVersioningRulesRequest'taskQueue :: !Data.Text.Text,
                                                  _GetWorkerVersioningRulesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerVersioningRulesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesRequest'namespace
           (\ x__ y__
              -> x__ {_GetWorkerVersioningRulesRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesRequest "taskQueue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesRequest'taskQueue
           (\ x__ y__
              -> x__ {_GetWorkerVersioningRulesRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerVersioningRulesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerVersioningRulesRequest"
  packedMessageDescriptor _
    = "\n\
      \\USGetWorkerVersioningRulesRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
      \\n\
      \task_queue\CAN\STX \SOH(\tR\ttaskQueue"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerVersioningRulesRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskQueue")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerVersioningRulesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerVersioningRulesRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkerVersioningRulesRequest'_unknownFields = y__})
  defMessage
    = GetWorkerVersioningRulesRequest'_constructor
        {_GetWorkerVersioningRulesRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetWorkerVersioningRulesRequest'taskQueue = Data.ProtoLens.fieldDefault,
         _GetWorkerVersioningRulesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerVersioningRulesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerVersioningRulesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetWorkerVersioningRulesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskQueue") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetWorkerVersioningRulesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerVersioningRulesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerVersioningRulesRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkerVersioningRulesRequest'taskQueue x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.assignmentRules' @:: Lens' GetWorkerVersioningRulesResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'assignmentRules' @:: Lens' GetWorkerVersioningRulesResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.compatibleRedirectRules' @:: Lens' GetWorkerVersioningRulesResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'compatibleRedirectRules' @:: Lens' GetWorkerVersioningRulesResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' GetWorkerVersioningRulesResponse Data.ByteString.ByteString@ -}
data GetWorkerVersioningRulesResponse
  = GetWorkerVersioningRulesResponse'_constructor {_GetWorkerVersioningRulesResponse'assignmentRules :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule),
                                                   _GetWorkerVersioningRulesResponse'compatibleRedirectRules :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule),
                                                   _GetWorkerVersioningRulesResponse'conflictToken :: !Data.ByteString.ByteString,
                                                   _GetWorkerVersioningRulesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkerVersioningRulesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesResponse "assignmentRules" [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesResponse'assignmentRules
           (\ x__ y__
              -> x__ {_GetWorkerVersioningRulesResponse'assignmentRules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesResponse "vec'assignmentRules" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesResponse'assignmentRules
           (\ x__ y__
              -> x__ {_GetWorkerVersioningRulesResponse'assignmentRules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesResponse "compatibleRedirectRules" [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesResponse'compatibleRedirectRules
           (\ x__ y__
              -> x__
                   {_GetWorkerVersioningRulesResponse'compatibleRedirectRules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesResponse "vec'compatibleRedirectRules" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesResponse'compatibleRedirectRules
           (\ x__ y__
              -> x__
                   {_GetWorkerVersioningRulesResponse'compatibleRedirectRules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkerVersioningRulesResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkerVersioningRulesResponse'conflictToken
           (\ x__ y__
              -> x__ {_GetWorkerVersioningRulesResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkerVersioningRulesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkerVersioningRulesResponse"
  packedMessageDescriptor _
    = "\n\
      \ GetWorkerVersioningRulesResponse\DC2f\n\
      \\DLEassignment_rules\CAN\SOH \ETX(\v2;.temporal.api.taskqueue.v1.TimestampedBuildIdAssignmentRuleR\SIassignmentRules\DC2\DEL\n\
      \\EMcompatible_redirect_rules\CAN\STX \ETX(\v2C.temporal.api.taskqueue.v1.TimestampedCompatibleBuildIdRedirectRuleR\ETBcompatibleRedirectRules\DC2%\n\
      \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        assignmentRules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "assignment_rules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"assignmentRules")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerVersioningRulesResponse
        compatibleRedirectRules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "compatible_redirect_rules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"compatibleRedirectRules")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerVersioningRulesResponse
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor GetWorkerVersioningRulesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, assignmentRules__field_descriptor),
           (Data.ProtoLens.Tag 2, compatibleRedirectRules__field_descriptor),
           (Data.ProtoLens.Tag 3, conflictToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkerVersioningRulesResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkerVersioningRulesResponse'_unknownFields = y__})
  defMessage
    = GetWorkerVersioningRulesResponse'_constructor
        {_GetWorkerVersioningRulesResponse'assignmentRules = Data.Vector.Generic.empty,
         _GetWorkerVersioningRulesResponse'compatibleRedirectRules = Data.Vector.Generic.empty,
         _GetWorkerVersioningRulesResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _GetWorkerVersioningRulesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkerVersioningRulesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule
                -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkerVersioningRulesResponse
        loop x mutable'assignmentRules mutable'compatibleRedirectRules
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'assignmentRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'assignmentRules)
                      frozen'compatibleRedirectRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'compatibleRedirectRules)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'assignmentRules")
                              frozen'assignmentRules
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'compatibleRedirectRules")
                                 frozen'compatibleRedirectRules x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "assignment_rules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'assignmentRules y)
                                loop x v mutable'compatibleRedirectRules
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "compatible_redirect_rules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'compatibleRedirectRules y)
                                loop x mutable'assignmentRules v
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                                  mutable'assignmentRules mutable'compatibleRedirectRules
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'assignmentRules mutable'compatibleRedirectRules
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'assignmentRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              mutable'compatibleRedirectRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'assignmentRules
                mutable'compatibleRedirectRules)
          "GetWorkerVersioningRulesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'assignmentRules") _x))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'compatibleRedirectRules") _x))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"conflictToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData GetWorkerVersioningRulesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkerVersioningRulesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkerVersioningRulesResponse'assignmentRules x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkerVersioningRulesResponse'compatibleRedirectRules x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkerVersioningRulesResponse'conflictToken x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetWorkflowExecutionHistoryRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' GetWorkflowExecutionHistoryRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' GetWorkflowExecutionHistoryRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maximumPageSize' @:: Lens' GetWorkflowExecutionHistoryRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' GetWorkflowExecutionHistoryRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.waitNewEvent' @:: Lens' GetWorkflowExecutionHistoryRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.historyEventFilterType' @:: Lens' GetWorkflowExecutionHistoryRequest Proto.Temporal.Api.Enums.V1.Workflow.HistoryEventFilterType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.skipArchival' @:: Lens' GetWorkflowExecutionHistoryRequest Prelude.Bool@ -}
data GetWorkflowExecutionHistoryRequest
  = GetWorkflowExecutionHistoryRequest'_constructor {_GetWorkflowExecutionHistoryRequest'namespace :: !Data.Text.Text,
                                                     _GetWorkflowExecutionHistoryRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                     _GetWorkflowExecutionHistoryRequest'maximumPageSize :: !Data.Int.Int32,
                                                     _GetWorkflowExecutionHistoryRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                     _GetWorkflowExecutionHistoryRequest'waitNewEvent :: !Prelude.Bool,
                                                     _GetWorkflowExecutionHistoryRequest'historyEventFilterType :: !Proto.Temporal.Api.Enums.V1.Workflow.HistoryEventFilterType,
                                                     _GetWorkflowExecutionHistoryRequest'skipArchival :: !Prelude.Bool,
                                                     _GetWorkflowExecutionHistoryRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkflowExecutionHistoryRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'namespace
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'execution
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'execution
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "maximumPageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'maximumPageSize
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryRequest'maximumPageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'nextPageToken
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "waitNewEvent" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'waitNewEvent
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'waitNewEvent = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "historyEventFilterType" Proto.Temporal.Api.Enums.V1.Workflow.HistoryEventFilterType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'historyEventFilterType
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryRequest'historyEventFilterType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryRequest "skipArchival" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryRequest'skipArchival
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryRequest'skipArchival = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkflowExecutionHistoryRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryRequest"
  packedMessageDescriptor _
    = "\n\
      \\"GetWorkflowExecutionHistoryRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2*\n\
      \\DC1maximum_page_size\CAN\ETX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
      \\SInext_page_token\CAN\EOT \SOH(\fR\rnextPageToken\DC2$\n\
      \\SOwait_new_event\CAN\ENQ \SOH(\bR\fwaitNewEvent\DC2h\n\
      \\EMhistory_event_filter_type\CAN\ACK \SOH(\SO2-.temporal.api.enums.v1.HistoryEventFilterTypeR\SYNhistoryEventFilterType\DC2#\n\
      \\rskip_archival\CAN\a \SOH(\bR\fskipArchival"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        maximumPageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "maximum_page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maximumPageSize")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        waitNewEvent__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "wait_new_event"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"waitNewEvent")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        historyEventFilterType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history_event_filter_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.HistoryEventFilterType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"historyEventFilterType")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
        skipArchival__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "skip_archival"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"skipArchival")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, maximumPageSize__field_descriptor),
           (Data.ProtoLens.Tag 4, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 5, waitNewEvent__field_descriptor),
           (Data.ProtoLens.Tag 6, historyEventFilterType__field_descriptor),
           (Data.ProtoLens.Tag 7, skipArchival__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkflowExecutionHistoryRequest'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkflowExecutionHistoryRequest'_unknownFields = y__})
  defMessage
    = GetWorkflowExecutionHistoryRequest'_constructor
        {_GetWorkflowExecutionHistoryRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'execution = Prelude.Nothing,
         _GetWorkflowExecutionHistoryRequest'maximumPageSize = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'waitNewEvent = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'historyEventFilterType = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'skipArchival = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkflowExecutionHistoryRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkflowExecutionHistoryRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "maximum_page_size"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maximumPageSize") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "wait_new_event"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"waitNewEvent") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "history_event_filter_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"historyEventFilterType") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "skip_archival"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"skipArchival") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetWorkflowExecutionHistoryRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"maximumPageSize") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"nextPageToken") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view (Data.ProtoLens.Field.field @"waitNewEvent") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"historyEventFilterType") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           Prelude.fromIntegral)
                                        Prelude.fromEnum _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"skipArchival") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (\ b -> if b then 1 else 0) _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData GetWorkflowExecutionHistoryRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkflowExecutionHistoryRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkflowExecutionHistoryRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkflowExecutionHistoryRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkflowExecutionHistoryRequest'maximumPageSize x__)
                      (Control.DeepSeq.deepseq
                         (_GetWorkflowExecutionHistoryRequest'nextPageToken x__)
                         (Control.DeepSeq.deepseq
                            (_GetWorkflowExecutionHistoryRequest'waitNewEvent x__)
                            (Control.DeepSeq.deepseq
                               (_GetWorkflowExecutionHistoryRequest'historyEventFilterType x__)
                               (Control.DeepSeq.deepseq
                                  (_GetWorkflowExecutionHistoryRequest'skipArchival x__) ())))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.history' @:: Lens' GetWorkflowExecutionHistoryResponse Proto.Temporal.Api.History.V1.Message.History@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'history' @:: Lens' GetWorkflowExecutionHistoryResponse (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rawHistory' @:: Lens' GetWorkflowExecutionHistoryResponse [Proto.Temporal.Api.Common.V1.Message.DataBlob]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'rawHistory' @:: Lens' GetWorkflowExecutionHistoryResponse (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.DataBlob)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' GetWorkflowExecutionHistoryResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.archived' @:: Lens' GetWorkflowExecutionHistoryResponse Prelude.Bool@ -}
data GetWorkflowExecutionHistoryResponse
  = GetWorkflowExecutionHistoryResponse'_constructor {_GetWorkflowExecutionHistoryResponse'history :: !(Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History),
                                                      _GetWorkflowExecutionHistoryResponse'rawHistory :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.DataBlob),
                                                      _GetWorkflowExecutionHistoryResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                      _GetWorkflowExecutionHistoryResponse'archived :: !Prelude.Bool,
                                                      _GetWorkflowExecutionHistoryResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkflowExecutionHistoryResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "history" Proto.Temporal.Api.History.V1.Message.History where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'history
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'history = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "maybe'history" (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'history
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'history = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "rawHistory" [Proto.Temporal.Api.Common.V1.Message.DataBlob] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'rawHistory
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'rawHistory = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "vec'rawHistory" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.DataBlob) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'rawHistory
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'rawHistory = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'nextPageToken
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryResponse "archived" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryResponse'archived
           (\ x__ y__
              -> x__ {_GetWorkflowExecutionHistoryResponse'archived = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkflowExecutionHistoryResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponse"
  packedMessageDescriptor _
    = "\n\
      \#GetWorkflowExecutionHistoryResponse\DC2:\n\
      \\ahistory\CAN\SOH \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2A\n\
      \\vraw_history\CAN\STX \ETX(\v2 .temporal.api.common.v1.DataBlobR\n\
      \rawHistory\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\SUB\n\
      \\barchived\CAN\EOT \SOH(\bR\barchived"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        history__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.History.V1.Message.History)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'history")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryResponse
        rawHistory__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "raw_history"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.DataBlob)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"rawHistory")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryResponse
        archived__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "archived"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"archived")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, history__field_descriptor),
           (Data.ProtoLens.Tag 2, rawHistory__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, archived__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkflowExecutionHistoryResponse'_unknownFields
        (\ x__ y__
           -> x__ {_GetWorkflowExecutionHistoryResponse'_unknownFields = y__})
  defMessage
    = GetWorkflowExecutionHistoryResponse'_constructor
        {_GetWorkflowExecutionHistoryResponse'history = Prelude.Nothing,
         _GetWorkflowExecutionHistoryResponse'rawHistory = Data.Vector.Generic.empty,
         _GetWorkflowExecutionHistoryResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryResponse'archived = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkflowExecutionHistoryResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.DataBlob
             -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkflowExecutionHistoryResponse
        loop x mutable'rawHistory
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'rawHistory <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'rawHistory)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'rawHistory") frozen'rawHistory
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "history"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"history") y x)
                                  mutable'rawHistory
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "raw_history"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'rawHistory y)
                                loop x v
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'rawHistory
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "archived"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"archived") y x)
                                  mutable'rawHistory
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'rawHistory
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'rawHistory <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'rawHistory)
          "GetWorkflowExecutionHistoryResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'history") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'rawHistory") _x))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"archived") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0) _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData GetWorkflowExecutionHistoryResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkflowExecutionHistoryResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkflowExecutionHistoryResponse'history x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkflowExecutionHistoryResponse'rawHistory x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkflowExecutionHistoryResponse'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_GetWorkflowExecutionHistoryResponse'archived x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' GetWorkflowExecutionHistoryReverseRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' GetWorkflowExecutionHistoryReverseRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' GetWorkflowExecutionHistoryReverseRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maximumPageSize' @:: Lens' GetWorkflowExecutionHistoryReverseRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' GetWorkflowExecutionHistoryReverseRequest Data.ByteString.ByteString@ -}
data GetWorkflowExecutionHistoryReverseRequest
  = GetWorkflowExecutionHistoryReverseRequest'_constructor {_GetWorkflowExecutionHistoryReverseRequest'namespace :: !Data.Text.Text,
                                                            _GetWorkflowExecutionHistoryReverseRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                            _GetWorkflowExecutionHistoryReverseRequest'maximumPageSize :: !Data.Int.Int32,
                                                            _GetWorkflowExecutionHistoryReverseRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                            _GetWorkflowExecutionHistoryReverseRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkflowExecutionHistoryReverseRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseRequest'namespace
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseRequest'execution
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseRequest'execution
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseRequest "maximumPageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseRequest'maximumPageSize
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseRequest'maximumPageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseRequest'nextPageToken
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkflowExecutionHistoryReverseRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseRequest"
  packedMessageDescriptor _
    = "\n\
      \)GetWorkflowExecutionHistoryReverseRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2*\n\
      \\DC1maximum_page_size\CAN\ETX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
      \\SInext_page_token\CAN\EOT \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseRequest
        maximumPageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "maximum_page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maximumPageSize")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, maximumPageSize__field_descriptor),
           (Data.ProtoLens.Tag 4, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkflowExecutionHistoryReverseRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_GetWorkflowExecutionHistoryReverseRequest'_unknownFields = y__})
  defMessage
    = GetWorkflowExecutionHistoryReverseRequest'_constructor
        {_GetWorkflowExecutionHistoryReverseRequest'namespace = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryReverseRequest'execution = Prelude.Nothing,
         _GetWorkflowExecutionHistoryReverseRequest'maximumPageSize = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryReverseRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryReverseRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkflowExecutionHistoryReverseRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkflowExecutionHistoryReverseRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "maximum_page_size"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maximumPageSize") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetWorkflowExecutionHistoryReverseRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"maximumPageSize") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"nextPageToken") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData GetWorkflowExecutionHistoryReverseRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkflowExecutionHistoryReverseRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkflowExecutionHistoryReverseRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkflowExecutionHistoryReverseRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_GetWorkflowExecutionHistoryReverseRequest'maximumPageSize x__)
                      (Control.DeepSeq.deepseq
                         (_GetWorkflowExecutionHistoryReverseRequest'nextPageToken x__)
                         ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.history' @:: Lens' GetWorkflowExecutionHistoryReverseResponse Proto.Temporal.Api.History.V1.Message.History@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'history' @:: Lens' GetWorkflowExecutionHistoryReverseResponse (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' GetWorkflowExecutionHistoryReverseResponse Data.ByteString.ByteString@ -}
data GetWorkflowExecutionHistoryReverseResponse
  = GetWorkflowExecutionHistoryReverseResponse'_constructor {_GetWorkflowExecutionHistoryReverseResponse'history :: !(Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History),
                                                             _GetWorkflowExecutionHistoryReverseResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                             _GetWorkflowExecutionHistoryReverseResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show GetWorkflowExecutionHistoryReverseResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseResponse "history" Proto.Temporal.Api.History.V1.Message.History where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseResponse'history
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseResponse'history = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseResponse "maybe'history" (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseResponse'history
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseResponse'history = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField GetWorkflowExecutionHistoryReverseResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _GetWorkflowExecutionHistoryReverseResponse'nextPageToken
           (\ x__ y__
              -> x__
                   {_GetWorkflowExecutionHistoryReverseResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message GetWorkflowExecutionHistoryReverseResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseResponse"
  packedMessageDescriptor _
    = "\n\
      \*GetWorkflowExecutionHistoryReverseResponse\DC2:\n\
      \\ahistory\CAN\SOH \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        history__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.History.V1.Message.History)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'history")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor GetWorkflowExecutionHistoryReverseResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, history__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _GetWorkflowExecutionHistoryReverseResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_GetWorkflowExecutionHistoryReverseResponse'_unknownFields = y__})
  defMessage
    = GetWorkflowExecutionHistoryReverseResponse'_constructor
        {_GetWorkflowExecutionHistoryReverseResponse'history = Prelude.Nothing,
         _GetWorkflowExecutionHistoryReverseResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _GetWorkflowExecutionHistoryReverseResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          GetWorkflowExecutionHistoryReverseResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser GetWorkflowExecutionHistoryReverseResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "history"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"history") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "GetWorkflowExecutionHistoryReverseResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'history") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData GetWorkflowExecutionHistoryReverseResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_GetWorkflowExecutionHistoryReverseResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_GetWorkflowExecutionHistoryReverseResponse'history x__)
                (Control.DeepSeq.deepseq
                   (_GetWorkflowExecutionHistoryReverseResponse'nextPageToken x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListArchivedWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListArchivedWorkflowExecutionsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListArchivedWorkflowExecutionsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' ListArchivedWorkflowExecutionsRequest Data.Text.Text@ -}
data ListArchivedWorkflowExecutionsRequest
  = ListArchivedWorkflowExecutionsRequest'_constructor {_ListArchivedWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                        _ListArchivedWorkflowExecutionsRequest'pageSize :: !Data.Int.Int32,
                                                        _ListArchivedWorkflowExecutionsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                        _ListArchivedWorkflowExecutionsRequest'query :: !Data.Text.Text,
                                                        _ListArchivedWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListArchivedWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_ListArchivedWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsRequest'pageSize
           (\ x__ y__
              -> x__ {_ListArchivedWorkflowExecutionsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsRequest'nextPageToken
           (\ x__ y__
              -> x__
                   {_ListArchivedWorkflowExecutionsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsRequest "query" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsRequest'query
           (\ x__ y__
              -> x__ {_ListArchivedWorkflowExecutionsRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListArchivedWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListArchivedWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \%ListArchivedWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
      \\ENQquery\CAN\EOT \SOH(\tR\ENQquery"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"query")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, query__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListArchivedWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_ListArchivedWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = ListArchivedWorkflowExecutionsRequest'_constructor
        {_ListArchivedWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListArchivedWorkflowExecutionsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListArchivedWorkflowExecutionsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListArchivedWorkflowExecutionsRequest'query = Data.ProtoLens.fieldDefault,
         _ListArchivedWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListArchivedWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListArchivedWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ListArchivedWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"query") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ListArchivedWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListArchivedWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListArchivedWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListArchivedWorkflowExecutionsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListArchivedWorkflowExecutionsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ListArchivedWorkflowExecutionsRequest'query x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' ListArchivedWorkflowExecutionsResponse [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' ListArchivedWorkflowExecutionsResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListArchivedWorkflowExecutionsResponse Data.ByteString.ByteString@ -}
data ListArchivedWorkflowExecutionsResponse
  = ListArchivedWorkflowExecutionsResponse'_constructor {_ListArchivedWorkflowExecutionsResponse'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                         _ListArchivedWorkflowExecutionsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                         _ListArchivedWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListArchivedWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsResponse "executions" [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListArchivedWorkflowExecutionsResponse'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsResponse "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListArchivedWorkflowExecutionsResponse'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListArchivedWorkflowExecutionsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListArchivedWorkflowExecutionsResponse'nextPageToken
           (\ x__ y__
              -> x__
                   {_ListArchivedWorkflowExecutionsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListArchivedWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListArchivedWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \&ListArchivedWorkflowExecutionsResponse\DC2O\n\
      \\n\
      \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
      \executions\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListArchivedWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executions__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListArchivedWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_ListArchivedWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = ListArchivedWorkflowExecutionsResponse'_constructor
        {_ListArchivedWorkflowExecutionsResponse'executions = Data.Vector.Generic.empty,
         _ListArchivedWorkflowExecutionsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListArchivedWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListArchivedWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListArchivedWorkflowExecutionsResponse
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "ListArchivedWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'executions") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListArchivedWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListArchivedWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListArchivedWorkflowExecutionsResponse'executions x__)
                (Control.DeepSeq.deepseq
                   (_ListArchivedWorkflowExecutionsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListBatchOperationsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListBatchOperationsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListBatchOperationsRequest Data.ByteString.ByteString@ -}
data ListBatchOperationsRequest
  = ListBatchOperationsRequest'_constructor {_ListBatchOperationsRequest'namespace :: !Data.Text.Text,
                                             _ListBatchOperationsRequest'pageSize :: !Data.Int.Int32,
                                             _ListBatchOperationsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                             _ListBatchOperationsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListBatchOperationsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListBatchOperationsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsRequest'namespace
           (\ x__ y__ -> x__ {_ListBatchOperationsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListBatchOperationsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsRequest'pageSize
           (\ x__ y__ -> x__ {_ListBatchOperationsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListBatchOperationsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ListBatchOperationsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListBatchOperationsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListBatchOperationsRequest"
  packedMessageDescriptor _
    = "\n\
      \\SUBListBatchOperationsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListBatchOperationsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListBatchOperationsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListBatchOperationsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListBatchOperationsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListBatchOperationsRequest'_unknownFields = y__})
  defMessage
    = ListBatchOperationsRequest'_constructor
        {_ListBatchOperationsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListBatchOperationsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListBatchOperationsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListBatchOperationsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListBatchOperationsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListBatchOperationsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListBatchOperationsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData ListBatchOperationsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListBatchOperationsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListBatchOperationsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListBatchOperationsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListBatchOperationsRequest'nextPageToken x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.operationInfo' @:: Lens' ListBatchOperationsResponse [Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'operationInfo' @:: Lens' ListBatchOperationsResponse (Data.Vector.Vector Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListBatchOperationsResponse Data.ByteString.ByteString@ -}
data ListBatchOperationsResponse
  = ListBatchOperationsResponse'_constructor {_ListBatchOperationsResponse'operationInfo :: !(Data.Vector.Vector Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo),
                                              _ListBatchOperationsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                              _ListBatchOperationsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListBatchOperationsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListBatchOperationsResponse "operationInfo" [Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsResponse'operationInfo
           (\ x__ y__
              -> x__ {_ListBatchOperationsResponse'operationInfo = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListBatchOperationsResponse "vec'operationInfo" (Data.Vector.Vector Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsResponse'operationInfo
           (\ x__ y__
              -> x__ {_ListBatchOperationsResponse'operationInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListBatchOperationsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListBatchOperationsResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ListBatchOperationsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListBatchOperationsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListBatchOperationsResponse"
  packedMessageDescriptor _
    = "\n\
      \\ESCListBatchOperationsResponse\DC2P\n\
      \\SOoperation_info\CAN\SOH \ETX(\v2).temporal.api.batch.v1.BatchOperationInfoR\roperationInfo\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        operationInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "operation_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"operationInfo")) ::
              Data.ProtoLens.FieldDescriptor ListBatchOperationsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListBatchOperationsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, operationInfo__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListBatchOperationsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListBatchOperationsResponse'_unknownFields = y__})
  defMessage
    = ListBatchOperationsResponse'_constructor
        {_ListBatchOperationsResponse'operationInfo = Data.Vector.Generic.empty,
         _ListBatchOperationsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListBatchOperationsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListBatchOperationsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Batch.V1.Message.BatchOperationInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListBatchOperationsResponse
        loop x mutable'operationInfo
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'operationInfo <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                   mutable'operationInfo)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'operationInfo")
                              frozen'operationInfo x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "operation_info"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'operationInfo y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'operationInfo
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'operationInfo
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'operationInfo <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                         Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'operationInfo)
          "ListBatchOperationsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'operationInfo") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListBatchOperationsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListBatchOperationsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListBatchOperationsResponse'operationInfo x__)
                (Control.DeepSeq.deepseq
                   (_ListBatchOperationsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListClosedWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maximumPageSize' @:: Lens' ListClosedWorkflowExecutionsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListClosedWorkflowExecutionsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startTimeFilter' @:: Lens' ListClosedWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startTimeFilter' @:: Lens' ListClosedWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'filters' @:: Lens' ListClosedWorkflowExecutionsRequest (Prelude.Maybe ListClosedWorkflowExecutionsRequest'Filters)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'executionFilter' @:: Lens' ListClosedWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executionFilter' @:: Lens' ListClosedWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'typeFilter' @:: Lens' ListClosedWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.typeFilter' @:: Lens' ListClosedWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'statusFilter' @:: Lens' ListClosedWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StatusFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.statusFilter' @:: Lens' ListClosedWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.StatusFilter@ -}
data ListClosedWorkflowExecutionsRequest
  = ListClosedWorkflowExecutionsRequest'_constructor {_ListClosedWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                      _ListClosedWorkflowExecutionsRequest'maximumPageSize :: !Data.Int.Int32,
                                                      _ListClosedWorkflowExecutionsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                      _ListClosedWorkflowExecutionsRequest'startTimeFilter :: !(Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter),
                                                      _ListClosedWorkflowExecutionsRequest'filters :: !(Prelude.Maybe ListClosedWorkflowExecutionsRequest'Filters),
                                                      _ListClosedWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListClosedWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data ListClosedWorkflowExecutionsRequest'Filters
  = ListClosedWorkflowExecutionsRequest'ExecutionFilter !Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter |
    ListClosedWorkflowExecutionsRequest'TypeFilter !Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter |
    ListClosedWorkflowExecutionsRequest'StatusFilter !Proto.Temporal.Api.Filter.V1.Message.StatusFilter
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maximumPageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'maximumPageSize
           (\ x__ y__
              -> x__
                   {_ListClosedWorkflowExecutionsRequest'maximumPageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "startTimeFilter" Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'startTimeFilter
           (\ x__ y__
              -> x__
                   {_ListClosedWorkflowExecutionsRequest'startTimeFilter = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maybe'startTimeFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'startTimeFilter
           (\ x__ y__
              -> x__
                   {_ListClosedWorkflowExecutionsRequest'startTimeFilter = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maybe'filters" (Prelude.Maybe ListClosedWorkflowExecutionsRequest'Filters) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maybe'executionFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ListClosedWorkflowExecutionsRequest'ExecutionFilter x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ListClosedWorkflowExecutionsRequest'ExecutionFilter y__))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "executionFilter" Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ListClosedWorkflowExecutionsRequest'ExecutionFilter x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ListClosedWorkflowExecutionsRequest'ExecutionFilter y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maybe'typeFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ListClosedWorkflowExecutionsRequest'TypeFilter x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ListClosedWorkflowExecutionsRequest'TypeFilter y__))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "typeFilter" Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ListClosedWorkflowExecutionsRequest'TypeFilter x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ListClosedWorkflowExecutionsRequest'TypeFilter y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "maybe'statusFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StatusFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ListClosedWorkflowExecutionsRequest'StatusFilter x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ListClosedWorkflowExecutionsRequest'StatusFilter y__))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsRequest "statusFilter" Proto.Temporal.Api.Filter.V1.Message.StatusFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsRequest'filters = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ListClosedWorkflowExecutionsRequest'StatusFilter x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ListClosedWorkflowExecutionsRequest'StatusFilter y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message ListClosedWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListClosedWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \#ListClosedWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
      \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2S\n\
      \\DC1start_time_filter\CAN\EOT \SOH(\v2'.temporal.api.filter.v1.StartTimeFilterR\SIstartTimeFilter\DC2\\\n\
      \\DLEexecution_filter\CAN\ENQ \SOH(\v2/.temporal.api.filter.v1.WorkflowExecutionFilterH\NULR\SIexecutionFilter\DC2M\n\
      \\vtype_filter\CAN\ACK \SOH(\v2*.temporal.api.filter.v1.WorkflowTypeFilterH\NULR\n\
      \typeFilter\DC2K\n\
      \\rstatus_filter\CAN\a \SOH(\v2$.temporal.api.filter.v1.StatusFilterH\NULR\fstatusFilterB\t\n\
      \\afilters"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        maximumPageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "maximum_page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maximumPageSize")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        startTimeFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_time_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startTimeFilter")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        executionFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'executionFilter")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        typeFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'typeFilter")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
        statusFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "status_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.StatusFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'statusFilter")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, maximumPageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, startTimeFilter__field_descriptor),
           (Data.ProtoLens.Tag 5, executionFilter__field_descriptor),
           (Data.ProtoLens.Tag 6, typeFilter__field_descriptor),
           (Data.ProtoLens.Tag 7, statusFilter__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListClosedWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListClosedWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = ListClosedWorkflowExecutionsRequest'_constructor
        {_ListClosedWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListClosedWorkflowExecutionsRequest'maximumPageSize = Data.ProtoLens.fieldDefault,
         _ListClosedWorkflowExecutionsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListClosedWorkflowExecutionsRequest'startTimeFilter = Prelude.Nothing,
         _ListClosedWorkflowExecutionsRequest'filters = Prelude.Nothing,
         _ListClosedWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListClosedWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListClosedWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "maximum_page_size"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maximumPageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_time_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startTimeFilter") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"executionFilter") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "type_filter"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"typeFilter") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "status_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"statusFilter") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ListClosedWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"maximumPageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'startTimeFilter") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'filters") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just (ListClosedWorkflowExecutionsRequest'ExecutionFilter v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage v)
                            (Prelude.Just (ListClosedWorkflowExecutionsRequest'TypeFilter v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage v)
                            (Prelude.Just (ListClosedWorkflowExecutionsRequest'StatusFilter v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData ListClosedWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListClosedWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListClosedWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListClosedWorkflowExecutionsRequest'maximumPageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListClosedWorkflowExecutionsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ListClosedWorkflowExecutionsRequest'startTimeFilter x__)
                         (Control.DeepSeq.deepseq
                            (_ListClosedWorkflowExecutionsRequest'filters x__) ())))))
instance Control.DeepSeq.NFData ListClosedWorkflowExecutionsRequest'Filters where
  rnf (ListClosedWorkflowExecutionsRequest'ExecutionFilter x__)
    = Control.DeepSeq.rnf x__
  rnf (ListClosedWorkflowExecutionsRequest'TypeFilter x__)
    = Control.DeepSeq.rnf x__
  rnf (ListClosedWorkflowExecutionsRequest'StatusFilter x__)
    = Control.DeepSeq.rnf x__
_ListClosedWorkflowExecutionsRequest'ExecutionFilter ::
  Data.ProtoLens.Prism.Prism' ListClosedWorkflowExecutionsRequest'Filters Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter
_ListClosedWorkflowExecutionsRequest'ExecutionFilter
  = Data.ProtoLens.Prism.prism'
      ListClosedWorkflowExecutionsRequest'ExecutionFilter
      (\ p__
         -> case p__ of
              (ListClosedWorkflowExecutionsRequest'ExecutionFilter p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ListClosedWorkflowExecutionsRequest'TypeFilter ::
  Data.ProtoLens.Prism.Prism' ListClosedWorkflowExecutionsRequest'Filters Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter
_ListClosedWorkflowExecutionsRequest'TypeFilter
  = Data.ProtoLens.Prism.prism'
      ListClosedWorkflowExecutionsRequest'TypeFilter
      (\ p__
         -> case p__ of
              (ListClosedWorkflowExecutionsRequest'TypeFilter p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ListClosedWorkflowExecutionsRequest'StatusFilter ::
  Data.ProtoLens.Prism.Prism' ListClosedWorkflowExecutionsRequest'Filters Proto.Temporal.Api.Filter.V1.Message.StatusFilter
_ListClosedWorkflowExecutionsRequest'StatusFilter
  = Data.ProtoLens.Prism.prism'
      ListClosedWorkflowExecutionsRequest'StatusFilter
      (\ p__
         -> case p__ of
              (ListClosedWorkflowExecutionsRequest'StatusFilter p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' ListClosedWorkflowExecutionsResponse [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' ListClosedWorkflowExecutionsResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListClosedWorkflowExecutionsResponse Data.ByteString.ByteString@ -}
data ListClosedWorkflowExecutionsResponse
  = ListClosedWorkflowExecutionsResponse'_constructor {_ListClosedWorkflowExecutionsResponse'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                       _ListClosedWorkflowExecutionsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                       _ListClosedWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListClosedWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsResponse "executions" [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsResponse'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsResponse "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListClosedWorkflowExecutionsResponse'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListClosedWorkflowExecutionsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListClosedWorkflowExecutionsResponse'nextPageToken
           (\ x__ y__
              -> x__
                   {_ListClosedWorkflowExecutionsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListClosedWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListClosedWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \$ListClosedWorkflowExecutionsResponse\DC2O\n\
      \\n\
      \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
      \executions\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListClosedWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executions__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListClosedWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_ListClosedWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = ListClosedWorkflowExecutionsResponse'_constructor
        {_ListClosedWorkflowExecutionsResponse'executions = Data.Vector.Generic.empty,
         _ListClosedWorkflowExecutionsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListClosedWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListClosedWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListClosedWorkflowExecutionsResponse
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "ListClosedWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'executions") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListClosedWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListClosedWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListClosedWorkflowExecutionsResponse'executions x__)
                (Control.DeepSeq.deepseq
                   (_ListClosedWorkflowExecutionsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListDeploymentsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListDeploymentsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListDeploymentsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.seriesName' @:: Lens' ListDeploymentsRequest Data.Text.Text@ -}
data ListDeploymentsRequest
  = ListDeploymentsRequest'_constructor {_ListDeploymentsRequest'namespace :: !Data.Text.Text,
                                         _ListDeploymentsRequest'pageSize :: !Data.Int.Int32,
                                         _ListDeploymentsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                         _ListDeploymentsRequest'seriesName :: !Data.Text.Text,
                                         _ListDeploymentsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListDeploymentsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListDeploymentsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsRequest'namespace
           (\ x__ y__ -> x__ {_ListDeploymentsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListDeploymentsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsRequest'pageSize
           (\ x__ y__ -> x__ {_ListDeploymentsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListDeploymentsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsRequest'nextPageToken
           (\ x__ y__ -> x__ {_ListDeploymentsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListDeploymentsRequest "seriesName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsRequest'seriesName
           (\ x__ y__ -> x__ {_ListDeploymentsRequest'seriesName = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListDeploymentsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListDeploymentsRequest"
  packedMessageDescriptor _
    = "\n\
      \\SYNListDeploymentsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\US\n\
      \\vseries_name\CAN\EOT \SOH(\tR\n\
      \seriesName"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsRequest
        seriesName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "series_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"seriesName")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, seriesName__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListDeploymentsRequest'_unknownFields
        (\ x__ y__ -> x__ {_ListDeploymentsRequest'_unknownFields = y__})
  defMessage
    = ListDeploymentsRequest'_constructor
        {_ListDeploymentsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListDeploymentsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListDeploymentsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListDeploymentsRequest'seriesName = Data.ProtoLens.fieldDefault,
         _ListDeploymentsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListDeploymentsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListDeploymentsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "series_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"seriesName") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListDeploymentsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"seriesName") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ListDeploymentsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListDeploymentsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListDeploymentsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListDeploymentsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListDeploymentsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ListDeploymentsRequest'seriesName x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListDeploymentsResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployments' @:: Lens' ListDeploymentsResponse [Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'deployments' @:: Lens' ListDeploymentsResponse (Data.Vector.Vector Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo)@ -}
data ListDeploymentsResponse
  = ListDeploymentsResponse'_constructor {_ListDeploymentsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                          _ListDeploymentsResponse'deployments :: !(Data.Vector.Vector Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo),
                                          _ListDeploymentsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListDeploymentsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListDeploymentsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsResponse'nextPageToken
           (\ x__ y__ -> x__ {_ListDeploymentsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListDeploymentsResponse "deployments" [Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsResponse'deployments
           (\ x__ y__ -> x__ {_ListDeploymentsResponse'deployments = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListDeploymentsResponse "vec'deployments" (Data.Vector.Vector Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListDeploymentsResponse'deployments
           (\ x__ y__ -> x__ {_ListDeploymentsResponse'deployments = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListDeploymentsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListDeploymentsResponse"
  packedMessageDescriptor _
    = "\n\
      \\ETBListDeploymentsResponse\DC2&\n\
      \\SInext_page_token\CAN\SOH \SOH(\fR\rnextPageToken\DC2P\n\
      \\vdeployments\CAN\STX \ETX(\v2..temporal.api.deployment.v1.DeploymentListInfoR\vdeployments"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsResponse
        deployments__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployments"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"deployments")) ::
              Data.ProtoLens.FieldDescriptor ListDeploymentsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 2, deployments__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListDeploymentsResponse'_unknownFields
        (\ x__ y__ -> x__ {_ListDeploymentsResponse'_unknownFields = y__})
  defMessage
    = ListDeploymentsResponse'_constructor
        {_ListDeploymentsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListDeploymentsResponse'deployments = Data.Vector.Generic.empty,
         _ListDeploymentsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListDeploymentsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Deployment.V1.Message.DeploymentListInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListDeploymentsResponse
        loop x mutable'deployments
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'deployments <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                              (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                 mutable'deployments)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'deployments") frozen'deployments
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'deployments
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "deployments"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'deployments y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'deployments
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'deployments <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'deployments)
          "ListDeploymentsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"nextPageToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'deployments") _x))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListDeploymentsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListDeploymentsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListDeploymentsResponse'nextPageToken x__)
                (Control.DeepSeq.deepseq
                   (_ListDeploymentsResponse'deployments x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListNamespacesRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListNamespacesRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespaceFilter' @:: Lens' ListNamespacesRequest Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'namespaceFilter' @:: Lens' ListNamespacesRequest (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter)@ -}
data ListNamespacesRequest
  = ListNamespacesRequest'_constructor {_ListNamespacesRequest'pageSize :: !Data.Int.Int32,
                                        _ListNamespacesRequest'nextPageToken :: !Data.ByteString.ByteString,
                                        _ListNamespacesRequest'namespaceFilter :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter),
                                        _ListNamespacesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListNamespacesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListNamespacesRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesRequest'pageSize
           (\ x__ y__ -> x__ {_ListNamespacesRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListNamespacesRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesRequest'nextPageToken
           (\ x__ y__ -> x__ {_ListNamespacesRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListNamespacesRequest "namespaceFilter" Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesRequest'namespaceFilter
           (\ x__ y__ -> x__ {_ListNamespacesRequest'namespaceFilter = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListNamespacesRequest "maybe'namespaceFilter" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesRequest'namespaceFilter
           (\ x__ y__ -> x__ {_ListNamespacesRequest'namespaceFilter = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListNamespacesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListNamespacesRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKListNamespacesRequest\DC2\ESC\n\
      \\tpage_size\CAN\SOH \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\DC2U\n\
      \\DLEnamespace_filter\CAN\ETX \SOH(\v2*.temporal.api.namespace.v1.NamespaceFilterR\SInamespaceFilter"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListNamespacesRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListNamespacesRequest
        namespaceFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'namespaceFilter")) ::
              Data.ProtoLens.FieldDescriptor ListNamespacesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 3, namespaceFilter__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListNamespacesRequest'_unknownFields
        (\ x__ y__ -> x__ {_ListNamespacesRequest'_unknownFields = y__})
  defMessage
    = ListNamespacesRequest'_constructor
        {_ListNamespacesRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListNamespacesRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListNamespacesRequest'namespaceFilter = Prelude.Nothing,
         _ListNamespacesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListNamespacesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListNamespacesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "namespace_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"namespaceFilter") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListNamespacesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'namespaceFilter") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData ListNamespacesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListNamespacesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListNamespacesRequest'pageSize x__)
                (Control.DeepSeq.deepseq
                   (_ListNamespacesRequest'nextPageToken x__)
                   (Control.DeepSeq.deepseq
                      (_ListNamespacesRequest'namespaceFilter x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespaces' @:: Lens' ListNamespacesResponse [DescribeNamespaceResponse]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'namespaces' @:: Lens' ListNamespacesResponse (Data.Vector.Vector DescribeNamespaceResponse)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListNamespacesResponse Data.ByteString.ByteString@ -}
data ListNamespacesResponse
  = ListNamespacesResponse'_constructor {_ListNamespacesResponse'namespaces :: !(Data.Vector.Vector DescribeNamespaceResponse),
                                         _ListNamespacesResponse'nextPageToken :: !Data.ByteString.ByteString,
                                         _ListNamespacesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListNamespacesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListNamespacesResponse "namespaces" [DescribeNamespaceResponse] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesResponse'namespaces
           (\ x__ y__ -> x__ {_ListNamespacesResponse'namespaces = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListNamespacesResponse "vec'namespaces" (Data.Vector.Vector DescribeNamespaceResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesResponse'namespaces
           (\ x__ y__ -> x__ {_ListNamespacesResponse'namespaces = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListNamespacesResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListNamespacesResponse'nextPageToken
           (\ x__ y__ -> x__ {_ListNamespacesResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListNamespacesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListNamespacesResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNListNamespacesResponse\DC2Z\n\
      \\n\
      \namespaces\CAN\SOH \ETX(\v2:.temporal.api.workflowservice.v1.DescribeNamespaceResponseR\n\
      \namespaces\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespaces__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespaces"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor DescribeNamespaceResponse)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"namespaces")) ::
              Data.ProtoLens.FieldDescriptor ListNamespacesResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListNamespacesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespaces__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListNamespacesResponse'_unknownFields
        (\ x__ y__ -> x__ {_ListNamespacesResponse'_unknownFields = y__})
  defMessage
    = ListNamespacesResponse'_constructor
        {_ListNamespacesResponse'namespaces = Data.Vector.Generic.empty,
         _ListNamespacesResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListNamespacesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListNamespacesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld DescribeNamespaceResponse
             -> Data.ProtoLens.Encoding.Bytes.Parser ListNamespacesResponse
        loop x mutable'namespaces
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'namespaces <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'namespaces)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'namespaces") frozen'namespaces
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "namespaces"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'namespaces y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'namespaces
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'namespaces
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'namespaces <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'namespaces)
          "ListNamespacesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'namespaces") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListNamespacesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListNamespacesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListNamespacesResponse'namespaces x__)
                (Control.DeepSeq.deepseq
                   (_ListNamespacesResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListOpenWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maximumPageSize' @:: Lens' ListOpenWorkflowExecutionsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListOpenWorkflowExecutionsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startTimeFilter' @:: Lens' ListOpenWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startTimeFilter' @:: Lens' ListOpenWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'filters' @:: Lens' ListOpenWorkflowExecutionsRequest (Prelude.Maybe ListOpenWorkflowExecutionsRequest'Filters)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'executionFilter' @:: Lens' ListOpenWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executionFilter' @:: Lens' ListOpenWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'typeFilter' @:: Lens' ListOpenWorkflowExecutionsRequest (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.typeFilter' @:: Lens' ListOpenWorkflowExecutionsRequest Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter@ -}
data ListOpenWorkflowExecutionsRequest
  = ListOpenWorkflowExecutionsRequest'_constructor {_ListOpenWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                    _ListOpenWorkflowExecutionsRequest'maximumPageSize :: !Data.Int.Int32,
                                                    _ListOpenWorkflowExecutionsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                    _ListOpenWorkflowExecutionsRequest'startTimeFilter :: !(Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter),
                                                    _ListOpenWorkflowExecutionsRequest'filters :: !(Prelude.Maybe ListOpenWorkflowExecutionsRequest'Filters),
                                                    _ListOpenWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListOpenWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data ListOpenWorkflowExecutionsRequest'Filters
  = ListOpenWorkflowExecutionsRequest'ExecutionFilter !Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter |
    ListOpenWorkflowExecutionsRequest'TypeFilter !Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "maximumPageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'maximumPageSize
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'maximumPageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "startTimeFilter" Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'startTimeFilter
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'startTimeFilter = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "maybe'startTimeFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'startTimeFilter
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'startTimeFilter = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "maybe'filters" (Prelude.Maybe ListOpenWorkflowExecutionsRequest'Filters) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'filters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "maybe'executionFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'filters = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ListOpenWorkflowExecutionsRequest'ExecutionFilter x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   ListOpenWorkflowExecutionsRequest'ExecutionFilter y__))
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "executionFilter" Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'filters = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ListOpenWorkflowExecutionsRequest'ExecutionFilter x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      ListOpenWorkflowExecutionsRequest'ExecutionFilter y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "maybe'typeFilter" (Prelude.Maybe Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'filters = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ListOpenWorkflowExecutionsRequest'TypeFilter x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap ListOpenWorkflowExecutionsRequest'TypeFilter y__))
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsRequest "typeFilter" Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsRequest'filters
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsRequest'filters = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ListOpenWorkflowExecutionsRequest'TypeFilter x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap ListOpenWorkflowExecutionsRequest'TypeFilter y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message ListOpenWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListOpenWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \!ListOpenWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
      \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2S\n\
      \\DC1start_time_filter\CAN\EOT \SOH(\v2'.temporal.api.filter.v1.StartTimeFilterR\SIstartTimeFilter\DC2\\\n\
      \\DLEexecution_filter\CAN\ENQ \SOH(\v2/.temporal.api.filter.v1.WorkflowExecutionFilterH\NULR\SIexecutionFilter\DC2M\n\
      \\vtype_filter\CAN\ACK \SOH(\v2*.temporal.api.filter.v1.WorkflowTypeFilterH\NULR\n\
      \typeFilterB\t\n\
      \\afilters"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
        maximumPageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "maximum_page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maximumPageSize")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
        startTimeFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_time_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.StartTimeFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startTimeFilter")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
        executionFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'executionFilter")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
        typeFilter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type_filter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'typeFilter")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, maximumPageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, startTimeFilter__field_descriptor),
           (Data.ProtoLens.Tag 5, executionFilter__field_descriptor),
           (Data.ProtoLens.Tag 6, typeFilter__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListOpenWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListOpenWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = ListOpenWorkflowExecutionsRequest'_constructor
        {_ListOpenWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListOpenWorkflowExecutionsRequest'maximumPageSize = Data.ProtoLens.fieldDefault,
         _ListOpenWorkflowExecutionsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListOpenWorkflowExecutionsRequest'startTimeFilter = Prelude.Nothing,
         _ListOpenWorkflowExecutionsRequest'filters = Prelude.Nothing,
         _ListOpenWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListOpenWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListOpenWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "maximum_page_size"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maximumPageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_time_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startTimeFilter") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution_filter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"executionFilter") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "type_filter"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"typeFilter") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ListOpenWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"maximumPageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'startTimeFilter") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'filters") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just (ListOpenWorkflowExecutionsRequest'ExecutionFilter v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage v)
                            (Prelude.Just (ListOpenWorkflowExecutionsRequest'TypeFilter v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData ListOpenWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListOpenWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListOpenWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListOpenWorkflowExecutionsRequest'maximumPageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListOpenWorkflowExecutionsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ListOpenWorkflowExecutionsRequest'startTimeFilter x__)
                         (Control.DeepSeq.deepseq
                            (_ListOpenWorkflowExecutionsRequest'filters x__) ())))))
instance Control.DeepSeq.NFData ListOpenWorkflowExecutionsRequest'Filters where
  rnf (ListOpenWorkflowExecutionsRequest'ExecutionFilter x__)
    = Control.DeepSeq.rnf x__
  rnf (ListOpenWorkflowExecutionsRequest'TypeFilter x__)
    = Control.DeepSeq.rnf x__
_ListOpenWorkflowExecutionsRequest'ExecutionFilter ::
  Data.ProtoLens.Prism.Prism' ListOpenWorkflowExecutionsRequest'Filters Proto.Temporal.Api.Filter.V1.Message.WorkflowExecutionFilter
_ListOpenWorkflowExecutionsRequest'ExecutionFilter
  = Data.ProtoLens.Prism.prism'
      ListOpenWorkflowExecutionsRequest'ExecutionFilter
      (\ p__
         -> case p__ of
              (ListOpenWorkflowExecutionsRequest'ExecutionFilter p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ListOpenWorkflowExecutionsRequest'TypeFilter ::
  Data.ProtoLens.Prism.Prism' ListOpenWorkflowExecutionsRequest'Filters Proto.Temporal.Api.Filter.V1.Message.WorkflowTypeFilter
_ListOpenWorkflowExecutionsRequest'TypeFilter
  = Data.ProtoLens.Prism.prism'
      ListOpenWorkflowExecutionsRequest'TypeFilter
      (\ p__
         -> case p__ of
              (ListOpenWorkflowExecutionsRequest'TypeFilter p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' ListOpenWorkflowExecutionsResponse [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' ListOpenWorkflowExecutionsResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListOpenWorkflowExecutionsResponse Data.ByteString.ByteString@ -}
data ListOpenWorkflowExecutionsResponse
  = ListOpenWorkflowExecutionsResponse'_constructor {_ListOpenWorkflowExecutionsResponse'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                     _ListOpenWorkflowExecutionsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                     _ListOpenWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListOpenWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsResponse "executions" [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsResponse'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsResponse "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsResponse'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListOpenWorkflowExecutionsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListOpenWorkflowExecutionsResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ListOpenWorkflowExecutionsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListOpenWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListOpenWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\"ListOpenWorkflowExecutionsResponse\DC2O\n\
      \\n\
      \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
      \executions\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListOpenWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executions__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListOpenWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListOpenWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = ListOpenWorkflowExecutionsResponse'_constructor
        {_ListOpenWorkflowExecutionsResponse'executions = Data.Vector.Generic.empty,
         _ListOpenWorkflowExecutionsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListOpenWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListOpenWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListOpenWorkflowExecutionsResponse
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "ListOpenWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'executions") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListOpenWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListOpenWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListOpenWorkflowExecutionsResponse'executions x__)
                (Control.DeepSeq.deepseq
                   (_ListOpenWorkflowExecutionsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListScheduleMatchingTimesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' ListScheduleMatchingTimesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startTime' @:: Lens' ListScheduleMatchingTimesRequest Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startTime' @:: Lens' ListScheduleMatchingTimesRequest (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.endTime' @:: Lens' ListScheduleMatchingTimesRequest Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'endTime' @:: Lens' ListScheduleMatchingTimesRequest (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@ -}
data ListScheduleMatchingTimesRequest
  = ListScheduleMatchingTimesRequest'_constructor {_ListScheduleMatchingTimesRequest'namespace :: !Data.Text.Text,
                                                   _ListScheduleMatchingTimesRequest'scheduleId :: !Data.Text.Text,
                                                   _ListScheduleMatchingTimesRequest'startTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                   _ListScheduleMatchingTimesRequest'endTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                   _ListScheduleMatchingTimesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListScheduleMatchingTimesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'namespace
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'scheduleId
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "startTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'startTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'startTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "maybe'startTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'startTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'startTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "endTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'endTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'endTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesRequest "maybe'endTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesRequest'endTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesRequest'endTime = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListScheduleMatchingTimesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListScheduleMatchingTimesRequest"
  packedMessageDescriptor _
    = "\n\
      \ ListScheduleMatchingTimesRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId\DC29\n\
      \\n\
      \start_time\CAN\ETX \SOH(\v2\SUB.google.protobuf.TimestampR\tstartTime\DC25\n\
      \\bend_time\CAN\EOT \SOH(\v2\SUB.google.protobuf.TimestampR\aendTime"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListScheduleMatchingTimesRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor ListScheduleMatchingTimesRequest
        startTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startTime")) ::
              Data.ProtoLens.FieldDescriptor ListScheduleMatchingTimesRequest
        endTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "end_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'endTime")) ::
              Data.ProtoLens.FieldDescriptor ListScheduleMatchingTimesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor),
           (Data.ProtoLens.Tag 3, startTime__field_descriptor),
           (Data.ProtoLens.Tag 4, endTime__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListScheduleMatchingTimesRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListScheduleMatchingTimesRequest'_unknownFields = y__})
  defMessage
    = ListScheduleMatchingTimesRequest'_constructor
        {_ListScheduleMatchingTimesRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListScheduleMatchingTimesRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _ListScheduleMatchingTimesRequest'startTime = Prelude.Nothing,
         _ListScheduleMatchingTimesRequest'endTime = Prelude.Nothing,
         _ListScheduleMatchingTimesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListScheduleMatchingTimesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListScheduleMatchingTimesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"startTime") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "end_time"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"endTime") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ListScheduleMatchingTimesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'startTime") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'endTime") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ListScheduleMatchingTimesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListScheduleMatchingTimesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListScheduleMatchingTimesRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListScheduleMatchingTimesRequest'scheduleId x__)
                   (Control.DeepSeq.deepseq
                      (_ListScheduleMatchingTimesRequest'startTime x__)
                      (Control.DeepSeq.deepseq
                         (_ListScheduleMatchingTimesRequest'endTime x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startTime' @:: Lens' ListScheduleMatchingTimesResponse [Proto.Google.Protobuf.Timestamp.Timestamp]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'startTime' @:: Lens' ListScheduleMatchingTimesResponse (Data.Vector.Vector Proto.Google.Protobuf.Timestamp.Timestamp)@ -}
data ListScheduleMatchingTimesResponse
  = ListScheduleMatchingTimesResponse'_constructor {_ListScheduleMatchingTimesResponse'startTime :: !(Data.Vector.Vector Proto.Google.Protobuf.Timestamp.Timestamp),
                                                    _ListScheduleMatchingTimesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListScheduleMatchingTimesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesResponse "startTime" [Proto.Google.Protobuf.Timestamp.Timestamp] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesResponse'startTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesResponse'startTime = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListScheduleMatchingTimesResponse "vec'startTime" (Data.Vector.Vector Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListScheduleMatchingTimesResponse'startTime
           (\ x__ y__
              -> x__ {_ListScheduleMatchingTimesResponse'startTime = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListScheduleMatchingTimesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListScheduleMatchingTimesResponse"
  packedMessageDescriptor _
    = "\n\
      \!ListScheduleMatchingTimesResponse\DC29\n\
      \\n\
      \start_time\CAN\SOH \ETX(\v2\SUB.google.protobuf.TimestampR\tstartTime"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        startTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"startTime")) ::
              Data.ProtoLens.FieldDescriptor ListScheduleMatchingTimesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, startTime__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListScheduleMatchingTimesResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListScheduleMatchingTimesResponse'_unknownFields = y__})
  defMessage
    = ListScheduleMatchingTimesResponse'_constructor
        {_ListScheduleMatchingTimesResponse'startTime = Data.Vector.Generic.empty,
         _ListScheduleMatchingTimesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListScheduleMatchingTimesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Google.Protobuf.Timestamp.Timestamp
             -> Data.ProtoLens.Encoding.Bytes.Parser ListScheduleMatchingTimesResponse
        loop x mutable'startTime
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'startTime <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                               mutable'startTime)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'startTime") frozen'startTime x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "start_time"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'startTime y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'startTime
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'startTime <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                     Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'startTime)
          "ListScheduleMatchingTimesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'startTime") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData ListScheduleMatchingTimesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListScheduleMatchingTimesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListScheduleMatchingTimesResponse'startTime x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListSchedulesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maximumPageSize' @:: Lens' ListSchedulesRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListSchedulesRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' ListSchedulesRequest Data.Text.Text@ -}
data ListSchedulesRequest
  = ListSchedulesRequest'_constructor {_ListSchedulesRequest'namespace :: !Data.Text.Text,
                                       _ListSchedulesRequest'maximumPageSize :: !Data.Int.Int32,
                                       _ListSchedulesRequest'nextPageToken :: !Data.ByteString.ByteString,
                                       _ListSchedulesRequest'query :: !Data.Text.Text,
                                       _ListSchedulesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListSchedulesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListSchedulesRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesRequest'namespace
           (\ x__ y__ -> x__ {_ListSchedulesRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListSchedulesRequest "maximumPageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesRequest'maximumPageSize
           (\ x__ y__ -> x__ {_ListSchedulesRequest'maximumPageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListSchedulesRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesRequest'nextPageToken
           (\ x__ y__ -> x__ {_ListSchedulesRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListSchedulesRequest "query" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesRequest'query
           (\ x__ y__ -> x__ {_ListSchedulesRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListSchedulesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListSchedulesRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4ListSchedulesRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
      \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
      \\ENQquery\CAN\EOT \SOH(\tR\ENQquery"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesRequest
        maximumPageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "maximum_page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maximumPageSize")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"query")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, maximumPageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, query__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListSchedulesRequest'_unknownFields
        (\ x__ y__ -> x__ {_ListSchedulesRequest'_unknownFields = y__})
  defMessage
    = ListSchedulesRequest'_constructor
        {_ListSchedulesRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListSchedulesRequest'maximumPageSize = Data.ProtoLens.fieldDefault,
         _ListSchedulesRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListSchedulesRequest'query = Data.ProtoLens.fieldDefault,
         _ListSchedulesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListSchedulesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListSchedulesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "maximum_page_size"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maximumPageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListSchedulesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"maximumPageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"query") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ListSchedulesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListSchedulesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListSchedulesRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListSchedulesRequest'maximumPageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListSchedulesRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq (_ListSchedulesRequest'query x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.schedules' @:: Lens' ListSchedulesResponse [Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'schedules' @:: Lens' ListSchedulesResponse (Data.Vector.Vector Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListSchedulesResponse Data.ByteString.ByteString@ -}
data ListSchedulesResponse
  = ListSchedulesResponse'_constructor {_ListSchedulesResponse'schedules :: !(Data.Vector.Vector Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry),
                                        _ListSchedulesResponse'nextPageToken :: !Data.ByteString.ByteString,
                                        _ListSchedulesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListSchedulesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListSchedulesResponse "schedules" [Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesResponse'schedules
           (\ x__ y__ -> x__ {_ListSchedulesResponse'schedules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListSchedulesResponse "vec'schedules" (Data.Vector.Vector Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesResponse'schedules
           (\ x__ y__ -> x__ {_ListSchedulesResponse'schedules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListSchedulesResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListSchedulesResponse'nextPageToken
           (\ x__ y__ -> x__ {_ListSchedulesResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListSchedulesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListSchedulesResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKListSchedulesResponse\DC2I\n\
      \\tschedules\CAN\SOH \ETX(\v2+.temporal.api.schedule.v1.ScheduleListEntryR\tschedules\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        schedules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"schedules")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListSchedulesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, schedules__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListSchedulesResponse'_unknownFields
        (\ x__ y__ -> x__ {_ListSchedulesResponse'_unknownFields = y__})
  defMessage
    = ListSchedulesResponse'_constructor
        {_ListSchedulesResponse'schedules = Data.Vector.Generic.empty,
         _ListSchedulesResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListSchedulesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListSchedulesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Schedule.V1.Message.ScheduleListEntry
             -> Data.ProtoLens.Encoding.Bytes.Parser ListSchedulesResponse
        loop x mutable'schedules
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'schedules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                               mutable'schedules)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'schedules") frozen'schedules x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "schedules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'schedules y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'schedules
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'schedules
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'schedules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                     Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'schedules)
          "ListSchedulesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'schedules") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListSchedulesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListSchedulesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListSchedulesResponse'schedules x__)
                (Control.DeepSeq.deepseq
                   (_ListSchedulesResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListTaskQueuePartitionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' ListTaskQueuePartitionsRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' ListTaskQueuePartitionsRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@ -}
data ListTaskQueuePartitionsRequest
  = ListTaskQueuePartitionsRequest'_constructor {_ListTaskQueuePartitionsRequest'namespace :: !Data.Text.Text,
                                                 _ListTaskQueuePartitionsRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                                 _ListTaskQueuePartitionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListTaskQueuePartitionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsRequest'namespace
           (\ x__ y__
              -> x__ {_ListTaskQueuePartitionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsRequest'taskQueue
           (\ x__ y__
              -> x__ {_ListTaskQueuePartitionsRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsRequest'taskQueue
           (\ x__ y__
              -> x__ {_ListTaskQueuePartitionsRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListTaskQueuePartitionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListTaskQueuePartitionsRequest"
  packedMessageDescriptor _
    = "\n\
      \\RSListTaskQueuePartitionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
      \\n\
      \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListTaskQueuePartitionsRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor ListTaskQueuePartitionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListTaskQueuePartitionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListTaskQueuePartitionsRequest'_unknownFields = y__})
  defMessage
    = ListTaskQueuePartitionsRequest'_constructor
        {_ListTaskQueuePartitionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListTaskQueuePartitionsRequest'taskQueue = Prelude.Nothing,
         _ListTaskQueuePartitionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListTaskQueuePartitionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListTaskQueuePartitionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ListTaskQueuePartitionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListTaskQueuePartitionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListTaskQueuePartitionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListTaskQueuePartitionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListTaskQueuePartitionsRequest'taskQueue x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityTaskQueuePartitions' @:: Lens' ListTaskQueuePartitionsResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'activityTaskQueuePartitions' @:: Lens' ListTaskQueuePartitionsResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowTaskQueuePartitions' @:: Lens' ListTaskQueuePartitionsResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'workflowTaskQueuePartitions' @:: Lens' ListTaskQueuePartitionsResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata)@ -}
data ListTaskQueuePartitionsResponse
  = ListTaskQueuePartitionsResponse'_constructor {_ListTaskQueuePartitionsResponse'activityTaskQueuePartitions :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata),
                                                  _ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata),
                                                  _ListTaskQueuePartitionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListTaskQueuePartitionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsResponse "activityTaskQueuePartitions" [Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsResponse'activityTaskQueuePartitions
           (\ x__ y__
              -> x__
                   {_ListTaskQueuePartitionsResponse'activityTaskQueuePartitions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsResponse "vec'activityTaskQueuePartitions" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsResponse'activityTaskQueuePartitions
           (\ x__ y__
              -> x__
                   {_ListTaskQueuePartitionsResponse'activityTaskQueuePartitions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsResponse "workflowTaskQueuePartitions" [Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions
           (\ x__ y__
              -> x__
                   {_ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListTaskQueuePartitionsResponse "vec'workflowTaskQueuePartitions" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions
           (\ x__ y__
              -> x__
                   {_ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListTaskQueuePartitionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListTaskQueuePartitionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\USListTaskQueuePartitionsResponse\DC2z\n\
      \\RSactivity_task_queue_partitions\CAN\SOH \ETX(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\ESCactivityTaskQueuePartitions\DC2z\n\
      \\RSworkflow_task_queue_partitions\CAN\STX \ETX(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\ESCworkflowTaskQueuePartitions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        activityTaskQueuePartitions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_task_queue_partitions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"activityTaskQueuePartitions")) ::
              Data.ProtoLens.FieldDescriptor ListTaskQueuePartitionsResponse
        workflowTaskQueuePartitions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_task_queue_partitions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"workflowTaskQueuePartitions")) ::
              Data.ProtoLens.FieldDescriptor ListTaskQueuePartitionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, 
            activityTaskQueuePartitions__field_descriptor),
           (Data.ProtoLens.Tag 2, 
            workflowTaskQueuePartitions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListTaskQueuePartitionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListTaskQueuePartitionsResponse'_unknownFields = y__})
  defMessage
    = ListTaskQueuePartitionsResponse'_constructor
        {_ListTaskQueuePartitionsResponse'activityTaskQueuePartitions = Data.Vector.Generic.empty,
         _ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions = Data.Vector.Generic.empty,
         _ListTaskQueuePartitionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListTaskQueuePartitionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueuePartitionMetadata
                -> Data.ProtoLens.Encoding.Bytes.Parser ListTaskQueuePartitionsResponse
        loop
          x
          mutable'activityTaskQueuePartitions
          mutable'workflowTaskQueuePartitions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'activityTaskQueuePartitions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                              (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                                 mutable'activityTaskQueuePartitions)
                      frozen'workflowTaskQueuePartitions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                              (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                                 mutable'workflowTaskQueuePartitions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'activityTaskQueuePartitions")
                              frozen'activityTaskQueuePartitions
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'workflowTaskQueuePartitions")
                                 frozen'workflowTaskQueuePartitions x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "activity_task_queue_partitions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'activityTaskQueuePartitions y)
                                loop x v mutable'workflowTaskQueuePartitions
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "workflow_task_queue_partitions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'workflowTaskQueuePartitions y)
                                loop x mutable'activityTaskQueuePartitions v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'activityTaskQueuePartitions
                                  mutable'workflowTaskQueuePartitions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'activityTaskQueuePartitions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       Data.ProtoLens.Encoding.Growing.new
              mutable'workflowTaskQueuePartitions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'activityTaskQueuePartitions
                mutable'workflowTaskQueuePartitions)
          "ListTaskQueuePartitionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'activityTaskQueuePartitions")
                   _x))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'workflowTaskQueuePartitions")
                      _x))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListTaskQueuePartitionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListTaskQueuePartitionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListTaskQueuePartitionsResponse'activityTaskQueuePartitions x__)
                (Control.DeepSeq.deepseq
                   (_ListTaskQueuePartitionsResponse'workflowTaskQueuePartitions x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListWorkerDeploymentsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListWorkerDeploymentsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkerDeploymentsRequest Data.ByteString.ByteString@ -}
data ListWorkerDeploymentsRequest
  = ListWorkerDeploymentsRequest'_constructor {_ListWorkerDeploymentsRequest'namespace :: !Data.Text.Text,
                                               _ListWorkerDeploymentsRequest'pageSize :: !Data.Int.Int32,
                                               _ListWorkerDeploymentsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                               _ListWorkerDeploymentsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkerDeploymentsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsRequest'namespace
           (\ x__ y__ -> x__ {_ListWorkerDeploymentsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsRequest'pageSize
           (\ x__ y__ -> x__ {_ListWorkerDeploymentsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ListWorkerDeploymentsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkerDeploymentsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkerDeploymentsRequest"
  packedMessageDescriptor _
    = "\n\
      \\FSListWorkerDeploymentsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkerDeploymentsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListWorkerDeploymentsRequest'_unknownFields = y__})
  defMessage
    = ListWorkerDeploymentsRequest'_constructor
        {_ListWorkerDeploymentsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListWorkerDeploymentsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListWorkerDeploymentsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkerDeploymentsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkerDeploymentsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkerDeploymentsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListWorkerDeploymentsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData ListWorkerDeploymentsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkerDeploymentsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkerDeploymentsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkerDeploymentsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListWorkerDeploymentsRequest'nextPageToken x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkerDeploymentsResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerDeployments' @:: Lens' ListWorkerDeploymentsResponse [ListWorkerDeploymentsResponse'WorkerDeploymentSummary]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'workerDeployments' @:: Lens' ListWorkerDeploymentsResponse (Data.Vector.Vector ListWorkerDeploymentsResponse'WorkerDeploymentSummary)@ -}
data ListWorkerDeploymentsResponse
  = ListWorkerDeploymentsResponse'_constructor {_ListWorkerDeploymentsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                _ListWorkerDeploymentsResponse'workerDeployments :: !(Data.Vector.Vector ListWorkerDeploymentsResponse'WorkerDeploymentSummary),
                                                _ListWorkerDeploymentsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkerDeploymentsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ListWorkerDeploymentsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse "workerDeployments" [ListWorkerDeploymentsResponse'WorkerDeploymentSummary] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'workerDeployments
           (\ x__ y__
              -> x__ {_ListWorkerDeploymentsResponse'workerDeployments = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse "vec'workerDeployments" (Data.Vector.Vector ListWorkerDeploymentsResponse'WorkerDeploymentSummary) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'workerDeployments
           (\ x__ y__
              -> x__ {_ListWorkerDeploymentsResponse'workerDeployments = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkerDeploymentsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkerDeploymentsResponse"
  packedMessageDescriptor _
    = "\n\
      \\GSListWorkerDeploymentsResponse\DC2&\n\
      \\SInext_page_token\CAN\SOH \SOH(\fR\rnextPageToken\DC2\133\SOH\n\
      \\DC2worker_deployments\CAN\STX \ETX(\v2V.temporal.api.workflowservice.v1.ListWorkerDeploymentsResponse.WorkerDeploymentSummaryR\DC1workerDeployments\SUB\188\SOH\n\
      \\ETBWorkerDeploymentSummary\DC2\DC2\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTname\DC2;\n\
      \\vcreate_time\CAN\STX \SOH(\v2\SUB.google.protobuf.TimestampR\n\
      \createTime\DC2P\n\
      \\SOrouting_config\CAN\ETX \SOH(\v2).temporal.api.deployment.v1.RoutingConfigR\rroutingConfig"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsResponse
        workerDeployments__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_deployments"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor ListWorkerDeploymentsResponse'WorkerDeploymentSummary)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"workerDeployments")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 2, workerDeployments__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkerDeploymentsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListWorkerDeploymentsResponse'_unknownFields = y__})
  defMessage
    = ListWorkerDeploymentsResponse'_constructor
        {_ListWorkerDeploymentsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkerDeploymentsResponse'workerDeployments = Data.Vector.Generic.empty,
         _ListWorkerDeploymentsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkerDeploymentsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld ListWorkerDeploymentsResponse'WorkerDeploymentSummary
             -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkerDeploymentsResponse
        loop x mutable'workerDeployments
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'workerDeployments <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                    (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                       mutable'workerDeployments)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'workerDeployments")
                              frozen'workerDeployments x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'workerDeployments
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "worker_deployments"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'workerDeployments y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'workerDeployments
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'workerDeployments <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'workerDeployments)
          "ListWorkerDeploymentsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"nextPageToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'workerDeployments") _x))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListWorkerDeploymentsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkerDeploymentsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkerDeploymentsResponse'nextPageToken x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkerDeploymentsResponse'workerDeployments x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.name' @:: Lens' ListWorkerDeploymentsResponse'WorkerDeploymentSummary Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.createTime' @:: Lens' ListWorkerDeploymentsResponse'WorkerDeploymentSummary Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'createTime' @:: Lens' ListWorkerDeploymentsResponse'WorkerDeploymentSummary (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.routingConfig' @:: Lens' ListWorkerDeploymentsResponse'WorkerDeploymentSummary Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'routingConfig' @:: Lens' ListWorkerDeploymentsResponse'WorkerDeploymentSummary (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig)@ -}
data ListWorkerDeploymentsResponse'WorkerDeploymentSummary
  = ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_constructor {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'name :: !Data.Text.Text,
                                                                        _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                                        _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig),
                                                                        _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkerDeploymentsResponse'WorkerDeploymentSummary where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse'WorkerDeploymentSummary "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'name
           (\ x__ y__
              -> x__
                   {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse'WorkerDeploymentSummary "createTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime
           (\ x__ y__
              -> x__
                   {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse'WorkerDeploymentSummary "maybe'createTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime
           (\ x__ y__
              -> x__
                   {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse'WorkerDeploymentSummary "routingConfig" Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig
           (\ x__ y__
              -> x__
                   {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ListWorkerDeploymentsResponse'WorkerDeploymentSummary "maybe'routingConfig" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig
           (\ x__ y__
              -> x__
                   {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkerDeploymentsResponse'WorkerDeploymentSummary where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkerDeploymentsResponse.WorkerDeploymentSummary"
  packedMessageDescriptor _
    = "\n\
      \\ETBWorkerDeploymentSummary\DC2\DC2\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTname\DC2;\n\
      \\vcreate_time\CAN\STX \SOH(\v2\SUB.google.protobuf.TimestampR\n\
      \createTime\DC2P\n\
      \\SOrouting_config\CAN\ETX \SOH(\v2).temporal.api.deployment.v1.RoutingConfigR\rroutingConfig"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsResponse'WorkerDeploymentSummary
        createTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "create_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'createTime")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsResponse'WorkerDeploymentSummary
        routingConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "routing_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.RoutingConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'routingConfig")) ::
              Data.ProtoLens.FieldDescriptor ListWorkerDeploymentsResponse'WorkerDeploymentSummary
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 2, createTime__field_descriptor),
           (Data.ProtoLens.Tag 3, routingConfig__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_unknownFields
        (\ x__ y__
           -> x__
                {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_unknownFields = y__})
  defMessage
    = ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_constructor
        {_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'name = Data.ProtoLens.fieldDefault,
         _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime = Prelude.Nothing,
         _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig = Prelude.Nothing,
         _ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkerDeploymentsResponse'WorkerDeploymentSummary
          -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkerDeploymentsResponse'WorkerDeploymentSummary
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "create_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"createTime") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "routing_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"routingConfig") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "WorkerDeploymentSummary"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'createTime") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'routingConfig") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData ListWorkerDeploymentsResponse'WorkerDeploymentSummary where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'name x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'createTime
                      x__)
                   (Control.DeepSeq.deepseq
                      (_ListWorkerDeploymentsResponse'WorkerDeploymentSummary'routingConfig
                         x__)
                      ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ListWorkflowExecutionsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkflowExecutionsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' ListWorkflowExecutionsRequest Data.Text.Text@ -}
data ListWorkflowExecutionsRequest
  = ListWorkflowExecutionsRequest'_constructor {_ListWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                _ListWorkflowExecutionsRequest'pageSize :: !Data.Int.Int32,
                                                _ListWorkflowExecutionsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                _ListWorkflowExecutionsRequest'query :: !Data.Text.Text,
                                                _ListWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_ListWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsRequest'pageSize
           (\ x__ y__ -> x__ {_ListWorkflowExecutionsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ListWorkflowExecutionsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsRequest "query" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsRequest'query
           (\ x__ y__ -> x__ {_ListWorkflowExecutionsRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSListWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
      \\ENQquery\CAN\EOT \SOH(\tR\ENQquery"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"query")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, query__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ListWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = ListWorkflowExecutionsRequest'_constructor
        {_ListWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListWorkflowExecutionsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ListWorkflowExecutionsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkflowExecutionsRequest'query = Data.ProtoLens.fieldDefault,
         _ListWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"query") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ListWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkflowExecutionsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ListWorkflowExecutionsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ListWorkflowExecutionsRequest'query x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' ListWorkflowExecutionsResponse [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' ListWorkflowExecutionsResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkflowExecutionsResponse Data.ByteString.ByteString@ -}
data ListWorkflowExecutionsResponse
  = ListWorkflowExecutionsResponse'_constructor {_ListWorkflowExecutionsResponse'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                 _ListWorkflowExecutionsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                 _ListWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsResponse "executions" [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListWorkflowExecutionsResponse'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsResponse "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ListWorkflowExecutionsResponse'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowExecutionsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowExecutionsResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ListWorkflowExecutionsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSListWorkflowExecutionsResponse\DC2O\n\
      \\n\
      \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
      \executions\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executions__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = ListWorkflowExecutionsResponse'_constructor
        {_ListWorkflowExecutionsResponse'executions = Data.Vector.Generic.empty,
         _ListWorkflowExecutionsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkflowExecutionsResponse
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "ListWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'executions") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkflowExecutionsResponse'executions x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkflowExecutionsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ListWorkflowRulesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkflowRulesRequest Data.ByteString.ByteString@ -}
data ListWorkflowRulesRequest
  = ListWorkflowRulesRequest'_constructor {_ListWorkflowRulesRequest'namespace :: !Data.Text.Text,
                                           _ListWorkflowRulesRequest'nextPageToken :: !Data.ByteString.ByteString,
                                           _ListWorkflowRulesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkflowRulesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkflowRulesRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowRulesRequest'namespace
           (\ x__ y__ -> x__ {_ListWorkflowRulesRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowRulesRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowRulesRequest'nextPageToken
           (\ x__ y__ -> x__ {_ListWorkflowRulesRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkflowRulesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkflowRulesRequest"
  packedMessageDescriptor _
    = "\n\
      \\CANListWorkflowRulesRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowRulesRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowRulesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkflowRulesRequest'_unknownFields
        (\ x__ y__ -> x__ {_ListWorkflowRulesRequest'_unknownFields = y__})
  defMessage
    = ListWorkflowRulesRequest'_constructor
        {_ListWorkflowRulesRequest'namespace = Data.ProtoLens.fieldDefault,
         _ListWorkflowRulesRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkflowRulesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkflowRulesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkflowRulesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ListWorkflowRulesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListWorkflowRulesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkflowRulesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkflowRulesRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkflowRulesRequest'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rules' @:: Lens' ListWorkflowRulesResponse [Proto.Temporal.Api.Rules.V1.Message.WorkflowRule]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'rules' @:: Lens' ListWorkflowRulesResponse (Data.Vector.Vector Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ListWorkflowRulesResponse Data.ByteString.ByteString@ -}
data ListWorkflowRulesResponse
  = ListWorkflowRulesResponse'_constructor {_ListWorkflowRulesResponse'rules :: !(Data.Vector.Vector Proto.Temporal.Api.Rules.V1.Message.WorkflowRule),
                                            _ListWorkflowRulesResponse'nextPageToken :: !Data.ByteString.ByteString,
                                            _ListWorkflowRulesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ListWorkflowRulesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ListWorkflowRulesResponse "rules" [Proto.Temporal.Api.Rules.V1.Message.WorkflowRule] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowRulesResponse'rules
           (\ x__ y__ -> x__ {_ListWorkflowRulesResponse'rules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ListWorkflowRulesResponse "vec'rules" (Data.Vector.Vector Proto.Temporal.Api.Rules.V1.Message.WorkflowRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowRulesResponse'rules
           (\ x__ y__ -> x__ {_ListWorkflowRulesResponse'rules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ListWorkflowRulesResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ListWorkflowRulesResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ListWorkflowRulesResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ListWorkflowRulesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ListWorkflowRulesResponse"
  packedMessageDescriptor _
    = "\n\
      \\EMListWorkflowRulesResponse\DC29\n\
      \\ENQrules\CAN\SOH \ETX(\v2#.temporal.api.rules.v1.WorkflowRuleR\ENQrules\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        rules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Rules.V1.Message.WorkflowRule)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"rules")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowRulesResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ListWorkflowRulesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, rules__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ListWorkflowRulesResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ListWorkflowRulesResponse'_unknownFields = y__})
  defMessage
    = ListWorkflowRulesResponse'_constructor
        {_ListWorkflowRulesResponse'rules = Data.Vector.Generic.empty,
         _ListWorkflowRulesResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ListWorkflowRulesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ListWorkflowRulesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Rules.V1.Message.WorkflowRule
             -> Data.ProtoLens.Encoding.Bytes.Parser ListWorkflowRulesResponse
        loop x mutable'rules
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'rules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'rules)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'rules") frozen'rules x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "rules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'rules y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'rules
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'rules
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'rules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'rules)
          "ListWorkflowRulesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'rules") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ListWorkflowRulesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ListWorkflowRulesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ListWorkflowRulesResponse'rules x__)
                (Control.DeepSeq.deepseq
                   (_ListWorkflowRulesResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PatchScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' PatchScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.patch' @:: Lens' PatchScheduleRequest Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'patch' @:: Lens' PatchScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PatchScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' PatchScheduleRequest Data.Text.Text@ -}
data PatchScheduleRequest
  = PatchScheduleRequest'_constructor {_PatchScheduleRequest'namespace :: !Data.Text.Text,
                                       _PatchScheduleRequest'scheduleId :: !Data.Text.Text,
                                       _PatchScheduleRequest'patch :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch),
                                       _PatchScheduleRequest'identity :: !Data.Text.Text,
                                       _PatchScheduleRequest'requestId :: !Data.Text.Text,
                                       _PatchScheduleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PatchScheduleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'namespace
           (\ x__ y__ -> x__ {_PatchScheduleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'scheduleId
           (\ x__ y__ -> x__ {_PatchScheduleRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "patch" Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'patch
           (\ x__ y__ -> x__ {_PatchScheduleRequest'patch = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "maybe'patch" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'patch
           (\ x__ y__ -> x__ {_PatchScheduleRequest'patch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'identity
           (\ x__ y__ -> x__ {_PatchScheduleRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PatchScheduleRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PatchScheduleRequest'requestId
           (\ x__ y__ -> x__ {_PatchScheduleRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Message PatchScheduleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PatchScheduleRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4PatchScheduleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId\DC2=\n\
      \\ENQpatch\CAN\ETX \SOH(\v2'.temporal.api.schedule.v1.SchedulePatchR\ENQpatch\DC2\SUB\n\
      \\bidentity\CAN\EOT \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\ENQ \SOH(\tR\trequestId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PatchScheduleRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor PatchScheduleRequest
        patch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "patch"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.SchedulePatch)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'patch")) ::
              Data.ProtoLens.FieldDescriptor PatchScheduleRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PatchScheduleRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor PatchScheduleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor),
           (Data.ProtoLens.Tag 3, patch__field_descriptor),
           (Data.ProtoLens.Tag 4, identity__field_descriptor),
           (Data.ProtoLens.Tag 5, requestId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PatchScheduleRequest'_unknownFields
        (\ x__ y__ -> x__ {_PatchScheduleRequest'_unknownFields = y__})
  defMessage
    = PatchScheduleRequest'_constructor
        {_PatchScheduleRequest'namespace = Data.ProtoLens.fieldDefault,
         _PatchScheduleRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _PatchScheduleRequest'patch = Prelude.Nothing,
         _PatchScheduleRequest'identity = Data.ProtoLens.fieldDefault,
         _PatchScheduleRequest'requestId = Data.ProtoLens.fieldDefault,
         _PatchScheduleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PatchScheduleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PatchScheduleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "patch"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"patch") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PatchScheduleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'patch") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData PatchScheduleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PatchScheduleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PatchScheduleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PatchScheduleRequest'scheduleId x__)
                   (Control.DeepSeq.deepseq
                      (_PatchScheduleRequest'patch x__)
                      (Control.DeepSeq.deepseq
                         (_PatchScheduleRequest'identity x__)
                         (Control.DeepSeq.deepseq
                            (_PatchScheduleRequest'requestId x__) ())))))
{- | Fields :
      -}
data PatchScheduleResponse
  = PatchScheduleResponse'_constructor {_PatchScheduleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PatchScheduleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message PatchScheduleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PatchScheduleResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKPatchScheduleResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PatchScheduleResponse'_unknownFields
        (\ x__ y__ -> x__ {_PatchScheduleResponse'_unknownFields = y__})
  defMessage
    = PatchScheduleResponse'_constructor
        {_PatchScheduleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PatchScheduleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser PatchScheduleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PatchScheduleResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData PatchScheduleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PatchScheduleResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' PauseActivityRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' PauseActivityRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' PauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activity' @:: Lens' PauseActivityRequest (Prelude.Maybe PauseActivityRequest'Activity)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'id' @:: Lens' PauseActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' PauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'type'' @:: Lens' PauseActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.type'' @:: Lens' PauseActivityRequest Data.Text.Text@ -}
data PauseActivityRequest
  = PauseActivityRequest'_constructor {_PauseActivityRequest'namespace :: !Data.Text.Text,
                                       _PauseActivityRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                       _PauseActivityRequest'identity :: !Data.Text.Text,
                                       _PauseActivityRequest'reason :: !Data.Text.Text,
                                       _PauseActivityRequest'activity :: !(Prelude.Maybe PauseActivityRequest'Activity),
                                       _PauseActivityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PauseActivityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data PauseActivityRequest'Activity
  = PauseActivityRequest'Id !Data.Text.Text |
    PauseActivityRequest'Type !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField PauseActivityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'namespace
           (\ x__ y__ -> x__ {_PauseActivityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PauseActivityRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'execution
           (\ x__ y__ -> x__ {_PauseActivityRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PauseActivityRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'execution
           (\ x__ y__ -> x__ {_PauseActivityRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PauseActivityRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'identity
           (\ x__ y__ -> x__ {_PauseActivityRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PauseActivityRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'reason
           (\ x__ y__ -> x__ {_PauseActivityRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PauseActivityRequest "maybe'activity" (Prelude.Maybe PauseActivityRequest'Activity) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'activity
           (\ x__ y__ -> x__ {_PauseActivityRequest'activity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PauseActivityRequest "maybe'id" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'activity
           (\ x__ y__ -> x__ {_PauseActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (PauseActivityRequest'Id x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap PauseActivityRequest'Id y__))
instance Data.ProtoLens.Field.HasField PauseActivityRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'activity
           (\ x__ y__ -> x__ {_PauseActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (PauseActivityRequest'Id x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap PauseActivityRequest'Id y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField PauseActivityRequest "maybe'type'" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'activity
           (\ x__ y__ -> x__ {_PauseActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (PauseActivityRequest'Type x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap PauseActivityRequest'Type y__))
instance Data.ProtoLens.Field.HasField PauseActivityRequest "type'" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PauseActivityRequest'activity
           (\ x__ y__ -> x__ {_PauseActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (PauseActivityRequest'Type x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap PauseActivityRequest'Type y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message PauseActivityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PauseActivityRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4PauseActivityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
      \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
      \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2\SYN\n\
      \\ACKreason\CAN\ACK \SOH(\tR\ACKreasonB\n\
      \\n\
      \\bactivity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'id")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
        type'__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'type'")) ::
              Data.ProtoLens.FieldDescriptor PauseActivityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, reason__field_descriptor),
           (Data.ProtoLens.Tag 4, id__field_descriptor),
           (Data.ProtoLens.Tag 5, type'__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PauseActivityRequest'_unknownFields
        (\ x__ y__ -> x__ {_PauseActivityRequest'_unknownFields = y__})
  defMessage
    = PauseActivityRequest'_constructor
        {_PauseActivityRequest'namespace = Data.ProtoLens.fieldDefault,
         _PauseActivityRequest'execution = Prelude.Nothing,
         _PauseActivityRequest'identity = Data.ProtoLens.fieldDefault,
         _PauseActivityRequest'reason = Data.ProtoLens.fieldDefault,
         _PauseActivityRequest'activity = Prelude.Nothing,
         _PauseActivityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PauseActivityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PauseActivityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "type"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"type'") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PauseActivityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'activity") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just (PauseActivityRequest'Id v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.Text.Encoding.encodeUtf8 v)
                            (Prelude.Just (PauseActivityRequest'Type v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.Text.Encoding.encodeUtf8 v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData PauseActivityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PauseActivityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PauseActivityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PauseActivityRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_PauseActivityRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_PauseActivityRequest'reason x__)
                         (Control.DeepSeq.deepseq
                            (_PauseActivityRequest'activity x__) ())))))
instance Control.DeepSeq.NFData PauseActivityRequest'Activity where
  rnf (PauseActivityRequest'Id x__) = Control.DeepSeq.rnf x__
  rnf (PauseActivityRequest'Type x__) = Control.DeepSeq.rnf x__
_PauseActivityRequest'Id ::
  Data.ProtoLens.Prism.Prism' PauseActivityRequest'Activity Data.Text.Text
_PauseActivityRequest'Id
  = Data.ProtoLens.Prism.prism'
      PauseActivityRequest'Id
      (\ p__
         -> case p__ of
              (PauseActivityRequest'Id p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_PauseActivityRequest'Type ::
  Data.ProtoLens.Prism.Prism' PauseActivityRequest'Activity Data.Text.Text
_PauseActivityRequest'Type
  = Data.ProtoLens.Prism.prism'
      PauseActivityRequest'Type
      (\ p__
         -> case p__ of
              (PauseActivityRequest'Type p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data PauseActivityResponse
  = PauseActivityResponse'_constructor {_PauseActivityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PauseActivityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message PauseActivityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PauseActivityResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKPauseActivityResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PauseActivityResponse'_unknownFields
        (\ x__ y__ -> x__ {_PauseActivityResponse'_unknownFields = y__})
  defMessage
    = PauseActivityResponse'_constructor
        {_PauseActivityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PauseActivityResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser PauseActivityResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PauseActivityResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData PauseActivityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PauseActivityResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PollActivityTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' PollActivityTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' PollActivityTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PollActivityTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueueMetadata' @:: Lens' PollActivityTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueueMetadata' @:: Lens' PollActivityTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersionCapabilities' @:: Lens' PollActivityTaskQueueRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersionCapabilities' @:: Lens' PollActivityTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' PollActivityTaskQueueRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' PollActivityTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data PollActivityTaskQueueRequest
  = PollActivityTaskQueueRequest'_constructor {_PollActivityTaskQueueRequest'namespace :: !Data.Text.Text,
                                               _PollActivityTaskQueueRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                               _PollActivityTaskQueueRequest'identity :: !Data.Text.Text,
                                               _PollActivityTaskQueueRequest'taskQueueMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata),
                                               _PollActivityTaskQueueRequest'workerVersionCapabilities :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities),
                                               _PollActivityTaskQueueRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                               _PollActivityTaskQueueRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollActivityTaskQueueRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'namespace
           (\ x__ y__ -> x__ {_PollActivityTaskQueueRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollActivityTaskQueueRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollActivityTaskQueueRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'identity
           (\ x__ y__ -> x__ {_PollActivityTaskQueueRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "taskQueueMetadata" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'taskQueueMetadata
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueRequest'taskQueueMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "maybe'taskQueueMetadata" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'taskQueueMetadata
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueRequest'taskQueueMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "workerVersionCapabilities" Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueRequest'workerVersionCapabilities = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "maybe'workerVersionCapabilities" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueRequest'workerVersionCapabilities = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollActivityTaskQueueRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollActivityTaskQueueRequest"
  packedMessageDescriptor _
    = "\n\
      \\FSPollActivityTaskQueueRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
      \\n\
      \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\\\n\
      \\DC3task_queue_metadata\CAN\EOT \SOH(\v2,.temporal.api.taskqueue.v1.TaskQueueMetadataR\DC1taskQueueMetadata\DC2u\n\
      \\ESCworker_version_capabilities\CAN\ENQ \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
        taskQueueMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueueMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueueMetadata")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
        workerVersionCapabilities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version_capabilities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, taskQueueMetadata__field_descriptor),
           (Data.ProtoLens.Tag 5, 
            workerVersionCapabilities__field_descriptor),
           (Data.ProtoLens.Tag 6, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollActivityTaskQueueRequest'_unknownFields
        (\ x__ y__
           -> x__ {_PollActivityTaskQueueRequest'_unknownFields = y__})
  defMessage
    = PollActivityTaskQueueRequest'_constructor
        {_PollActivityTaskQueueRequest'namespace = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueRequest'taskQueue = Prelude.Nothing,
         _PollActivityTaskQueueRequest'identity = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueRequest'taskQueueMetadata = Prelude.Nothing,
         _PollActivityTaskQueueRequest'workerVersionCapabilities = Prelude.Nothing,
         _PollActivityTaskQueueRequest'deploymentOptions = Prelude.Nothing,
         _PollActivityTaskQueueRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollActivityTaskQueueRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PollActivityTaskQueueRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"taskQueueMetadata") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version_capabilities"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersionCapabilities") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PollActivityTaskQueueRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'taskQueueMetadata") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData PollActivityTaskQueueRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollActivityTaskQueueRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollActivityTaskQueueRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PollActivityTaskQueueRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_PollActivityTaskQueueRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_PollActivityTaskQueueRequest'taskQueueMetadata x__)
                         (Control.DeepSeq.deepseq
                            (_PollActivityTaskQueueRequest'workerVersionCapabilities x__)
                            (Control.DeepSeq.deepseq
                               (_PollActivityTaskQueueRequest'deploymentOptions x__) ()))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' PollActivityTaskQueueResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowNamespace' @:: Lens' PollActivityTaskQueueResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowType' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.WorkflowType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowType' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityType' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.ActivityType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activityType' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.ActivityType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityId' @:: Lens' PollActivityTaskQueueResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.header' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.Header@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'header' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.input' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'input' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.heartbeatDetails' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'heartbeatDetails' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduledTime' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'scheduledTime' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.currentAttemptScheduledTime' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'currentAttemptScheduledTime' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startedTime' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startedTime' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.attempt' @:: Lens' PollActivityTaskQueueResponse Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleToCloseTimeout' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'scheduleToCloseTimeout' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startToCloseTimeout' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startToCloseTimeout' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.heartbeatTimeout' @:: Lens' PollActivityTaskQueueResponse Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'heartbeatTimeout' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.retryPolicy' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.RetryPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'retryPolicy' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pollerScalingDecision' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'pollerScalingDecision' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.priority' @:: Lens' PollActivityTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.Priority@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'priority' @:: Lens' PollActivityTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority)@ -}
data PollActivityTaskQueueResponse
  = PollActivityTaskQueueResponse'_constructor {_PollActivityTaskQueueResponse'taskToken :: !Data.ByteString.ByteString,
                                                _PollActivityTaskQueueResponse'workflowNamespace :: !Data.Text.Text,
                                                _PollActivityTaskQueueResponse'workflowType :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType),
                                                _PollActivityTaskQueueResponse'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                _PollActivityTaskQueueResponse'activityType :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.ActivityType),
                                                _PollActivityTaskQueueResponse'activityId :: !Data.Text.Text,
                                                _PollActivityTaskQueueResponse'header :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header),
                                                _PollActivityTaskQueueResponse'input :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                _PollActivityTaskQueueResponse'heartbeatDetails :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                _PollActivityTaskQueueResponse'scheduledTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                _PollActivityTaskQueueResponse'currentAttemptScheduledTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                _PollActivityTaskQueueResponse'startedTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                _PollActivityTaskQueueResponse'attempt :: !Data.Int.Int32,
                                                _PollActivityTaskQueueResponse'scheduleToCloseTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _PollActivityTaskQueueResponse'startToCloseTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _PollActivityTaskQueueResponse'heartbeatTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _PollActivityTaskQueueResponse'retryPolicy :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy),
                                                _PollActivityTaskQueueResponse'pollerScalingDecision :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision),
                                                _PollActivityTaskQueueResponse'priority :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority),
                                                _PollActivityTaskQueueResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollActivityTaskQueueResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'taskToken
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "workflowNamespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'workflowNamespace
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'workflowNamespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "workflowType" Proto.Temporal.Api.Common.V1.Message.WorkflowType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'workflowType
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'workflowType = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'workflowType" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'workflowType
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'workflowType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'workflowExecution
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'workflowExecution
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "activityType" Proto.Temporal.Api.Common.V1.Message.ActivityType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'activityType
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'activityType = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'activityType" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.ActivityType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'activityType
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'activityType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "activityId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'activityId
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'activityId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "header" Proto.Temporal.Api.Common.V1.Message.Header where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'header
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'header = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'header" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'header
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'header = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "input" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'input
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'input = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'input" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'input
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'input = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "heartbeatDetails" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'heartbeatDetails
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'heartbeatDetails = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'heartbeatDetails" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'heartbeatDetails
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'heartbeatDetails = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "scheduledTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'scheduledTime
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'scheduledTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'scheduledTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'scheduledTime
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'scheduledTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "currentAttemptScheduledTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'currentAttemptScheduledTime
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'currentAttemptScheduledTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'currentAttemptScheduledTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'currentAttemptScheduledTime
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'currentAttemptScheduledTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "startedTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'startedTime
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'startedTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'startedTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'startedTime
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'startedTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "attempt" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'attempt
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'attempt = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "scheduleToCloseTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'scheduleToCloseTimeout
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'scheduleToCloseTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'scheduleToCloseTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'scheduleToCloseTimeout
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'scheduleToCloseTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "startToCloseTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'startToCloseTimeout
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'startToCloseTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'startToCloseTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'startToCloseTimeout
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'startToCloseTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "heartbeatTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'heartbeatTimeout
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'heartbeatTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'heartbeatTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'heartbeatTimeout
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'heartbeatTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "retryPolicy" Proto.Temporal.Api.Common.V1.Message.RetryPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'retryPolicy
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'retryPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'retryPolicy" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'retryPolicy
           (\ x__ y__
              -> x__ {_PollActivityTaskQueueResponse'retryPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "pollerScalingDecision" Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'pollerScalingDecision = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'pollerScalingDecision" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__
                   {_PollActivityTaskQueueResponse'pollerScalingDecision = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "priority" Proto.Temporal.Api.Common.V1.Message.Priority where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'priority
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'priority = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollActivityTaskQueueResponse "maybe'priority" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollActivityTaskQueueResponse'priority
           (\ x__ y__ -> x__ {_PollActivityTaskQueueResponse'priority = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollActivityTaskQueueResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollActivityTaskQueueResponse"
  packedMessageDescriptor _
    = "\n\
      \\GSPollActivityTaskQueueResponse\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2-\n\
      \\DC2workflow_namespace\CAN\STX \SOH(\tR\DC1workflowNamespace\DC2I\n\
      \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2X\n\
      \\DC2workflow_execution\CAN\EOT \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2I\n\
      \\ractivity_type\CAN\ENQ \SOH(\v2$.temporal.api.common.v1.ActivityTypeR\factivityType\DC2\US\n\
      \\vactivity_id\CAN\ACK \SOH(\tR\n\
      \activityId\DC26\n\
      \\ACKheader\CAN\a \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC26\n\
      \\ENQinput\CAN\b \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2M\n\
      \\DC1heartbeat_details\CAN\t \SOH(\v2 .temporal.api.common.v1.PayloadsR\DLEheartbeatDetails\DC2A\n\
      \\SOscheduled_time\CAN\n\
      \ \SOH(\v2\SUB.google.protobuf.TimestampR\rscheduledTime\DC2_\n\
      \\RScurrent_attempt_scheduled_time\CAN\v \SOH(\v2\SUB.google.protobuf.TimestampR\ESCcurrentAttemptScheduledTime\DC2=\n\
      \\fstarted_time\CAN\f \SOH(\v2\SUB.google.protobuf.TimestampR\vstartedTime\DC2\CAN\n\
      \\aattempt\CAN\r \SOH(\ENQR\aattempt\DC2T\n\
      \\EMschedule_to_close_timeout\CAN\SO \SOH(\v2\EM.google.protobuf.DurationR\SYNscheduleToCloseTimeout\DC2N\n\
      \\SYNstart_to_close_timeout\CAN\SI \SOH(\v2\EM.google.protobuf.DurationR\DC3startToCloseTimeout\DC2F\n\
      \\DC1heartbeat_timeout\CAN\DLE \SOH(\v2\EM.google.protobuf.DurationR\DLEheartbeatTimeout\DC2F\n\
      \\fretry_policy\CAN\DC1 \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2h\n\
      \\ETBpoller_scaling_decision\CAN\DC2 \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision\DC2<\n\
      \\bpriority\CAN\DC3 \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriority"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        workflowNamespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowNamespace")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        workflowType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_type"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowType)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowType")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        activityType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_type"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.ActivityType)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'activityType")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        activityId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityId")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        header__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Header)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'header")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        input__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "input"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'input")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        heartbeatDetails__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "heartbeat_details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'heartbeatDetails")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        scheduledTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "scheduled_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'scheduledTime")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        currentAttemptScheduledTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "current_attempt_scheduled_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'currentAttemptScheduledTime")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        startedTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "started_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startedTime")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        attempt__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "attempt"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"attempt")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        scheduleToCloseTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_to_close_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'scheduleToCloseTimeout")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        startToCloseTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "start_to_close_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startToCloseTimeout")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        heartbeatTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "heartbeat_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'heartbeatTimeout")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        retryPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.RetryPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicy")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        pollerScalingDecision__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "poller_scaling_decision"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'pollerScalingDecision")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
        priority__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "priority"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Priority)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'priority")) ::
              Data.ProtoLens.FieldDescriptor PollActivityTaskQueueResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowNamespace__field_descriptor),
           (Data.ProtoLens.Tag 3, workflowType__field_descriptor),
           (Data.ProtoLens.Tag 4, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 5, activityType__field_descriptor),
           (Data.ProtoLens.Tag 6, activityId__field_descriptor),
           (Data.ProtoLens.Tag 7, header__field_descriptor),
           (Data.ProtoLens.Tag 8, input__field_descriptor),
           (Data.ProtoLens.Tag 9, heartbeatDetails__field_descriptor),
           (Data.ProtoLens.Tag 10, scheduledTime__field_descriptor),
           (Data.ProtoLens.Tag 11, 
            currentAttemptScheduledTime__field_descriptor),
           (Data.ProtoLens.Tag 12, startedTime__field_descriptor),
           (Data.ProtoLens.Tag 13, attempt__field_descriptor),
           (Data.ProtoLens.Tag 14, scheduleToCloseTimeout__field_descriptor),
           (Data.ProtoLens.Tag 15, startToCloseTimeout__field_descriptor),
           (Data.ProtoLens.Tag 16, heartbeatTimeout__field_descriptor),
           (Data.ProtoLens.Tag 17, retryPolicy__field_descriptor),
           (Data.ProtoLens.Tag 18, pollerScalingDecision__field_descriptor),
           (Data.ProtoLens.Tag 19, priority__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollActivityTaskQueueResponse'_unknownFields
        (\ x__ y__
           -> x__ {_PollActivityTaskQueueResponse'_unknownFields = y__})
  defMessage
    = PollActivityTaskQueueResponse'_constructor
        {_PollActivityTaskQueueResponse'taskToken = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueResponse'workflowNamespace = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueResponse'workflowType = Prelude.Nothing,
         _PollActivityTaskQueueResponse'workflowExecution = Prelude.Nothing,
         _PollActivityTaskQueueResponse'activityType = Prelude.Nothing,
         _PollActivityTaskQueueResponse'activityId = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueResponse'header = Prelude.Nothing,
         _PollActivityTaskQueueResponse'input = Prelude.Nothing,
         _PollActivityTaskQueueResponse'heartbeatDetails = Prelude.Nothing,
         _PollActivityTaskQueueResponse'scheduledTime = Prelude.Nothing,
         _PollActivityTaskQueueResponse'currentAttemptScheduledTime = Prelude.Nothing,
         _PollActivityTaskQueueResponse'startedTime = Prelude.Nothing,
         _PollActivityTaskQueueResponse'attempt = Data.ProtoLens.fieldDefault,
         _PollActivityTaskQueueResponse'scheduleToCloseTimeout = Prelude.Nothing,
         _PollActivityTaskQueueResponse'startToCloseTimeout = Prelude.Nothing,
         _PollActivityTaskQueueResponse'heartbeatTimeout = Prelude.Nothing,
         _PollActivityTaskQueueResponse'retryPolicy = Prelude.Nothing,
         _PollActivityTaskQueueResponse'pollerScalingDecision = Prelude.Nothing,
         _PollActivityTaskQueueResponse'priority = Prelude.Nothing,
         _PollActivityTaskQueueResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollActivityTaskQueueResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser PollActivityTaskQueueResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_namespace"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowNamespace") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowType") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "activity_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityType") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "activity_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"activityId") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"header") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "input"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"input") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "heartbeat_details"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"heartbeatDetails") y x)
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "scheduled_time"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"scheduledTime") y x)
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "current_attempt_scheduled_time"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"currentAttemptScheduledTime") y
                                     x)
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "started_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"startedTime") y x)
                        104
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "attempt"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"attempt") y x)
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "schedule_to_close_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"scheduleToCloseTimeout") y x)
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "start_to_close_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startToCloseTimeout") y x)
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "heartbeat_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"heartbeatTimeout") y x)
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryPolicy") y x)
                        146
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "poller_scaling_decision"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"pollerScalingDecision") y x)
                        154
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "priority"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"priority") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PollActivityTaskQueueResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"workflowNamespace") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'workflowType") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'activityType") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view (Data.ProtoLens.Field.field @"activityId") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'header") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'input") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (case
                                          Lens.Family2.view
                                            (Data.ProtoLens.Field.field @"maybe'heartbeatDetails")
                                            _x
                                      of
                                        Prelude.Nothing -> Data.Monoid.mempty
                                        (Prelude.Just _v)
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                               ((Prelude..)
                                                  (\ bs
                                                     -> (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             (Prelude.fromIntegral
                                                                (Data.ByteString.length bs)))
                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                             bs))
                                                  Data.ProtoLens.encodeMessage _v))
                                     ((Data.Monoid.<>)
                                        (case
                                             Lens.Family2.view
                                               (Data.ProtoLens.Field.field @"maybe'scheduledTime")
                                               _x
                                         of
                                           Prelude.Nothing -> Data.Monoid.mempty
                                           (Prelude.Just _v)
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                  ((Prelude..)
                                                     (\ bs
                                                        -> (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (Prelude.fromIntegral
                                                                   (Data.ByteString.length bs)))
                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                bs))
                                                     Data.ProtoLens.encodeMessage _v))
                                        ((Data.Monoid.<>)
                                           (case
                                                Lens.Family2.view
                                                  (Data.ProtoLens.Field.field
                                                     @"maybe'currentAttemptScheduledTime")
                                                  _x
                                            of
                                              Prelude.Nothing -> Data.Monoid.mempty
                                              (Prelude.Just _v)
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                     ((Prelude..)
                                                        (\ bs
                                                           -> (Data.Monoid.<>)
                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                   (Prelude.fromIntegral
                                                                      (Data.ByteString.length bs)))
                                                                (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                   bs))
                                                        Data.ProtoLens.encodeMessage _v))
                                           ((Data.Monoid.<>)
                                              (case
                                                   Lens.Family2.view
                                                     (Data.ProtoLens.Field.field
                                                        @"maybe'startedTime")
                                                     _x
                                               of
                                                 Prelude.Nothing -> Data.Monoid.mempty
                                                 (Prelude.Just _v)
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage _v))
                                              ((Data.Monoid.<>)
                                                 (let
                                                    _v
                                                      = Lens.Family2.view
                                                          (Data.ProtoLens.Field.field @"attempt") _x
                                                  in
                                                    if (Prelude.==)
                                                         _v Data.ProtoLens.fieldDefault then
                                                        Data.Monoid.mempty
                                                    else
                                                        (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             104)
                                                          ((Prelude..)
                                                             Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             Prelude.fromIntegral _v))
                                                 ((Data.Monoid.<>)
                                                    (case
                                                         Lens.Family2.view
                                                           (Data.ProtoLens.Field.field
                                                              @"maybe'scheduleToCloseTimeout")
                                                           _x
                                                     of
                                                       Prelude.Nothing -> Data.Monoid.mempty
                                                       (Prelude.Just _v)
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 114)
                                                              ((Prelude..)
                                                                 (\ bs
                                                                    -> (Data.Monoid.<>)
                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            (Prelude.fromIntegral
                                                                               (Data.ByteString.length
                                                                                  bs)))
                                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                            bs))
                                                                 Data.ProtoLens.encodeMessage _v))
                                                    ((Data.Monoid.<>)
                                                       (case
                                                            Lens.Family2.view
                                                              (Data.ProtoLens.Field.field
                                                                 @"maybe'startToCloseTimeout")
                                                              _x
                                                        of
                                                          Prelude.Nothing -> Data.Monoid.mempty
                                                          (Prelude.Just _v)
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    122)
                                                                 ((Prelude..)
                                                                    (\ bs
                                                                       -> (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               (Prelude.fromIntegral
                                                                                  (Data.ByteString.length
                                                                                     bs)))
                                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                               bs))
                                                                    Data.ProtoLens.encodeMessage
                                                                    _v))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'heartbeatTimeout")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       130)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          ((Data.Monoid.<>)
                                                             (case
                                                                  Lens.Family2.view
                                                                    (Data.ProtoLens.Field.field
                                                                       @"maybe'retryPolicy")
                                                                    _x
                                                              of
                                                                Prelude.Nothing
                                                                  -> Data.Monoid.mempty
                                                                (Prelude.Just _v)
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          138)
                                                                       ((Prelude..)
                                                                          (\ bs
                                                                             -> (Data.Monoid.<>)
                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                     (Prelude.fromIntegral
                                                                                        (Data.ByteString.length
                                                                                           bs)))
                                                                                  (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                     bs))
                                                                          Data.ProtoLens.encodeMessage
                                                                          _v))
                                                             ((Data.Monoid.<>)
                                                                (case
                                                                     Lens.Family2.view
                                                                       (Data.ProtoLens.Field.field
                                                                          @"maybe'pollerScalingDecision")
                                                                       _x
                                                                 of
                                                                   Prelude.Nothing
                                                                     -> Data.Monoid.mempty
                                                                   (Prelude.Just _v)
                                                                     -> (Data.Monoid.<>)
                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                             146)
                                                                          ((Prelude..)
                                                                             (\ bs
                                                                                -> (Data.Monoid.<>)
                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                        (Prelude.fromIntegral
                                                                                           (Data.ByteString.length
                                                                                              bs)))
                                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                        bs))
                                                                             Data.ProtoLens.encodeMessage
                                                                             _v))
                                                                ((Data.Monoid.<>)
                                                                   (case
                                                                        Lens.Family2.view
                                                                          (Data.ProtoLens.Field.field
                                                                             @"maybe'priority")
                                                                          _x
                                                                    of
                                                                      Prelude.Nothing
                                                                        -> Data.Monoid.mempty
                                                                      (Prelude.Just _v)
                                                                        -> (Data.Monoid.<>)
                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                154)
                                                                             ((Prelude..)
                                                                                (\ bs
                                                                                   -> (Data.Monoid.<>)
                                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                           (Prelude.fromIntegral
                                                                                              (Data.ByteString.length
                                                                                                 bs)))
                                                                                        (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                           bs))
                                                                                Data.ProtoLens.encodeMessage
                                                                                _v))
                                                                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                      (Lens.Family2.view
                                                                         Data.ProtoLens.unknownFields
                                                                         _x))))))))))))))))))))
instance Control.DeepSeq.NFData PollActivityTaskQueueResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollActivityTaskQueueResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollActivityTaskQueueResponse'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_PollActivityTaskQueueResponse'workflowNamespace x__)
                   (Control.DeepSeq.deepseq
                      (_PollActivityTaskQueueResponse'workflowType x__)
                      (Control.DeepSeq.deepseq
                         (_PollActivityTaskQueueResponse'workflowExecution x__)
                         (Control.DeepSeq.deepseq
                            (_PollActivityTaskQueueResponse'activityType x__)
                            (Control.DeepSeq.deepseq
                               (_PollActivityTaskQueueResponse'activityId x__)
                               (Control.DeepSeq.deepseq
                                  (_PollActivityTaskQueueResponse'header x__)
                                  (Control.DeepSeq.deepseq
                                     (_PollActivityTaskQueueResponse'input x__)
                                     (Control.DeepSeq.deepseq
                                        (_PollActivityTaskQueueResponse'heartbeatDetails x__)
                                        (Control.DeepSeq.deepseq
                                           (_PollActivityTaskQueueResponse'scheduledTime x__)
                                           (Control.DeepSeq.deepseq
                                              (_PollActivityTaskQueueResponse'currentAttemptScheduledTime
                                                 x__)
                                              (Control.DeepSeq.deepseq
                                                 (_PollActivityTaskQueueResponse'startedTime x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_PollActivityTaskQueueResponse'attempt x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_PollActivityTaskQueueResponse'scheduleToCloseTimeout
                                                          x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_PollActivityTaskQueueResponse'startToCloseTimeout
                                                             x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_PollActivityTaskQueueResponse'heartbeatTimeout
                                                                x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_PollActivityTaskQueueResponse'retryPolicy
                                                                   x__)
                                                                (Control.DeepSeq.deepseq
                                                                   (_PollActivityTaskQueueResponse'pollerScalingDecision
                                                                      x__)
                                                                   (Control.DeepSeq.deepseq
                                                                      (_PollActivityTaskQueueResponse'priority
                                                                         x__)
                                                                      ())))))))))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PollNexusTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PollNexusTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' PollNexusTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' PollNexusTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersionCapabilities' @:: Lens' PollNexusTaskQueueRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersionCapabilities' @:: Lens' PollNexusTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' PollNexusTaskQueueRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' PollNexusTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data PollNexusTaskQueueRequest
  = PollNexusTaskQueueRequest'_constructor {_PollNexusTaskQueueRequest'namespace :: !Data.Text.Text,
                                            _PollNexusTaskQueueRequest'identity :: !Data.Text.Text,
                                            _PollNexusTaskQueueRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                            _PollNexusTaskQueueRequest'workerVersionCapabilities :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities),
                                            _PollNexusTaskQueueRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                            _PollNexusTaskQueueRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollNexusTaskQueueRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'namespace
           (\ x__ y__ -> x__ {_PollNexusTaskQueueRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'identity
           (\ x__ y__ -> x__ {_PollNexusTaskQueueRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollNexusTaskQueueRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollNexusTaskQueueRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "workerVersionCapabilities" Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollNexusTaskQueueRequest'workerVersionCapabilities = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "maybe'workerVersionCapabilities" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollNexusTaskQueueRequest'workerVersionCapabilities = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollNexusTaskQueueRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollNexusTaskQueueRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollNexusTaskQueueRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollNexusTaskQueueRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMPollNexusTaskQueueRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
      \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2C\n\
      \\n\
      \task_queue\CAN\ETX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2u\n\
      \\ESCworker_version_capabilities\CAN\EOT \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueRequest
        workerVersionCapabilities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version_capabilities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, identity__field_descriptor),
           (Data.ProtoLens.Tag 3, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 4, 
            workerVersionCapabilities__field_descriptor),
           (Data.ProtoLens.Tag 6, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollNexusTaskQueueRequest'_unknownFields
        (\ x__ y__
           -> x__ {_PollNexusTaskQueueRequest'_unknownFields = y__})
  defMessage
    = PollNexusTaskQueueRequest'_constructor
        {_PollNexusTaskQueueRequest'namespace = Data.ProtoLens.fieldDefault,
         _PollNexusTaskQueueRequest'identity = Data.ProtoLens.fieldDefault,
         _PollNexusTaskQueueRequest'taskQueue = Prelude.Nothing,
         _PollNexusTaskQueueRequest'workerVersionCapabilities = Prelude.Nothing,
         _PollNexusTaskQueueRequest'deploymentOptions = Prelude.Nothing,
         _PollNexusTaskQueueRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollNexusTaskQueueRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PollNexusTaskQueueRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version_capabilities"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersionCapabilities") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PollNexusTaskQueueRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData PollNexusTaskQueueRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollNexusTaskQueueRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollNexusTaskQueueRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PollNexusTaskQueueRequest'identity x__)
                   (Control.DeepSeq.deepseq
                      (_PollNexusTaskQueueRequest'taskQueue x__)
                      (Control.DeepSeq.deepseq
                         (_PollNexusTaskQueueRequest'workerVersionCapabilities x__)
                         (Control.DeepSeq.deepseq
                            (_PollNexusTaskQueueRequest'deploymentOptions x__) ())))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' PollNexusTaskQueueResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.request' @:: Lens' PollNexusTaskQueueResponse Proto.Temporal.Api.Nexus.V1.Message.Request@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'request' @:: Lens' PollNexusTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Request)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pollerScalingDecision' @:: Lens' PollNexusTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'pollerScalingDecision' @:: Lens' PollNexusTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)@ -}
data PollNexusTaskQueueResponse
  = PollNexusTaskQueueResponse'_constructor {_PollNexusTaskQueueResponse'taskToken :: !Data.ByteString.ByteString,
                                             _PollNexusTaskQueueResponse'request :: !(Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Request),
                                             _PollNexusTaskQueueResponse'pollerScalingDecision :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision),
                                             _PollNexusTaskQueueResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollNexusTaskQueueResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueResponse "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueResponse'taskToken
           (\ x__ y__ -> x__ {_PollNexusTaskQueueResponse'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueResponse "request" Proto.Temporal.Api.Nexus.V1.Message.Request where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueResponse'request
           (\ x__ y__ -> x__ {_PollNexusTaskQueueResponse'request = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueResponse "maybe'request" (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Request) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueResponse'request
           (\ x__ y__ -> x__ {_PollNexusTaskQueueResponse'request = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueResponse "pollerScalingDecision" Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__ {_PollNexusTaskQueueResponse'pollerScalingDecision = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollNexusTaskQueueResponse "maybe'pollerScalingDecision" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollNexusTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__ {_PollNexusTaskQueueResponse'pollerScalingDecision = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollNexusTaskQueueResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollNexusTaskQueueResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBPollNexusTaskQueueResponse\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC28\n\
      \\arequest\CAN\STX \SOH(\v2\RS.temporal.api.nexus.v1.RequestR\arequest\DC2h\n\
      \\ETBpoller_scaling_decision\CAN\ETX \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueResponse
        request__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Nexus.V1.Message.Request)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'request")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueResponse
        pollerScalingDecision__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "poller_scaling_decision"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'pollerScalingDecision")) ::
              Data.ProtoLens.FieldDescriptor PollNexusTaskQueueResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, request__field_descriptor),
           (Data.ProtoLens.Tag 3, pollerScalingDecision__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollNexusTaskQueueResponse'_unknownFields
        (\ x__ y__
           -> x__ {_PollNexusTaskQueueResponse'_unknownFields = y__})
  defMessage
    = PollNexusTaskQueueResponse'_constructor
        {_PollNexusTaskQueueResponse'taskToken = Data.ProtoLens.fieldDefault,
         _PollNexusTaskQueueResponse'request = Prelude.Nothing,
         _PollNexusTaskQueueResponse'pollerScalingDecision = Prelude.Nothing,
         _PollNexusTaskQueueResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollNexusTaskQueueResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser PollNexusTaskQueueResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "request"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"request") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "poller_scaling_decision"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"pollerScalingDecision") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PollNexusTaskQueueResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'request") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'pollerScalingDecision") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData PollNexusTaskQueueResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollNexusTaskQueueResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollNexusTaskQueueResponse'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_PollNexusTaskQueueResponse'request x__)
                   (Control.DeepSeq.deepseq
                      (_PollNexusTaskQueueResponse'pollerScalingDecision x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PollWorkflowExecutionUpdateRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateRef' @:: Lens' PollWorkflowExecutionUpdateRequest Proto.Temporal.Api.Update.V1.Message.UpdateRef@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateRef' @:: Lens' PollWorkflowExecutionUpdateRequest (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PollWorkflowExecutionUpdateRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.waitPolicy' @:: Lens' PollWorkflowExecutionUpdateRequest Proto.Temporal.Api.Update.V1.Message.WaitPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'waitPolicy' @:: Lens' PollWorkflowExecutionUpdateRequest (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy)@ -}
data PollWorkflowExecutionUpdateRequest
  = PollWorkflowExecutionUpdateRequest'_constructor {_PollWorkflowExecutionUpdateRequest'namespace :: !Data.Text.Text,
                                                     _PollWorkflowExecutionUpdateRequest'updateRef :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef),
                                                     _PollWorkflowExecutionUpdateRequest'identity :: !Data.Text.Text,
                                                     _PollWorkflowExecutionUpdateRequest'waitPolicy :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy),
                                                     _PollWorkflowExecutionUpdateRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollWorkflowExecutionUpdateRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'namespace
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "updateRef" Proto.Temporal.Api.Update.V1.Message.UpdateRef where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'updateRef
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'updateRef = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "maybe'updateRef" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'updateRef
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'updateRef = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'identity
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "waitPolicy" Proto.Temporal.Api.Update.V1.Message.WaitPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'waitPolicy
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'waitPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateRequest "maybe'waitPolicy" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateRequest'waitPolicy
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateRequest'waitPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollWorkflowExecutionUpdateRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateRequest"
  packedMessageDescriptor _
    = "\n\
      \\"PollWorkflowExecutionUpdateRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2@\n\
      \\n\
      \update_ref\CAN\STX \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2C\n\
      \\vwait_policy\CAN\EOT \SOH(\v2\".temporal.api.update.v1.WaitPolicyR\n\
      \waitPolicy"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateRequest
        updateRef__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_ref"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.UpdateRef)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateRef")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateRequest
        waitPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "wait_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.WaitPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'waitPolicy")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, updateRef__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, waitPolicy__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollWorkflowExecutionUpdateRequest'_unknownFields
        (\ x__ y__
           -> x__ {_PollWorkflowExecutionUpdateRequest'_unknownFields = y__})
  defMessage
    = PollWorkflowExecutionUpdateRequest'_constructor
        {_PollWorkflowExecutionUpdateRequest'namespace = Data.ProtoLens.fieldDefault,
         _PollWorkflowExecutionUpdateRequest'updateRef = Prelude.Nothing,
         _PollWorkflowExecutionUpdateRequest'identity = Data.ProtoLens.fieldDefault,
         _PollWorkflowExecutionUpdateRequest'waitPolicy = Prelude.Nothing,
         _PollWorkflowExecutionUpdateRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollWorkflowExecutionUpdateRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PollWorkflowExecutionUpdateRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_ref"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateRef") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "wait_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"waitPolicy") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "PollWorkflowExecutionUpdateRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'updateRef") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'waitPolicy") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData PollWorkflowExecutionUpdateRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollWorkflowExecutionUpdateRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollWorkflowExecutionUpdateRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PollWorkflowExecutionUpdateRequest'updateRef x__)
                   (Control.DeepSeq.deepseq
                      (_PollWorkflowExecutionUpdateRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_PollWorkflowExecutionUpdateRequest'waitPolicy x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.outcome' @:: Lens' PollWorkflowExecutionUpdateResponse Proto.Temporal.Api.Update.V1.Message.Outcome@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'outcome' @:: Lens' PollWorkflowExecutionUpdateResponse (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.stage' @:: Lens' PollWorkflowExecutionUpdateResponse Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateRef' @:: Lens' PollWorkflowExecutionUpdateResponse Proto.Temporal.Api.Update.V1.Message.UpdateRef@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateRef' @:: Lens' PollWorkflowExecutionUpdateResponse (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef)@ -}
data PollWorkflowExecutionUpdateResponse
  = PollWorkflowExecutionUpdateResponse'_constructor {_PollWorkflowExecutionUpdateResponse'outcome :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome),
                                                      _PollWorkflowExecutionUpdateResponse'stage :: !Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage,
                                                      _PollWorkflowExecutionUpdateResponse'updateRef :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef),
                                                      _PollWorkflowExecutionUpdateResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollWorkflowExecutionUpdateResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateResponse "outcome" Proto.Temporal.Api.Update.V1.Message.Outcome where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateResponse'outcome
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateResponse'outcome = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateResponse "maybe'outcome" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateResponse'outcome
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateResponse'outcome = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateResponse "stage" Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateResponse'stage
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateResponse'stage = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateResponse "updateRef" Proto.Temporal.Api.Update.V1.Message.UpdateRef where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateResponse'updateRef
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateResponse'updateRef = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowExecutionUpdateResponse "maybe'updateRef" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowExecutionUpdateResponse'updateRef
           (\ x__ y__
              -> x__ {_PollWorkflowExecutionUpdateResponse'updateRef = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollWorkflowExecutionUpdateResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateResponse"
  packedMessageDescriptor _
    = "\n\
      \#PollWorkflowExecutionUpdateResponse\DC29\n\
      \\aoutcome\CAN\SOH \SOH(\v2\US.temporal.api.update.v1.OutcomeR\aoutcome\DC2R\n\
      \\ENQstage\CAN\STX \SOH(\SO2<.temporal.api.enums.v1.UpdateWorkflowExecutionLifecycleStageR\ENQstage\DC2@\n\
      \\n\
      \update_ref\CAN\ETX \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        outcome__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "outcome"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.Outcome)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'outcome")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateResponse
        stage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "stage"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"stage")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateResponse
        updateRef__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_ref"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.UpdateRef)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateRef")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowExecutionUpdateResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, outcome__field_descriptor),
           (Data.ProtoLens.Tag 2, stage__field_descriptor),
           (Data.ProtoLens.Tag 3, updateRef__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollWorkflowExecutionUpdateResponse'_unknownFields
        (\ x__ y__
           -> x__ {_PollWorkflowExecutionUpdateResponse'_unknownFields = y__})
  defMessage
    = PollWorkflowExecutionUpdateResponse'_constructor
        {_PollWorkflowExecutionUpdateResponse'outcome = Prelude.Nothing,
         _PollWorkflowExecutionUpdateResponse'stage = Data.ProtoLens.fieldDefault,
         _PollWorkflowExecutionUpdateResponse'updateRef = Prelude.Nothing,
         _PollWorkflowExecutionUpdateResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollWorkflowExecutionUpdateResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser PollWorkflowExecutionUpdateResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "outcome"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"outcome") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "stage"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"stage") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_ref"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateRef") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "PollWorkflowExecutionUpdateResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'outcome") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"stage") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'updateRef") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData PollWorkflowExecutionUpdateResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollWorkflowExecutionUpdateResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollWorkflowExecutionUpdateResponse'outcome x__)
                (Control.DeepSeq.deepseq
                   (_PollWorkflowExecutionUpdateResponse'stage x__)
                   (Control.DeepSeq.deepseq
                      (_PollWorkflowExecutionUpdateResponse'updateRef x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' PollWorkflowTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' PollWorkflowTaskQueueRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' PollWorkflowTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' PollWorkflowTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.binaryChecksum' @:: Lens' PollWorkflowTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersionCapabilities' @:: Lens' PollWorkflowTaskQueueRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersionCapabilities' @:: Lens' PollWorkflowTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' PollWorkflowTaskQueueRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' PollWorkflowTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data PollWorkflowTaskQueueRequest
  = PollWorkflowTaskQueueRequest'_constructor {_PollWorkflowTaskQueueRequest'namespace :: !Data.Text.Text,
                                               _PollWorkflowTaskQueueRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                               _PollWorkflowTaskQueueRequest'identity :: !Data.Text.Text,
                                               _PollWorkflowTaskQueueRequest'binaryChecksum :: !Data.Text.Text,
                                               _PollWorkflowTaskQueueRequest'workerVersionCapabilities :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities),
                                               _PollWorkflowTaskQueueRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                               _PollWorkflowTaskQueueRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollWorkflowTaskQueueRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'namespace
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'taskQueue
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'identity
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "binaryChecksum" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'binaryChecksum
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueRequest'binaryChecksum = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "workerVersionCapabilities" Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueRequest'workerVersionCapabilities = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "maybe'workerVersionCapabilities" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'workerVersionCapabilities
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueRequest'workerVersionCapabilities = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueRequest'deploymentOptions
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollWorkflowTaskQueueRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest"
  packedMessageDescriptor _
    = "\n\
      \\FSPollWorkflowTaskQueueRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
      \\n\
      \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2'\n\
      \\SIbinary_checksum\CAN\EOT \SOH(\tR\SObinaryChecksum\DC2u\n\
      \\ESCworker_version_capabilities\CAN\ENQ \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
        binaryChecksum__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "binary_checksum"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"binaryChecksum")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
        workerVersionCapabilities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version_capabilities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionCapabilities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, binaryChecksum__field_descriptor),
           (Data.ProtoLens.Tag 5, 
            workerVersionCapabilities__field_descriptor),
           (Data.ProtoLens.Tag 6, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollWorkflowTaskQueueRequest'_unknownFields
        (\ x__ y__
           -> x__ {_PollWorkflowTaskQueueRequest'_unknownFields = y__})
  defMessage
    = PollWorkflowTaskQueueRequest'_constructor
        {_PollWorkflowTaskQueueRequest'namespace = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueRequest'taskQueue = Prelude.Nothing,
         _PollWorkflowTaskQueueRequest'identity = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueRequest'binaryChecksum = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueRequest'workerVersionCapabilities = Prelude.Nothing,
         _PollWorkflowTaskQueueRequest'deploymentOptions = Prelude.Nothing,
         _PollWorkflowTaskQueueRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollWorkflowTaskQueueRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser PollWorkflowTaskQueueRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "binary_checksum"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"binaryChecksum") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version_capabilities"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersionCapabilities") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "PollWorkflowTaskQueueRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"binaryChecksum") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'workerVersionCapabilities") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData PollWorkflowTaskQueueRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollWorkflowTaskQueueRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollWorkflowTaskQueueRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_PollWorkflowTaskQueueRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_PollWorkflowTaskQueueRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_PollWorkflowTaskQueueRequest'binaryChecksum x__)
                         (Control.DeepSeq.deepseq
                            (_PollWorkflowTaskQueueRequest'workerVersionCapabilities x__)
                            (Control.DeepSeq.deepseq
                               (_PollWorkflowTaskQueueRequest'deploymentOptions x__) ()))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' PollWorkflowTaskQueueResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowType' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.Common.V1.Message.WorkflowType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowType' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.previousStartedEventId' @:: Lens' PollWorkflowTaskQueueResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startedEventId' @:: Lens' PollWorkflowTaskQueueResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.attempt' @:: Lens' PollWorkflowTaskQueueResponse Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.backlogCountHint' @:: Lens' PollWorkflowTaskQueueResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.history' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.History.V1.Message.History@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'history' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' PollWorkflowTaskQueueResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.Query.V1.Message.WorkflowQuery@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'query' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionTaskQueue' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionTaskQueue' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduledTime' @:: Lens' PollWorkflowTaskQueueResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'scheduledTime' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.startedTime' @:: Lens' PollWorkflowTaskQueueResponse Proto.Google.Protobuf.Timestamp.Timestamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'startedTime' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queries' @:: Lens' PollWorkflowTaskQueueResponse (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.messages' @:: Lens' PollWorkflowTaskQueueResponse [Proto.Temporal.Api.Protocol.V1.Message.Message]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'messages' @:: Lens' PollWorkflowTaskQueueResponse (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pollerScalingDecision' @:: Lens' PollWorkflowTaskQueueResponse Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'pollerScalingDecision' @:: Lens' PollWorkflowTaskQueueResponse (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)@ -}
data PollWorkflowTaskQueueResponse
  = PollWorkflowTaskQueueResponse'_constructor {_PollWorkflowTaskQueueResponse'taskToken :: !Data.ByteString.ByteString,
                                                _PollWorkflowTaskQueueResponse'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                _PollWorkflowTaskQueueResponse'workflowType :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType),
                                                _PollWorkflowTaskQueueResponse'previousStartedEventId :: !Data.Int.Int64,
                                                _PollWorkflowTaskQueueResponse'startedEventId :: !Data.Int.Int64,
                                                _PollWorkflowTaskQueueResponse'attempt :: !Data.Int.Int32,
                                                _PollWorkflowTaskQueueResponse'backlogCountHint :: !Data.Int.Int64,
                                                _PollWorkflowTaskQueueResponse'history :: !(Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History),
                                                _PollWorkflowTaskQueueResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                _PollWorkflowTaskQueueResponse'query :: !(Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery),
                                                _PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                                _PollWorkflowTaskQueueResponse'scheduledTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                _PollWorkflowTaskQueueResponse'startedTime :: !(Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp),
                                                _PollWorkflowTaskQueueResponse'queries :: !(Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQuery),
                                                _PollWorkflowTaskQueueResponse'messages :: !(Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message),
                                                _PollWorkflowTaskQueueResponse'pollerScalingDecision :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision),
                                                _PollWorkflowTaskQueueResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollWorkflowTaskQueueResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'taskToken
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowExecution
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowExecution
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "workflowType" Proto.Temporal.Api.Common.V1.Message.WorkflowType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowType
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'workflowType = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'workflowType" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowType
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'workflowType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "previousStartedEventId" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'previousStartedEventId
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueResponse'previousStartedEventId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "startedEventId" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'startedEventId
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'startedEventId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "attempt" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'attempt
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'attempt = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "backlogCountHint" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'backlogCountHint
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'backlogCountHint = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "history" Proto.Temporal.Api.History.V1.Message.History where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'history
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'history = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'history" (Prelude.Maybe Proto.Temporal.Api.History.V1.Message.History) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'history
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'history = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'nextPageToken
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "query" Proto.Temporal.Api.Query.V1.Message.WorkflowQuery where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'query
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'query = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'query" (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'query
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'query = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "workflowExecutionTaskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'workflowExecutionTaskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "scheduledTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'scheduledTime
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'scheduledTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'scheduledTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'scheduledTime
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'scheduledTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "startedTime" Proto.Google.Protobuf.Timestamp.Timestamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'startedTime
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'startedTime = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'startedTime" (Prelude.Maybe Proto.Google.Protobuf.Timestamp.Timestamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'startedTime
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'startedTime = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "queries" (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQuery) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'queries
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'queries = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "messages" [Proto.Temporal.Api.Protocol.V1.Message.Message] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'messages
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'messages = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "vec'messages" (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'messages
           (\ x__ y__ -> x__ {_PollWorkflowTaskQueueResponse'messages = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "pollerScalingDecision" Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueResponse'pollerScalingDecision = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse "maybe'pollerScalingDecision" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'pollerScalingDecision
           (\ x__ y__
              -> x__
                   {_PollWorkflowTaskQueueResponse'pollerScalingDecision = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollWorkflowTaskQueueResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse"
  packedMessageDescriptor _
    = "\n\
      \\GSPollWorkflowTaskQueueResponse\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2I\n\
      \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC29\n\
      \\EMprevious_started_event_id\CAN\EOT \SOH(\ETXR\SYNpreviousStartedEventId\DC2(\n\
      \\DLEstarted_event_id\CAN\ENQ \SOH(\ETXR\SOstartedEventId\DC2\CAN\n\
      \\aattempt\CAN\ACK \SOH(\ENQR\aattempt\DC2,\n\
      \\DC2backlog_count_hint\CAN\a \SOH(\ETXR\DLEbacklogCountHint\DC2:\n\
      \\ahistory\CAN\b \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2&\n\
      \\SInext_page_token\CAN\t \SOH(\fR\rnextPageToken\DC2:\n\
      \\ENQquery\CAN\n\
      \ \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQquery\DC2g\n\
      \\GSworkflow_execution_task_queue\CAN\v \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\SUBworkflowExecutionTaskQueue\DC2A\n\
      \\SOscheduled_time\CAN\f \SOH(\v2\SUB.google.protobuf.TimestampR\rscheduledTime\DC2=\n\
      \\fstarted_time\CAN\r \SOH(\v2\SUB.google.protobuf.TimestampR\vstartedTime\DC2e\n\
      \\aqueries\CAN\SO \ETX(\v2K.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse.QueriesEntryR\aqueries\DC2=\n\
      \\bmessages\CAN\SI \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2h\n\
      \\ETBpoller_scaling_decision\CAN\DLE \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision\SUB`\n\
      \\fQueriesEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2:\n\
      \\ENQvalue\CAN\STX \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        workflowType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_type"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowType)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowType")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        previousStartedEventId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "previous_started_event_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"previousStartedEventId")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        startedEventId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "started_event_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"startedEventId")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        attempt__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "attempt"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"attempt")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        backlogCountHint__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "backlog_count_hint"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"backlogCountHint")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        history__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.History.V1.Message.History)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'history")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'query")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        workflowExecutionTaskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'workflowExecutionTaskQueue")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        scheduledTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "scheduled_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'scheduledTime")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        startedTime__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "started_time"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Timestamp.Timestamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'startedTime")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        queries__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "queries"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor PollWorkflowTaskQueueResponse'QueriesEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"queries")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        messages__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "messages"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Protocol.V1.Message.Message)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"messages")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
        pollerScalingDecision__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "poller_scaling_decision"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.PollerScalingDecision)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'pollerScalingDecision")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, workflowType__field_descriptor),
           (Data.ProtoLens.Tag 4, previousStartedEventId__field_descriptor),
           (Data.ProtoLens.Tag 5, startedEventId__field_descriptor),
           (Data.ProtoLens.Tag 6, attempt__field_descriptor),
           (Data.ProtoLens.Tag 7, backlogCountHint__field_descriptor),
           (Data.ProtoLens.Tag 8, history__field_descriptor),
           (Data.ProtoLens.Tag 9, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 10, query__field_descriptor),
           (Data.ProtoLens.Tag 11, 
            workflowExecutionTaskQueue__field_descriptor),
           (Data.ProtoLens.Tag 12, scheduledTime__field_descriptor),
           (Data.ProtoLens.Tag 13, startedTime__field_descriptor),
           (Data.ProtoLens.Tag 14, queries__field_descriptor),
           (Data.ProtoLens.Tag 15, messages__field_descriptor),
           (Data.ProtoLens.Tag 16, pollerScalingDecision__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollWorkflowTaskQueueResponse'_unknownFields
        (\ x__ y__
           -> x__ {_PollWorkflowTaskQueueResponse'_unknownFields = y__})
  defMessage
    = PollWorkflowTaskQueueResponse'_constructor
        {_PollWorkflowTaskQueueResponse'taskToken = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'workflowExecution = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'workflowType = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'previousStartedEventId = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'startedEventId = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'attempt = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'backlogCountHint = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'history = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'query = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'scheduledTime = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'startedTime = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'queries = Data.Map.empty,
         _PollWorkflowTaskQueueResponse'messages = Data.Vector.Generic.empty,
         _PollWorkflowTaskQueueResponse'pollerScalingDecision = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollWorkflowTaskQueueResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Protocol.V1.Message.Message
             -> Data.ProtoLens.Encoding.Bytes.Parser PollWorkflowTaskQueueResponse
        loop x mutable'messages
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'messages)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'messages") frozen'messages x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                                  mutable'messages
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                                  mutable'messages
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowType") y x)
                                  mutable'messages
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "previous_started_event_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"previousStartedEventId") y x)
                                  mutable'messages
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "started_event_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"startedEventId") y x)
                                  mutable'messages
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "attempt"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"attempt") y x)
                                  mutable'messages
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "backlog_count_hint"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"backlogCountHint") y x)
                                  mutable'messages
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "history"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"history") y x)
                                  mutable'messages
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'messages
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                                  mutable'messages
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_task_queue"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionTaskQueue") y x)
                                  mutable'messages
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "scheduled_time"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"scheduledTime") y x)
                                  mutable'messages
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "started_time"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"startedTime") y x)
                                  mutable'messages
                        114
                          -> do !(entry :: PollWorkflowTaskQueueResponse'QueriesEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                            (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                  (Prelude.fromIntegral
                                                                                                     len)
                                                                                                  Data.ProtoLens.parseMessage)
                                                                                            "queries"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"queries")
                                        (\ !t -> Data.Map.insert key value t) x)
                                     mutable'messages)
                        122
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "messages"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'messages y)
                                loop x v
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "poller_scaling_decision"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"pollerScalingDecision") y x)
                                  mutable'messages
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'messages
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'messages)
          "PollWorkflowTaskQueueResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'workflowType") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"previousStartedEventId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"startedEventId") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral
                                     _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"attempt") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral
                                        _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"backlogCountHint") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           Prelude.fromIntegral _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'history") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"nextPageToken") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                              ((\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                                 _v))
                                     ((Data.Monoid.<>)
                                        (case
                                             Lens.Family2.view
                                               (Data.ProtoLens.Field.field @"maybe'query") _x
                                         of
                                           Prelude.Nothing -> Data.Monoid.mempty
                                           (Prelude.Just _v)
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                  ((Prelude..)
                                                     (\ bs
                                                        -> (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (Prelude.fromIntegral
                                                                   (Data.ByteString.length bs)))
                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                bs))
                                                     Data.ProtoLens.encodeMessage _v))
                                        ((Data.Monoid.<>)
                                           (case
                                                Lens.Family2.view
                                                  (Data.ProtoLens.Field.field
                                                     @"maybe'workflowExecutionTaskQueue")
                                                  _x
                                            of
                                              Prelude.Nothing -> Data.Monoid.mempty
                                              (Prelude.Just _v)
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                     ((Prelude..)
                                                        (\ bs
                                                           -> (Data.Monoid.<>)
                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                   (Prelude.fromIntegral
                                                                      (Data.ByteString.length bs)))
                                                                (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                   bs))
                                                        Data.ProtoLens.encodeMessage _v))
                                           ((Data.Monoid.<>)
                                              (case
                                                   Lens.Family2.view
                                                     (Data.ProtoLens.Field.field
                                                        @"maybe'scheduledTime")
                                                     _x
                                               of
                                                 Prelude.Nothing -> Data.Monoid.mempty
                                                 (Prelude.Just _v)
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage _v))
                                              ((Data.Monoid.<>)
                                                 (case
                                                      Lens.Family2.view
                                                        (Data.ProtoLens.Field.field
                                                           @"maybe'startedTime")
                                                        _x
                                                  of
                                                    Prelude.Nothing -> Data.Monoid.mempty
                                                    (Prelude.Just _v)
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              106)
                                                           ((Prelude..)
                                                              (\ bs
                                                                 -> (Data.Monoid.<>)
                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                         (Prelude.fromIntegral
                                                                            (Data.ByteString.length
                                                                               bs)))
                                                                      (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                         bs))
                                                              Data.ProtoLens.encodeMessage _v))
                                                 ((Data.Monoid.<>)
                                                    (Data.Monoid.mconcat
                                                       (Prelude.map
                                                          (\ _v
                                                             -> (Data.Monoid.<>)
                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                     114)
                                                                  ((Prelude..)
                                                                     (\ bs
                                                                        -> (Data.Monoid.<>)
                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                (Prelude.fromIntegral
                                                                                   (Data.ByteString.length
                                                                                      bs)))
                                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                bs))
                                                                     Data.ProtoLens.encodeMessage
                                                                     (Lens.Family2.set
                                                                        (Data.ProtoLens.Field.field
                                                                           @"key")
                                                                        (Prelude.fst _v)
                                                                        (Lens.Family2.set
                                                                           (Data.ProtoLens.Field.field
                                                                              @"value")
                                                                           (Prelude.snd _v)
                                                                           (Data.ProtoLens.defMessage ::
                                                                              PollWorkflowTaskQueueResponse'QueriesEntry)))))
                                                          (Data.Map.toList
                                                             (Lens.Family2.view
                                                                (Data.ProtoLens.Field.field
                                                                   @"queries")
                                                                _x))))
                                                    ((Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                          (\ _v
                                                             -> (Data.Monoid.<>)
                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                     122)
                                                                  ((Prelude..)
                                                                     (\ bs
                                                                        -> (Data.Monoid.<>)
                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                (Prelude.fromIntegral
                                                                                   (Data.ByteString.length
                                                                                      bs)))
                                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                bs))
                                                                     Data.ProtoLens.encodeMessage
                                                                     _v))
                                                          (Lens.Family2.view
                                                             (Data.ProtoLens.Field.field
                                                                @"vec'messages")
                                                             _x))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'pollerScalingDecision")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       130)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                             (Lens.Family2.view
                                                                Data.ProtoLens.unknownFields
                                                                _x)))))))))))))))))
instance Control.DeepSeq.NFData PollWorkflowTaskQueueResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollWorkflowTaskQueueResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollWorkflowTaskQueueResponse'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_PollWorkflowTaskQueueResponse'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_PollWorkflowTaskQueueResponse'workflowType x__)
                      (Control.DeepSeq.deepseq
                         (_PollWorkflowTaskQueueResponse'previousStartedEventId x__)
                         (Control.DeepSeq.deepseq
                            (_PollWorkflowTaskQueueResponse'startedEventId x__)
                            (Control.DeepSeq.deepseq
                               (_PollWorkflowTaskQueueResponse'attempt x__)
                               (Control.DeepSeq.deepseq
                                  (_PollWorkflowTaskQueueResponse'backlogCountHint x__)
                                  (Control.DeepSeq.deepseq
                                     (_PollWorkflowTaskQueueResponse'history x__)
                                     (Control.DeepSeq.deepseq
                                        (_PollWorkflowTaskQueueResponse'nextPageToken x__)
                                        (Control.DeepSeq.deepseq
                                           (_PollWorkflowTaskQueueResponse'query x__)
                                           (Control.DeepSeq.deepseq
                                              (_PollWorkflowTaskQueueResponse'workflowExecutionTaskQueue
                                                 x__)
                                              (Control.DeepSeq.deepseq
                                                 (_PollWorkflowTaskQueueResponse'scheduledTime x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_PollWorkflowTaskQueueResponse'startedTime x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_PollWorkflowTaskQueueResponse'queries x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_PollWorkflowTaskQueueResponse'messages
                                                             x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_PollWorkflowTaskQueueResponse'pollerScalingDecision
                                                                x__)
                                                             ()))))))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' PollWorkflowTaskQueueResponse'QueriesEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' PollWorkflowTaskQueueResponse'QueriesEntry Proto.Temporal.Api.Query.V1.Message.WorkflowQuery@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'value' @:: Lens' PollWorkflowTaskQueueResponse'QueriesEntry (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)@ -}
data PollWorkflowTaskQueueResponse'QueriesEntry
  = PollWorkflowTaskQueueResponse'QueriesEntry'_constructor {_PollWorkflowTaskQueueResponse'QueriesEntry'key :: !Data.Text.Text,
                                                             _PollWorkflowTaskQueueResponse'QueriesEntry'value :: !(Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery),
                                                             _PollWorkflowTaskQueueResponse'QueriesEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show PollWorkflowTaskQueueResponse'QueriesEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse'QueriesEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'QueriesEntry'key
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'QueriesEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse'QueriesEntry "value" Proto.Temporal.Api.Query.V1.Message.WorkflowQuery where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'QueriesEntry'value
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'QueriesEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField PollWorkflowTaskQueueResponse'QueriesEntry "maybe'value" (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _PollWorkflowTaskQueueResponse'QueriesEntry'value
           (\ x__ y__
              -> x__ {_PollWorkflowTaskQueueResponse'QueriesEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message PollWorkflowTaskQueueResponse'QueriesEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse.QueriesEntry"
  packedMessageDescriptor _
    = "\n\
      \\fQueriesEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2:\n\
      \\ENQvalue\CAN\STX \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse'QueriesEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor PollWorkflowTaskQueueResponse'QueriesEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _PollWorkflowTaskQueueResponse'QueriesEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_PollWorkflowTaskQueueResponse'QueriesEntry'_unknownFields = y__})
  defMessage
    = PollWorkflowTaskQueueResponse'QueriesEntry'_constructor
        {_PollWorkflowTaskQueueResponse'QueriesEntry'key = Data.ProtoLens.fieldDefault,
         _PollWorkflowTaskQueueResponse'QueriesEntry'value = Prelude.Nothing,
         _PollWorkflowTaskQueueResponse'QueriesEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          PollWorkflowTaskQueueResponse'QueriesEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser PollWorkflowTaskQueueResponse'QueriesEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueriesEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData PollWorkflowTaskQueueResponse'QueriesEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_PollWorkflowTaskQueueResponse'QueriesEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_PollWorkflowTaskQueueResponse'QueriesEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_PollWorkflowTaskQueueResponse'QueriesEntry'value x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' QueryWorkflowRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' QueryWorkflowRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' QueryWorkflowRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' QueryWorkflowRequest Proto.Temporal.Api.Query.V1.Message.WorkflowQuery@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'query' @:: Lens' QueryWorkflowRequest (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queryRejectCondition' @:: Lens' QueryWorkflowRequest Proto.Temporal.Api.Enums.V1.Query.QueryRejectCondition@ -}
data QueryWorkflowRequest
  = QueryWorkflowRequest'_constructor {_QueryWorkflowRequest'namespace :: !Data.Text.Text,
                                       _QueryWorkflowRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                       _QueryWorkflowRequest'query :: !(Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery),
                                       _QueryWorkflowRequest'queryRejectCondition :: !Proto.Temporal.Api.Enums.V1.Query.QueryRejectCondition,
                                       _QueryWorkflowRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show QueryWorkflowRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'namespace
           (\ x__ y__ -> x__ {_QueryWorkflowRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'execution
           (\ x__ y__ -> x__ {_QueryWorkflowRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'execution
           (\ x__ y__ -> x__ {_QueryWorkflowRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "query" Proto.Temporal.Api.Query.V1.Message.WorkflowQuery where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'query
           (\ x__ y__ -> x__ {_QueryWorkflowRequest'query = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "maybe'query" (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQuery) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'query
           (\ x__ y__ -> x__ {_QueryWorkflowRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryWorkflowRequest "queryRejectCondition" Proto.Temporal.Api.Enums.V1.Query.QueryRejectCondition where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowRequest'queryRejectCondition
           (\ x__ y__
              -> x__ {_QueryWorkflowRequest'queryRejectCondition = y__}))
        Prelude.id
instance Data.ProtoLens.Message QueryWorkflowRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.QueryWorkflowRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4QueryWorkflowRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2:\n\
      \\ENQquery\CAN\ETX \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQquery\DC2a\n\
      \\SYNquery_reject_condition\CAN\EOT \SOH(\SO2+.temporal.api.enums.v1.QueryRejectConditionR\DC4queryRejectCondition"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Query.V1.Message.WorkflowQuery)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'query")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowRequest
        queryRejectCondition__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_reject_condition"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Query.QueryRejectCondition)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"queryRejectCondition")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, query__field_descriptor),
           (Data.ProtoLens.Tag 4, queryRejectCondition__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _QueryWorkflowRequest'_unknownFields
        (\ x__ y__ -> x__ {_QueryWorkflowRequest'_unknownFields = y__})
  defMessage
    = QueryWorkflowRequest'_constructor
        {_QueryWorkflowRequest'namespace = Data.ProtoLens.fieldDefault,
         _QueryWorkflowRequest'execution = Prelude.Nothing,
         _QueryWorkflowRequest'query = Prelude.Nothing,
         _QueryWorkflowRequest'queryRejectCondition = Data.ProtoLens.fieldDefault,
         _QueryWorkflowRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          QueryWorkflowRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser QueryWorkflowRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "query_reject_condition"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"queryRejectCondition") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueryWorkflowRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'query") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"queryRejectCondition") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                                  Prelude.fromEnum _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData QueryWorkflowRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_QueryWorkflowRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_QueryWorkflowRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_QueryWorkflowRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_QueryWorkflowRequest'query x__)
                      (Control.DeepSeq.deepseq
                         (_QueryWorkflowRequest'queryRejectCondition x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queryResult' @:: Lens' QueryWorkflowResponse Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'queryResult' @:: Lens' QueryWorkflowResponse (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queryRejected' @:: Lens' QueryWorkflowResponse Proto.Temporal.Api.Query.V1.Message.QueryRejected@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'queryRejected' @:: Lens' QueryWorkflowResponse (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.QueryRejected)@ -}
data QueryWorkflowResponse
  = QueryWorkflowResponse'_constructor {_QueryWorkflowResponse'queryResult :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                        _QueryWorkflowResponse'queryRejected :: !(Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.QueryRejected),
                                        _QueryWorkflowResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show QueryWorkflowResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField QueryWorkflowResponse "queryResult" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowResponse'queryResult
           (\ x__ y__ -> x__ {_QueryWorkflowResponse'queryResult = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField QueryWorkflowResponse "maybe'queryResult" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowResponse'queryResult
           (\ x__ y__ -> x__ {_QueryWorkflowResponse'queryResult = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryWorkflowResponse "queryRejected" Proto.Temporal.Api.Query.V1.Message.QueryRejected where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowResponse'queryRejected
           (\ x__ y__ -> x__ {_QueryWorkflowResponse'queryRejected = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField QueryWorkflowResponse "maybe'queryRejected" (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.QueryRejected) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryWorkflowResponse'queryRejected
           (\ x__ y__ -> x__ {_QueryWorkflowResponse'queryRejected = y__}))
        Prelude.id
instance Data.ProtoLens.Message QueryWorkflowResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.QueryWorkflowResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKQueryWorkflowResponse\DC2C\n\
      \\fquery_result\CAN\SOH \SOH(\v2 .temporal.api.common.v1.PayloadsR\vqueryResult\DC2K\n\
      \\SOquery_rejected\CAN\STX \SOH(\v2$.temporal.api.query.v1.QueryRejectedR\rqueryRejected"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        queryResult__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_result"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'queryResult")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowResponse
        queryRejected__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_rejected"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Query.V1.Message.QueryRejected)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'queryRejected")) ::
              Data.ProtoLens.FieldDescriptor QueryWorkflowResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, queryResult__field_descriptor),
           (Data.ProtoLens.Tag 2, queryRejected__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _QueryWorkflowResponse'_unknownFields
        (\ x__ y__ -> x__ {_QueryWorkflowResponse'_unknownFields = y__})
  defMessage
    = QueryWorkflowResponse'_constructor
        {_QueryWorkflowResponse'queryResult = Prelude.Nothing,
         _QueryWorkflowResponse'queryRejected = Prelude.Nothing,
         _QueryWorkflowResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          QueryWorkflowResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser QueryWorkflowResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query_result"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"queryResult") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query_rejected"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"queryRejected") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueryWorkflowResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'queryResult") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'queryRejected") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData QueryWorkflowResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_QueryWorkflowResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_QueryWorkflowResponse'queryResult x__)
                (Control.DeepSeq.deepseq
                   (_QueryWorkflowResponse'queryRejected x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityId' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.details' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'details' @:: Lens' RecordActivityTaskHeartbeatByIdRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RecordActivityTaskHeartbeatByIdRequest Data.Text.Text@ -}
data RecordActivityTaskHeartbeatByIdRequest
  = RecordActivityTaskHeartbeatByIdRequest'_constructor {_RecordActivityTaskHeartbeatByIdRequest'namespace :: !Data.Text.Text,
                                                         _RecordActivityTaskHeartbeatByIdRequest'workflowId :: !Data.Text.Text,
                                                         _RecordActivityTaskHeartbeatByIdRequest'runId :: !Data.Text.Text,
                                                         _RecordActivityTaskHeartbeatByIdRequest'activityId :: !Data.Text.Text,
                                                         _RecordActivityTaskHeartbeatByIdRequest'details :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                         _RecordActivityTaskHeartbeatByIdRequest'identity :: !Data.Text.Text,
                                                         _RecordActivityTaskHeartbeatByIdRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RecordActivityTaskHeartbeatByIdRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'namespace
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'workflowId
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'runId
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "activityId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'activityId
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'activityId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "details" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'details
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'details = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "maybe'details" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'details
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'details = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdRequest'identity
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatByIdRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message RecordActivityTaskHeartbeatByIdRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatByIdRequest"
  packedMessageDescriptor _
    = "\n\
      \&RecordActivityTaskHeartbeatByIdRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2\NAK\n\
      \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
      \\vactivity_id\CAN\EOT \SOH(\tR\n\
      \activityId\DC2:\n\
      \\adetails\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
      \\bidentity\CAN\ACK \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
        activityId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityId")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
        details__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'details")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, runId__field_descriptor),
           (Data.ProtoLens.Tag 4, activityId__field_descriptor),
           (Data.ProtoLens.Tag 5, details__field_descriptor),
           (Data.ProtoLens.Tag 6, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RecordActivityTaskHeartbeatByIdRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_RecordActivityTaskHeartbeatByIdRequest'_unknownFields = y__})
  defMessage
    = RecordActivityTaskHeartbeatByIdRequest'_constructor
        {_RecordActivityTaskHeartbeatByIdRequest'namespace = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdRequest'workflowId = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdRequest'runId = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdRequest'activityId = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdRequest'details = Prelude.Nothing,
         _RecordActivityTaskHeartbeatByIdRequest'identity = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RecordActivityTaskHeartbeatByIdRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RecordActivityTaskHeartbeatByIdRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "activity_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"activityId") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "details"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"details") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RecordActivityTaskHeartbeatByIdRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"activityId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'details") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData RecordActivityTaskHeartbeatByIdRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RecordActivityTaskHeartbeatByIdRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RecordActivityTaskHeartbeatByIdRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RecordActivityTaskHeartbeatByIdRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_RecordActivityTaskHeartbeatByIdRequest'runId x__)
                      (Control.DeepSeq.deepseq
                         (_RecordActivityTaskHeartbeatByIdRequest'activityId x__)
                         (Control.DeepSeq.deepseq
                            (_RecordActivityTaskHeartbeatByIdRequest'details x__)
                            (Control.DeepSeq.deepseq
                               (_RecordActivityTaskHeartbeatByIdRequest'identity x__) ()))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cancelRequested' @:: Lens' RecordActivityTaskHeartbeatByIdResponse Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityPaused' @:: Lens' RecordActivityTaskHeartbeatByIdResponse Prelude.Bool@ -}
data RecordActivityTaskHeartbeatByIdResponse
  = RecordActivityTaskHeartbeatByIdResponse'_constructor {_RecordActivityTaskHeartbeatByIdResponse'cancelRequested :: !Prelude.Bool,
                                                          _RecordActivityTaskHeartbeatByIdResponse'activityPaused :: !Prelude.Bool,
                                                          _RecordActivityTaskHeartbeatByIdResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RecordActivityTaskHeartbeatByIdResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdResponse "cancelRequested" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdResponse'cancelRequested
           (\ x__ y__
              -> x__
                   {_RecordActivityTaskHeartbeatByIdResponse'cancelRequested = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatByIdResponse "activityPaused" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatByIdResponse'activityPaused
           (\ x__ y__
              -> x__
                   {_RecordActivityTaskHeartbeatByIdResponse'activityPaused = y__}))
        Prelude.id
instance Data.ProtoLens.Message RecordActivityTaskHeartbeatByIdResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatByIdResponse"
  packedMessageDescriptor _
    = "\n\
      \'RecordActivityTaskHeartbeatByIdResponse\DC2)\n\
      \\DLEcancel_requested\CAN\SOH \SOH(\bR\SIcancelRequested\DC2'\n\
      \\SIactivity_paused\CAN\STX \SOH(\bR\SOactivityPaused"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        cancelRequested__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cancel_requested"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"cancelRequested")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdResponse
        activityPaused__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_paused"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityPaused")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatByIdResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, cancelRequested__field_descriptor),
           (Data.ProtoLens.Tag 2, activityPaused__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RecordActivityTaskHeartbeatByIdResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RecordActivityTaskHeartbeatByIdResponse'_unknownFields = y__})
  defMessage
    = RecordActivityTaskHeartbeatByIdResponse'_constructor
        {_RecordActivityTaskHeartbeatByIdResponse'cancelRequested = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdResponse'activityPaused = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatByIdResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RecordActivityTaskHeartbeatByIdResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RecordActivityTaskHeartbeatByIdResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "cancel_requested"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"cancelRequested") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "activity_paused"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityPaused") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RecordActivityTaskHeartbeatByIdResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"cancelRequested") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"activityPaused") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RecordActivityTaskHeartbeatByIdResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RecordActivityTaskHeartbeatByIdResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RecordActivityTaskHeartbeatByIdResponse'cancelRequested x__)
                (Control.DeepSeq.deepseq
                   (_RecordActivityTaskHeartbeatByIdResponse'activityPaused x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RecordActivityTaskHeartbeatRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.details' @:: Lens' RecordActivityTaskHeartbeatRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'details' @:: Lens' RecordActivityTaskHeartbeatRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RecordActivityTaskHeartbeatRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RecordActivityTaskHeartbeatRequest Data.Text.Text@ -}
data RecordActivityTaskHeartbeatRequest
  = RecordActivityTaskHeartbeatRequest'_constructor {_RecordActivityTaskHeartbeatRequest'taskToken :: !Data.ByteString.ByteString,
                                                     _RecordActivityTaskHeartbeatRequest'details :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                     _RecordActivityTaskHeartbeatRequest'identity :: !Data.Text.Text,
                                                     _RecordActivityTaskHeartbeatRequest'namespace :: !Data.Text.Text,
                                                     _RecordActivityTaskHeartbeatRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RecordActivityTaskHeartbeatRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatRequest'taskToken
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatRequest "details" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatRequest'details
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatRequest'details = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatRequest "maybe'details" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatRequest'details
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatRequest'details = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatRequest'identity
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatRequest'namespace
           (\ x__ y__
              -> x__ {_RecordActivityTaskHeartbeatRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Message RecordActivityTaskHeartbeatRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatRequest"
  packedMessageDescriptor _
    = "\n\
      \\"RecordActivityTaskHeartbeatRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
      \\adetails\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
      \\tnamespace\CAN\EOT \SOH(\tR\tnamespace"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatRequest
        details__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'details")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, details__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, namespace__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RecordActivityTaskHeartbeatRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RecordActivityTaskHeartbeatRequest'_unknownFields = y__})
  defMessage
    = RecordActivityTaskHeartbeatRequest'_constructor
        {_RecordActivityTaskHeartbeatRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatRequest'details = Prelude.Nothing,
         _RecordActivityTaskHeartbeatRequest'identity = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatRequest'namespace = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RecordActivityTaskHeartbeatRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RecordActivityTaskHeartbeatRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "details"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"details") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RecordActivityTaskHeartbeatRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'details") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData RecordActivityTaskHeartbeatRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RecordActivityTaskHeartbeatRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RecordActivityTaskHeartbeatRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RecordActivityTaskHeartbeatRequest'details x__)
                   (Control.DeepSeq.deepseq
                      (_RecordActivityTaskHeartbeatRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RecordActivityTaskHeartbeatRequest'namespace x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cancelRequested' @:: Lens' RecordActivityTaskHeartbeatResponse Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityPaused' @:: Lens' RecordActivityTaskHeartbeatResponse Prelude.Bool@ -}
data RecordActivityTaskHeartbeatResponse
  = RecordActivityTaskHeartbeatResponse'_constructor {_RecordActivityTaskHeartbeatResponse'cancelRequested :: !Prelude.Bool,
                                                      _RecordActivityTaskHeartbeatResponse'activityPaused :: !Prelude.Bool,
                                                      _RecordActivityTaskHeartbeatResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RecordActivityTaskHeartbeatResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatResponse "cancelRequested" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatResponse'cancelRequested
           (\ x__ y__
              -> x__
                   {_RecordActivityTaskHeartbeatResponse'cancelRequested = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RecordActivityTaskHeartbeatResponse "activityPaused" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RecordActivityTaskHeartbeatResponse'activityPaused
           (\ x__ y__
              -> x__
                   {_RecordActivityTaskHeartbeatResponse'activityPaused = y__}))
        Prelude.id
instance Data.ProtoLens.Message RecordActivityTaskHeartbeatResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatResponse"
  packedMessageDescriptor _
    = "\n\
      \#RecordActivityTaskHeartbeatResponse\DC2)\n\
      \\DLEcancel_requested\CAN\SOH \SOH(\bR\SIcancelRequested\DC2'\n\
      \\SIactivity_paused\CAN\STX \SOH(\bR\SOactivityPaused"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        cancelRequested__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cancel_requested"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"cancelRequested")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatResponse
        activityPaused__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_paused"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityPaused")) ::
              Data.ProtoLens.FieldDescriptor RecordActivityTaskHeartbeatResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, cancelRequested__field_descriptor),
           (Data.ProtoLens.Tag 2, activityPaused__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RecordActivityTaskHeartbeatResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RecordActivityTaskHeartbeatResponse'_unknownFields = y__})
  defMessage
    = RecordActivityTaskHeartbeatResponse'_constructor
        {_RecordActivityTaskHeartbeatResponse'cancelRequested = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatResponse'activityPaused = Data.ProtoLens.fieldDefault,
         _RecordActivityTaskHeartbeatResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RecordActivityTaskHeartbeatResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RecordActivityTaskHeartbeatResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "cancel_requested"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"cancelRequested") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "activity_paused"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityPaused") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RecordActivityTaskHeartbeatResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"cancelRequested") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"activityPaused") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RecordActivityTaskHeartbeatResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RecordActivityTaskHeartbeatResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RecordActivityTaskHeartbeatResponse'cancelRequested x__)
                (Control.DeepSeq.deepseq
                   (_RecordActivityTaskHeartbeatResponse'activityPaused x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.description' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ownerEmail' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionRetentionPeriod' @:: Lens' RegisterNamespaceRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionRetentionPeriod' @:: Lens' RegisterNamespaceRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.clusters' @:: Lens' RegisterNamespaceRequest [Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'clusters' @:: Lens' RegisterNamespaceRequest (Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activeClusterName' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.data'' @:: Lens' RegisterNamespaceRequest (Data.Map.Map Data.Text.Text Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.securityToken' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.isGlobalNamespace' @:: Lens' RegisterNamespaceRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.historyArchivalState' @:: Lens' RegisterNamespaceRequest Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.historyArchivalUri' @:: Lens' RegisterNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.visibilityArchivalState' @:: Lens' RegisterNamespaceRequest Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.visibilityArchivalUri' @:: Lens' RegisterNamespaceRequest Data.Text.Text@ -}
data RegisterNamespaceRequest
  = RegisterNamespaceRequest'_constructor {_RegisterNamespaceRequest'namespace :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'description :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'ownerEmail :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'workflowExecutionRetentionPeriod :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                           _RegisterNamespaceRequest'clusters :: !(Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig),
                                           _RegisterNamespaceRequest'activeClusterName :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'data' :: !(Data.Map.Map Data.Text.Text Data.Text.Text),
                                           _RegisterNamespaceRequest'securityToken :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'isGlobalNamespace :: !Prelude.Bool,
                                           _RegisterNamespaceRequest'historyArchivalState :: !Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState,
                                           _RegisterNamespaceRequest'historyArchivalUri :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'visibilityArchivalState :: !Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState,
                                           _RegisterNamespaceRequest'visibilityArchivalUri :: !Data.Text.Text,
                                           _RegisterNamespaceRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RegisterNamespaceRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'namespace
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "description" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'description
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'description = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "ownerEmail" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'ownerEmail
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'ownerEmail = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "workflowExecutionRetentionPeriod" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'workflowExecutionRetentionPeriod
           (\ x__ y__
              -> x__
                   {_RegisterNamespaceRequest'workflowExecutionRetentionPeriod = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "maybe'workflowExecutionRetentionPeriod" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'workflowExecutionRetentionPeriod
           (\ x__ y__
              -> x__
                   {_RegisterNamespaceRequest'workflowExecutionRetentionPeriod = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "clusters" [Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'clusters
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'clusters = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "vec'clusters" (Data.Vector.Vector Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'clusters
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'clusters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "activeClusterName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'activeClusterName
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'activeClusterName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "data'" (Data.Map.Map Data.Text.Text Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'data'
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'data' = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "securityToken" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'securityToken
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'securityToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "isGlobalNamespace" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'isGlobalNamespace
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'isGlobalNamespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "historyArchivalState" Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'historyArchivalState
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'historyArchivalState = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "historyArchivalUri" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'historyArchivalUri
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'historyArchivalUri = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "visibilityArchivalState" Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'visibilityArchivalState
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'visibilityArchivalState = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest "visibilityArchivalUri" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'visibilityArchivalUri
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'visibilityArchivalUri = y__}))
        Prelude.id
instance Data.ProtoLens.Message RegisterNamespaceRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RegisterNamespaceRequest"
  packedMessageDescriptor _
    = "\n\
      \\CANRegisterNamespaceRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2 \n\
      \\vdescription\CAN\STX \SOH(\tR\vdescription\DC2\US\n\
      \\vowner_email\CAN\ETX \SOH(\tR\n\
      \ownerEmail\DC2h\n\
      \#workflow_execution_retention_period\CAN\EOT \SOH(\v2\EM.google.protobuf.DurationR workflowExecutionRetentionPeriod\DC2Q\n\
      \\bclusters\CAN\ENQ \ETX(\v25.temporal.api.replication.v1.ClusterReplicationConfigR\bclusters\DC2.\n\
      \\DC3active_cluster_name\CAN\ACK \SOH(\tR\DC1activeClusterName\DC2W\n\
      \\EOTdata\CAN\a \ETX(\v2C.temporal.api.workflowservice.v1.RegisterNamespaceRequest.DataEntryR\EOTdata\DC2%\n\
      \\SOsecurity_token\CAN\b \SOH(\tR\rsecurityToken\DC2.\n\
      \\DC3is_global_namespace\CAN\t \SOH(\bR\DC1isGlobalNamespace\DC2Z\n\
      \\SYNhistory_archival_state\CAN\n\
      \ \SOH(\SO2$.temporal.api.enums.v1.ArchivalStateR\DC4historyArchivalState\DC20\n\
      \\DC4history_archival_uri\CAN\v \SOH(\tR\DC2historyArchivalUri\DC2`\n\
      \\EMvisibility_archival_state\CAN\f \SOH(\SO2$.temporal.api.enums.v1.ArchivalStateR\ETBvisibilityArchivalState\DC26\n\
      \\ETBvisibility_archival_uri\CAN\r \SOH(\tR\NAKvisibilityArchivalUri\SUB7\n\
      \\tDataEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
      \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        description__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "description"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"description")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        ownerEmail__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "owner_email"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ownerEmail")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        workflowExecutionRetentionPeriod__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_retention_period"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'workflowExecutionRetentionPeriod")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        clusters__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "clusters"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"clusters")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        activeClusterName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "active_cluster_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activeClusterName")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        data'__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "data"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RegisterNamespaceRequest'DataEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"data'")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        securityToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "security_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"securityToken")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        isGlobalNamespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "is_global_namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"isGlobalNamespace")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        historyArchivalState__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history_archival_state"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"historyArchivalState")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        historyArchivalUri__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "history_archival_uri"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"historyArchivalUri")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        visibilityArchivalState__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "visibility_archival_state"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Namespace.ArchivalState)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"visibilityArchivalState")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
        visibilityArchivalUri__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "visibility_archival_uri"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"visibilityArchivalUri")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, description__field_descriptor),
           (Data.ProtoLens.Tag 3, ownerEmail__field_descriptor),
           (Data.ProtoLens.Tag 4, 
            workflowExecutionRetentionPeriod__field_descriptor),
           (Data.ProtoLens.Tag 5, clusters__field_descriptor),
           (Data.ProtoLens.Tag 6, activeClusterName__field_descriptor),
           (Data.ProtoLens.Tag 7, data'__field_descriptor),
           (Data.ProtoLens.Tag 8, securityToken__field_descriptor),
           (Data.ProtoLens.Tag 9, isGlobalNamespace__field_descriptor),
           (Data.ProtoLens.Tag 10, historyArchivalState__field_descriptor),
           (Data.ProtoLens.Tag 11, historyArchivalUri__field_descriptor),
           (Data.ProtoLens.Tag 12, visibilityArchivalState__field_descriptor),
           (Data.ProtoLens.Tag 13, visibilityArchivalUri__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RegisterNamespaceRequest'_unknownFields
        (\ x__ y__ -> x__ {_RegisterNamespaceRequest'_unknownFields = y__})
  defMessage
    = RegisterNamespaceRequest'_constructor
        {_RegisterNamespaceRequest'namespace = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'description = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'ownerEmail = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'workflowExecutionRetentionPeriod = Prelude.Nothing,
         _RegisterNamespaceRequest'clusters = Data.Vector.Generic.empty,
         _RegisterNamespaceRequest'activeClusterName = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'data' = Data.Map.empty,
         _RegisterNamespaceRequest'securityToken = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'isGlobalNamespace = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'historyArchivalState = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'historyArchivalUri = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'visibilityArchivalState = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'visibilityArchivalUri = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RegisterNamespaceRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Replication.V1.Message.ClusterReplicationConfig
             -> Data.ProtoLens.Encoding.Bytes.Parser RegisterNamespaceRequest
        loop x mutable'clusters
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'clusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'clusters)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'clusters") frozen'clusters x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'clusters
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "description"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"description") y x)
                                  mutable'clusters
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "owner_email"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"ownerEmail") y x)
                                  mutable'clusters
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_retention_period"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field
                                        @"workflowExecutionRetentionPeriod")
                                     y x)
                                  mutable'clusters
                        42
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "clusters"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'clusters y)
                                loop x v
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "active_cluster_name"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activeClusterName") y x)
                                  mutable'clusters
                        58
                          -> do !(entry :: RegisterNamespaceRequest'DataEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                    (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                        Data.ProtoLens.Encoding.Bytes.isolate
                                                                                          (Prelude.fromIntegral
                                                                                             len)
                                                                                          Data.ProtoLens.parseMessage)
                                                                                    "data"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"data'")
                                        (\ !t -> Data.Map.insert key value t) x)
                                     mutable'clusters)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "security_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"securityToken") y x)
                                  mutable'clusters
                        72
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "is_global_namespace"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"isGlobalNamespace") y x)
                                  mutable'clusters
                        80
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "history_archival_state"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"historyArchivalState") y x)
                                  mutable'clusters
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "history_archival_uri"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"historyArchivalUri") y x)
                                  mutable'clusters
                        96
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "visibility_archival_state"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"visibilityArchivalState") y x)
                                  mutable'clusters
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "visibility_archival_uri"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"visibilityArchivalUri") y x)
                                  mutable'clusters
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'clusters
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'clusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'clusters)
          "RegisterNamespaceRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"description") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"ownerEmail") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field
                                @"maybe'workflowExecutionRetentionPeriod")
                             _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                            (\ _v
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                    ((Prelude..)
                                       (\ bs
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                  (Prelude.fromIntegral
                                                     (Data.ByteString.length bs)))
                                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                       Data.ProtoLens.encodeMessage _v))
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"vec'clusters") _x))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"activeClusterName") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (Data.Monoid.mconcat
                                  (Prelude.map
                                     (\ _v
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                             ((Prelude..)
                                                (\ bs
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           (Prelude.fromIntegral
                                                              (Data.ByteString.length bs)))
                                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                                Data.ProtoLens.encodeMessage
                                                (Lens.Family2.set
                                                   (Data.ProtoLens.Field.field @"key")
                                                   (Prelude.fst _v)
                                                   (Lens.Family2.set
                                                      (Data.ProtoLens.Field.field @"value")
                                                      (Prelude.snd _v)
                                                      (Data.ProtoLens.defMessage ::
                                                         RegisterNamespaceRequest'DataEntry)))))
                                     (Data.Map.toList
                                        (Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"data'") _x))))
                               ((Data.Monoid.<>)
                                  (let
                                     _v
                                       = Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"securityToken") _x
                                   in
                                     if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                         Data.Monoid.mempty
                                     else
                                         (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                           ((Prelude..)
                                              (\ bs
                                                 -> (Data.Monoid.<>)
                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                         (Prelude.fromIntegral
                                                            (Data.ByteString.length bs)))
                                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                              Data.Text.Encoding.encodeUtf8 _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"isGlobalNamespace") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 72)
                                              ((Prelude..)
                                                 Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (\ b -> if b then 1 else 0) _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field
                                                    @"historyArchivalState")
                                                 _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 80)
                                                 ((Prelude..)
                                                    ((Prelude..)
                                                       Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       Prelude.fromIntegral)
                                                    Prelude.fromEnum _v))
                                        ((Data.Monoid.<>)
                                           (let
                                              _v
                                                = Lens.Family2.view
                                                    (Data.ProtoLens.Field.field
                                                       @"historyArchivalUri")
                                                    _x
                                            in
                                              if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                  Data.Monoid.mempty
                                              else
                                                  (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                    ((Prelude..)
                                                       (\ bs
                                                          -> (Data.Monoid.<>)
                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                  (Prelude.fromIntegral
                                                                     (Data.ByteString.length bs)))
                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                  bs))
                                                       Data.Text.Encoding.encodeUtf8 _v))
                                           ((Data.Monoid.<>)
                                              (let
                                                 _v
                                                   = Lens.Family2.view
                                                       (Data.ProtoLens.Field.field
                                                          @"visibilityArchivalState")
                                                       _x
                                               in
                                                 if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                     Data.Monoid.mempty
                                                 else
                                                     (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 96)
                                                       ((Prelude..)
                                                          ((Prelude..)
                                                             Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             Prelude.fromIntegral)
                                                          Prelude.fromEnum _v))
                                              ((Data.Monoid.<>)
                                                 (let
                                                    _v
                                                      = Lens.Family2.view
                                                          (Data.ProtoLens.Field.field
                                                             @"visibilityArchivalUri")
                                                          _x
                                                  in
                                                    if (Prelude.==)
                                                         _v Data.ProtoLens.fieldDefault then
                                                        Data.Monoid.mempty
                                                    else
                                                        (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             106)
                                                          ((Prelude..)
                                                             (\ bs
                                                                -> (Data.Monoid.<>)
                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                        (Prelude.fromIntegral
                                                                           (Data.ByteString.length
                                                                              bs)))
                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                        bs))
                                                             Data.Text.Encoding.encodeUtf8 _v))
                                                 (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                    (Lens.Family2.view
                                                       Data.ProtoLens.unknownFields _x))))))))))))))
instance Control.DeepSeq.NFData RegisterNamespaceRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RegisterNamespaceRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RegisterNamespaceRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RegisterNamespaceRequest'description x__)
                   (Control.DeepSeq.deepseq
                      (_RegisterNamespaceRequest'ownerEmail x__)
                      (Control.DeepSeq.deepseq
                         (_RegisterNamespaceRequest'workflowExecutionRetentionPeriod x__)
                         (Control.DeepSeq.deepseq
                            (_RegisterNamespaceRequest'clusters x__)
                            (Control.DeepSeq.deepseq
                               (_RegisterNamespaceRequest'activeClusterName x__)
                               (Control.DeepSeq.deepseq
                                  (_RegisterNamespaceRequest'data' x__)
                                  (Control.DeepSeq.deepseq
                                     (_RegisterNamespaceRequest'securityToken x__)
                                     (Control.DeepSeq.deepseq
                                        (_RegisterNamespaceRequest'isGlobalNamespace x__)
                                        (Control.DeepSeq.deepseq
                                           (_RegisterNamespaceRequest'historyArchivalState x__)
                                           (Control.DeepSeq.deepseq
                                              (_RegisterNamespaceRequest'historyArchivalUri x__)
                                              (Control.DeepSeq.deepseq
                                                 (_RegisterNamespaceRequest'visibilityArchivalState
                                                    x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_RegisterNamespaceRequest'visibilityArchivalUri
                                                       x__)
                                                    ())))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' RegisterNamespaceRequest'DataEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' RegisterNamespaceRequest'DataEntry Data.Text.Text@ -}
data RegisterNamespaceRequest'DataEntry
  = RegisterNamespaceRequest'DataEntry'_constructor {_RegisterNamespaceRequest'DataEntry'key :: !Data.Text.Text,
                                                     _RegisterNamespaceRequest'DataEntry'value :: !Data.Text.Text,
                                                     _RegisterNamespaceRequest'DataEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RegisterNamespaceRequest'DataEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest'DataEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'DataEntry'key
           (\ x__ y__ -> x__ {_RegisterNamespaceRequest'DataEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RegisterNamespaceRequest'DataEntry "value" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RegisterNamespaceRequest'DataEntry'value
           (\ x__ y__
              -> x__ {_RegisterNamespaceRequest'DataEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message RegisterNamespaceRequest'DataEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RegisterNamespaceRequest.DataEntry"
  packedMessageDescriptor _
    = "\n\
      \\tDataEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
      \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest'DataEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"value")) ::
              Data.ProtoLens.FieldDescriptor RegisterNamespaceRequest'DataEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RegisterNamespaceRequest'DataEntry'_unknownFields
        (\ x__ y__
           -> x__ {_RegisterNamespaceRequest'DataEntry'_unknownFields = y__})
  defMessage
    = RegisterNamespaceRequest'DataEntry'_constructor
        {_RegisterNamespaceRequest'DataEntry'key = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'DataEntry'value = Data.ProtoLens.fieldDefault,
         _RegisterNamespaceRequest'DataEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RegisterNamespaceRequest'DataEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser RegisterNamespaceRequest'DataEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DataEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"value") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RegisterNamespaceRequest'DataEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RegisterNamespaceRequest'DataEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RegisterNamespaceRequest'DataEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_RegisterNamespaceRequest'DataEntry'value x__) ()))
{- | Fields :
      -}
data RegisterNamespaceResponse
  = RegisterNamespaceResponse'_constructor {_RegisterNamespaceResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RegisterNamespaceResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RegisterNamespaceResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RegisterNamespaceResponse"
  packedMessageDescriptor _
    = "\n\
      \\EMRegisterNamespaceResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RegisterNamespaceResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RegisterNamespaceResponse'_unknownFields = y__})
  defMessage
    = RegisterNamespaceResponse'_constructor
        {_RegisterNamespaceResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RegisterNamespaceResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RegisterNamespaceResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RegisterNamespaceResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RegisterNamespaceResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RegisterNamespaceResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RequestCancelWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' RequestCancelWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' RequestCancelWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RequestCancelWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' RequestCancelWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.firstExecutionRunId' @:: Lens' RequestCancelWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' RequestCancelWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.links' @:: Lens' RequestCancelWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Link]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'links' @:: Lens' RequestCancelWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link)@ -}
data RequestCancelWorkflowExecutionRequest
  = RequestCancelWorkflowExecutionRequest'_constructor {_RequestCancelWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                        _RequestCancelWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                        _RequestCancelWorkflowExecutionRequest'identity :: !Data.Text.Text,
                                                        _RequestCancelWorkflowExecutionRequest'requestId :: !Data.Text.Text,
                                                        _RequestCancelWorkflowExecutionRequest'firstExecutionRunId :: !Data.Text.Text,
                                                        _RequestCancelWorkflowExecutionRequest'reason :: !Data.Text.Text,
                                                        _RequestCancelWorkflowExecutionRequest'links :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link),
                                                        _RequestCancelWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RequestCancelWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_RequestCancelWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_RequestCancelWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'identity
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'requestId
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "firstExecutionRunId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'firstExecutionRunId
           (\ x__ y__
              -> x__
                   {_RequestCancelWorkflowExecutionRequest'firstExecutionRunId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'reason
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "links" [Proto.Temporal.Api.Common.V1.Message.Link] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'links = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RequestCancelWorkflowExecutionRequest "vec'links" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RequestCancelWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_RequestCancelWorkflowExecutionRequest'links = y__}))
        Prelude.id
instance Data.ProtoLens.Message RequestCancelWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RequestCancelWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \%RequestCancelWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\EOT \SOH(\tR\trequestId\DC23\n\
      \\SYNfirst_execution_run_id\CAN\ENQ \SOH(\tR\DC3firstExecutionRunId\DC2\SYN\n\
      \\ACKreason\CAN\ACK \SOH(\tR\ACKreason\DC22\n\
      \\ENQlinks\CAN\a \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        firstExecutionRunId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "first_execution_run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"firstExecutionRunId")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
        links__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "links"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Link)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"links")) ::
              Data.ProtoLens.FieldDescriptor RequestCancelWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, requestId__field_descriptor),
           (Data.ProtoLens.Tag 5, firstExecutionRunId__field_descriptor),
           (Data.ProtoLens.Tag 6, reason__field_descriptor),
           (Data.ProtoLens.Tag 7, links__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RequestCancelWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_RequestCancelWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = RequestCancelWorkflowExecutionRequest'_constructor
        {_RequestCancelWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _RequestCancelWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _RequestCancelWorkflowExecutionRequest'identity = Data.ProtoLens.fieldDefault,
         _RequestCancelWorkflowExecutionRequest'requestId = Data.ProtoLens.fieldDefault,
         _RequestCancelWorkflowExecutionRequest'firstExecutionRunId = Data.ProtoLens.fieldDefault,
         _RequestCancelWorkflowExecutionRequest'reason = Data.ProtoLens.fieldDefault,
         _RequestCancelWorkflowExecutionRequest'links = Data.Vector.Generic.empty,
         _RequestCancelWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RequestCancelWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Link
             -> Data.ProtoLens.Encoding.Bytes.Parser RequestCancelWorkflowExecutionRequest
        loop x mutable'links
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'links)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'links") frozen'links x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'links
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                                  mutable'links
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'links
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                                  mutable'links
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "first_execution_run_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"firstExecutionRunId") y x)
                                  mutable'links
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                                  mutable'links
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "links"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'links y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'links
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'links)
          "RequestCancelWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"firstExecutionRunId") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.ProtoLens.encodeMessage _v))
                                  (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'links") _x))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData RequestCancelWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RequestCancelWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RequestCancelWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RequestCancelWorkflowExecutionRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_RequestCancelWorkflowExecutionRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RequestCancelWorkflowExecutionRequest'requestId x__)
                         (Control.DeepSeq.deepseq
                            (_RequestCancelWorkflowExecutionRequest'firstExecutionRunId x__)
                            (Control.DeepSeq.deepseq
                               (_RequestCancelWorkflowExecutionRequest'reason x__)
                               (Control.DeepSeq.deepseq
                                  (_RequestCancelWorkflowExecutionRequest'links x__) ())))))))
{- | Fields :
      -}
data RequestCancelWorkflowExecutionResponse
  = RequestCancelWorkflowExecutionResponse'_constructor {_RequestCancelWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RequestCancelWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RequestCancelWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RequestCancelWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \&RequestCancelWorkflowExecutionResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RequestCancelWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RequestCancelWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = RequestCancelWorkflowExecutionResponse'_constructor
        {_RequestCancelWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RequestCancelWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RequestCancelWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RequestCancelWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RequestCancelWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RequestCancelWorkflowExecutionResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ResetActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' ResetActivityRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' ResetActivityRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' ResetActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetHeartbeat' @:: Lens' ResetActivityRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.keepPaused' @:: Lens' ResetActivityRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jitter' @:: Lens' ResetActivityRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'jitter' @:: Lens' ResetActivityRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activity' @:: Lens' ResetActivityRequest (Prelude.Maybe ResetActivityRequest'Activity)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'id' @:: Lens' ResetActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' ResetActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'type'' @:: Lens' ResetActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.type'' @:: Lens' ResetActivityRequest Data.Text.Text@ -}
data ResetActivityRequest
  = ResetActivityRequest'_constructor {_ResetActivityRequest'namespace :: !Data.Text.Text,
                                       _ResetActivityRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                       _ResetActivityRequest'identity :: !Data.Text.Text,
                                       _ResetActivityRequest'resetHeartbeat :: !Prelude.Bool,
                                       _ResetActivityRequest'keepPaused :: !Prelude.Bool,
                                       _ResetActivityRequest'jitter :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                       _ResetActivityRequest'activity :: !(Prelude.Maybe ResetActivityRequest'Activity),
                                       _ResetActivityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetActivityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data ResetActivityRequest'Activity
  = ResetActivityRequest'Id !Data.Text.Text |
    ResetActivityRequest'Type !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField ResetActivityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'namespace
           (\ x__ y__ -> x__ {_ResetActivityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'execution
           (\ x__ y__ -> x__ {_ResetActivityRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ResetActivityRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'execution
           (\ x__ y__ -> x__ {_ResetActivityRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'identity
           (\ x__ y__ -> x__ {_ResetActivityRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "resetHeartbeat" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'resetHeartbeat
           (\ x__ y__ -> x__ {_ResetActivityRequest'resetHeartbeat = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "keepPaused" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'keepPaused
           (\ x__ y__ -> x__ {_ResetActivityRequest'keepPaused = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "jitter" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'jitter
           (\ x__ y__ -> x__ {_ResetActivityRequest'jitter = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ResetActivityRequest "maybe'jitter" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'jitter
           (\ x__ y__ -> x__ {_ResetActivityRequest'jitter = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "maybe'activity" (Prelude.Maybe ResetActivityRequest'Activity) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'activity
           (\ x__ y__ -> x__ {_ResetActivityRequest'activity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetActivityRequest "maybe'id" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'activity
           (\ x__ y__ -> x__ {_ResetActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ResetActivityRequest'Id x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap ResetActivityRequest'Id y__))
instance Data.ProtoLens.Field.HasField ResetActivityRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'activity
           (\ x__ y__ -> x__ {_ResetActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ResetActivityRequest'Id x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap ResetActivityRequest'Id y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField ResetActivityRequest "maybe'type'" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'activity
           (\ x__ y__ -> x__ {_ResetActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (ResetActivityRequest'Type x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap ResetActivityRequest'Type y__))
instance Data.ProtoLens.Field.HasField ResetActivityRequest "type'" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetActivityRequest'activity
           (\ x__ y__ -> x__ {_ResetActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (ResetActivityRequest'Type x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap ResetActivityRequest'Type y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message ResetActivityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetActivityRequest"
  packedMessageDescriptor _
    = "\n\
      \\DC4ResetActivityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
      \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
      \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2'\n\
      \\SIreset_heartbeat\CAN\ACK \SOH(\bR\SOresetHeartbeat\DC2\US\n\
      \\vkeep_paused\CAN\a \SOH(\bR\n\
      \keepPaused\DC21\n\
      \\ACKjitter\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\ACKjitterB\n\
      \\n\
      \\bactivity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        resetHeartbeat__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_heartbeat"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"resetHeartbeat")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        keepPaused__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "keep_paused"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"keepPaused")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        jitter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "jitter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'jitter")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'id")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
        type'__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'type'")) ::
              Data.ProtoLens.FieldDescriptor ResetActivityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, resetHeartbeat__field_descriptor),
           (Data.ProtoLens.Tag 7, keepPaused__field_descriptor),
           (Data.ProtoLens.Tag 8, jitter__field_descriptor),
           (Data.ProtoLens.Tag 4, id__field_descriptor),
           (Data.ProtoLens.Tag 5, type'__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetActivityRequest'_unknownFields
        (\ x__ y__ -> x__ {_ResetActivityRequest'_unknownFields = y__})
  defMessage
    = ResetActivityRequest'_constructor
        {_ResetActivityRequest'namespace = Data.ProtoLens.fieldDefault,
         _ResetActivityRequest'execution = Prelude.Nothing,
         _ResetActivityRequest'identity = Data.ProtoLens.fieldDefault,
         _ResetActivityRequest'resetHeartbeat = Data.ProtoLens.fieldDefault,
         _ResetActivityRequest'keepPaused = Data.ProtoLens.fieldDefault,
         _ResetActivityRequest'jitter = Prelude.Nothing,
         _ResetActivityRequest'activity = Prelude.Nothing,
         _ResetActivityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetActivityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ResetActivityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "reset_heartbeat"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetHeartbeat") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "keep_paused"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"keepPaused") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "jitter"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jitter") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "type"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"type'") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ResetActivityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"resetHeartbeat") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0) _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view (Data.ProtoLens.Field.field @"keepPaused") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'jitter") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'activity") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just (ResetActivityRequest'Id v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8 v)
                                  (Prelude.Just (ResetActivityRequest'Type v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8 v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData ResetActivityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetActivityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ResetActivityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ResetActivityRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_ResetActivityRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_ResetActivityRequest'resetHeartbeat x__)
                         (Control.DeepSeq.deepseq
                            (_ResetActivityRequest'keepPaused x__)
                            (Control.DeepSeq.deepseq
                               (_ResetActivityRequest'jitter x__)
                               (Control.DeepSeq.deepseq
                                  (_ResetActivityRequest'activity x__) ())))))))
instance Control.DeepSeq.NFData ResetActivityRequest'Activity where
  rnf (ResetActivityRequest'Id x__) = Control.DeepSeq.rnf x__
  rnf (ResetActivityRequest'Type x__) = Control.DeepSeq.rnf x__
_ResetActivityRequest'Id ::
  Data.ProtoLens.Prism.Prism' ResetActivityRequest'Activity Data.Text.Text
_ResetActivityRequest'Id
  = Data.ProtoLens.Prism.prism'
      ResetActivityRequest'Id
      (\ p__
         -> case p__ of
              (ResetActivityRequest'Id p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_ResetActivityRequest'Type ::
  Data.ProtoLens.Prism.Prism' ResetActivityRequest'Activity Data.Text.Text
_ResetActivityRequest'Type
  = Data.ProtoLens.Prism.prism'
      ResetActivityRequest'Type
      (\ p__
         -> case p__ of
              (ResetActivityRequest'Type p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data ResetActivityResponse
  = ResetActivityResponse'_constructor {_ResetActivityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetActivityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message ResetActivityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetActivityResponse"
  packedMessageDescriptor _
    = "\n\
      \\NAKResetActivityResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetActivityResponse'_unknownFields
        (\ x__ y__ -> x__ {_ResetActivityResponse'_unknownFields = y__})
  defMessage
    = ResetActivityResponse'_constructor
        {_ResetActivityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetActivityResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser ResetActivityResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ResetActivityResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData ResetActivityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetActivityResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ResetStickyTaskQueueRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' ResetStickyTaskQueueRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' ResetStickyTaskQueueRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@ -}
data ResetStickyTaskQueueRequest
  = ResetStickyTaskQueueRequest'_constructor {_ResetStickyTaskQueueRequest'namespace :: !Data.Text.Text,
                                              _ResetStickyTaskQueueRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                              _ResetStickyTaskQueueRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetStickyTaskQueueRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ResetStickyTaskQueueRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetStickyTaskQueueRequest'namespace
           (\ x__ y__ -> x__ {_ResetStickyTaskQueueRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetStickyTaskQueueRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetStickyTaskQueueRequest'execution
           (\ x__ y__ -> x__ {_ResetStickyTaskQueueRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ResetStickyTaskQueueRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetStickyTaskQueueRequest'execution
           (\ x__ y__ -> x__ {_ResetStickyTaskQueueRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Message ResetStickyTaskQueueRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetStickyTaskQueueRequest"
  packedMessageDescriptor _
    = "\n\
      \\ESCResetStickyTaskQueueRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ResetStickyTaskQueueRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor ResetStickyTaskQueueRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetStickyTaskQueueRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ResetStickyTaskQueueRequest'_unknownFields = y__})
  defMessage
    = ResetStickyTaskQueueRequest'_constructor
        {_ResetStickyTaskQueueRequest'namespace = Data.ProtoLens.fieldDefault,
         _ResetStickyTaskQueueRequest'execution = Prelude.Nothing,
         _ResetStickyTaskQueueRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetStickyTaskQueueRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ResetStickyTaskQueueRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ResetStickyTaskQueueRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ResetStickyTaskQueueRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetStickyTaskQueueRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ResetStickyTaskQueueRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ResetStickyTaskQueueRequest'execution x__) ()))
{- | Fields :
      -}
data ResetStickyTaskQueueResponse
  = ResetStickyTaskQueueResponse'_constructor {_ResetStickyTaskQueueResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetStickyTaskQueueResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message ResetStickyTaskQueueResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetStickyTaskQueueResponse"
  packedMessageDescriptor _
    = "\n\
      \\FSResetStickyTaskQueueResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetStickyTaskQueueResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ResetStickyTaskQueueResponse'_unknownFields = y__})
  defMessage
    = ResetStickyTaskQueueResponse'_constructor
        {_ResetStickyTaskQueueResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetStickyTaskQueueResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser ResetStickyTaskQueueResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ResetStickyTaskQueueResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData ResetStickyTaskQueueResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetStickyTaskQueueResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ResetWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' ResetWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' ResetWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' ResetWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowTaskFinishEventId' @:: Lens' ResetWorkflowExecutionRequest Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' ResetWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetReapplyType' @:: Lens' ResetWorkflowExecutionRequest Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetReapplyExcludeTypes' @:: Lens' ResetWorkflowExecutionRequest [Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'resetReapplyExcludeTypes' @:: Lens' ResetWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType)@ -}
data ResetWorkflowExecutionRequest
  = ResetWorkflowExecutionRequest'_constructor {_ResetWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                _ResetWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                _ResetWorkflowExecutionRequest'reason :: !Data.Text.Text,
                                                _ResetWorkflowExecutionRequest'workflowTaskFinishEventId :: !Data.Int.Int64,
                                                _ResetWorkflowExecutionRequest'requestId :: !Data.Text.Text,
                                                _ResetWorkflowExecutionRequest'resetReapplyType :: !Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyType,
                                                _ResetWorkflowExecutionRequest'resetReapplyExcludeTypes :: !(Data.Vector.Vector Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType),
                                                _ResetWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_ResetWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_ResetWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_ResetWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'reason
           (\ x__ y__ -> x__ {_ResetWorkflowExecutionRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "workflowTaskFinishEventId" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'workflowTaskFinishEventId
           (\ x__ y__
              -> x__
                   {_ResetWorkflowExecutionRequest'workflowTaskFinishEventId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'requestId
           (\ x__ y__
              -> x__ {_ResetWorkflowExecutionRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "resetReapplyType" Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'resetReapplyType
           (\ x__ y__
              -> x__ {_ResetWorkflowExecutionRequest'resetReapplyType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "resetReapplyExcludeTypes" [Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'resetReapplyExcludeTypes
           (\ x__ y__
              -> x__
                   {_ResetWorkflowExecutionRequest'resetReapplyExcludeTypes = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionRequest "vec'resetReapplyExcludeTypes" (Data.Vector.Vector Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionRequest'resetReapplyExcludeTypes
           (\ x__ y__
              -> x__
                   {_ResetWorkflowExecutionRequest'resetReapplyExcludeTypes = y__}))
        Prelude.id
instance Data.ProtoLens.Message ResetWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSResetWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SYN\n\
      \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2@\n\
      \\GSworkflow_task_finish_event_id\CAN\EOT \SOH(\ETXR\EMworkflowTaskFinishEventId\DC2\GS\n\
      \\n\
      \request_id\CAN\ENQ \SOH(\tR\trequestId\DC2U\n\
      \\DC2reset_reapply_type\CAN\ACK \SOH(\SO2'.temporal.api.enums.v1.ResetReapplyTypeR\DLEresetReapplyType\DC2m\n\
      \\ESCreset_reapply_exclude_types\CAN\a \ETX(\SO2..temporal.api.enums.v1.ResetReapplyExcludeTypeR\CANresetReapplyExcludeTypes"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        workflowTaskFinishEventId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_task_finish_event_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowTaskFinishEventId")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        resetReapplyType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_reapply_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"resetReapplyType")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
        resetReapplyExcludeTypes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_reapply_exclude_types"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Packed
                 (Data.ProtoLens.Field.field @"resetReapplyExcludeTypes")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, reason__field_descriptor),
           (Data.ProtoLens.Tag 4, 
            workflowTaskFinishEventId__field_descriptor),
           (Data.ProtoLens.Tag 5, requestId__field_descriptor),
           (Data.ProtoLens.Tag 6, resetReapplyType__field_descriptor),
           (Data.ProtoLens.Tag 7, resetReapplyExcludeTypes__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ResetWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = ResetWorkflowExecutionRequest'_constructor
        {_ResetWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _ResetWorkflowExecutionRequest'reason = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionRequest'workflowTaskFinishEventId = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionRequest'requestId = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionRequest'resetReapplyType = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionRequest'resetReapplyExcludeTypes = Data.Vector.Generic.empty,
         _ResetWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Enums.V1.Reset.ResetReapplyExcludeType
             -> Data.ProtoLens.Encoding.Bytes.Parser ResetWorkflowExecutionRequest
        loop x mutable'resetReapplyExcludeTypes
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'resetReapplyExcludeTypes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                              mutable'resetReapplyExcludeTypes)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'resetReapplyExcludeTypes")
                              frozen'resetReapplyExcludeTypes x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'resetReapplyExcludeTypes
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                                  mutable'resetReapplyExcludeTypes
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                                  mutable'resetReapplyExcludeTypes
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "workflow_task_finish_event_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowTaskFinishEventId") y x)
                                  mutable'resetReapplyExcludeTypes
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                                  mutable'resetReapplyExcludeTypes
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "reset_reapply_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetReapplyType") y x)
                                  mutable'resetReapplyExcludeTypes
                        56
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (Prelude.fmap
                                           Prelude.toEnum
                                           (Prelude.fmap
                                              Prelude.fromIntegral
                                              Data.ProtoLens.Encoding.Bytes.getVarInt))
                                        "reset_reapply_exclude_types"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'resetReapplyExcludeTypes y)
                                loop x v
                        58
                          -> do y <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                        Data.ProtoLens.Encoding.Bytes.isolate
                                          (Prelude.fromIntegral len)
                                          ((let
                                              ploop qs
                                                = do packedEnd <- Data.ProtoLens.Encoding.Bytes.atEnd
                                                     if packedEnd then
                                                         Prelude.return qs
                                                     else
                                                         do !q <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                    (Prelude.fmap
                                                                       Prelude.toEnum
                                                                       (Prelude.fmap
                                                                          Prelude.fromIntegral
                                                                          Data.ProtoLens.Encoding.Bytes.getVarInt))
                                                                    "reset_reapply_exclude_types"
                                                            qs' <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                                     (Data.ProtoLens.Encoding.Growing.append
                                                                        qs q)
                                                            ploop qs'
                                            in ploop)
                                             mutable'resetReapplyExcludeTypes)
                                loop x y
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'resetReapplyExcludeTypes
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'resetReapplyExcludeTypes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'resetReapplyExcludeTypes)
          "ResetWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"workflowTaskFinishEventId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"resetReapplyType") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           Prelude.fromIntegral)
                                        Prelude.fromEnum _v))
                            ((Data.Monoid.<>)
                               (let
                                  p = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"vec'resetReapplyExcludeTypes")
                                        _x
                                in
                                  if Data.Vector.Generic.null p then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           (Data.ProtoLens.Encoding.Bytes.runBuilder
                                              (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                 ((Prelude..)
                                                    ((Prelude..)
                                                       Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       Prelude.fromIntegral)
                                                    Prelude.fromEnum)
                                                 p))))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData ResetWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ResetWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ResetWorkflowExecutionRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_ResetWorkflowExecutionRequest'reason x__)
                      (Control.DeepSeq.deepseq
                         (_ResetWorkflowExecutionRequest'workflowTaskFinishEventId x__)
                         (Control.DeepSeq.deepseq
                            (_ResetWorkflowExecutionRequest'requestId x__)
                            (Control.DeepSeq.deepseq
                               (_ResetWorkflowExecutionRequest'resetReapplyType x__)
                               (Control.DeepSeq.deepseq
                                  (_ResetWorkflowExecutionRequest'resetReapplyExcludeTypes x__)
                                  ())))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' ResetWorkflowExecutionResponse Data.Text.Text@ -}
data ResetWorkflowExecutionResponse
  = ResetWorkflowExecutionResponse'_constructor {_ResetWorkflowExecutionResponse'runId :: !Data.Text.Text,
                                                 _ResetWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ResetWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ResetWorkflowExecutionResponse "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ResetWorkflowExecutionResponse'runId
           (\ x__ y__ -> x__ {_ResetWorkflowExecutionResponse'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Message ResetWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ResetWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSResetWorkflowExecutionResponse\DC2\NAK\n\
      \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor ResetWorkflowExecutionResponse
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, runId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ResetWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ResetWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = ResetWorkflowExecutionResponse'_constructor
        {_ResetWorkflowExecutionResponse'runId = Data.ProtoLens.fieldDefault,
         _ResetWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ResetWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser ResetWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ResetWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData ResetWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ResetWorkflowExecutionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ResetWorkflowExecutionResponse'runId x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskCanceledByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' RespondActivityTaskCanceledByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' RespondActivityTaskCanceledByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityId' @:: Lens' RespondActivityTaskCanceledByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.details' @:: Lens' RespondActivityTaskCanceledByIdRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'details' @:: Lens' RespondActivityTaskCanceledByIdRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskCanceledByIdRequest Data.Text.Text@ -}
data RespondActivityTaskCanceledByIdRequest
  = RespondActivityTaskCanceledByIdRequest'_constructor {_RespondActivityTaskCanceledByIdRequest'namespace :: !Data.Text.Text,
                                                         _RespondActivityTaskCanceledByIdRequest'workflowId :: !Data.Text.Text,
                                                         _RespondActivityTaskCanceledByIdRequest'runId :: !Data.Text.Text,
                                                         _RespondActivityTaskCanceledByIdRequest'activityId :: !Data.Text.Text,
                                                         _RespondActivityTaskCanceledByIdRequest'details :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                         _RespondActivityTaskCanceledByIdRequest'identity :: !Data.Text.Text,
                                                         _RespondActivityTaskCanceledByIdRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCanceledByIdRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'workflowId
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'runId
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "activityId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'activityId
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'activityId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "details" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'details
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'details = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "maybe'details" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'details
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'details = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledByIdRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledByIdRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledByIdRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskCanceledByIdRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCanceledByIdRequest"
  packedMessageDescriptor _
    = "\n\
      \&RespondActivityTaskCanceledByIdRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2\NAK\n\
      \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
      \\vactivity_id\CAN\EOT \SOH(\tR\n\
      \activityId\DC2:\n\
      \\adetails\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
      \\bidentity\CAN\ACK \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
        activityId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
        details__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'details")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledByIdRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, runId__field_descriptor),
           (Data.ProtoLens.Tag 4, activityId__field_descriptor),
           (Data.ProtoLens.Tag 5, details__field_descriptor),
           (Data.ProtoLens.Tag 6, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCanceledByIdRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskCanceledByIdRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCanceledByIdRequest'_constructor
        {_RespondActivityTaskCanceledByIdRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledByIdRequest'workflowId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledByIdRequest'runId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledByIdRequest'activityId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledByIdRequest'details = Prelude.Nothing,
         _RespondActivityTaskCanceledByIdRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledByIdRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCanceledByIdRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCanceledByIdRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "activity_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"activityId") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "details"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"details") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCanceledByIdRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"activityId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'details") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData RespondActivityTaskCanceledByIdRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCanceledByIdRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskCanceledByIdRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskCanceledByIdRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskCanceledByIdRequest'runId x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskCanceledByIdRequest'activityId x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskCanceledByIdRequest'details x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskCanceledByIdRequest'identity x__) ()))))))
{- | Fields :
      -}
data RespondActivityTaskCanceledByIdResponse
  = RespondActivityTaskCanceledByIdResponse'_constructor {_RespondActivityTaskCanceledByIdResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCanceledByIdResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondActivityTaskCanceledByIdResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCanceledByIdResponse"
  packedMessageDescriptor _
    = "\n\
      \'RespondActivityTaskCanceledByIdResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCanceledByIdResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskCanceledByIdResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCanceledByIdResponse'_constructor
        {_RespondActivityTaskCanceledByIdResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCanceledByIdResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCanceledByIdResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCanceledByIdResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondActivityTaskCanceledByIdResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCanceledByIdResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondActivityTaskCanceledRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.details' @:: Lens' RespondActivityTaskCanceledRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'details' @:: Lens' RespondActivityTaskCanceledRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskCanceledRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskCanceledRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersion' @:: Lens' RespondActivityTaskCanceledRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersion' @:: Lens' RespondActivityTaskCanceledRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' RespondActivityTaskCanceledRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' RespondActivityTaskCanceledRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' RespondActivityTaskCanceledRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' RespondActivityTaskCanceledRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data RespondActivityTaskCanceledRequest
  = RespondActivityTaskCanceledRequest'_constructor {_RespondActivityTaskCanceledRequest'taskToken :: !Data.ByteString.ByteString,
                                                     _RespondActivityTaskCanceledRequest'details :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                     _RespondActivityTaskCanceledRequest'identity :: !Data.Text.Text,
                                                     _RespondActivityTaskCanceledRequest'namespace :: !Data.Text.Text,
                                                     _RespondActivityTaskCanceledRequest'workerVersion :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp),
                                                     _RespondActivityTaskCanceledRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                     _RespondActivityTaskCanceledRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                                     _RespondActivityTaskCanceledRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCanceledRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "details" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'details
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'details = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "maybe'details" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'details
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'details = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "workerVersion" Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'workerVersion = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "maybe'workerVersion" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'workerVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskCanceledRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCanceledRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCanceledRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCanceledRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCanceledRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskCanceledRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCanceledRequest"
  packedMessageDescriptor _
    = "\n\
      \\"RespondActivityTaskCanceledRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
      \\adetails\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
      \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2U\n\
      \\SOworker_version\CAN\ENQ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
      \\n\
      \deployment\CAN\ACK \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deploymentB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\a \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        details__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'details")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        workerVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersion")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCanceledRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, details__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, namespace__field_descriptor),
           (Data.ProtoLens.Tag 5, workerVersion__field_descriptor),
           (Data.ProtoLens.Tag 6, deployment__field_descriptor),
           (Data.ProtoLens.Tag 7, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCanceledRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondActivityTaskCanceledRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCanceledRequest'_constructor
        {_RespondActivityTaskCanceledRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledRequest'details = Prelude.Nothing,
         _RespondActivityTaskCanceledRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCanceledRequest'workerVersion = Prelude.Nothing,
         _RespondActivityTaskCanceledRequest'deployment = Prelude.Nothing,
         _RespondActivityTaskCanceledRequest'deploymentOptions = Prelude.Nothing,
         _RespondActivityTaskCanceledRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCanceledRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCanceledRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "details"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"details") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersion") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCanceledRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'details") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'workerVersion") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'deployment") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData RespondActivityTaskCanceledRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCanceledRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskCanceledRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskCanceledRequest'details x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskCanceledRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskCanceledRequest'namespace x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskCanceledRequest'workerVersion x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskCanceledRequest'deployment x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondActivityTaskCanceledRequest'deploymentOptions x__)
                                  ())))))))
{- | Fields :
      -}
data RespondActivityTaskCanceledResponse
  = RespondActivityTaskCanceledResponse'_constructor {_RespondActivityTaskCanceledResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCanceledResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondActivityTaskCanceledResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCanceledResponse"
  packedMessageDescriptor _
    = "\n\
      \#RespondActivityTaskCanceledResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCanceledResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondActivityTaskCanceledResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCanceledResponse'_constructor
        {_RespondActivityTaskCanceledResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCanceledResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCanceledResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCanceledResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondActivityTaskCanceledResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCanceledResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskCompletedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' RespondActivityTaskCompletedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' RespondActivityTaskCompletedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityId' @:: Lens' RespondActivityTaskCompletedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.result' @:: Lens' RespondActivityTaskCompletedByIdRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'result' @:: Lens' RespondActivityTaskCompletedByIdRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskCompletedByIdRequest Data.Text.Text@ -}
data RespondActivityTaskCompletedByIdRequest
  = RespondActivityTaskCompletedByIdRequest'_constructor {_RespondActivityTaskCompletedByIdRequest'namespace :: !Data.Text.Text,
                                                          _RespondActivityTaskCompletedByIdRequest'workflowId :: !Data.Text.Text,
                                                          _RespondActivityTaskCompletedByIdRequest'runId :: !Data.Text.Text,
                                                          _RespondActivityTaskCompletedByIdRequest'activityId :: !Data.Text.Text,
                                                          _RespondActivityTaskCompletedByIdRequest'result :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                          _RespondActivityTaskCompletedByIdRequest'identity :: !Data.Text.Text,
                                                          _RespondActivityTaskCompletedByIdRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCompletedByIdRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedByIdRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'workflowId
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCompletedByIdRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'runId
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedByIdRequest'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "activityId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'activityId
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCompletedByIdRequest'activityId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "result" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'result
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedByIdRequest'result = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "maybe'result" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'result
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedByIdRequest'result = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedByIdRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedByIdRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedByIdRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskCompletedByIdRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCompletedByIdRequest"
  packedMessageDescriptor _
    = "\n\
      \'RespondActivityTaskCompletedByIdRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2\NAK\n\
      \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
      \\vactivity_id\CAN\EOT \SOH(\tR\n\
      \activityId\DC28\n\
      \\ACKresult\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ACKresult\DC2\SUB\n\
      \\bidentity\CAN\ACK \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
        activityId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
        result__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "result"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'result")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedByIdRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, runId__field_descriptor),
           (Data.ProtoLens.Tag 4, activityId__field_descriptor),
           (Data.ProtoLens.Tag 5, result__field_descriptor),
           (Data.ProtoLens.Tag 6, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCompletedByIdRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskCompletedByIdRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCompletedByIdRequest'_constructor
        {_RespondActivityTaskCompletedByIdRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedByIdRequest'workflowId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedByIdRequest'runId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedByIdRequest'activityId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedByIdRequest'result = Prelude.Nothing,
         _RespondActivityTaskCompletedByIdRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedByIdRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCompletedByIdRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCompletedByIdRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "activity_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"activityId") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "result"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"result") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCompletedByIdRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"activityId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'result") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData RespondActivityTaskCompletedByIdRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCompletedByIdRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskCompletedByIdRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskCompletedByIdRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskCompletedByIdRequest'runId x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskCompletedByIdRequest'activityId x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskCompletedByIdRequest'result x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskCompletedByIdRequest'identity x__) ()))))))
{- | Fields :
      -}
data RespondActivityTaskCompletedByIdResponse
  = RespondActivityTaskCompletedByIdResponse'_constructor {_RespondActivityTaskCompletedByIdResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCompletedByIdResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondActivityTaskCompletedByIdResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCompletedByIdResponse"
  packedMessageDescriptor _
    = "\n\
      \(RespondActivityTaskCompletedByIdResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCompletedByIdResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskCompletedByIdResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCompletedByIdResponse'_constructor
        {_RespondActivityTaskCompletedByIdResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCompletedByIdResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCompletedByIdResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCompletedByIdResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondActivityTaskCompletedByIdResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCompletedByIdResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondActivityTaskCompletedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.result' @:: Lens' RespondActivityTaskCompletedRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'result' @:: Lens' RespondActivityTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersion' @:: Lens' RespondActivityTaskCompletedRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersion' @:: Lens' RespondActivityTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' RespondActivityTaskCompletedRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' RespondActivityTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' RespondActivityTaskCompletedRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' RespondActivityTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data RespondActivityTaskCompletedRequest
  = RespondActivityTaskCompletedRequest'_constructor {_RespondActivityTaskCompletedRequest'taskToken :: !Data.ByteString.ByteString,
                                                      _RespondActivityTaskCompletedRequest'result :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                      _RespondActivityTaskCompletedRequest'identity :: !Data.Text.Text,
                                                      _RespondActivityTaskCompletedRequest'namespace :: !Data.Text.Text,
                                                      _RespondActivityTaskCompletedRequest'workerVersion :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp),
                                                      _RespondActivityTaskCompletedRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                      _RespondActivityTaskCompletedRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                                      _RespondActivityTaskCompletedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCompletedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "result" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'result
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'result = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "maybe'result" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'result
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'result = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "workerVersion" Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'workerVersion = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "maybe'workerVersion" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'workerVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskCompletedRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCompletedRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskCompletedRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskCompletedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskCompletedRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskCompletedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCompletedRequest"
  packedMessageDescriptor _
    = "\n\
      \#RespondActivityTaskCompletedRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC28\n\
      \\ACKresult\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\ACKresult\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
      \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2U\n\
      \\SOworker_version\CAN\ENQ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
      \\n\
      \deployment\CAN\ACK \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deploymentB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\a \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        result__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "result"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'result")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        workerVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersion")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskCompletedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, result__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, namespace__field_descriptor),
           (Data.ProtoLens.Tag 5, workerVersion__field_descriptor),
           (Data.ProtoLens.Tag 6, deployment__field_descriptor),
           (Data.ProtoLens.Tag 7, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCompletedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondActivityTaskCompletedRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCompletedRequest'_constructor
        {_RespondActivityTaskCompletedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedRequest'result = Prelude.Nothing,
         _RespondActivityTaskCompletedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskCompletedRequest'workerVersion = Prelude.Nothing,
         _RespondActivityTaskCompletedRequest'deployment = Prelude.Nothing,
         _RespondActivityTaskCompletedRequest'deploymentOptions = Prelude.Nothing,
         _RespondActivityTaskCompletedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCompletedRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCompletedRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "result"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"result") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersion") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCompletedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'result") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'workerVersion") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'deployment") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData RespondActivityTaskCompletedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCompletedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskCompletedRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskCompletedRequest'result x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskCompletedRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskCompletedRequest'namespace x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskCompletedRequest'workerVersion x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskCompletedRequest'deployment x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondActivityTaskCompletedRequest'deploymentOptions x__)
                                  ())))))))
{- | Fields :
      -}
data RespondActivityTaskCompletedResponse
  = RespondActivityTaskCompletedResponse'_constructor {_RespondActivityTaskCompletedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskCompletedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondActivityTaskCompletedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskCompletedResponse"
  packedMessageDescriptor _
    = "\n\
      \$RespondActivityTaskCompletedResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskCompletedResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskCompletedResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskCompletedResponse'_constructor
        {_RespondActivityTaskCompletedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskCompletedResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskCompletedResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskCompletedResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondActivityTaskCompletedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskCompletedResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskFailedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' RespondActivityTaskFailedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' RespondActivityTaskFailedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityId' @:: Lens' RespondActivityTaskFailedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failure' @:: Lens' RespondActivityTaskFailedByIdRequest Proto.Temporal.Api.Failure.V1.Message.Failure@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'failure' @:: Lens' RespondActivityTaskFailedByIdRequest (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskFailedByIdRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.lastHeartbeatDetails' @:: Lens' RespondActivityTaskFailedByIdRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'lastHeartbeatDetails' @:: Lens' RespondActivityTaskFailedByIdRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@ -}
data RespondActivityTaskFailedByIdRequest
  = RespondActivityTaskFailedByIdRequest'_constructor {_RespondActivityTaskFailedByIdRequest'namespace :: !Data.Text.Text,
                                                       _RespondActivityTaskFailedByIdRequest'workflowId :: !Data.Text.Text,
                                                       _RespondActivityTaskFailedByIdRequest'runId :: !Data.Text.Text,
                                                       _RespondActivityTaskFailedByIdRequest'activityId :: !Data.Text.Text,
                                                       _RespondActivityTaskFailedByIdRequest'failure :: !(Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                       _RespondActivityTaskFailedByIdRequest'identity :: !Data.Text.Text,
                                                       _RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                       _RespondActivityTaskFailedByIdRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskFailedByIdRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'workflowId
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'runId
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "activityId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'activityId
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'activityId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "failure" Proto.Temporal.Api.Failure.V1.Message.Failure where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'failure
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'failure = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "maybe'failure" (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'failure
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'failure = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "lastHeartbeatDetails" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdRequest "maybe'lastHeartbeatDetails" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskFailedByIdRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskFailedByIdRequest"
  packedMessageDescriptor _
    = "\n\
      \$RespondActivityTaskFailedByIdRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2\NAK\n\
      \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
      \\vactivity_id\CAN\EOT \SOH(\tR\n\
      \activityId\DC2:\n\
      \\afailure\CAN\ENQ \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
      \\bidentity\CAN\ACK \SOH(\tR\bidentity\DC2V\n\
      \\SYNlast_heartbeat_details\CAN\a \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastHeartbeatDetails"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        activityId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"activityId")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        failure__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failure"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'failure")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
        lastHeartbeatDetails__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "last_heartbeat_details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'lastHeartbeatDetails")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, runId__field_descriptor),
           (Data.ProtoLens.Tag 4, activityId__field_descriptor),
           (Data.ProtoLens.Tag 5, failure__field_descriptor),
           (Data.ProtoLens.Tag 6, identity__field_descriptor),
           (Data.ProtoLens.Tag 7, lastHeartbeatDetails__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskFailedByIdRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskFailedByIdRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskFailedByIdRequest'_constructor
        {_RespondActivityTaskFailedByIdRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedByIdRequest'workflowId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedByIdRequest'runId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedByIdRequest'activityId = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedByIdRequest'failure = Prelude.Nothing,
         _RespondActivityTaskFailedByIdRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails = Prelude.Nothing,
         _RespondActivityTaskFailedByIdRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskFailedByIdRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskFailedByIdRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "activity_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"activityId") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "failure"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"failure") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "last_heartbeat_details"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"lastHeartbeatDetails") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskFailedByIdRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"activityId") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'failure") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'lastHeartbeatDetails") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData RespondActivityTaskFailedByIdRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskFailedByIdRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskFailedByIdRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskFailedByIdRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskFailedByIdRequest'runId x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskFailedByIdRequest'activityId x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskFailedByIdRequest'failure x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskFailedByIdRequest'identity x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondActivityTaskFailedByIdRequest'lastHeartbeatDetails x__)
                                  ())))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failures' @:: Lens' RespondActivityTaskFailedByIdResponse [Proto.Temporal.Api.Failure.V1.Message.Failure]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'failures' @:: Lens' RespondActivityTaskFailedByIdResponse (Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure)@ -}
data RespondActivityTaskFailedByIdResponse
  = RespondActivityTaskFailedByIdResponse'_constructor {_RespondActivityTaskFailedByIdResponse'failures :: !(Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                        _RespondActivityTaskFailedByIdResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskFailedByIdResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdResponse "failures" [Proto.Temporal.Api.Failure.V1.Message.Failure] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdResponse'failures
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdResponse'failures = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedByIdResponse "vec'failures" (Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedByIdResponse'failures
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedByIdResponse'failures = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskFailedByIdResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskFailedByIdResponse"
  packedMessageDescriptor _
    = "\n\
      \%RespondActivityTaskFailedByIdResponse\DC2<\n\
      \\bfailures\CAN\SOH \ETX(\v2 .temporal.api.failure.v1.FailureR\bfailures"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        failures__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failures"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"failures")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedByIdResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, failures__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskFailedByIdResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondActivityTaskFailedByIdResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskFailedByIdResponse'_constructor
        {_RespondActivityTaskFailedByIdResponse'failures = Data.Vector.Generic.empty,
         _RespondActivityTaskFailedByIdResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskFailedByIdResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Failure.V1.Message.Failure
             -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskFailedByIdResponse
        loop x mutable'failures
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'failures <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'failures)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'failures") frozen'failures x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "failures"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'failures y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'failures
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'failures <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'failures)
          "RespondActivityTaskFailedByIdResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'failures") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RespondActivityTaskFailedByIdResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskFailedByIdResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskFailedByIdResponse'failures x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondActivityTaskFailedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failure' @:: Lens' RespondActivityTaskFailedRequest Proto.Temporal.Api.Failure.V1.Message.Failure@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'failure' @:: Lens' RespondActivityTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondActivityTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondActivityTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.lastHeartbeatDetails' @:: Lens' RespondActivityTaskFailedRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'lastHeartbeatDetails' @:: Lens' RespondActivityTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersion' @:: Lens' RespondActivityTaskFailedRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersion' @:: Lens' RespondActivityTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' RespondActivityTaskFailedRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' RespondActivityTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' RespondActivityTaskFailedRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' RespondActivityTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data RespondActivityTaskFailedRequest
  = RespondActivityTaskFailedRequest'_constructor {_RespondActivityTaskFailedRequest'taskToken :: !Data.ByteString.ByteString,
                                                   _RespondActivityTaskFailedRequest'failure :: !(Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                   _RespondActivityTaskFailedRequest'identity :: !Data.Text.Text,
                                                   _RespondActivityTaskFailedRequest'namespace :: !Data.Text.Text,
                                                   _RespondActivityTaskFailedRequest'lastHeartbeatDetails :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                   _RespondActivityTaskFailedRequest'workerVersion :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp),
                                                   _RespondActivityTaskFailedRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                   _RespondActivityTaskFailedRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                                   _RespondActivityTaskFailedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskFailedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "failure" Proto.Temporal.Api.Failure.V1.Message.Failure where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'failure
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'failure = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "maybe'failure" (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'failure
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'failure = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'identity
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "lastHeartbeatDetails" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'lastHeartbeatDetails
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedRequest'lastHeartbeatDetails = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "maybe'lastHeartbeatDetails" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'lastHeartbeatDetails
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedRequest'lastHeartbeatDetails = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "workerVersion" Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'workerVersion = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "maybe'workerVersion" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'workerVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondActivityTaskFailedRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskFailedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskFailedRequest"
  packedMessageDescriptor _
    = "\n\
      \ RespondActivityTaskFailedRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
      \\afailure\CAN\STX \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
      \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2V\n\
      \\SYNlast_heartbeat_details\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastHeartbeatDetails\DC2U\n\
      \\SOworker_version\CAN\ACK \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
      \\n\
      \deployment\CAN\a \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deploymentB\STX\CAN\SOH\DC2b\n\
      \\DC2deployment_options\CAN\b \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        failure__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failure"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'failure")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        lastHeartbeatDetails__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "last_heartbeat_details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'lastHeartbeatDetails")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        workerVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersion")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, failure__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, namespace__field_descriptor),
           (Data.ProtoLens.Tag 5, lastHeartbeatDetails__field_descriptor),
           (Data.ProtoLens.Tag 6, workerVersion__field_descriptor),
           (Data.ProtoLens.Tag 7, deployment__field_descriptor),
           (Data.ProtoLens.Tag 8, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskFailedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondActivityTaskFailedRequest'_unknownFields = y__})
  defMessage
    = RespondActivityTaskFailedRequest'_constructor
        {_RespondActivityTaskFailedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedRequest'failure = Prelude.Nothing,
         _RespondActivityTaskFailedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondActivityTaskFailedRequest'lastHeartbeatDetails = Prelude.Nothing,
         _RespondActivityTaskFailedRequest'workerVersion = Prelude.Nothing,
         _RespondActivityTaskFailedRequest'deployment = Prelude.Nothing,
         _RespondActivityTaskFailedRequest'deploymentOptions = Prelude.Nothing,
         _RespondActivityTaskFailedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskFailedRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskFailedRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "failure"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"failure") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "last_heartbeat_details"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"lastHeartbeatDetails") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersion") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondActivityTaskFailedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'failure") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'lastHeartbeatDetails") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'workerVersion") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'deployment") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'deploymentOptions") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                     (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))))
instance Control.DeepSeq.NFData RespondActivityTaskFailedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskFailedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskFailedRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondActivityTaskFailedRequest'failure x__)
                   (Control.DeepSeq.deepseq
                      (_RespondActivityTaskFailedRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RespondActivityTaskFailedRequest'namespace x__)
                         (Control.DeepSeq.deepseq
                            (_RespondActivityTaskFailedRequest'lastHeartbeatDetails x__)
                            (Control.DeepSeq.deepseq
                               (_RespondActivityTaskFailedRequest'workerVersion x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondActivityTaskFailedRequest'deployment x__)
                                  (Control.DeepSeq.deepseq
                                     (_RespondActivityTaskFailedRequest'deploymentOptions x__)
                                     ()))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failures' @:: Lens' RespondActivityTaskFailedResponse [Proto.Temporal.Api.Failure.V1.Message.Failure]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'failures' @:: Lens' RespondActivityTaskFailedResponse (Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure)@ -}
data RespondActivityTaskFailedResponse
  = RespondActivityTaskFailedResponse'_constructor {_RespondActivityTaskFailedResponse'failures :: !(Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                    _RespondActivityTaskFailedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondActivityTaskFailedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedResponse "failures" [Proto.Temporal.Api.Failure.V1.Message.Failure] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedResponse'failures
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedResponse'failures = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondActivityTaskFailedResponse "vec'failures" (Data.Vector.Vector Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondActivityTaskFailedResponse'failures
           (\ x__ y__
              -> x__ {_RespondActivityTaskFailedResponse'failures = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondActivityTaskFailedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondActivityTaskFailedResponse"
  packedMessageDescriptor _
    = "\n\
      \!RespondActivityTaskFailedResponse\DC2<\n\
      \\bfailures\CAN\SOH \ETX(\v2 .temporal.api.failure.v1.FailureR\bfailures"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        failures__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failures"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"failures")) ::
              Data.ProtoLens.FieldDescriptor RespondActivityTaskFailedResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, failures__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondActivityTaskFailedResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondActivityTaskFailedResponse'_unknownFields = y__})
  defMessage
    = RespondActivityTaskFailedResponse'_constructor
        {_RespondActivityTaskFailedResponse'failures = Data.Vector.Generic.empty,
         _RespondActivityTaskFailedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondActivityTaskFailedResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Failure.V1.Message.Failure
             -> Data.ProtoLens.Encoding.Bytes.Parser RespondActivityTaskFailedResponse
        loop x mutable'failures
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'failures <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'failures)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'failures") frozen'failures x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "failures"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'failures y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'failures
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'failures <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'failures)
          "RespondActivityTaskFailedResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'failures") _x))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RespondActivityTaskFailedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondActivityTaskFailedResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondActivityTaskFailedResponse'failures x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondNexusTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondNexusTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondNexusTaskCompletedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.response' @:: Lens' RespondNexusTaskCompletedRequest Proto.Temporal.Api.Nexus.V1.Message.Response@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'response' @:: Lens' RespondNexusTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Response)@ -}
data RespondNexusTaskCompletedRequest
  = RespondNexusTaskCompletedRequest'_constructor {_RespondNexusTaskCompletedRequest'namespace :: !Data.Text.Text,
                                                   _RespondNexusTaskCompletedRequest'identity :: !Data.Text.Text,
                                                   _RespondNexusTaskCompletedRequest'taskToken :: !Data.ByteString.ByteString,
                                                   _RespondNexusTaskCompletedRequest'response :: !(Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Response),
                                                   _RespondNexusTaskCompletedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondNexusTaskCompletedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondNexusTaskCompletedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskCompletedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondNexusTaskCompletedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskCompletedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskCompletedRequest'identity
           (\ x__ y__
              -> x__ {_RespondNexusTaskCompletedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskCompletedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskCompletedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondNexusTaskCompletedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskCompletedRequest "response" Proto.Temporal.Api.Nexus.V1.Message.Response where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskCompletedRequest'response
           (\ x__ y__
              -> x__ {_RespondNexusTaskCompletedRequest'response = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondNexusTaskCompletedRequest "maybe'response" (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.Response) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskCompletedRequest'response
           (\ x__ y__
              -> x__ {_RespondNexusTaskCompletedRequest'response = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondNexusTaskCompletedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondNexusTaskCompletedRequest"
  packedMessageDescriptor _
    = "\n\
      \ RespondNexusTaskCompletedRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
      \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \task_token\CAN\ETX \SOH(\fR\ttaskToken\DC2;\n\
      \\bresponse\CAN\EOT \SOH(\v2\US.temporal.api.nexus.v1.ResponseR\bresponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskCompletedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskCompletedRequest
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskCompletedRequest
        response__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Nexus.V1.Message.Response)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'response")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskCompletedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, identity__field_descriptor),
           (Data.ProtoLens.Tag 3, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 4, response__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondNexusTaskCompletedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondNexusTaskCompletedRequest'_unknownFields = y__})
  defMessage
    = RespondNexusTaskCompletedRequest'_constructor
        {_RespondNexusTaskCompletedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskCompletedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskCompletedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskCompletedRequest'response = Prelude.Nothing,
         _RespondNexusTaskCompletedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondNexusTaskCompletedRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondNexusTaskCompletedRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "response"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"response") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondNexusTaskCompletedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'response") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData RespondNexusTaskCompletedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondNexusTaskCompletedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondNexusTaskCompletedRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RespondNexusTaskCompletedRequest'identity x__)
                   (Control.DeepSeq.deepseq
                      (_RespondNexusTaskCompletedRequest'taskToken x__)
                      (Control.DeepSeq.deepseq
                         (_RespondNexusTaskCompletedRequest'response x__) ()))))
{- | Fields :
      -}
data RespondNexusTaskCompletedResponse
  = RespondNexusTaskCompletedResponse'_constructor {_RespondNexusTaskCompletedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondNexusTaskCompletedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondNexusTaskCompletedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondNexusTaskCompletedResponse"
  packedMessageDescriptor _
    = "\n\
      \!RespondNexusTaskCompletedResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondNexusTaskCompletedResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondNexusTaskCompletedResponse'_unknownFields = y__})
  defMessage
    = RespondNexusTaskCompletedResponse'_constructor
        {_RespondNexusTaskCompletedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondNexusTaskCompletedResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondNexusTaskCompletedResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondNexusTaskCompletedResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondNexusTaskCompletedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondNexusTaskCompletedResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondNexusTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondNexusTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondNexusTaskFailedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.error' @:: Lens' RespondNexusTaskFailedRequest Proto.Temporal.Api.Nexus.V1.Message.HandlerError@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'error' @:: Lens' RespondNexusTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.HandlerError)@ -}
data RespondNexusTaskFailedRequest
  = RespondNexusTaskFailedRequest'_constructor {_RespondNexusTaskFailedRequest'namespace :: !Data.Text.Text,
                                                _RespondNexusTaskFailedRequest'identity :: !Data.Text.Text,
                                                _RespondNexusTaskFailedRequest'taskToken :: !Data.ByteString.ByteString,
                                                _RespondNexusTaskFailedRequest'error :: !(Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.HandlerError),
                                                _RespondNexusTaskFailedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondNexusTaskFailedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondNexusTaskFailedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskFailedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondNexusTaskFailedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskFailedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskFailedRequest'identity
           (\ x__ y__ -> x__ {_RespondNexusTaskFailedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskFailedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskFailedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondNexusTaskFailedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondNexusTaskFailedRequest "error" Proto.Temporal.Api.Nexus.V1.Message.HandlerError where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskFailedRequest'error
           (\ x__ y__ -> x__ {_RespondNexusTaskFailedRequest'error = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondNexusTaskFailedRequest "maybe'error" (Prelude.Maybe Proto.Temporal.Api.Nexus.V1.Message.HandlerError) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondNexusTaskFailedRequest'error
           (\ x__ y__ -> x__ {_RespondNexusTaskFailedRequest'error = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondNexusTaskFailedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondNexusTaskFailedRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSRespondNexusTaskFailedRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
      \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \task_token\CAN\ETX \SOH(\fR\ttaskToken\DC29\n\
      \\ENQerror\CAN\EOT \SOH(\v2#.temporal.api.nexus.v1.HandlerErrorR\ENQerror"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskFailedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskFailedRequest
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskFailedRequest
        error__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "error"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Nexus.V1.Message.HandlerError)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'error")) ::
              Data.ProtoLens.FieldDescriptor RespondNexusTaskFailedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, identity__field_descriptor),
           (Data.ProtoLens.Tag 3, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 4, error__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondNexusTaskFailedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondNexusTaskFailedRequest'_unknownFields = y__})
  defMessage
    = RespondNexusTaskFailedRequest'_constructor
        {_RespondNexusTaskFailedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskFailedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskFailedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondNexusTaskFailedRequest'error = Prelude.Nothing,
         _RespondNexusTaskFailedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondNexusTaskFailedRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondNexusTaskFailedRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "error"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"error") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RespondNexusTaskFailedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'error") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData RespondNexusTaskFailedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondNexusTaskFailedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondNexusTaskFailedRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_RespondNexusTaskFailedRequest'identity x__)
                   (Control.DeepSeq.deepseq
                      (_RespondNexusTaskFailedRequest'taskToken x__)
                      (Control.DeepSeq.deepseq
                         (_RespondNexusTaskFailedRequest'error x__) ()))))
{- | Fields :
      -}
data RespondNexusTaskFailedResponse
  = RespondNexusTaskFailedResponse'_constructor {_RespondNexusTaskFailedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondNexusTaskFailedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondNexusTaskFailedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondNexusTaskFailedResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSRespondNexusTaskFailedResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondNexusTaskFailedResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondNexusTaskFailedResponse'_unknownFields = y__})
  defMessage
    = RespondNexusTaskFailedResponse'_constructor
        {_RespondNexusTaskFailedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondNexusTaskFailedResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondNexusTaskFailedResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondNexusTaskFailedResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondNexusTaskFailedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondNexusTaskFailedResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondQueryTaskCompletedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.completedType' @:: Lens' RespondQueryTaskCompletedRequest Proto.Temporal.Api.Enums.V1.Query.QueryResultType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queryResult' @:: Lens' RespondQueryTaskCompletedRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'queryResult' @:: Lens' RespondQueryTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.errorMessage' @:: Lens' RespondQueryTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondQueryTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failure' @:: Lens' RespondQueryTaskCompletedRequest Proto.Temporal.Api.Failure.V1.Message.Failure@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'failure' @:: Lens' RespondQueryTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure)@ -}
data RespondQueryTaskCompletedRequest
  = RespondQueryTaskCompletedRequest'_constructor {_RespondQueryTaskCompletedRequest'taskToken :: !Data.ByteString.ByteString,
                                                   _RespondQueryTaskCompletedRequest'completedType :: !Proto.Temporal.Api.Enums.V1.Query.QueryResultType,
                                                   _RespondQueryTaskCompletedRequest'queryResult :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                   _RespondQueryTaskCompletedRequest'errorMessage :: !Data.Text.Text,
                                                   _RespondQueryTaskCompletedRequest'namespace :: !Data.Text.Text,
                                                   _RespondQueryTaskCompletedRequest'failure :: !(Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                   _RespondQueryTaskCompletedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondQueryTaskCompletedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "completedType" Proto.Temporal.Api.Enums.V1.Query.QueryResultType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'completedType
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'completedType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "queryResult" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'queryResult
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'queryResult = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "maybe'queryResult" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'queryResult
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'queryResult = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "errorMessage" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'errorMessage
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'errorMessage = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "failure" Proto.Temporal.Api.Failure.V1.Message.Failure where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'failure
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'failure = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondQueryTaskCompletedRequest "maybe'failure" (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondQueryTaskCompletedRequest'failure
           (\ x__ y__
              -> x__ {_RespondQueryTaskCompletedRequest'failure = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondQueryTaskCompletedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondQueryTaskCompletedRequest"
  packedMessageDescriptor _
    = "\n\
      \ RespondQueryTaskCompletedRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2M\n\
      \\SOcompleted_type\CAN\STX \SOH(\SO2&.temporal.api.enums.v1.QueryResultTypeR\rcompletedType\DC2C\n\
      \\fquery_result\CAN\ETX \SOH(\v2 .temporal.api.common.v1.PayloadsR\vqueryResult\DC2#\n\
      \\rerror_message\CAN\EOT \SOH(\tR\ferrorMessage\DC2\FS\n\
      \\tnamespace\CAN\ACK \SOH(\tR\tnamespace\DC2:\n\
      \\afailure\CAN\a \SOH(\v2 .temporal.api.failure.v1.FailureR\afailureJ\EOT\b\ENQ\DLE\ACK"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
        completedType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "completed_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Query.QueryResultType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"completedType")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
        queryResult__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_result"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'queryResult")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
        errorMessage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "error_message"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"errorMessage")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
        failure__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failure"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'failure")) ::
              Data.ProtoLens.FieldDescriptor RespondQueryTaskCompletedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, completedType__field_descriptor),
           (Data.ProtoLens.Tag 3, queryResult__field_descriptor),
           (Data.ProtoLens.Tag 4, errorMessage__field_descriptor),
           (Data.ProtoLens.Tag 6, namespace__field_descriptor),
           (Data.ProtoLens.Tag 7, failure__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondQueryTaskCompletedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondQueryTaskCompletedRequest'_unknownFields = y__})
  defMessage
    = RespondQueryTaskCompletedRequest'_constructor
        {_RespondQueryTaskCompletedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondQueryTaskCompletedRequest'completedType = Data.ProtoLens.fieldDefault,
         _RespondQueryTaskCompletedRequest'queryResult = Prelude.Nothing,
         _RespondQueryTaskCompletedRequest'errorMessage = Data.ProtoLens.fieldDefault,
         _RespondQueryTaskCompletedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondQueryTaskCompletedRequest'failure = Prelude.Nothing,
         _RespondQueryTaskCompletedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondQueryTaskCompletedRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondQueryTaskCompletedRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "completed_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"completedType") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query_result"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"queryResult") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "error_message"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"errorMessage") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "failure"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"failure") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondQueryTaskCompletedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"completedType") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'queryResult") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"errorMessage") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'failure") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData RespondQueryTaskCompletedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondQueryTaskCompletedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondQueryTaskCompletedRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondQueryTaskCompletedRequest'completedType x__)
                   (Control.DeepSeq.deepseq
                      (_RespondQueryTaskCompletedRequest'queryResult x__)
                      (Control.DeepSeq.deepseq
                         (_RespondQueryTaskCompletedRequest'errorMessage x__)
                         (Control.DeepSeq.deepseq
                            (_RespondQueryTaskCompletedRequest'namespace x__)
                            (Control.DeepSeq.deepseq
                               (_RespondQueryTaskCompletedRequest'failure x__) ()))))))
{- | Fields :
      -}
data RespondQueryTaskCompletedResponse
  = RespondQueryTaskCompletedResponse'_constructor {_RespondQueryTaskCompletedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondQueryTaskCompletedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondQueryTaskCompletedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondQueryTaskCompletedResponse"
  packedMessageDescriptor _
    = "\n\
      \!RespondQueryTaskCompletedResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondQueryTaskCompletedResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondQueryTaskCompletedResponse'_unknownFields = y__})
  defMessage
    = RespondQueryTaskCompletedResponse'_constructor
        {_RespondQueryTaskCompletedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondQueryTaskCompletedResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondQueryTaskCompletedResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondQueryTaskCompletedResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondQueryTaskCompletedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondQueryTaskCompletedResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondWorkflowTaskCompletedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.commands' @:: Lens' RespondWorkflowTaskCompletedRequest [Proto.Temporal.Api.Command.V1.Message.Command]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'commands' @:: Lens' RespondWorkflowTaskCompletedRequest (Data.Vector.Vector Proto.Temporal.Api.Command.V1.Message.Command)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondWorkflowTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.stickyAttributes' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'stickyAttributes' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.returnNewWorkflowTask' @:: Lens' RespondWorkflowTaskCompletedRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.forceCreateNewWorkflowTask' @:: Lens' RespondWorkflowTaskCompletedRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.binaryChecksum' @:: Lens' RespondWorkflowTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.queryResults' @:: Lens' RespondWorkflowTaskCompletedRequest (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondWorkflowTaskCompletedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersionStamp' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersionStamp' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.messages' @:: Lens' RespondWorkflowTaskCompletedRequest [Proto.Temporal.Api.Protocol.V1.Message.Message]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'messages' @:: Lens' RespondWorkflowTaskCompletedRequest (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.sdkMetadata' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'sdkMetadata' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.meteringMetadata' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Common.V1.Message.MeteringMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'meteringMetadata' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.MeteringMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.capabilities' @:: Lens' RespondWorkflowTaskCompletedRequest RespondWorkflowTaskCompletedRequest'Capabilities@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'capabilities' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe RespondWorkflowTaskCompletedRequest'Capabilities)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versioningBehavior' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Enums.V1.Workflow.VersioningBehavior@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' RespondWorkflowTaskCompletedRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' RespondWorkflowTaskCompletedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data RespondWorkflowTaskCompletedRequest
  = RespondWorkflowTaskCompletedRequest'_constructor {_RespondWorkflowTaskCompletedRequest'taskToken :: !Data.ByteString.ByteString,
                                                      _RespondWorkflowTaskCompletedRequest'commands :: !(Data.Vector.Vector Proto.Temporal.Api.Command.V1.Message.Command),
                                                      _RespondWorkflowTaskCompletedRequest'identity :: !Data.Text.Text,
                                                      _RespondWorkflowTaskCompletedRequest'stickyAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes),
                                                      _RespondWorkflowTaskCompletedRequest'returnNewWorkflowTask :: !Prelude.Bool,
                                                      _RespondWorkflowTaskCompletedRequest'forceCreateNewWorkflowTask :: !Prelude.Bool,
                                                      _RespondWorkflowTaskCompletedRequest'binaryChecksum :: !Data.Text.Text,
                                                      _RespondWorkflowTaskCompletedRequest'queryResults :: !(Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult),
                                                      _RespondWorkflowTaskCompletedRequest'namespace :: !Data.Text.Text,
                                                      _RespondWorkflowTaskCompletedRequest'workerVersionStamp :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp),
                                                      _RespondWorkflowTaskCompletedRequest'messages :: !(Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message),
                                                      _RespondWorkflowTaskCompletedRequest'sdkMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata),
                                                      _RespondWorkflowTaskCompletedRequest'meteringMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.MeteringMetadata),
                                                      _RespondWorkflowTaskCompletedRequest'capabilities :: !(Prelude.Maybe RespondWorkflowTaskCompletedRequest'Capabilities),
                                                      _RespondWorkflowTaskCompletedRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                      _RespondWorkflowTaskCompletedRequest'versioningBehavior :: !Proto.Temporal.Api.Enums.V1.Workflow.VersioningBehavior,
                                                      _RespondWorkflowTaskCompletedRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                                      _RespondWorkflowTaskCompletedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskCompletedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "commands" [Proto.Temporal.Api.Command.V1.Message.Command] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'commands
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'commands = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "vec'commands" (Data.Vector.Vector Proto.Temporal.Api.Command.V1.Message.Command) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'commands
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'commands = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'identity
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "stickyAttributes" Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'stickyAttributes
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'stickyAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'stickyAttributes" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'stickyAttributes
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'stickyAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "returnNewWorkflowTask" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'returnNewWorkflowTask
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'returnNewWorkflowTask = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "forceCreateNewWorkflowTask" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'forceCreateNewWorkflowTask
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'forceCreateNewWorkflowTask = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "binaryChecksum" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'binaryChecksum
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'binaryChecksum = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "queryResults" (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'queryResults
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'queryResults = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "workerVersionStamp" Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'workerVersionStamp
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'workerVersionStamp = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'workerVersionStamp" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'workerVersionStamp
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'workerVersionStamp = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "messages" [Proto.Temporal.Api.Protocol.V1.Message.Message] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'messages
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'messages = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "vec'messages" (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'messages
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'messages = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "sdkMetadata" Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'sdkMetadata
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'sdkMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'sdkMetadata" (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'sdkMetadata
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'sdkMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "meteringMetadata" Proto.Temporal.Api.Common.V1.Message.MeteringMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'meteringMetadata
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'meteringMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'meteringMetadata" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.MeteringMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'meteringMetadata
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'meteringMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "capabilities" RespondWorkflowTaskCompletedRequest'Capabilities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'capabilities
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'capabilities = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'capabilities" (Prelude.Maybe RespondWorkflowTaskCompletedRequest'Capabilities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'capabilities
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'capabilities = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "versioningBehavior" Proto.Temporal.Api.Enums.V1.Workflow.VersioningBehavior where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'versioningBehavior
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'versioningBehavior = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondWorkflowTaskCompletedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest"
  packedMessageDescriptor _
    = "\n\
      \#RespondWorkflowTaskCompletedRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2<\n\
      \\bcommands\CAN\STX \ETX(\v2 .temporal.api.command.v1.CommandR\bcommands\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2a\n\
      \\DC1sticky_attributes\CAN\EOT \SOH(\v24.temporal.api.taskqueue.v1.StickyExecutionAttributesR\DLEstickyAttributes\DC27\n\
      \\CANreturn_new_workflow_task\CAN\ENQ \SOH(\bR\NAKreturnNewWorkflowTask\DC2B\n\
      \\RSforce_create_new_workflow_task\CAN\ACK \SOH(\bR\SUBforceCreateNewWorkflowTask\DC2'\n\
      \\SIbinary_checksum\CAN\a \SOH(\tR\SObinaryChecksum\DC2{\n\
      \\rquery_results\CAN\b \ETX(\v2V.temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.QueryResultsEntryR\fqueryResults\DC2\FS\n\
      \\tnamespace\CAN\t \SOH(\tR\tnamespace\DC2`\n\
      \\DC4worker_version_stamp\CAN\n\
      \ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\DC2workerVersionStampB\STX\CAN\SOH\DC2=\n\
      \\bmessages\CAN\v \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2U\n\
      \\fsdk_metadata\CAN\f \SOH(\v22.temporal.api.sdk.v1.WorkflowTaskCompletedMetadataR\vsdkMetadata\DC2U\n\
      \\DC1metering_metadata\CAN\r \SOH(\v2(.temporal.api.common.v1.MeteringMetadataR\DLEmeteringMetadata\DC2u\n\
      \\fcapabilities\CAN\SO \SOH(\v2Q.temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.CapabilitiesR\fcapabilities\DC2J\n\
      \\n\
      \deployment\CAN\SI \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deploymentB\STX\CAN\SOH\DC2Z\n\
      \\DC3versioning_behavior\CAN\DLE \SOH(\SO2).temporal.api.enums.v1.VersioningBehaviorR\DC2versioningBehavior\DC2b\n\
      \\DC2deployment_options\CAN\DC1 \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\SUBk\n\
      \\DC1QueryResultsEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2@\n\
      \\ENQvalue\CAN\STX \SOH(\v2*.temporal.api.query.v1.WorkflowQueryResultR\ENQvalue:\STX8\SOH\SUBo\n\
      \\fCapabilities\DC2_\n\
      \-discard_speculative_workflow_task_with_events\CAN\SOH \SOH(\bR(discardSpeculativeWorkflowTaskWithEvents"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        commands__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "commands"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Command.V1.Message.Command)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"commands")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        stickyAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "sticky_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.StickyExecutionAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'stickyAttributes")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        returnNewWorkflowTask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "return_new_workflow_task"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"returnNewWorkflowTask")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        forceCreateNewWorkflowTask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "force_create_new_workflow_task"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"forceCreateNewWorkflowTask")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        binaryChecksum__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "binary_checksum"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"binaryChecksum")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        queryResults__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_results"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RespondWorkflowTaskCompletedRequest'QueryResultsEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"queryResults")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        workerVersionStamp__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version_stamp"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersionStamp")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        messages__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "messages"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Protocol.V1.Message.Message)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"messages")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        sdkMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "sdk_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Sdk.V1.TaskCompleteMetadata.WorkflowTaskCompletedMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'sdkMetadata")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        meteringMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metering_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.MeteringMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'meteringMetadata")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        capabilities__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "capabilities"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RespondWorkflowTaskCompletedRequest'Capabilities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'capabilities")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        versioningBehavior__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versioning_behavior"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.VersioningBehavior)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"versioningBehavior")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, commands__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, stickyAttributes__field_descriptor),
           (Data.ProtoLens.Tag 5, returnNewWorkflowTask__field_descriptor),
           (Data.ProtoLens.Tag 6, 
            forceCreateNewWorkflowTask__field_descriptor),
           (Data.ProtoLens.Tag 7, binaryChecksum__field_descriptor),
           (Data.ProtoLens.Tag 8, queryResults__field_descriptor),
           (Data.ProtoLens.Tag 9, namespace__field_descriptor),
           (Data.ProtoLens.Tag 10, workerVersionStamp__field_descriptor),
           (Data.ProtoLens.Tag 11, messages__field_descriptor),
           (Data.ProtoLens.Tag 12, sdkMetadata__field_descriptor),
           (Data.ProtoLens.Tag 13, meteringMetadata__field_descriptor),
           (Data.ProtoLens.Tag 14, capabilities__field_descriptor),
           (Data.ProtoLens.Tag 15, deployment__field_descriptor),
           (Data.ProtoLens.Tag 16, versioningBehavior__field_descriptor),
           (Data.ProtoLens.Tag 17, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskCompletedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondWorkflowTaskCompletedRequest'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskCompletedRequest'_constructor
        {_RespondWorkflowTaskCompletedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'commands = Data.Vector.Generic.empty,
         _RespondWorkflowTaskCompletedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'stickyAttributes = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'returnNewWorkflowTask = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'forceCreateNewWorkflowTask = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'binaryChecksum = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'queryResults = Data.Map.empty,
         _RespondWorkflowTaskCompletedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'workerVersionStamp = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'messages = Data.Vector.Generic.empty,
         _RespondWorkflowTaskCompletedRequest'sdkMetadata = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'meteringMetadata = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'capabilities = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'deployment = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'versioningBehavior = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'deploymentOptions = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskCompletedRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Command.V1.Message.Command
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Protocol.V1.Message.Message
                -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskCompletedRequest
        loop x mutable'commands mutable'messages
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'commands <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'commands)
                      frozen'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'messages)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'commands") frozen'commands
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'messages") frozen'messages x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                                  mutable'commands mutable'messages
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "commands"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'commands y)
                                loop x v mutable'messages
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'commands mutable'messages
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "sticky_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"stickyAttributes") y x)
                                  mutable'commands mutable'messages
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "return_new_workflow_task"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"returnNewWorkflowTask") y x)
                                  mutable'commands mutable'messages
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "force_create_new_workflow_task"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"forceCreateNewWorkflowTask") y x)
                                  mutable'commands mutable'messages
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "binary_checksum"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"binaryChecksum") y x)
                                  mutable'commands mutable'messages
                        66
                          -> do !(entry :: RespondWorkflowTaskCompletedRequest'QueryResultsEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                           Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                             (Prelude.fromIntegral
                                                                                                                len)
                                                                                                             Data.ProtoLens.parseMessage)
                                                                                                       "query_results"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"queryResults")
                                        (\ !t -> Data.Map.insert key value t) x)
                                     mutable'commands mutable'messages)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'commands mutable'messages
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version_stamp"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersionStamp") y x)
                                  mutable'commands mutable'messages
                        90
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "messages"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'messages y)
                                loop x mutable'commands v
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "sdk_metadata"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"sdkMetadata") y x)
                                  mutable'commands mutable'messages
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metering_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"meteringMetadata") y x)
                                  mutable'commands mutable'messages
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "capabilities"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"capabilities") y x)
                                  mutable'commands mutable'messages
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                                  mutable'commands mutable'messages
                        128
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "versioning_behavior"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"versioningBehavior") y x)
                                  mutable'commands mutable'messages
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                                  mutable'commands mutable'messages
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'commands mutable'messages
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'commands <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              mutable'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'commands mutable'messages)
          "RespondWorkflowTaskCompletedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'commands") _x))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'stickyAttributes") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"returnNewWorkflowTask") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"forceCreateNewWorkflowTask") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (\ b -> if b then 1 else 0) _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"binaryChecksum") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((Prelude..)
                                           (\ bs
                                              -> (Data.Monoid.<>)
                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                      (Prelude.fromIntegral
                                                         (Data.ByteString.length bs)))
                                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           Data.Text.Encoding.encodeUtf8 _v))
                               ((Data.Monoid.<>)
                                  (Data.Monoid.mconcat
                                     (Prelude.map
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.ProtoLens.encodeMessage
                                                   (Lens.Family2.set
                                                      (Data.ProtoLens.Field.field @"key")
                                                      (Prelude.fst _v)
                                                      (Lens.Family2.set
                                                         (Data.ProtoLens.Field.field @"value")
                                                         (Prelude.snd _v)
                                                         (Data.ProtoLens.defMessage ::
                                                            RespondWorkflowTaskCompletedRequest'QueryResultsEntry)))))
                                        (Data.Map.toList
                                           (Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"queryResults") _x))))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"namespace") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                              ((Prelude..)
                                                 (\ bs
                                                    -> (Data.Monoid.<>)
                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                            (Prelude.fromIntegral
                                                               (Data.ByteString.length bs)))
                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                            bs))
                                                 Data.Text.Encoding.encodeUtf8 _v))
                                     ((Data.Monoid.<>)
                                        (case
                                             Lens.Family2.view
                                               (Data.ProtoLens.Field.field
                                                  @"maybe'workerVersionStamp")
                                               _x
                                         of
                                           Prelude.Nothing -> Data.Monoid.mempty
                                           (Prelude.Just _v)
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                  ((Prelude..)
                                                     (\ bs
                                                        -> (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (Prelude.fromIntegral
                                                                   (Data.ByteString.length bs)))
                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                bs))
                                                     Data.ProtoLens.encodeMessage _v))
                                        ((Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                              (\ _v
                                                 -> (Data.Monoid.<>)
                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                      ((Prelude..)
                                                         (\ bs
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    (Prelude.fromIntegral
                                                                       (Data.ByteString.length bs)))
                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                    bs))
                                                         Data.ProtoLens.encodeMessage _v))
                                              (Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"vec'messages") _x))
                                           ((Data.Monoid.<>)
                                              (case
                                                   Lens.Family2.view
                                                     (Data.ProtoLens.Field.field
                                                        @"maybe'sdkMetadata")
                                                     _x
                                               of
                                                 Prelude.Nothing -> Data.Monoid.mempty
                                                 (Prelude.Just _v)
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage _v))
                                              ((Data.Monoid.<>)
                                                 (case
                                                      Lens.Family2.view
                                                        (Data.ProtoLens.Field.field
                                                           @"maybe'meteringMetadata")
                                                        _x
                                                  of
                                                    Prelude.Nothing -> Data.Monoid.mempty
                                                    (Prelude.Just _v)
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              106)
                                                           ((Prelude..)
                                                              (\ bs
                                                                 -> (Data.Monoid.<>)
                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                         (Prelude.fromIntegral
                                                                            (Data.ByteString.length
                                                                               bs)))
                                                                      (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                         bs))
                                                              Data.ProtoLens.encodeMessage _v))
                                                 ((Data.Monoid.<>)
                                                    (case
                                                         Lens.Family2.view
                                                           (Data.ProtoLens.Field.field
                                                              @"maybe'capabilities")
                                                           _x
                                                     of
                                                       Prelude.Nothing -> Data.Monoid.mempty
                                                       (Prelude.Just _v)
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 114)
                                                              ((Prelude..)
                                                                 (\ bs
                                                                    -> (Data.Monoid.<>)
                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            (Prelude.fromIntegral
                                                                               (Data.ByteString.length
                                                                                  bs)))
                                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                            bs))
                                                                 Data.ProtoLens.encodeMessage _v))
                                                    ((Data.Monoid.<>)
                                                       (case
                                                            Lens.Family2.view
                                                              (Data.ProtoLens.Field.field
                                                                 @"maybe'deployment")
                                                              _x
                                                        of
                                                          Prelude.Nothing -> Data.Monoid.mempty
                                                          (Prelude.Just _v)
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    122)
                                                                 ((Prelude..)
                                                                    (\ bs
                                                                       -> (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               (Prelude.fromIntegral
                                                                                  (Data.ByteString.length
                                                                                     bs)))
                                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                               bs))
                                                                    Data.ProtoLens.encodeMessage
                                                                    _v))
                                                       ((Data.Monoid.<>)
                                                          (let
                                                             _v
                                                               = Lens.Family2.view
                                                                   (Data.ProtoLens.Field.field
                                                                      @"versioningBehavior")
                                                                   _x
                                                           in
                                                             if (Prelude.==)
                                                                  _v
                                                                  Data.ProtoLens.fieldDefault then
                                                                 Data.Monoid.mempty
                                                             else
                                                                 (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      128)
                                                                   ((Prelude..)
                                                                      ((Prelude..)
                                                                         Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                         Prelude.fromIntegral)
                                                                      Prelude.fromEnum _v))
                                                          ((Data.Monoid.<>)
                                                             (case
                                                                  Lens.Family2.view
                                                                    (Data.ProtoLens.Field.field
                                                                       @"maybe'deploymentOptions")
                                                                    _x
                                                              of
                                                                Prelude.Nothing
                                                                  -> Data.Monoid.mempty
                                                                (Prelude.Just _v)
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          138)
                                                                       ((Prelude..)
                                                                          (\ bs
                                                                             -> (Data.Monoid.<>)
                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                     (Prelude.fromIntegral
                                                                                        (Data.ByteString.length
                                                                                           bs)))
                                                                                  (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                     bs))
                                                                          Data.ProtoLens.encodeMessage
                                                                          _v))
                                                             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                (Lens.Family2.view
                                                                   Data.ProtoLens.unknownFields
                                                                   _x))))))))))))))))))
instance Control.DeepSeq.NFData RespondWorkflowTaskCompletedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskCompletedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondWorkflowTaskCompletedRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondWorkflowTaskCompletedRequest'commands x__)
                   (Control.DeepSeq.deepseq
                      (_RespondWorkflowTaskCompletedRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_RespondWorkflowTaskCompletedRequest'stickyAttributes x__)
                         (Control.DeepSeq.deepseq
                            (_RespondWorkflowTaskCompletedRequest'returnNewWorkflowTask x__)
                            (Control.DeepSeq.deepseq
                               (_RespondWorkflowTaskCompletedRequest'forceCreateNewWorkflowTask
                                  x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondWorkflowTaskCompletedRequest'binaryChecksum x__)
                                  (Control.DeepSeq.deepseq
                                     (_RespondWorkflowTaskCompletedRequest'queryResults x__)
                                     (Control.DeepSeq.deepseq
                                        (_RespondWorkflowTaskCompletedRequest'namespace x__)
                                        (Control.DeepSeq.deepseq
                                           (_RespondWorkflowTaskCompletedRequest'workerVersionStamp
                                              x__)
                                           (Control.DeepSeq.deepseq
                                              (_RespondWorkflowTaskCompletedRequest'messages x__)
                                              (Control.DeepSeq.deepseq
                                                 (_RespondWorkflowTaskCompletedRequest'sdkMetadata
                                                    x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_RespondWorkflowTaskCompletedRequest'meteringMetadata
                                                       x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_RespondWorkflowTaskCompletedRequest'capabilities
                                                          x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_RespondWorkflowTaskCompletedRequest'deployment
                                                             x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_RespondWorkflowTaskCompletedRequest'versioningBehavior
                                                                x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_RespondWorkflowTaskCompletedRequest'deploymentOptions
                                                                   x__)
                                                                ())))))))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.discardSpeculativeWorkflowTaskWithEvents' @:: Lens' RespondWorkflowTaskCompletedRequest'Capabilities Prelude.Bool@ -}
data RespondWorkflowTaskCompletedRequest'Capabilities
  = RespondWorkflowTaskCompletedRequest'Capabilities'_constructor {_RespondWorkflowTaskCompletedRequest'Capabilities'discardSpeculativeWorkflowTaskWithEvents :: !Prelude.Bool,
                                                                   _RespondWorkflowTaskCompletedRequest'Capabilities'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskCompletedRequest'Capabilities where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest'Capabilities "discardSpeculativeWorkflowTaskWithEvents" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'Capabilities'discardSpeculativeWorkflowTaskWithEvents
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'Capabilities'discardSpeculativeWorkflowTaskWithEvents = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondWorkflowTaskCompletedRequest'Capabilities where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.Capabilities"
  packedMessageDescriptor _
    = "\n\
      \\fCapabilities\DC2_\n\
      \-discard_speculative_workflow_task_with_events\CAN\SOH \SOH(\bR(discardSpeculativeWorkflowTaskWithEvents"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        discardSpeculativeWorkflowTaskWithEvents__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "discard_speculative_workflow_task_with_events"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field
                    @"discardSpeculativeWorkflowTaskWithEvents")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest'Capabilities
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, 
            discardSpeculativeWorkflowTaskWithEvents__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskCompletedRequest'Capabilities'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondWorkflowTaskCompletedRequest'Capabilities'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskCompletedRequest'Capabilities'_constructor
        {_RespondWorkflowTaskCompletedRequest'Capabilities'discardSpeculativeWorkflowTaskWithEvents = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'Capabilities'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskCompletedRequest'Capabilities
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskCompletedRequest'Capabilities
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "discard_speculative_workflow_task_with_events"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field
                                        @"discardSpeculativeWorkflowTaskWithEvents")
                                     y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Capabilities"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field
                         @"discardSpeculativeWorkflowTaskWithEvents")
                      _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RespondWorkflowTaskCompletedRequest'Capabilities where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskCompletedRequest'Capabilities'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_RespondWorkflowTaskCompletedRequest'Capabilities'discardSpeculativeWorkflowTaskWithEvents
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' RespondWorkflowTaskCompletedRequest'QueryResultsEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' RespondWorkflowTaskCompletedRequest'QueryResultsEntry Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'value' @:: Lens' RespondWorkflowTaskCompletedRequest'QueryResultsEntry (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult)@ -}
data RespondWorkflowTaskCompletedRequest'QueryResultsEntry
  = RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_constructor {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'key :: !Data.Text.Text,
                                                                        _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value :: !(Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult),
                                                                        _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskCompletedRequest'QueryResultsEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest'QueryResultsEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'key
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest'QueryResultsEntry "value" Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedRequest'QueryResultsEntry "maybe'value" (Prelude.Maybe Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondWorkflowTaskCompletedRequest'QueryResultsEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.QueryResultsEntry"
  packedMessageDescriptor _
    = "\n\
      \\DC1QueryResultsEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2@\n\
      \\ENQvalue\CAN\STX \SOH(\v2*.temporal.api.query.v1.WorkflowQueryResultR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest'QueryResultsEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Query.V1.Message.WorkflowQueryResult)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedRequest'QueryResultsEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_constructor
        {_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'key = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value = Prelude.Nothing,
         _RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskCompletedRequest'QueryResultsEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskCompletedRequest'QueryResultsEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueryResultsEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RespondWorkflowTaskCompletedRequest'QueryResultsEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_RespondWorkflowTaskCompletedRequest'QueryResultsEntry'value x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowTask' @:: Lens' RespondWorkflowTaskCompletedResponse PollWorkflowTaskQueueResponse@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowTask' @:: Lens' RespondWorkflowTaskCompletedResponse (Prelude.Maybe PollWorkflowTaskQueueResponse)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityTasks' @:: Lens' RespondWorkflowTaskCompletedResponse [PollActivityTaskQueueResponse]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'activityTasks' @:: Lens' RespondWorkflowTaskCompletedResponse (Data.Vector.Vector PollActivityTaskQueueResponse)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetHistoryEventId' @:: Lens' RespondWorkflowTaskCompletedResponse Data.Int.Int64@ -}
data RespondWorkflowTaskCompletedResponse
  = RespondWorkflowTaskCompletedResponse'_constructor {_RespondWorkflowTaskCompletedResponse'workflowTask :: !(Prelude.Maybe PollWorkflowTaskQueueResponse),
                                                       _RespondWorkflowTaskCompletedResponse'activityTasks :: !(Data.Vector.Vector PollActivityTaskQueueResponse),
                                                       _RespondWorkflowTaskCompletedResponse'resetHistoryEventId :: !Data.Int.Int64,
                                                       _RespondWorkflowTaskCompletedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskCompletedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedResponse "workflowTask" PollWorkflowTaskQueueResponse where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedResponse'workflowTask
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedResponse'workflowTask = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedResponse "maybe'workflowTask" (Prelude.Maybe PollWorkflowTaskQueueResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedResponse'workflowTask
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskCompletedResponse'workflowTask = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedResponse "activityTasks" [PollActivityTaskQueueResponse] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedResponse'activityTasks
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedResponse'activityTasks = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedResponse "vec'activityTasks" (Data.Vector.Vector PollActivityTaskQueueResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedResponse'activityTasks
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedResponse'activityTasks = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskCompletedResponse "resetHistoryEventId" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskCompletedResponse'resetHistoryEventId
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskCompletedResponse'resetHistoryEventId = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondWorkflowTaskCompletedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedResponse"
  packedMessageDescriptor _
    = "\n\
      \$RespondWorkflowTaskCompletedResponse\DC2c\n\
      \\rworkflow_task\CAN\SOH \SOH(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\fworkflowTask\DC2e\n\
      \\SOactivity_tasks\CAN\STX \ETX(\v2>.temporal.api.workflowservice.v1.PollActivityTaskQueueResponseR\ractivityTasks\DC23\n\
      \\SYNreset_history_event_id\CAN\ETX \SOH(\ETXR\DC3resetHistoryEventId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        workflowTask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_task"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor PollWorkflowTaskQueueResponse)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowTask")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedResponse
        activityTasks__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_tasks"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor PollActivityTaskQueueResponse)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"activityTasks")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedResponse
        resetHistoryEventId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_history_event_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"resetHistoryEventId")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskCompletedResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, workflowTask__field_descriptor),
           (Data.ProtoLens.Tag 2, activityTasks__field_descriptor),
           (Data.ProtoLens.Tag 3, resetHistoryEventId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskCompletedResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_RespondWorkflowTaskCompletedResponse'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskCompletedResponse'_constructor
        {_RespondWorkflowTaskCompletedResponse'workflowTask = Prelude.Nothing,
         _RespondWorkflowTaskCompletedResponse'activityTasks = Data.Vector.Generic.empty,
         _RespondWorkflowTaskCompletedResponse'resetHistoryEventId = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskCompletedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskCompletedResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld PollActivityTaskQueueResponse
             -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskCompletedResponse
        loop x mutable'activityTasks
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'activityTasks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                   mutable'activityTasks)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'activityTasks")
                              frozen'activityTasks x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_task"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowTask") y x)
                                  mutable'activityTasks
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "activity_tasks"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'activityTasks y)
                                loop x v
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "reset_history_event_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetHistoryEventId") y x)
                                  mutable'activityTasks
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'activityTasks
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'activityTasks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                         Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'activityTasks)
          "RespondWorkflowTaskCompletedResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'workflowTask") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'activityTasks") _x))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"resetHistoryEventId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RespondWorkflowTaskCompletedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskCompletedResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondWorkflowTaskCompletedResponse'workflowTask x__)
                (Control.DeepSeq.deepseq
                   (_RespondWorkflowTaskCompletedResponse'activityTasks x__)
                   (Control.DeepSeq.deepseq
                      (_RespondWorkflowTaskCompletedResponse'resetHistoryEventId x__)
                      ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskToken' @:: Lens' RespondWorkflowTaskFailedRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cause' @:: Lens' RespondWorkflowTaskFailedRequest Proto.Temporal.Api.Enums.V1.FailedCause.WorkflowTaskFailedCause@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failure' @:: Lens' RespondWorkflowTaskFailedRequest Proto.Temporal.Api.Failure.V1.Message.Failure@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'failure' @:: Lens' RespondWorkflowTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' RespondWorkflowTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.binaryChecksum' @:: Lens' RespondWorkflowTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' RespondWorkflowTaskFailedRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.messages' @:: Lens' RespondWorkflowTaskFailedRequest [Proto.Temporal.Api.Protocol.V1.Message.Message]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'messages' @:: Lens' RespondWorkflowTaskFailedRequest (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workerVersion' @:: Lens' RespondWorkflowTaskFailedRequest Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workerVersion' @:: Lens' RespondWorkflowTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' RespondWorkflowTaskFailedRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' RespondWorkflowTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentOptions' @:: Lens' RespondWorkflowTaskFailedRequest Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deploymentOptions' @:: Lens' RespondWorkflowTaskFailedRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)@ -}
data RespondWorkflowTaskFailedRequest
  = RespondWorkflowTaskFailedRequest'_constructor {_RespondWorkflowTaskFailedRequest'taskToken :: !Data.ByteString.ByteString,
                                                   _RespondWorkflowTaskFailedRequest'cause :: !Proto.Temporal.Api.Enums.V1.FailedCause.WorkflowTaskFailedCause,
                                                   _RespondWorkflowTaskFailedRequest'failure :: !(Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                   _RespondWorkflowTaskFailedRequest'identity :: !Data.Text.Text,
                                                   _RespondWorkflowTaskFailedRequest'binaryChecksum :: !Data.Text.Text,
                                                   _RespondWorkflowTaskFailedRequest'namespace :: !Data.Text.Text,
                                                   _RespondWorkflowTaskFailedRequest'messages :: !(Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message),
                                                   _RespondWorkflowTaskFailedRequest'workerVersion :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp),
                                                   _RespondWorkflowTaskFailedRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                                   _RespondWorkflowTaskFailedRequest'deploymentOptions :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions),
                                                   _RespondWorkflowTaskFailedRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskFailedRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "taskToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'taskToken
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'taskToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "cause" Proto.Temporal.Api.Enums.V1.FailedCause.WorkflowTaskFailedCause where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'cause
           (\ x__ y__ -> x__ {_RespondWorkflowTaskFailedRequest'cause = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "failure" Proto.Temporal.Api.Failure.V1.Message.Failure where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'failure
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'failure = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "maybe'failure" (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'failure
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'failure = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'identity
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "binaryChecksum" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'binaryChecksum
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'binaryChecksum = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'namespace
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "messages" [Proto.Temporal.Api.Protocol.V1.Message.Message] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'messages
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'messages = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "vec'messages" (Data.Vector.Vector Proto.Temporal.Api.Protocol.V1.Message.Message) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'messages
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'messages = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "workerVersion" Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'workerVersion = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "maybe'workerVersion" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'workerVersion
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'workerVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'deployment
           (\ x__ y__
              -> x__ {_RespondWorkflowTaskFailedRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "deploymentOptions" Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskFailedRequest'deploymentOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RespondWorkflowTaskFailedRequest "maybe'deploymentOptions" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RespondWorkflowTaskFailedRequest'deploymentOptions
           (\ x__ y__
              -> x__
                   {_RespondWorkflowTaskFailedRequest'deploymentOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message RespondWorkflowTaskFailedRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskFailedRequest"
  packedMessageDescriptor _
    = "\n\
      \ RespondWorkflowTaskFailedRequest\DC2\GS\n\
      \\n\
      \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2D\n\
      \\ENQcause\CAN\STX \SOH(\SO2..temporal.api.enums.v1.WorkflowTaskFailedCauseR\ENQcause\DC2:\n\
      \\afailure\CAN\ETX \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
      \\bidentity\CAN\EOT \SOH(\tR\bidentity\DC2'\n\
      \\SIbinary_checksum\CAN\ENQ \SOH(\tR\SObinaryChecksum\DC2\FS\n\
      \\tnamespace\CAN\ACK \SOH(\tR\tnamespace\DC2=\n\
      \\bmessages\CAN\a \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2U\n\
      \\SOworker_version\CAN\b \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2F\n\
      \\n\
      \deployment\CAN\t \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deployment\DC2b\n\
      \\DC2deployment_options\CAN\n\
      \ \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        taskToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskToken")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        cause__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cause"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.FailedCause.WorkflowTaskFailedCause)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"cause")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        failure__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failure"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'failure")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        binaryChecksum__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "binary_checksum"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"binaryChecksum")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        messages__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "messages"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Protocol.V1.Message.Message)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"messages")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        workerVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "worker_version"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkerVersionStamp)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workerVersion")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
        deploymentOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.WorkerDeploymentOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deploymentOptions")) ::
              Data.ProtoLens.FieldDescriptor RespondWorkflowTaskFailedRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, taskToken__field_descriptor),
           (Data.ProtoLens.Tag 2, cause__field_descriptor),
           (Data.ProtoLens.Tag 3, failure__field_descriptor),
           (Data.ProtoLens.Tag 4, identity__field_descriptor),
           (Data.ProtoLens.Tag 5, binaryChecksum__field_descriptor),
           (Data.ProtoLens.Tag 6, namespace__field_descriptor),
           (Data.ProtoLens.Tag 7, messages__field_descriptor),
           (Data.ProtoLens.Tag 8, workerVersion__field_descriptor),
           (Data.ProtoLens.Tag 9, deployment__field_descriptor),
           (Data.ProtoLens.Tag 10, deploymentOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskFailedRequest'_unknownFields
        (\ x__ y__
           -> x__ {_RespondWorkflowTaskFailedRequest'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskFailedRequest'_constructor
        {_RespondWorkflowTaskFailedRequest'taskToken = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskFailedRequest'cause = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskFailedRequest'failure = Prelude.Nothing,
         _RespondWorkflowTaskFailedRequest'identity = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskFailedRequest'binaryChecksum = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskFailedRequest'namespace = Data.ProtoLens.fieldDefault,
         _RespondWorkflowTaskFailedRequest'messages = Data.Vector.Generic.empty,
         _RespondWorkflowTaskFailedRequest'workerVersion = Prelude.Nothing,
         _RespondWorkflowTaskFailedRequest'deployment = Prelude.Nothing,
         _RespondWorkflowTaskFailedRequest'deploymentOptions = Prelude.Nothing,
         _RespondWorkflowTaskFailedRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskFailedRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Protocol.V1.Message.Message
             -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskFailedRequest
        loop x mutable'messages
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'messages)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'messages") frozen'messages x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "task_token"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskToken") y x)
                                  mutable'messages
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "cause"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"cause") y x)
                                  mutable'messages
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "failure"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"failure") y x)
                                  mutable'messages
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'messages
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "binary_checksum"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"binaryChecksum") y x)
                                  mutable'messages
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'messages
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "messages"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'messages y)
                                loop x v
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "worker_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workerVersion") y x)
                                  mutable'messages
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                                  mutable'messages
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentOptions") y x)
                                  mutable'messages
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'messages
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'messages <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'messages)
          "RespondWorkflowTaskFailedRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"cause") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'failure") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"binaryChecksum") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.ProtoLens.encodeMessage _v))
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"vec'messages") _x))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'workerVersion") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (case
                                          Lens.Family2.view
                                            (Data.ProtoLens.Field.field @"maybe'deployment") _x
                                      of
                                        Prelude.Nothing -> Data.Monoid.mempty
                                        (Prelude.Just _v)
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                               ((Prelude..)
                                                  (\ bs
                                                     -> (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             (Prelude.fromIntegral
                                                                (Data.ByteString.length bs)))
                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                             bs))
                                                  Data.ProtoLens.encodeMessage _v))
                                     ((Data.Monoid.<>)
                                        (case
                                             Lens.Family2.view
                                               (Data.ProtoLens.Field.field
                                                  @"maybe'deploymentOptions")
                                               _x
                                         of
                                           Prelude.Nothing -> Data.Monoid.mempty
                                           (Prelude.Just _v)
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                  ((Prelude..)
                                                     (\ bs
                                                        -> (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (Prelude.fromIntegral
                                                                   (Data.ByteString.length bs)))
                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                bs))
                                                     Data.ProtoLens.encodeMessage _v))
                                        (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                           (Lens.Family2.view
                                              Data.ProtoLens.unknownFields _x)))))))))))
instance Control.DeepSeq.NFData RespondWorkflowTaskFailedRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskFailedRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RespondWorkflowTaskFailedRequest'taskToken x__)
                (Control.DeepSeq.deepseq
                   (_RespondWorkflowTaskFailedRequest'cause x__)
                   (Control.DeepSeq.deepseq
                      (_RespondWorkflowTaskFailedRequest'failure x__)
                      (Control.DeepSeq.deepseq
                         (_RespondWorkflowTaskFailedRequest'identity x__)
                         (Control.DeepSeq.deepseq
                            (_RespondWorkflowTaskFailedRequest'binaryChecksum x__)
                            (Control.DeepSeq.deepseq
                               (_RespondWorkflowTaskFailedRequest'namespace x__)
                               (Control.DeepSeq.deepseq
                                  (_RespondWorkflowTaskFailedRequest'messages x__)
                                  (Control.DeepSeq.deepseq
                                     (_RespondWorkflowTaskFailedRequest'workerVersion x__)
                                     (Control.DeepSeq.deepseq
                                        (_RespondWorkflowTaskFailedRequest'deployment x__)
                                        (Control.DeepSeq.deepseq
                                           (_RespondWorkflowTaskFailedRequest'deploymentOptions x__)
                                           ()))))))))))
{- | Fields :
      -}
data RespondWorkflowTaskFailedResponse
  = RespondWorkflowTaskFailedResponse'_constructor {_RespondWorkflowTaskFailedResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RespondWorkflowTaskFailedResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RespondWorkflowTaskFailedResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.RespondWorkflowTaskFailedResponse"
  packedMessageDescriptor _
    = "\n\
      \!RespondWorkflowTaskFailedResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RespondWorkflowTaskFailedResponse'_unknownFields
        (\ x__ y__
           -> x__ {_RespondWorkflowTaskFailedResponse'_unknownFields = y__})
  defMessage
    = RespondWorkflowTaskFailedResponse'_constructor
        {_RespondWorkflowTaskFailedResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RespondWorkflowTaskFailedResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser RespondWorkflowTaskFailedResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "RespondWorkflowTaskFailedResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RespondWorkflowTaskFailedResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RespondWorkflowTaskFailedResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ScanWorkflowExecutionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.pageSize' @:: Lens' ScanWorkflowExecutionsRequest Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ScanWorkflowExecutionsRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.query' @:: Lens' ScanWorkflowExecutionsRequest Data.Text.Text@ -}
data ScanWorkflowExecutionsRequest
  = ScanWorkflowExecutionsRequest'_constructor {_ScanWorkflowExecutionsRequest'namespace :: !Data.Text.Text,
                                                _ScanWorkflowExecutionsRequest'pageSize :: !Data.Int.Int32,
                                                _ScanWorkflowExecutionsRequest'nextPageToken :: !Data.ByteString.ByteString,
                                                _ScanWorkflowExecutionsRequest'query :: !Data.Text.Text,
                                                _ScanWorkflowExecutionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ScanWorkflowExecutionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsRequest'namespace
           (\ x__ y__
              -> x__ {_ScanWorkflowExecutionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsRequest "pageSize" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsRequest'pageSize
           (\ x__ y__ -> x__ {_ScanWorkflowExecutionsRequest'pageSize = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsRequest "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsRequest'nextPageToken
           (\ x__ y__
              -> x__ {_ScanWorkflowExecutionsRequest'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsRequest "query" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsRequest'query
           (\ x__ y__ -> x__ {_ScanWorkflowExecutionsRequest'query = y__}))
        Prelude.id
instance Data.ProtoLens.Message ScanWorkflowExecutionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ScanWorkflowExecutionsRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSScanWorkflowExecutionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
      \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
      \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
      \\ENQquery\CAN\EOT \SOH(\tR\ENQquery"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsRequest
        pageSize__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "page_size"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"pageSize")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsRequest
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsRequest
        query__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"query")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, pageSize__field_descriptor),
           (Data.ProtoLens.Tag 3, nextPageToken__field_descriptor),
           (Data.ProtoLens.Tag 4, query__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ScanWorkflowExecutionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_ScanWorkflowExecutionsRequest'_unknownFields = y__})
  defMessage
    = ScanWorkflowExecutionsRequest'_constructor
        {_ScanWorkflowExecutionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _ScanWorkflowExecutionsRequest'pageSize = Data.ProtoLens.fieldDefault,
         _ScanWorkflowExecutionsRequest'nextPageToken = Data.ProtoLens.fieldDefault,
         _ScanWorkflowExecutionsRequest'query = Data.ProtoLens.fieldDefault,
         _ScanWorkflowExecutionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ScanWorkflowExecutionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ScanWorkflowExecutionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "page_size"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"pageSize") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "query"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"query") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ScanWorkflowExecutionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"pageSize") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"nextPageToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"query") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ScanWorkflowExecutionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ScanWorkflowExecutionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ScanWorkflowExecutionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ScanWorkflowExecutionsRequest'pageSize x__)
                   (Control.DeepSeq.deepseq
                      (_ScanWorkflowExecutionsRequest'nextPageToken x__)
                      (Control.DeepSeq.deepseq
                         (_ScanWorkflowExecutionsRequest'query x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' ScanWorkflowExecutionsResponse [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' ScanWorkflowExecutionsResponse (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.nextPageToken' @:: Lens' ScanWorkflowExecutionsResponse Data.ByteString.ByteString@ -}
data ScanWorkflowExecutionsResponse
  = ScanWorkflowExecutionsResponse'_constructor {_ScanWorkflowExecutionsResponse'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo),
                                                 _ScanWorkflowExecutionsResponse'nextPageToken :: !Data.ByteString.ByteString,
                                                 _ScanWorkflowExecutionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ScanWorkflowExecutionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsResponse "executions" [Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ScanWorkflowExecutionsResponse'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsResponse "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsResponse'executions
           (\ x__ y__
              -> x__ {_ScanWorkflowExecutionsResponse'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ScanWorkflowExecutionsResponse "nextPageToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ScanWorkflowExecutionsResponse'nextPageToken
           (\ x__ y__
              -> x__ {_ScanWorkflowExecutionsResponse'nextPageToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message ScanWorkflowExecutionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ScanWorkflowExecutionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSScanWorkflowExecutionsResponse\DC2O\n\
      \\n\
      \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
      \executions\DC2&\n\
      \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsResponse
        nextPageToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "next_page_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"nextPageToken")) ::
              Data.ProtoLens.FieldDescriptor ScanWorkflowExecutionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, executions__field_descriptor),
           (Data.ProtoLens.Tag 2, nextPageToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ScanWorkflowExecutionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_ScanWorkflowExecutionsResponse'_unknownFields = y__})
  defMessage
    = ScanWorkflowExecutionsResponse'_constructor
        {_ScanWorkflowExecutionsResponse'executions = Data.Vector.Generic.empty,
         _ScanWorkflowExecutionsResponse'nextPageToken = Data.ProtoLens.fieldDefault,
         _ScanWorkflowExecutionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ScanWorkflowExecutionsResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionInfo
             -> Data.ProtoLens.Encoding.Bytes.Parser ScanWorkflowExecutionsResponse
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "next_page_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nextPageToken") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "ScanWorkflowExecutionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'executions") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"nextPageToken") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData ScanWorkflowExecutionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ScanWorkflowExecutionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ScanWorkflowExecutionsResponse'executions x__)
                (Control.DeepSeq.deepseq
                   (_ScanWorkflowExecutionsResponse'nextPageToken x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' SetCurrentDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deployment' @:: Lens' SetCurrentDeploymentRequest Proto.Temporal.Api.Deployment.V1.Message.Deployment@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deployment' @:: Lens' SetCurrentDeploymentRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' SetCurrentDeploymentRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateMetadata' @:: Lens' SetCurrentDeploymentRequest Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateMetadata' @:: Lens' SetCurrentDeploymentRequest (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata)@ -}
data SetCurrentDeploymentRequest
  = SetCurrentDeploymentRequest'_constructor {_SetCurrentDeploymentRequest'namespace :: !Data.Text.Text,
                                              _SetCurrentDeploymentRequest'deployment :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment),
                                              _SetCurrentDeploymentRequest'identity :: !Data.Text.Text,
                                              _SetCurrentDeploymentRequest'updateMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata),
                                              _SetCurrentDeploymentRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetCurrentDeploymentRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'namespace
           (\ x__ y__ -> x__ {_SetCurrentDeploymentRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "deployment" Proto.Temporal.Api.Deployment.V1.Message.Deployment where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'deployment
           (\ x__ y__ -> x__ {_SetCurrentDeploymentRequest'deployment = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "maybe'deployment" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.Deployment) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'deployment
           (\ x__ y__ -> x__ {_SetCurrentDeploymentRequest'deployment = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'identity
           (\ x__ y__ -> x__ {_SetCurrentDeploymentRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "updateMetadata" Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'updateMetadata
           (\ x__ y__
              -> x__ {_SetCurrentDeploymentRequest'updateMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentRequest "maybe'updateMetadata" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentRequest'updateMetadata
           (\ x__ y__
              -> x__ {_SetCurrentDeploymentRequest'updateMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetCurrentDeploymentRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetCurrentDeploymentRequest"
  packedMessageDescriptor _
    = "\n\
      \\ESCSetCurrentDeploymentRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
      \\n\
      \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
      \deployment\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2]\n\
      \\SIupdate_metadata\CAN\EOT \SOH(\v24.temporal.api.deployment.v1.UpdateDeploymentMetadataR\SOupdateMetadata"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentRequest
        deployment__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.Deployment)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deployment")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentRequest
        updateMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.UpdateDeploymentMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateMetadata")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deployment__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, updateMetadata__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetCurrentDeploymentRequest'_unknownFields
        (\ x__ y__
           -> x__ {_SetCurrentDeploymentRequest'_unknownFields = y__})
  defMessage
    = SetCurrentDeploymentRequest'_constructor
        {_SetCurrentDeploymentRequest'namespace = Data.ProtoLens.fieldDefault,
         _SetCurrentDeploymentRequest'deployment = Prelude.Nothing,
         _SetCurrentDeploymentRequest'identity = Data.ProtoLens.fieldDefault,
         _SetCurrentDeploymentRequest'updateMetadata = Prelude.Nothing,
         _SetCurrentDeploymentRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetCurrentDeploymentRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser SetCurrentDeploymentRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deployment"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"deployment") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"updateMetadata") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "SetCurrentDeploymentRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'deployment") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'updateMetadata") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData SetCurrentDeploymentRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetCurrentDeploymentRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetCurrentDeploymentRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_SetCurrentDeploymentRequest'deployment x__)
                   (Control.DeepSeq.deepseq
                      (_SetCurrentDeploymentRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_SetCurrentDeploymentRequest'updateMetadata x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.currentDeploymentInfo' @:: Lens' SetCurrentDeploymentResponse Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'currentDeploymentInfo' @:: Lens' SetCurrentDeploymentResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.previousDeploymentInfo' @:: Lens' SetCurrentDeploymentResponse Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'previousDeploymentInfo' @:: Lens' SetCurrentDeploymentResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)@ -}
data SetCurrentDeploymentResponse
  = SetCurrentDeploymentResponse'_constructor {_SetCurrentDeploymentResponse'currentDeploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo),
                                               _SetCurrentDeploymentResponse'previousDeploymentInfo :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo),
                                               _SetCurrentDeploymentResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetCurrentDeploymentResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentResponse "currentDeploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentResponse'currentDeploymentInfo
           (\ x__ y__
              -> x__
                   {_SetCurrentDeploymentResponse'currentDeploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentResponse "maybe'currentDeploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentResponse'currentDeploymentInfo
           (\ x__ y__
              -> x__
                   {_SetCurrentDeploymentResponse'currentDeploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentResponse "previousDeploymentInfo" Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentResponse'previousDeploymentInfo
           (\ x__ y__
              -> x__
                   {_SetCurrentDeploymentResponse'previousDeploymentInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SetCurrentDeploymentResponse "maybe'previousDeploymentInfo" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetCurrentDeploymentResponse'previousDeploymentInfo
           (\ x__ y__
              -> x__
                   {_SetCurrentDeploymentResponse'previousDeploymentInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetCurrentDeploymentResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetCurrentDeploymentResponse"
  packedMessageDescriptor _
    = "\n\
      \\FSSetCurrentDeploymentResponse\DC2b\n\
      \\ETBcurrent_deployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\NAKcurrentDeploymentInfo\DC2d\n\
      \\CANprevious_deployment_info\CAN\STX \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SYNpreviousDeploymentInfo"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        currentDeploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "current_deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'currentDeploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentResponse
        previousDeploymentInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "previous_deployment_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.DeploymentInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'previousDeploymentInfo")) ::
              Data.ProtoLens.FieldDescriptor SetCurrentDeploymentResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, currentDeploymentInfo__field_descriptor),
           (Data.ProtoLens.Tag 2, previousDeploymentInfo__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetCurrentDeploymentResponse'_unknownFields
        (\ x__ y__
           -> x__ {_SetCurrentDeploymentResponse'_unknownFields = y__})
  defMessage
    = SetCurrentDeploymentResponse'_constructor
        {_SetCurrentDeploymentResponse'currentDeploymentInfo = Prelude.Nothing,
         _SetCurrentDeploymentResponse'previousDeploymentInfo = Prelude.Nothing,
         _SetCurrentDeploymentResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetCurrentDeploymentResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser SetCurrentDeploymentResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "current_deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"currentDeploymentInfo") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "previous_deployment_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"previousDeploymentInfo") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "SetCurrentDeploymentResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'currentDeploymentInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'previousDeploymentInfo") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData SetCurrentDeploymentResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetCurrentDeploymentResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetCurrentDeploymentResponse'currentDeploymentInfo x__)
                (Control.DeepSeq.deepseq
                   (_SetCurrentDeploymentResponse'previousDeploymentInfo x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentName' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.version' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ignoreMissingTaskQueues' @:: Lens' SetWorkerDeploymentCurrentVersionRequest Prelude.Bool@ -}
data SetWorkerDeploymentCurrentVersionRequest
  = SetWorkerDeploymentCurrentVersionRequest'_constructor {_SetWorkerDeploymentCurrentVersionRequest'namespace :: !Data.Text.Text,
                                                           _SetWorkerDeploymentCurrentVersionRequest'deploymentName :: !Data.Text.Text,
                                                           _SetWorkerDeploymentCurrentVersionRequest'version :: !Data.Text.Text,
                                                           _SetWorkerDeploymentCurrentVersionRequest'conflictToken :: !Data.ByteString.ByteString,
                                                           _SetWorkerDeploymentCurrentVersionRequest'identity :: !Data.Text.Text,
                                                           _SetWorkerDeploymentCurrentVersionRequest'ignoreMissingTaskQueues :: !Prelude.Bool,
                                                           _SetWorkerDeploymentCurrentVersionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetWorkerDeploymentCurrentVersionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'namespace
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "deploymentName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'deploymentName
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionRequest'deploymentName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "version" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'version
           (\ x__ y__
              -> x__ {_SetWorkerDeploymentCurrentVersionRequest'version = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'conflictToken
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionRequest'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'identity
           (\ x__ y__
              -> x__ {_SetWorkerDeploymentCurrentVersionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionRequest "ignoreMissingTaskQueues" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionRequest'ignoreMissingTaskQueues
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionRequest'ignoreMissingTaskQueues = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetWorkerDeploymentCurrentVersionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetWorkerDeploymentCurrentVersionRequest"
  packedMessageDescriptor _
    = "\n\
      \(SetWorkerDeploymentCurrentVersionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
      \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\CAN\n\
      \\aversion\CAN\ETX \SOH(\tR\aversion\DC2%\n\
      \\SOconflict_token\CAN\EOT \SOH(\fR\rconflictToken\DC2\SUB\n\
      \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2;\n\
      \\SUBignore_missing_task_queues\CAN\ACK \SOH(\bR\ETBignoreMissingTaskQueues"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
        deploymentName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"deploymentName")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
        version__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"version")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
        ignoreMissingTaskQueues__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "ignore_missing_task_queues"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deploymentName__field_descriptor),
           (Data.ProtoLens.Tag 3, version__field_descriptor),
           (Data.ProtoLens.Tag 4, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 5, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, ignoreMissingTaskQueues__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetWorkerDeploymentCurrentVersionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_SetWorkerDeploymentCurrentVersionRequest'_unknownFields = y__})
  defMessage
    = SetWorkerDeploymentCurrentVersionRequest'_constructor
        {_SetWorkerDeploymentCurrentVersionRequest'namespace = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'deploymentName = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'version = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'conflictToken = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'identity = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'ignoreMissingTaskQueues = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetWorkerDeploymentCurrentVersionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser SetWorkerDeploymentCurrentVersionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "deployment_name"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentName") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "version"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"version") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "ignore_missing_task_queues"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SetWorkerDeploymentCurrentVersionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"deploymentName") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"version") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"conflictToken") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (\ b -> if b then 1 else 0) _v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData SetWorkerDeploymentCurrentVersionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetWorkerDeploymentCurrentVersionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetWorkerDeploymentCurrentVersionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_SetWorkerDeploymentCurrentVersionRequest'deploymentName x__)
                   (Control.DeepSeq.deepseq
                      (_SetWorkerDeploymentCurrentVersionRequest'version x__)
                      (Control.DeepSeq.deepseq
                         (_SetWorkerDeploymentCurrentVersionRequest'conflictToken x__)
                         (Control.DeepSeq.deepseq
                            (_SetWorkerDeploymentCurrentVersionRequest'identity x__)
                            (Control.DeepSeq.deepseq
                               (_SetWorkerDeploymentCurrentVersionRequest'ignoreMissingTaskQueues
                                  x__)
                               ()))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' SetWorkerDeploymentCurrentVersionResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.previousVersion' @:: Lens' SetWorkerDeploymentCurrentVersionResponse Data.Text.Text@ -}
data SetWorkerDeploymentCurrentVersionResponse
  = SetWorkerDeploymentCurrentVersionResponse'_constructor {_SetWorkerDeploymentCurrentVersionResponse'conflictToken :: !Data.ByteString.ByteString,
                                                            _SetWorkerDeploymentCurrentVersionResponse'previousVersion :: !Data.Text.Text,
                                                            _SetWorkerDeploymentCurrentVersionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetWorkerDeploymentCurrentVersionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionResponse'conflictToken
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentCurrentVersionResponse "previousVersion" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentCurrentVersionResponse'previousVersion
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentCurrentVersionResponse'previousVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetWorkerDeploymentCurrentVersionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetWorkerDeploymentCurrentVersionResponse"
  packedMessageDescriptor _
    = "\n\
      \)SetWorkerDeploymentCurrentVersionResponse\DC2%\n\
      \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2)\n\
      \\DLEprevious_version\CAN\STX \SOH(\tR\SIpreviousVersion"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionResponse
        previousVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "previous_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"previousVersion")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentCurrentVersionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 2, previousVersion__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetWorkerDeploymentCurrentVersionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_SetWorkerDeploymentCurrentVersionResponse'_unknownFields = y__})
  defMessage
    = SetWorkerDeploymentCurrentVersionResponse'_constructor
        {_SetWorkerDeploymentCurrentVersionResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionResponse'previousVersion = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentCurrentVersionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetWorkerDeploymentCurrentVersionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser SetWorkerDeploymentCurrentVersionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "previous_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"previousVersion") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SetWorkerDeploymentCurrentVersionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"conflictToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"previousVersion") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData SetWorkerDeploymentCurrentVersionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetWorkerDeploymentCurrentVersionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetWorkerDeploymentCurrentVersionResponse'conflictToken x__)
                (Control.DeepSeq.deepseq
                   (_SetWorkerDeploymentCurrentVersionResponse'previousVersion x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' SetWorkerDeploymentRampingVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deploymentName' @:: Lens' SetWorkerDeploymentRampingVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.version' @:: Lens' SetWorkerDeploymentRampingVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.percentage' @:: Lens' SetWorkerDeploymentRampingVersionRequest Prelude.Float@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' SetWorkerDeploymentRampingVersionRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' SetWorkerDeploymentRampingVersionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ignoreMissingTaskQueues' @:: Lens' SetWorkerDeploymentRampingVersionRequest Prelude.Bool@ -}
data SetWorkerDeploymentRampingVersionRequest
  = SetWorkerDeploymentRampingVersionRequest'_constructor {_SetWorkerDeploymentRampingVersionRequest'namespace :: !Data.Text.Text,
                                                           _SetWorkerDeploymentRampingVersionRequest'deploymentName :: !Data.Text.Text,
                                                           _SetWorkerDeploymentRampingVersionRequest'version :: !Data.Text.Text,
                                                           _SetWorkerDeploymentRampingVersionRequest'percentage :: !Prelude.Float,
                                                           _SetWorkerDeploymentRampingVersionRequest'conflictToken :: !Data.ByteString.ByteString,
                                                           _SetWorkerDeploymentRampingVersionRequest'identity :: !Data.Text.Text,
                                                           _SetWorkerDeploymentRampingVersionRequest'ignoreMissingTaskQueues :: !Prelude.Bool,
                                                           _SetWorkerDeploymentRampingVersionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetWorkerDeploymentRampingVersionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'namespace
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "deploymentName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'deploymentName
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionRequest'deploymentName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "version" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'version
           (\ x__ y__
              -> x__ {_SetWorkerDeploymentRampingVersionRequest'version = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "percentage" Prelude.Float where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'percentage
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionRequest'percentage = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'conflictToken
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionRequest'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'identity
           (\ x__ y__
              -> x__ {_SetWorkerDeploymentRampingVersionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionRequest "ignoreMissingTaskQueues" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionRequest'ignoreMissingTaskQueues
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionRequest'ignoreMissingTaskQueues = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetWorkerDeploymentRampingVersionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetWorkerDeploymentRampingVersionRequest"
  packedMessageDescriptor _
    = "\n\
      \(SetWorkerDeploymentRampingVersionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
      \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\CAN\n\
      \\aversion\CAN\ETX \SOH(\tR\aversion\DC2\RS\n\
      \\n\
      \percentage\CAN\EOT \SOH(\STXR\n\
      \percentage\DC2%\n\
      \\SOconflict_token\CAN\ENQ \SOH(\fR\rconflictToken\DC2\SUB\n\
      \\bidentity\CAN\ACK \SOH(\tR\bidentity\DC2;\n\
      \\SUBignore_missing_task_queues\CAN\a \SOH(\bR\ETBignoreMissingTaskQueues"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        deploymentName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deployment_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"deploymentName")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        version__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"version")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        percentage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "percentage"
              (Data.ProtoLens.ScalarField Data.ProtoLens.FloatField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Float)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"percentage")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
        ignoreMissingTaskQueues__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "ignore_missing_task_queues"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, deploymentName__field_descriptor),
           (Data.ProtoLens.Tag 3, version__field_descriptor),
           (Data.ProtoLens.Tag 4, percentage__field_descriptor),
           (Data.ProtoLens.Tag 5, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 6, identity__field_descriptor),
           (Data.ProtoLens.Tag 7, ignoreMissingTaskQueues__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetWorkerDeploymentRampingVersionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_SetWorkerDeploymentRampingVersionRequest'_unknownFields = y__})
  defMessage
    = SetWorkerDeploymentRampingVersionRequest'_constructor
        {_SetWorkerDeploymentRampingVersionRequest'namespace = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'deploymentName = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'version = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'percentage = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'conflictToken = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'identity = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'ignoreMissingTaskQueues = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetWorkerDeploymentRampingVersionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser SetWorkerDeploymentRampingVersionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "deployment_name"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deploymentName") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "version"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"version") y x)
                        37
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Data.ProtoLens.Encoding.Bytes.wordToFloat
                                          Data.ProtoLens.Encoding.Bytes.getFixed32)
                                       "percentage"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"percentage") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "ignore_missing_task_queues"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SetWorkerDeploymentRampingVersionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"deploymentName") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"version") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"percentage") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 37)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putFixed32
                                  Data.ProtoLens.Encoding.Bytes.floatToWord _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"conflictToken") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"ignoreMissingTaskQueues") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (\ b -> if b then 1 else 0) _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData SetWorkerDeploymentRampingVersionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetWorkerDeploymentRampingVersionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetWorkerDeploymentRampingVersionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_SetWorkerDeploymentRampingVersionRequest'deploymentName x__)
                   (Control.DeepSeq.deepseq
                      (_SetWorkerDeploymentRampingVersionRequest'version x__)
                      (Control.DeepSeq.deepseq
                         (_SetWorkerDeploymentRampingVersionRequest'percentage x__)
                         (Control.DeepSeq.deepseq
                            (_SetWorkerDeploymentRampingVersionRequest'conflictToken x__)
                            (Control.DeepSeq.deepseq
                               (_SetWorkerDeploymentRampingVersionRequest'identity x__)
                               (Control.DeepSeq.deepseq
                                  (_SetWorkerDeploymentRampingVersionRequest'ignoreMissingTaskQueues
                                     x__)
                                  ())))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' SetWorkerDeploymentRampingVersionResponse Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.previousVersion' @:: Lens' SetWorkerDeploymentRampingVersionResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.previousPercentage' @:: Lens' SetWorkerDeploymentRampingVersionResponse Prelude.Float@ -}
data SetWorkerDeploymentRampingVersionResponse
  = SetWorkerDeploymentRampingVersionResponse'_constructor {_SetWorkerDeploymentRampingVersionResponse'conflictToken :: !Data.ByteString.ByteString,
                                                            _SetWorkerDeploymentRampingVersionResponse'previousVersion :: !Data.Text.Text,
                                                            _SetWorkerDeploymentRampingVersionResponse'previousPercentage :: !Prelude.Float,
                                                            _SetWorkerDeploymentRampingVersionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SetWorkerDeploymentRampingVersionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionResponse'conflictToken
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionResponse "previousVersion" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionResponse'previousVersion
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionResponse'previousVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SetWorkerDeploymentRampingVersionResponse "previousPercentage" Prelude.Float where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SetWorkerDeploymentRampingVersionResponse'previousPercentage
           (\ x__ y__
              -> x__
                   {_SetWorkerDeploymentRampingVersionResponse'previousPercentage = y__}))
        Prelude.id
instance Data.ProtoLens.Message SetWorkerDeploymentRampingVersionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SetWorkerDeploymentRampingVersionResponse"
  packedMessageDescriptor _
    = "\n\
      \)SetWorkerDeploymentRampingVersionResponse\DC2%\n\
      \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2)\n\
      \\DLEprevious_version\CAN\STX \SOH(\tR\SIpreviousVersion\DC2/\n\
      \\DC3previous_percentage\CAN\ETX \SOH(\STXR\DC2previousPercentage"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionResponse
        previousVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "previous_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"previousVersion")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionResponse
        previousPercentage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "previous_percentage"
              (Data.ProtoLens.ScalarField Data.ProtoLens.FloatField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Float)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"previousPercentage")) ::
              Data.ProtoLens.FieldDescriptor SetWorkerDeploymentRampingVersionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 2, previousVersion__field_descriptor),
           (Data.ProtoLens.Tag 3, previousPercentage__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SetWorkerDeploymentRampingVersionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_SetWorkerDeploymentRampingVersionResponse'_unknownFields = y__})
  defMessage
    = SetWorkerDeploymentRampingVersionResponse'_constructor
        {_SetWorkerDeploymentRampingVersionResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionResponse'previousVersion = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionResponse'previousPercentage = Data.ProtoLens.fieldDefault,
         _SetWorkerDeploymentRampingVersionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SetWorkerDeploymentRampingVersionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser SetWorkerDeploymentRampingVersionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "previous_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"previousVersion") y x)
                        29
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Data.ProtoLens.Encoding.Bytes.wordToFloat
                                          Data.ProtoLens.Encoding.Bytes.getFixed32)
                                       "previous_percentage"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"previousPercentage") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SetWorkerDeploymentRampingVersionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"conflictToken") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((\ bs
                          -> (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (Prelude.fromIntegral (Data.ByteString.length bs)))
                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"previousVersion") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"previousPercentage") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 29)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putFixed32
                               Data.ProtoLens.Encoding.Bytes.floatToWord _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData SetWorkerDeploymentRampingVersionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SetWorkerDeploymentRampingVersionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SetWorkerDeploymentRampingVersionResponse'conflictToken x__)
                (Control.DeepSeq.deepseq
                   (_SetWorkerDeploymentRampingVersionResponse'previousVersion x__)
                   (Control.DeepSeq.deepseq
                      (_SetWorkerDeploymentRampingVersionResponse'previousPercentage x__)
                      ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' ShutdownWorkerRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.stickyTaskQueue' @:: Lens' ShutdownWorkerRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' ShutdownWorkerRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' ShutdownWorkerRequest Data.Text.Text@ -}
data ShutdownWorkerRequest
  = ShutdownWorkerRequest'_constructor {_ShutdownWorkerRequest'namespace :: !Data.Text.Text,
                                        _ShutdownWorkerRequest'stickyTaskQueue :: !Data.Text.Text,
                                        _ShutdownWorkerRequest'identity :: !Data.Text.Text,
                                        _ShutdownWorkerRequest'reason :: !Data.Text.Text,
                                        _ShutdownWorkerRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ShutdownWorkerRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField ShutdownWorkerRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ShutdownWorkerRequest'namespace
           (\ x__ y__ -> x__ {_ShutdownWorkerRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ShutdownWorkerRequest "stickyTaskQueue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ShutdownWorkerRequest'stickyTaskQueue
           (\ x__ y__ -> x__ {_ShutdownWorkerRequest'stickyTaskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ShutdownWorkerRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ShutdownWorkerRequest'identity
           (\ x__ y__ -> x__ {_ShutdownWorkerRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField ShutdownWorkerRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _ShutdownWorkerRequest'reason
           (\ x__ y__ -> x__ {_ShutdownWorkerRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Message ShutdownWorkerRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ShutdownWorkerRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKShutdownWorkerRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
      \\DC1sticky_task_queue\CAN\STX \SOH(\tR\SIstickyTaskQueue\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\SYN\n\
      \\ACKreason\CAN\EOT \SOH(\tR\ACKreason"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor ShutdownWorkerRequest
        stickyTaskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "sticky_task_queue"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"stickyTaskQueue")) ::
              Data.ProtoLens.FieldDescriptor ShutdownWorkerRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor ShutdownWorkerRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor ShutdownWorkerRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, stickyTaskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, reason__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ShutdownWorkerRequest'_unknownFields
        (\ x__ y__ -> x__ {_ShutdownWorkerRequest'_unknownFields = y__})
  defMessage
    = ShutdownWorkerRequest'_constructor
        {_ShutdownWorkerRequest'namespace = Data.ProtoLens.fieldDefault,
         _ShutdownWorkerRequest'stickyTaskQueue = Data.ProtoLens.fieldDefault,
         _ShutdownWorkerRequest'identity = Data.ProtoLens.fieldDefault,
         _ShutdownWorkerRequest'reason = Data.ProtoLens.fieldDefault,
         _ShutdownWorkerRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ShutdownWorkerRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser ShutdownWorkerRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "sticky_task_queue"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"stickyTaskQueue") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ShutdownWorkerRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"stickyTaskQueue") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData ShutdownWorkerRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ShutdownWorkerRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_ShutdownWorkerRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_ShutdownWorkerRequest'stickyTaskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_ShutdownWorkerRequest'identity x__)
                      (Control.DeepSeq.deepseq (_ShutdownWorkerRequest'reason x__) ()))))
{- | Fields :
      -}
data ShutdownWorkerResponse
  = ShutdownWorkerResponse'_constructor {_ShutdownWorkerResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show ShutdownWorkerResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message ShutdownWorkerResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.ShutdownWorkerResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNShutdownWorkerResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _ShutdownWorkerResponse'_unknownFields
        (\ x__ y__ -> x__ {_ShutdownWorkerResponse'_unknownFields = y__})
  defMessage
    = ShutdownWorkerResponse'_constructor
        {_ShutdownWorkerResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          ShutdownWorkerResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser ShutdownWorkerResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ShutdownWorkerResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData ShutdownWorkerResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_ShutdownWorkerResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowType' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowType' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.input' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'input' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowRunTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowRunTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowTaskTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowTaskTimeout' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowIdReusePolicy' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowIdConflictPolicy' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.signalName' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.signalInput' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'signalInput' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.control' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.retryPolicy' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.RetryPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'retryPolicy' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cronSchedule' @:: Lens' SignalWithStartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.memo' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Memo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'memo' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.searchAttributes' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.SearchAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'searchAttributes' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.header' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Header@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'header' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowStartDelay' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowStartDelay' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.userMetadata' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'userMetadata' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.links' @:: Lens' SignalWithStartWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Link]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'links' @:: Lens' SignalWithStartWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versioningOverride' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'versioningOverride' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.priority' @:: Lens' SignalWithStartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Priority@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'priority' @:: Lens' SignalWithStartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority)@ -}
data SignalWithStartWorkflowExecutionRequest
  = SignalWithStartWorkflowExecutionRequest'_constructor {_SignalWithStartWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'workflowId :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'workflowType :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType),
                                                          _SignalWithStartWorkflowExecutionRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                                          _SignalWithStartWorkflowExecutionRequest'input :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                          _SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                          _SignalWithStartWorkflowExecutionRequest'workflowRunTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                          _SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                          _SignalWithStartWorkflowExecutionRequest'identity :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'requestId :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'workflowIdReusePolicy :: !Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy,
                                                          _SignalWithStartWorkflowExecutionRequest'workflowIdConflictPolicy :: !Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy,
                                                          _SignalWithStartWorkflowExecutionRequest'signalName :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'signalInput :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                          _SignalWithStartWorkflowExecutionRequest'control :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'retryPolicy :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy),
                                                          _SignalWithStartWorkflowExecutionRequest'cronSchedule :: !Data.Text.Text,
                                                          _SignalWithStartWorkflowExecutionRequest'memo :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo),
                                                          _SignalWithStartWorkflowExecutionRequest'searchAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes),
                                                          _SignalWithStartWorkflowExecutionRequest'header :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header),
                                                          _SignalWithStartWorkflowExecutionRequest'workflowStartDelay :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                          _SignalWithStartWorkflowExecutionRequest'userMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata),
                                                          _SignalWithStartWorkflowExecutionRequest'links :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link),
                                                          _SignalWithStartWorkflowExecutionRequest'versioningOverride :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride),
                                                          _SignalWithStartWorkflowExecutionRequest'priority :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority),
                                                          _SignalWithStartWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SignalWithStartWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowId
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowType" Proto.Temporal.Api.Common.V1.Message.WorkflowType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowType
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowType = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'workflowType" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowType
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'taskQueue
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'taskQueue
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "input" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'input
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'input = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'input" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'input
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'input = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowExecutionTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'workflowExecutionTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowRunTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowRunTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowRunTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'workflowRunTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowRunTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowRunTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowTaskTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'workflowTaskTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'identity
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'requestId
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowIdReusePolicy" Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowIdReusePolicy
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowIdReusePolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowIdConflictPolicy" Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowIdConflictPolicy
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowIdConflictPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "signalName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'signalName
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'signalName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "signalInput" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'signalInput
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'signalInput = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'signalInput" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'signalInput
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'signalInput = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "control" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'control
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'control = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "retryPolicy" Proto.Temporal.Api.Common.V1.Message.RetryPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'retryPolicy
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'retryPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'retryPolicy" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'retryPolicy
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'retryPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "cronSchedule" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'cronSchedule
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'cronSchedule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "memo" Proto.Temporal.Api.Common.V1.Message.Memo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'memo
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'memo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'memo" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'memo
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'memo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "searchAttributes" Proto.Temporal.Api.Common.V1.Message.SearchAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'searchAttributes
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'searchAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'searchAttributes" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'searchAttributes
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'searchAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "header" Proto.Temporal.Api.Common.V1.Message.Header where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'header
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'header = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'header" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'header
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'header = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "workflowStartDelay" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowStartDelay
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowStartDelay = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'workflowStartDelay" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'workflowStartDelay
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'workflowStartDelay = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "userMetadata" Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'userMetadata
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'userMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'userMetadata" (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'userMetadata
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'userMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "links" [Proto.Temporal.Api.Common.V1.Message.Link] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'links = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "vec'links" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'links = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "versioningOverride" Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'versioningOverride
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'versioningOverride = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'versioningOverride" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'versioningOverride
           (\ x__ y__
              -> x__
                   {_SignalWithStartWorkflowExecutionRequest'versioningOverride = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "priority" Proto.Temporal.Api.Common.V1.Message.Priority where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'priority
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'priority = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionRequest "maybe'priority" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionRequest'priority
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionRequest'priority = y__}))
        Prelude.id
instance Data.ProtoLens.Message SignalWithStartWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SignalWithStartWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \'SignalWithStartWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2I\n\
      \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2C\n\
      \\n\
      \task_queue\CAN\EOT \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC26\n\
      \\ENQinput\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2W\n\
      \\SUBworkflow_execution_timeout\CAN\ACK \SOH(\v2\EM.google.protobuf.DurationR\CANworkflowExecutionTimeout\DC2K\n\
      \\DC4workflow_run_timeout\CAN\a \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowRunTimeout\DC2M\n\
      \\NAKworkflow_task_timeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\DC3workflowTaskTimeout\DC2\SUB\n\
      \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\n\
      \ \SOH(\tR\trequestId\DC2e\n\
      \\CANworkflow_id_reuse_policy\CAN\v \SOH(\SO2,.temporal.api.enums.v1.WorkflowIdReusePolicyR\NAKworkflowIdReusePolicy\DC2n\n\
      \\ESCworkflow_id_conflict_policy\CAN\SYN \SOH(\SO2/.temporal.api.enums.v1.WorkflowIdConflictPolicyR\CANworkflowIdConflictPolicy\DC2\US\n\
      \\vsignal_name\CAN\f \SOH(\tR\n\
      \signalName\DC2C\n\
      \\fsignal_input\CAN\r \SOH(\v2 .temporal.api.common.v1.PayloadsR\vsignalInput\DC2\CAN\n\
      \\acontrol\CAN\SO \SOH(\tR\acontrol\DC2F\n\
      \\fretry_policy\CAN\SI \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2#\n\
      \\rcron_schedule\CAN\DLE \SOH(\tR\fcronSchedule\DC20\n\
      \\EOTmemo\CAN\DC1 \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
      \\DC1search_attributes\CAN\DC2 \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC26\n\
      \\ACKheader\CAN\DC3 \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC2K\n\
      \\DC4workflow_start_delay\CAN\DC4 \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowStartDelay\DC2F\n\
      \\ruser_metadata\CAN\ETB \SOH(\v2!.temporal.api.sdk.v1.UserMetadataR\fuserMetadata\DC22\n\
      \\ENQlinks\CAN\CAN \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\DC2]\n\
      \\DC3versioning_override\CAN\EM \SOH(\v2,.temporal.api.workflow.v1.VersioningOverrideR\DC2versioningOverride\DC2<\n\
      \\bpriority\CAN\SUB \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriorityJ\EOT\b\NAK\DLE\SYN"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_type"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowType)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowType")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        input__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "input"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'input")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowExecutionTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecutionTimeout")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowRunTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_run_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowRunTimeout")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowTaskTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_task_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowTaskTimeout")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowIdReusePolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id_reuse_policy"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowIdReusePolicy")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowIdConflictPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id_conflict_policy"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowIdConflictPolicy")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        signalName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "signal_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"signalName")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        signalInput__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "signal_input"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'signalInput")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        control__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "control"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"control")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        retryPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.RetryPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicy")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        cronSchedule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cron_schedule"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"cronSchedule")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        memo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "memo"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Memo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'memo")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        searchAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "search_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.SearchAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'searchAttributes")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        header__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Header)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'header")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        workflowStartDelay__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_start_delay"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowStartDelay")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        userMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "user_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'userMetadata")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        links__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "links"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Link)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"links")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        versioningOverride__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versioning_override"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'versioningOverride")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
        priority__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "priority"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Priority)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'priority")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, workflowType__field_descriptor),
           (Data.ProtoLens.Tag 4, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 5, input__field_descriptor),
           (Data.ProtoLens.Tag 6, workflowExecutionTimeout__field_descriptor),
           (Data.ProtoLens.Tag 7, workflowRunTimeout__field_descriptor),
           (Data.ProtoLens.Tag 8, workflowTaskTimeout__field_descriptor),
           (Data.ProtoLens.Tag 9, identity__field_descriptor),
           (Data.ProtoLens.Tag 10, requestId__field_descriptor),
           (Data.ProtoLens.Tag 11, workflowIdReusePolicy__field_descriptor),
           (Data.ProtoLens.Tag 22, 
            workflowIdConflictPolicy__field_descriptor),
           (Data.ProtoLens.Tag 12, signalName__field_descriptor),
           (Data.ProtoLens.Tag 13, signalInput__field_descriptor),
           (Data.ProtoLens.Tag 14, control__field_descriptor),
           (Data.ProtoLens.Tag 15, retryPolicy__field_descriptor),
           (Data.ProtoLens.Tag 16, cronSchedule__field_descriptor),
           (Data.ProtoLens.Tag 17, memo__field_descriptor),
           (Data.ProtoLens.Tag 18, searchAttributes__field_descriptor),
           (Data.ProtoLens.Tag 19, header__field_descriptor),
           (Data.ProtoLens.Tag 20, workflowStartDelay__field_descriptor),
           (Data.ProtoLens.Tag 23, userMetadata__field_descriptor),
           (Data.ProtoLens.Tag 24, links__field_descriptor),
           (Data.ProtoLens.Tag 25, versioningOverride__field_descriptor),
           (Data.ProtoLens.Tag 26, priority__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SignalWithStartWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_SignalWithStartWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = SignalWithStartWorkflowExecutionRequest'_constructor
        {_SignalWithStartWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'workflowId = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'workflowType = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'taskQueue = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'input = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'workflowRunTimeout = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'identity = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'requestId = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'workflowIdReusePolicy = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'workflowIdConflictPolicy = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'signalName = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'signalInput = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'control = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'retryPolicy = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'cronSchedule = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionRequest'memo = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'searchAttributes = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'header = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'workflowStartDelay = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'userMetadata = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'links = Data.Vector.Generic.empty,
         _SignalWithStartWorkflowExecutionRequest'versioningOverride = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'priority = Prelude.Nothing,
         _SignalWithStartWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SignalWithStartWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Link
             -> Data.ProtoLens.Encoding.Bytes.Parser SignalWithStartWorkflowExecutionRequest
        loop x mutable'links
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'links)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'links") frozen'links x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'links
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                                  mutable'links
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowType") y x)
                                  mutable'links
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                                  mutable'links
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "input"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"input") y x)
                                  mutable'links
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionTimeout") y x)
                                  mutable'links
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_run_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowRunTimeout") y x)
                                  mutable'links
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_task_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowTaskTimeout") y x)
                                  mutable'links
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'links
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                                  mutable'links
                        88
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "workflow_id_reuse_policy"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowIdReusePolicy") y x)
                                  mutable'links
                        176
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "workflow_id_conflict_policy"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowIdConflictPolicy") y x)
                                  mutable'links
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "signal_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"signalName") y x)
                                  mutable'links
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "signal_input"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"signalInput") y x)
                                  mutable'links
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "control"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"control") y x)
                                  mutable'links
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryPolicy") y x)
                                  mutable'links
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "cron_schedule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"cronSchedule") y x)
                                  mutable'links
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "memo"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"memo") y x)
                                  mutable'links
                        146
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "search_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"searchAttributes") y x)
                                  mutable'links
                        154
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"header") y x)
                                  mutable'links
                        162
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_start_delay"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowStartDelay") y x)
                                  mutable'links
                        186
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "user_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"userMetadata") y x)
                                  mutable'links
                        194
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "links"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'links y)
                                loop x v
                        202
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "versioning_override"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"versioningOverride") y x)
                                  mutable'links
                        210
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "priority"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"priority") y x)
                                  mutable'links
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'links
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'links)
          "SignalWithStartWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'workflowType") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'input") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'workflowExecutionTimeout") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'workflowRunTimeout") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'workflowTaskTimeout")
                                         _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"identity") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                              ((Prelude..)
                                                 (\ bs
                                                    -> (Data.Monoid.<>)
                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                            (Prelude.fromIntegral
                                                               (Data.ByteString.length bs)))
                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                            bs))
                                                 Data.Text.Encoding.encodeUtf8 _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"requestId") _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                 ((Prelude..)
                                                    (\ bs
                                                       -> (Data.Monoid.<>)
                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                               (Prelude.fromIntegral
                                                                  (Data.ByteString.length bs)))
                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                               bs))
                                                    Data.Text.Encoding.encodeUtf8 _v))
                                        ((Data.Monoid.<>)
                                           (let
                                              _v
                                                = Lens.Family2.view
                                                    (Data.ProtoLens.Field.field
                                                       @"workflowIdReusePolicy")
                                                    _x
                                            in
                                              if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                  Data.Monoid.mempty
                                              else
                                                  (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 88)
                                                    ((Prelude..)
                                                       ((Prelude..)
                                                          Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          Prelude.fromIntegral)
                                                       Prelude.fromEnum _v))
                                           ((Data.Monoid.<>)
                                              (let
                                                 _v
                                                   = Lens.Family2.view
                                                       (Data.ProtoLens.Field.field
                                                          @"workflowIdConflictPolicy")
                                                       _x
                                               in
                                                 if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                     Data.Monoid.mempty
                                                 else
                                                     (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 176)
                                                       ((Prelude..)
                                                          ((Prelude..)
                                                             Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             Prelude.fromIntegral)
                                                          Prelude.fromEnum _v))
                                              ((Data.Monoid.<>)
                                                 (let
                                                    _v
                                                      = Lens.Family2.view
                                                          (Data.ProtoLens.Field.field @"signalName")
                                                          _x
                                                  in
                                                    if (Prelude.==)
                                                         _v Data.ProtoLens.fieldDefault then
                                                        Data.Monoid.mempty
                                                    else
                                                        (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             98)
                                                          ((Prelude..)
                                                             (\ bs
                                                                -> (Data.Monoid.<>)
                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                        (Prelude.fromIntegral
                                                                           (Data.ByteString.length
                                                                              bs)))
                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                        bs))
                                                             Data.Text.Encoding.encodeUtf8 _v))
                                                 ((Data.Monoid.<>)
                                                    (case
                                                         Lens.Family2.view
                                                           (Data.ProtoLens.Field.field
                                                              @"maybe'signalInput")
                                                           _x
                                                     of
                                                       Prelude.Nothing -> Data.Monoid.mempty
                                                       (Prelude.Just _v)
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 106)
                                                              ((Prelude..)
                                                                 (\ bs
                                                                    -> (Data.Monoid.<>)
                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            (Prelude.fromIntegral
                                                                               (Data.ByteString.length
                                                                                  bs)))
                                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                            bs))
                                                                 Data.ProtoLens.encodeMessage _v))
                                                    ((Data.Monoid.<>)
                                                       (let
                                                          _v
                                                            = Lens.Family2.view
                                                                (Data.ProtoLens.Field.field
                                                                   @"control")
                                                                _x
                                                        in
                                                          if (Prelude.==)
                                                               _v Data.ProtoLens.fieldDefault then
                                                              Data.Monoid.mempty
                                                          else
                                                              (Data.Monoid.<>)
                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                   114)
                                                                ((Prelude..)
                                                                   (\ bs
                                                                      -> (Data.Monoid.<>)
                                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                              (Prelude.fromIntegral
                                                                                 (Data.ByteString.length
                                                                                    bs)))
                                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                              bs))
                                                                   Data.Text.Encoding.encodeUtf8
                                                                   _v))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'retryPolicy")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       122)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          ((Data.Monoid.<>)
                                                             (let
                                                                _v
                                                                  = Lens.Family2.view
                                                                      (Data.ProtoLens.Field.field
                                                                         @"cronSchedule")
                                                                      _x
                                                              in
                                                                if (Prelude.==)
                                                                     _v
                                                                     Data.ProtoLens.fieldDefault then
                                                                    Data.Monoid.mempty
                                                                else
                                                                    (Data.Monoid.<>)
                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                         130)
                                                                      ((Prelude..)
                                                                         (\ bs
                                                                            -> (Data.Monoid.<>)
                                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                    (Prelude.fromIntegral
                                                                                       (Data.ByteString.length
                                                                                          bs)))
                                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                    bs))
                                                                         Data.Text.Encoding.encodeUtf8
                                                                         _v))
                                                             ((Data.Monoid.<>)
                                                                (case
                                                                     Lens.Family2.view
                                                                       (Data.ProtoLens.Field.field
                                                                          @"maybe'memo")
                                                                       _x
                                                                 of
                                                                   Prelude.Nothing
                                                                     -> Data.Monoid.mempty
                                                                   (Prelude.Just _v)
                                                                     -> (Data.Monoid.<>)
                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                             138)
                                                                          ((Prelude..)
                                                                             (\ bs
                                                                                -> (Data.Monoid.<>)
                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                        (Prelude.fromIntegral
                                                                                           (Data.ByteString.length
                                                                                              bs)))
                                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                        bs))
                                                                             Data.ProtoLens.encodeMessage
                                                                             _v))
                                                                ((Data.Monoid.<>)
                                                                   (case
                                                                        Lens.Family2.view
                                                                          (Data.ProtoLens.Field.field
                                                                             @"maybe'searchAttributes")
                                                                          _x
                                                                    of
                                                                      Prelude.Nothing
                                                                        -> Data.Monoid.mempty
                                                                      (Prelude.Just _v)
                                                                        -> (Data.Monoid.<>)
                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                146)
                                                                             ((Prelude..)
                                                                                (\ bs
                                                                                   -> (Data.Monoid.<>)
                                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                           (Prelude.fromIntegral
                                                                                              (Data.ByteString.length
                                                                                                 bs)))
                                                                                        (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                           bs))
                                                                                Data.ProtoLens.encodeMessage
                                                                                _v))
                                                                   ((Data.Monoid.<>)
                                                                      (case
                                                                           Lens.Family2.view
                                                                             (Data.ProtoLens.Field.field
                                                                                @"maybe'header")
                                                                             _x
                                                                       of
                                                                         Prelude.Nothing
                                                                           -> Data.Monoid.mempty
                                                                         (Prelude.Just _v)
                                                                           -> (Data.Monoid.<>)
                                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                   154)
                                                                                ((Prelude..)
                                                                                   (\ bs
                                                                                      -> (Data.Monoid.<>)
                                                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                              (Prelude.fromIntegral
                                                                                                 (Data.ByteString.length
                                                                                                    bs)))
                                                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                              bs))
                                                                                   Data.ProtoLens.encodeMessage
                                                                                   _v))
                                                                      ((Data.Monoid.<>)
                                                                         (case
                                                                              Lens.Family2.view
                                                                                (Data.ProtoLens.Field.field
                                                                                   @"maybe'workflowStartDelay")
                                                                                _x
                                                                          of
                                                                            Prelude.Nothing
                                                                              -> Data.Monoid.mempty
                                                                            (Prelude.Just _v)
                                                                              -> (Data.Monoid.<>)
                                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                      162)
                                                                                   ((Prelude..)
                                                                                      (\ bs
                                                                                         -> (Data.Monoid.<>)
                                                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                 (Prelude.fromIntegral
                                                                                                    (Data.ByteString.length
                                                                                                       bs)))
                                                                                              (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                 bs))
                                                                                      Data.ProtoLens.encodeMessage
                                                                                      _v))
                                                                         ((Data.Monoid.<>)
                                                                            (case
                                                                                 Lens.Family2.view
                                                                                   (Data.ProtoLens.Field.field
                                                                                      @"maybe'userMetadata")
                                                                                   _x
                                                                             of
                                                                               Prelude.Nothing
                                                                                 -> Data.Monoid.mempty
                                                                               (Prelude.Just _v)
                                                                                 -> (Data.Monoid.<>)
                                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                         186)
                                                                                      ((Prelude..)
                                                                                         (\ bs
                                                                                            -> (Data.Monoid.<>)
                                                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                    (Prelude.fromIntegral
                                                                                                       (Data.ByteString.length
                                                                                                          bs)))
                                                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                    bs))
                                                                                         Data.ProtoLens.encodeMessage
                                                                                         _v))
                                                                            ((Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                                                  (\ _v
                                                                                     -> (Data.Monoid.<>)
                                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                             194)
                                                                                          ((Prelude..)
                                                                                             (\ bs
                                                                                                -> (Data.Monoid.<>)
                                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                        (Prelude.fromIntegral
                                                                                                           (Data.ByteString.length
                                                                                                              bs)))
                                                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                        bs))
                                                                                             Data.ProtoLens.encodeMessage
                                                                                             _v))
                                                                                  (Lens.Family2.view
                                                                                     (Data.ProtoLens.Field.field
                                                                                        @"vec'links")
                                                                                     _x))
                                                                               ((Data.Monoid.<>)
                                                                                  (case
                                                                                       Lens.Family2.view
                                                                                         (Data.ProtoLens.Field.field
                                                                                            @"maybe'versioningOverride")
                                                                                         _x
                                                                                   of
                                                                                     Prelude.Nothing
                                                                                       -> Data.Monoid.mempty
                                                                                     (Prelude.Just _v)
                                                                                       -> (Data.Monoid.<>)
                                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                               202)
                                                                                            ((Prelude..)
                                                                                               (\ bs
                                                                                                  -> (Data.Monoid.<>)
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                          (Prelude.fromIntegral
                                                                                                             (Data.ByteString.length
                                                                                                                bs)))
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                          bs))
                                                                                               Data.ProtoLens.encodeMessage
                                                                                               _v))
                                                                                  ((Data.Monoid.<>)
                                                                                     (case
                                                                                          Lens.Family2.view
                                                                                            (Data.ProtoLens.Field.field
                                                                                               @"maybe'priority")
                                                                                            _x
                                                                                      of
                                                                                        Prelude.Nothing
                                                                                          -> Data.Monoid.mempty
                                                                                        (Prelude.Just _v)
                                                                                          -> (Data.Monoid.<>)
                                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                  210)
                                                                                               ((Prelude..)
                                                                                                  (\ bs
                                                                                                     -> (Data.Monoid.<>)
                                                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                             (Prelude.fromIntegral
                                                                                                                (Data.ByteString.length
                                                                                                                   bs)))
                                                                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                             bs))
                                                                                                  Data.ProtoLens.encodeMessage
                                                                                                  _v))
                                                                                     (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                                        (Lens.Family2.view
                                                                                           Data.ProtoLens.unknownFields
                                                                                           _x))))))))))))))))))))))))))
instance Control.DeepSeq.NFData SignalWithStartWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SignalWithStartWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SignalWithStartWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_SignalWithStartWorkflowExecutionRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_SignalWithStartWorkflowExecutionRequest'workflowType x__)
                      (Control.DeepSeq.deepseq
                         (_SignalWithStartWorkflowExecutionRequest'taskQueue x__)
                         (Control.DeepSeq.deepseq
                            (_SignalWithStartWorkflowExecutionRequest'input x__)
                            (Control.DeepSeq.deepseq
                               (_SignalWithStartWorkflowExecutionRequest'workflowExecutionTimeout
                                  x__)
                               (Control.DeepSeq.deepseq
                                  (_SignalWithStartWorkflowExecutionRequest'workflowRunTimeout x__)
                                  (Control.DeepSeq.deepseq
                                     (_SignalWithStartWorkflowExecutionRequest'workflowTaskTimeout
                                        x__)
                                     (Control.DeepSeq.deepseq
                                        (_SignalWithStartWorkflowExecutionRequest'identity x__)
                                        (Control.DeepSeq.deepseq
                                           (_SignalWithStartWorkflowExecutionRequest'requestId x__)
                                           (Control.DeepSeq.deepseq
                                              (_SignalWithStartWorkflowExecutionRequest'workflowIdReusePolicy
                                                 x__)
                                              (Control.DeepSeq.deepseq
                                                 (_SignalWithStartWorkflowExecutionRequest'workflowIdConflictPolicy
                                                    x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_SignalWithStartWorkflowExecutionRequest'signalName
                                                       x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_SignalWithStartWorkflowExecutionRequest'signalInput
                                                          x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_SignalWithStartWorkflowExecutionRequest'control
                                                             x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_SignalWithStartWorkflowExecutionRequest'retryPolicy
                                                                x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_SignalWithStartWorkflowExecutionRequest'cronSchedule
                                                                   x__)
                                                                (Control.DeepSeq.deepseq
                                                                   (_SignalWithStartWorkflowExecutionRequest'memo
                                                                      x__)
                                                                   (Control.DeepSeq.deepseq
                                                                      (_SignalWithStartWorkflowExecutionRequest'searchAttributes
                                                                         x__)
                                                                      (Control.DeepSeq.deepseq
                                                                         (_SignalWithStartWorkflowExecutionRequest'header
                                                                            x__)
                                                                         (Control.DeepSeq.deepseq
                                                                            (_SignalWithStartWorkflowExecutionRequest'workflowStartDelay
                                                                               x__)
                                                                            (Control.DeepSeq.deepseq
                                                                               (_SignalWithStartWorkflowExecutionRequest'userMetadata
                                                                                  x__)
                                                                               (Control.DeepSeq.deepseq
                                                                                  (_SignalWithStartWorkflowExecutionRequest'links
                                                                                     x__)
                                                                                  (Control.DeepSeq.deepseq
                                                                                     (_SignalWithStartWorkflowExecutionRequest'versioningOverride
                                                                                        x__)
                                                                                     (Control.DeepSeq.deepseq
                                                                                        (_SignalWithStartWorkflowExecutionRequest'priority
                                                                                           x__)
                                                                                        ())))))))))))))))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' SignalWithStartWorkflowExecutionResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.started' @:: Lens' SignalWithStartWorkflowExecutionResponse Prelude.Bool@ -}
data SignalWithStartWorkflowExecutionResponse
  = SignalWithStartWorkflowExecutionResponse'_constructor {_SignalWithStartWorkflowExecutionResponse'runId :: !Data.Text.Text,
                                                           _SignalWithStartWorkflowExecutionResponse'started :: !Prelude.Bool,
                                                           _SignalWithStartWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SignalWithStartWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionResponse "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionResponse'runId
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionResponse'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWithStartWorkflowExecutionResponse "started" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWithStartWorkflowExecutionResponse'started
           (\ x__ y__
              -> x__ {_SignalWithStartWorkflowExecutionResponse'started = y__}))
        Prelude.id
instance Data.ProtoLens.Message SignalWithStartWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SignalWithStartWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \(SignalWithStartWorkflowExecutionResponse\DC2\NAK\n\
      \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId\DC2\CAN\n\
      \\astarted\CAN\STX \SOH(\bR\astarted"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionResponse
        started__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "started"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"started")) ::
              Data.ProtoLens.FieldDescriptor SignalWithStartWorkflowExecutionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, runId__field_descriptor),
           (Data.ProtoLens.Tag 2, started__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SignalWithStartWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_SignalWithStartWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = SignalWithStartWorkflowExecutionResponse'_constructor
        {_SignalWithStartWorkflowExecutionResponse'runId = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionResponse'started = Data.ProtoLens.fieldDefault,
         _SignalWithStartWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SignalWithStartWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser SignalWithStartWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "started"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"started") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SignalWithStartWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"started") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData SignalWithStartWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SignalWithStartWorkflowExecutionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SignalWithStartWorkflowExecutionResponse'runId x__)
                (Control.DeepSeq.deepseq
                   (_SignalWithStartWorkflowExecutionResponse'started x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' SignalWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' SignalWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' SignalWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.signalName' @:: Lens' SignalWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.input' @:: Lens' SignalWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'input' @:: Lens' SignalWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' SignalWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' SignalWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.control' @:: Lens' SignalWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.header' @:: Lens' SignalWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Header@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'header' @:: Lens' SignalWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.links' @:: Lens' SignalWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Link]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'links' @:: Lens' SignalWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link)@ -}
data SignalWorkflowExecutionRequest
  = SignalWorkflowExecutionRequest'_constructor {_SignalWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                 _SignalWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                 _SignalWorkflowExecutionRequest'signalName :: !Data.Text.Text,
                                                 _SignalWorkflowExecutionRequest'input :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                 _SignalWorkflowExecutionRequest'identity :: !Data.Text.Text,
                                                 _SignalWorkflowExecutionRequest'requestId :: !Data.Text.Text,
                                                 _SignalWorkflowExecutionRequest'control :: !Data.Text.Text,
                                                 _SignalWorkflowExecutionRequest'header :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header),
                                                 _SignalWorkflowExecutionRequest'links :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link),
                                                 _SignalWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SignalWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "signalName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'signalName
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'signalName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "input" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'input
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'input = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "maybe'input" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'input
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'input = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'identity
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'requestId
           (\ x__ y__
              -> x__ {_SignalWorkflowExecutionRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "control" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'control
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'control = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "header" Proto.Temporal.Api.Common.V1.Message.Header where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'header
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'header = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "maybe'header" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'header
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'header = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "links" [Proto.Temporal.Api.Common.V1.Message.Link] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'links
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'links = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField SignalWorkflowExecutionRequest "vec'links" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _SignalWorkflowExecutionRequest'links
           (\ x__ y__ -> x__ {_SignalWorkflowExecutionRequest'links = y__}))
        Prelude.id
instance Data.ProtoLens.Message SignalWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SignalWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \\RSSignalWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\US\n\
      \\vsignal_name\CAN\ETX \SOH(\tR\n\
      \signalName\DC26\n\
      \\ENQinput\CAN\EOT \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2\SUB\n\
      \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\ACK \SOH(\tR\trequestId\DC2\CAN\n\
      \\acontrol\CAN\a \SOH(\tR\acontrol\DC26\n\
      \\ACKheader\CAN\b \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC22\n\
      \\ENQlinks\CAN\n\
      \ \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinksJ\EOT\b\t\DLE\n"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        signalName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "signal_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"signalName")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        input__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "input"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'input")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        control__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "control"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"control")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        header__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Header)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'header")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
        links__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "links"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Link)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"links")) ::
              Data.ProtoLens.FieldDescriptor SignalWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, signalName__field_descriptor),
           (Data.ProtoLens.Tag 4, input__field_descriptor),
           (Data.ProtoLens.Tag 5, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, requestId__field_descriptor),
           (Data.ProtoLens.Tag 7, control__field_descriptor),
           (Data.ProtoLens.Tag 8, header__field_descriptor),
           (Data.ProtoLens.Tag 10, links__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SignalWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_SignalWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = SignalWorkflowExecutionRequest'_constructor
        {_SignalWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _SignalWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _SignalWorkflowExecutionRequest'signalName = Data.ProtoLens.fieldDefault,
         _SignalWorkflowExecutionRequest'input = Prelude.Nothing,
         _SignalWorkflowExecutionRequest'identity = Data.ProtoLens.fieldDefault,
         _SignalWorkflowExecutionRequest'requestId = Data.ProtoLens.fieldDefault,
         _SignalWorkflowExecutionRequest'control = Data.ProtoLens.fieldDefault,
         _SignalWorkflowExecutionRequest'header = Prelude.Nothing,
         _SignalWorkflowExecutionRequest'links = Data.Vector.Generic.empty,
         _SignalWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SignalWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Link
             -> Data.ProtoLens.Encoding.Bytes.Parser SignalWorkflowExecutionRequest
        loop x mutable'links
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'links)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'links") frozen'links x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'links
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                                  mutable'links
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "signal_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"signalName") y x)
                                  mutable'links
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "input"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"input") y x)
                                  mutable'links
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'links
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                                  mutable'links
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "control"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"control") y x)
                                  mutable'links
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"header") y x)
                                  mutable'links
                        82
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "links"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'links y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'links
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'links)
          "SignalWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"signalName") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'input") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v = Lens.Family2.view (Data.ProtoLens.Field.field @"control") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((Prelude..)
                                           (\ bs
                                              -> (Data.Monoid.<>)
                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                      (Prelude.fromIntegral
                                                         (Data.ByteString.length bs)))
                                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           Data.Text.Encoding.encodeUtf8 _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'header") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.ProtoLens.encodeMessage _v))
                                        (Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"vec'links") _x))
                                     (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                        (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))))
instance Control.DeepSeq.NFData SignalWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SignalWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_SignalWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_SignalWorkflowExecutionRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_SignalWorkflowExecutionRequest'signalName x__)
                      (Control.DeepSeq.deepseq
                         (_SignalWorkflowExecutionRequest'input x__)
                         (Control.DeepSeq.deepseq
                            (_SignalWorkflowExecutionRequest'identity x__)
                            (Control.DeepSeq.deepseq
                               (_SignalWorkflowExecutionRequest'requestId x__)
                               (Control.DeepSeq.deepseq
                                  (_SignalWorkflowExecutionRequest'control x__)
                                  (Control.DeepSeq.deepseq
                                     (_SignalWorkflowExecutionRequest'header x__)
                                     (Control.DeepSeq.deepseq
                                        (_SignalWorkflowExecutionRequest'links x__) ())))))))))
{- | Fields :
      -}
data SignalWorkflowExecutionResponse
  = SignalWorkflowExecutionResponse'_constructor {_SignalWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show SignalWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message SignalWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.SignalWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\USSignalWorkflowExecutionResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _SignalWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_SignalWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = SignalWorkflowExecutionResponse'_constructor
        {_SignalWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          SignalWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser SignalWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "SignalWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData SignalWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_SignalWorkflowExecutionResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' StartBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.visibilityQuery' @:: Lens' StartBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jobId' @:: Lens' StartBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' StartBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.executions' @:: Lens' StartBatchOperationRequest [Proto.Temporal.Api.Common.V1.Message.WorkflowExecution]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'executions' @:: Lens' StartBatchOperationRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maxOperationsPerSecond' @:: Lens' StartBatchOperationRequest Prelude.Float@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'operation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe StartBatchOperationRequest'Operation)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'terminationOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.terminationOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'signalOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.signalOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'cancellationOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cancellationOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deletionOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deletionOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'resetOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateWorkflowOptionsOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateWorkflowOptionsOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'unpauseActivitiesOperation' @:: Lens' StartBatchOperationRequest (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.unpauseActivitiesOperation' @:: Lens' StartBatchOperationRequest Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities@ -}
data StartBatchOperationRequest
  = StartBatchOperationRequest'_constructor {_StartBatchOperationRequest'namespace :: !Data.Text.Text,
                                             _StartBatchOperationRequest'visibilityQuery :: !Data.Text.Text,
                                             _StartBatchOperationRequest'jobId :: !Data.Text.Text,
                                             _StartBatchOperationRequest'reason :: !Data.Text.Text,
                                             _StartBatchOperationRequest'executions :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                             _StartBatchOperationRequest'maxOperationsPerSecond :: !Prelude.Float,
                                             _StartBatchOperationRequest'operation :: !(Prelude.Maybe StartBatchOperationRequest'Operation),
                                             _StartBatchOperationRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StartBatchOperationRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data StartBatchOperationRequest'Operation
  = StartBatchOperationRequest'TerminationOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination |
    StartBatchOperationRequest'SignalOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal |
    StartBatchOperationRequest'CancellationOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation |
    StartBatchOperationRequest'DeletionOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion |
    StartBatchOperationRequest'ResetOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset |
    StartBatchOperationRequest'UpdateWorkflowOptionsOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions |
    StartBatchOperationRequest'UnpauseActivitiesOperation !Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'namespace
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "visibilityQuery" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'visibilityQuery
           (\ x__ y__
              -> x__ {_StartBatchOperationRequest'visibilityQuery = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "jobId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'jobId
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'jobId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'reason
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "executions" [Proto.Temporal.Api.Common.V1.Message.WorkflowExecution] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'executions
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'executions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "vec'executions" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'executions
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'executions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maxOperationsPerSecond" Prelude.Float where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'maxOperationsPerSecond
           (\ x__ y__
              -> x__ {_StartBatchOperationRequest'maxOperationsPerSecond = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'operation" (Prelude.Maybe StartBatchOperationRequest'Operation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'terminationOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'TerminationOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   StartBatchOperationRequest'TerminationOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "terminationOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'TerminationOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      StartBatchOperationRequest'TerminationOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'signalOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'SignalOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap StartBatchOperationRequest'SignalOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "signalOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'SignalOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap StartBatchOperationRequest'SignalOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'cancellationOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'CancellationOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   StartBatchOperationRequest'CancellationOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "cancellationOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'CancellationOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      StartBatchOperationRequest'CancellationOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'deletionOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'DeletionOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap StartBatchOperationRequest'DeletionOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "deletionOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'DeletionOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap StartBatchOperationRequest'DeletionOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'resetOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'ResetOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap StartBatchOperationRequest'ResetOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "resetOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'ResetOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap StartBatchOperationRequest'ResetOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'updateWorkflowOptionsOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'UpdateWorkflowOptionsOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   StartBatchOperationRequest'UpdateWorkflowOptionsOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "updateWorkflowOptionsOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'UpdateWorkflowOptionsOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      StartBatchOperationRequest'UpdateWorkflowOptionsOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "maybe'unpauseActivitiesOperation" (Prelude.Maybe Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (StartBatchOperationRequest'UnpauseActivitiesOperation x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   StartBatchOperationRequest'UnpauseActivitiesOperation y__))
instance Data.ProtoLens.Field.HasField StartBatchOperationRequest "unpauseActivitiesOperation" Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartBatchOperationRequest'operation
           (\ x__ y__ -> x__ {_StartBatchOperationRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (StartBatchOperationRequest'UnpauseActivitiesOperation x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      StartBatchOperationRequest'UnpauseActivitiesOperation y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message StartBatchOperationRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StartBatchOperationRequest"
  packedMessageDescriptor _
    = "\n\
      \\SUBStartBatchOperationRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2)\n\
      \\DLEvisibility_query\CAN\STX \SOH(\tR\SIvisibilityQuery\DC2\NAK\n\
      \\ACKjob_id\CAN\ETX \SOH(\tR\ENQjobId\DC2\SYN\n\
      \\ACKreason\CAN\EOT \SOH(\tR\ACKreason\DC2I\n\
      \\n\
      \executions\CAN\ENQ \ETX(\v2).temporal.api.common.v1.WorkflowExecutionR\n\
      \executions\DC29\n\
      \\EMmax_operations_per_second\CAN\ACK \SOH(\STXR\SYNmaxOperationsPerSecond\DC2g\n\
      \\NAKtermination_operation\CAN\n\
      \ \SOH(\v20.temporal.api.batch.v1.BatchOperationTerminationH\NULR\DC4terminationOperation\DC2X\n\
      \\DLEsignal_operation\CAN\v \SOH(\v2+.temporal.api.batch.v1.BatchOperationSignalH\NULR\SIsignalOperation\DC2j\n\
      \\SYNcancellation_operation\CAN\f \SOH(\v21.temporal.api.batch.v1.BatchOperationCancellationH\NULR\NAKcancellationOperation\DC2^\n\
      \\DC2deletion_operation\CAN\r \SOH(\v2-.temporal.api.batch.v1.BatchOperationDeletionH\NULR\DC1deletionOperation\DC2U\n\
      \\SIreset_operation\CAN\SO \SOH(\v2*.temporal.api.batch.v1.BatchOperationResetH\NULR\SOresetOperation\DC2\144\SOH\n\
      \!update_workflow_options_operation\CAN\SI \SOH(\v2C.temporal.api.batch.v1.BatchOperationUpdateWorkflowExecutionOptionsH\NULR\RSupdateWorkflowOptionsOperation\DC2z\n\
      \\FSunpause_activities_operation\CAN\DLE \SOH(\v26.temporal.api.batch.v1.BatchOperationUnpauseActivitiesH\NULR\SUBunpauseActivitiesOperationB\v\n\
      \\toperation"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        visibilityQuery__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "visibility_query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"visibilityQuery")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        jobId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "job_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"jobId")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        executions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "executions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"executions")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        maxOperationsPerSecond__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_operations_per_second"
              (Data.ProtoLens.ScalarField Data.ProtoLens.FloatField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Float)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"maxOperationsPerSecond")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        terminationOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "termination_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'terminationOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        signalOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "signal_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'signalOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        cancellationOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cancellation_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'cancellationOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        deletionOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "deletion_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deletionOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        resetOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'resetOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        updateWorkflowOptionsOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_workflow_options_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'updateWorkflowOptionsOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
        unpauseActivitiesOperation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "unpause_activities_operation"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'unpauseActivitiesOperation")) ::
              Data.ProtoLens.FieldDescriptor StartBatchOperationRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, visibilityQuery__field_descriptor),
           (Data.ProtoLens.Tag 3, jobId__field_descriptor),
           (Data.ProtoLens.Tag 4, reason__field_descriptor),
           (Data.ProtoLens.Tag 5, executions__field_descriptor),
           (Data.ProtoLens.Tag 6, maxOperationsPerSecond__field_descriptor),
           (Data.ProtoLens.Tag 10, terminationOperation__field_descriptor),
           (Data.ProtoLens.Tag 11, signalOperation__field_descriptor),
           (Data.ProtoLens.Tag 12, cancellationOperation__field_descriptor),
           (Data.ProtoLens.Tag 13, deletionOperation__field_descriptor),
           (Data.ProtoLens.Tag 14, resetOperation__field_descriptor),
           (Data.ProtoLens.Tag 15, 
            updateWorkflowOptionsOperation__field_descriptor),
           (Data.ProtoLens.Tag 16, 
            unpauseActivitiesOperation__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StartBatchOperationRequest'_unknownFields
        (\ x__ y__
           -> x__ {_StartBatchOperationRequest'_unknownFields = y__})
  defMessage
    = StartBatchOperationRequest'_constructor
        {_StartBatchOperationRequest'namespace = Data.ProtoLens.fieldDefault,
         _StartBatchOperationRequest'visibilityQuery = Data.ProtoLens.fieldDefault,
         _StartBatchOperationRequest'jobId = Data.ProtoLens.fieldDefault,
         _StartBatchOperationRequest'reason = Data.ProtoLens.fieldDefault,
         _StartBatchOperationRequest'executions = Data.Vector.Generic.empty,
         _StartBatchOperationRequest'maxOperationsPerSecond = Data.ProtoLens.fieldDefault,
         _StartBatchOperationRequest'operation = Prelude.Nothing,
         _StartBatchOperationRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StartBatchOperationRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.WorkflowExecution
             -> Data.ProtoLens.Encoding.Bytes.Parser StartBatchOperationRequest
        loop x mutable'executions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'executions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'executions") frozen'executions
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'executions
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "visibility_query"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"visibilityQuery") y x)
                                  mutable'executions
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "job_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"jobId") y x)
                                  mutable'executions
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                                  mutable'executions
                        42
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "executions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'executions y)
                                loop x v
                        53
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Data.ProtoLens.Encoding.Bytes.wordToFloat
                                          Data.ProtoLens.Encoding.Bytes.getFixed32)
                                       "max_operations_per_second"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxOperationsPerSecond") y x)
                                  mutable'executions
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "termination_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"terminationOperation") y x)
                                  mutable'executions
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "signal_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"signalOperation") y x)
                                  mutable'executions
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "cancellation_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"cancellationOperation") y x)
                                  mutable'executions
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "deletion_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deletionOperation") y x)
                                  mutable'executions
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "reset_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetOperation") y x)
                                  mutable'executions
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_workflow_options_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"updateWorkflowOptionsOperation")
                                     y x)
                                  mutable'executions
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "unpause_activities_operation"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"unpauseActivitiesOperation") y x)
                                  mutable'executions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'executions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'executions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'executions)
          "StartBatchOperationRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"visibilityQuery") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"jobId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      ((Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                            (\ _v
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                    ((Prelude..)
                                       (\ bs
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                  (Prelude.fromIntegral
                                                     (Data.ByteString.length bs)))
                                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                       Data.ProtoLens.encodeMessage _v))
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"vec'executions") _x))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"maxOperationsPerSecond") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 53)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putFixed32
                                        Data.ProtoLens.Encoding.Bytes.floatToWord _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'operation") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just (StartBatchOperationRequest'TerminationOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'SignalOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'CancellationOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'DeletionOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 106)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'ResetOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 114)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'UpdateWorkflowOptionsOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 122)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v)
                                  (Prelude.Just (StartBatchOperationRequest'UnpauseActivitiesOperation v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 130)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData StartBatchOperationRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StartBatchOperationRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_StartBatchOperationRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_StartBatchOperationRequest'visibilityQuery x__)
                   (Control.DeepSeq.deepseq
                      (_StartBatchOperationRequest'jobId x__)
                      (Control.DeepSeq.deepseq
                         (_StartBatchOperationRequest'reason x__)
                         (Control.DeepSeq.deepseq
                            (_StartBatchOperationRequest'executions x__)
                            (Control.DeepSeq.deepseq
                               (_StartBatchOperationRequest'maxOperationsPerSecond x__)
                               (Control.DeepSeq.deepseq
                                  (_StartBatchOperationRequest'operation x__) ())))))))
instance Control.DeepSeq.NFData StartBatchOperationRequest'Operation where
  rnf (StartBatchOperationRequest'TerminationOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'SignalOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'CancellationOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'DeletionOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'ResetOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'UpdateWorkflowOptionsOperation x__)
    = Control.DeepSeq.rnf x__
  rnf (StartBatchOperationRequest'UnpauseActivitiesOperation x__)
    = Control.DeepSeq.rnf x__
_StartBatchOperationRequest'TerminationOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationTermination
_StartBatchOperationRequest'TerminationOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'TerminationOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'TerminationOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'SignalOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationSignal
_StartBatchOperationRequest'SignalOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'SignalOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'SignalOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'CancellationOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationCancellation
_StartBatchOperationRequest'CancellationOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'CancellationOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'CancellationOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'DeletionOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationDeletion
_StartBatchOperationRequest'DeletionOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'DeletionOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'DeletionOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'ResetOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationReset
_StartBatchOperationRequest'ResetOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'ResetOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'ResetOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'UpdateWorkflowOptionsOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationUpdateWorkflowExecutionOptions
_StartBatchOperationRequest'UpdateWorkflowOptionsOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'UpdateWorkflowOptionsOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'UpdateWorkflowOptionsOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_StartBatchOperationRequest'UnpauseActivitiesOperation ::
  Data.ProtoLens.Prism.Prism' StartBatchOperationRequest'Operation Proto.Temporal.Api.Batch.V1.Message.BatchOperationUnpauseActivities
_StartBatchOperationRequest'UnpauseActivitiesOperation
  = Data.ProtoLens.Prism.prism'
      StartBatchOperationRequest'UnpauseActivitiesOperation
      (\ p__
         -> case p__ of
              (StartBatchOperationRequest'UnpauseActivitiesOperation p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data StartBatchOperationResponse
  = StartBatchOperationResponse'_constructor {_StartBatchOperationResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StartBatchOperationResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message StartBatchOperationResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StartBatchOperationResponse"
  packedMessageDescriptor _
    = "\n\
      \\ESCStartBatchOperationResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StartBatchOperationResponse'_unknownFields
        (\ x__ y__
           -> x__ {_StartBatchOperationResponse'_unknownFields = y__})
  defMessage
    = StartBatchOperationResponse'_constructor
        {_StartBatchOperationResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StartBatchOperationResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser StartBatchOperationResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "StartBatchOperationResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData StartBatchOperationResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StartBatchOperationResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' StartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowId' @:: Lens' StartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowType' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowType@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowType' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'taskQueue' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.input' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'input' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionTimeout' @:: Lens' StartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionTimeout' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowRunTimeout' @:: Lens' StartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowRunTimeout' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowTaskTimeout' @:: Lens' StartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowTaskTimeout' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' StartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' StartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowIdReusePolicy' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowIdConflictPolicy' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.retryPolicy' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.RetryPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'retryPolicy' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.cronSchedule' @:: Lens' StartWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.memo' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Memo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'memo' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.searchAttributes' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.SearchAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'searchAttributes' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.header' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Header@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'header' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestEagerExecution' @:: Lens' StartWorkflowExecutionRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.continuedFailure' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Failure.V1.Message.Failure@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'continuedFailure' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.lastCompletionResult' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'lastCompletionResult' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowStartDelay' @:: Lens' StartWorkflowExecutionRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowStartDelay' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.completionCallbacks' @:: Lens' StartWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Callback]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'completionCallbacks' @:: Lens' StartWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Callback)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.userMetadata' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'userMetadata' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.links' @:: Lens' StartWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Link]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'links' @:: Lens' StartWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.versioningOverride' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'versioningOverride' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.onConflictOptions' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'onConflictOptions' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.priority' @:: Lens' StartWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Priority@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'priority' @:: Lens' StartWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority)@ -}
data StartWorkflowExecutionRequest
  = StartWorkflowExecutionRequest'_constructor {_StartWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                _StartWorkflowExecutionRequest'workflowId :: !Data.Text.Text,
                                                _StartWorkflowExecutionRequest'workflowType :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType),
                                                _StartWorkflowExecutionRequest'taskQueue :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue),
                                                _StartWorkflowExecutionRequest'input :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                _StartWorkflowExecutionRequest'workflowExecutionTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _StartWorkflowExecutionRequest'workflowRunTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _StartWorkflowExecutionRequest'workflowTaskTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _StartWorkflowExecutionRequest'identity :: !Data.Text.Text,
                                                _StartWorkflowExecutionRequest'requestId :: !Data.Text.Text,
                                                _StartWorkflowExecutionRequest'workflowIdReusePolicy :: !Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy,
                                                _StartWorkflowExecutionRequest'workflowIdConflictPolicy :: !Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy,
                                                _StartWorkflowExecutionRequest'retryPolicy :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy),
                                                _StartWorkflowExecutionRequest'cronSchedule :: !Data.Text.Text,
                                                _StartWorkflowExecutionRequest'memo :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo),
                                                _StartWorkflowExecutionRequest'searchAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes),
                                                _StartWorkflowExecutionRequest'header :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header),
                                                _StartWorkflowExecutionRequest'requestEagerExecution :: !Prelude.Bool,
                                                _StartWorkflowExecutionRequest'continuedFailure :: !(Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure),
                                                _StartWorkflowExecutionRequest'lastCompletionResult :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                _StartWorkflowExecutionRequest'workflowStartDelay :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _StartWorkflowExecutionRequest'completionCallbacks :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Callback),
                                                _StartWorkflowExecutionRequest'userMetadata :: !(Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata),
                                                _StartWorkflowExecutionRequest'links :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link),
                                                _StartWorkflowExecutionRequest'versioningOverride :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride),
                                                _StartWorkflowExecutionRequest'onConflictOptions :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions),
                                                _StartWorkflowExecutionRequest'priority :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority),
                                                _StartWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StartWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowId
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowType" Proto.Temporal.Api.Common.V1.Message.WorkflowType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowType
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowType = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'workflowType" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowType
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "taskQueue" Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'taskQueue
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'taskQueue = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'taskQueue" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'taskQueue
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "input" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'input
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'input = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'input" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'input
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'input = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowExecutionTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowExecutionTimeout
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'workflowExecutionTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'workflowExecutionTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowExecutionTimeout
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'workflowExecutionTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowRunTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowRunTimeout
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowRunTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'workflowRunTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowRunTimeout
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowRunTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowTaskTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowTaskTimeout
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowTaskTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'workflowTaskTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowTaskTimeout
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowTaskTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'identity
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'requestId
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowIdReusePolicy" Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowIdReusePolicy
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'workflowIdReusePolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowIdConflictPolicy" Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowIdConflictPolicy
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'workflowIdConflictPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "retryPolicy" Proto.Temporal.Api.Common.V1.Message.RetryPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'retryPolicy
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'retryPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'retryPolicy" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.RetryPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'retryPolicy
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'retryPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "cronSchedule" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'cronSchedule
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'cronSchedule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "memo" Proto.Temporal.Api.Common.V1.Message.Memo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'memo
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'memo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'memo" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Memo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'memo
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'memo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "searchAttributes" Proto.Temporal.Api.Common.V1.Message.SearchAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'searchAttributes
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'searchAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'searchAttributes" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'searchAttributes
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'searchAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "header" Proto.Temporal.Api.Common.V1.Message.Header where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'header
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'header = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'header" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Header) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'header
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'header = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "requestEagerExecution" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'requestEagerExecution
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'requestEagerExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "continuedFailure" Proto.Temporal.Api.Failure.V1.Message.Failure where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'continuedFailure
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'continuedFailure = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'continuedFailure" (Prelude.Maybe Proto.Temporal.Api.Failure.V1.Message.Failure) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'continuedFailure
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'continuedFailure = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "lastCompletionResult" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'lastCompletionResult
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'lastCompletionResult = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'lastCompletionResult" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'lastCompletionResult
           (\ x__ y__
              -> x__
                   {_StartWorkflowExecutionRequest'lastCompletionResult = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "workflowStartDelay" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowStartDelay
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowStartDelay = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'workflowStartDelay" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'workflowStartDelay
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'workflowStartDelay = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "completionCallbacks" [Proto.Temporal.Api.Common.V1.Message.Callback] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'completionCallbacks
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'completionCallbacks = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "vec'completionCallbacks" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Callback) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'completionCallbacks
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'completionCallbacks = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "userMetadata" Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'userMetadata
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'userMetadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'userMetadata" (Prelude.Maybe Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'userMetadata
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'userMetadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "links" [Proto.Temporal.Api.Common.V1.Message.Link] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'links
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'links = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "vec'links" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'links
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'links = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "versioningOverride" Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'versioningOverride
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'versioningOverride = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'versioningOverride" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'versioningOverride
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'versioningOverride = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "onConflictOptions" Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'onConflictOptions
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'onConflictOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'onConflictOptions" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'onConflictOptions
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionRequest'onConflictOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "priority" Proto.Temporal.Api.Common.V1.Message.Priority where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'priority
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'priority = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionRequest "maybe'priority" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Priority) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionRequest'priority
           (\ x__ y__ -> x__ {_StartWorkflowExecutionRequest'priority = y__}))
        Prelude.id
instance Data.ProtoLens.Message StartWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StartWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \\GSStartWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vworkflow_id\CAN\STX \SOH(\tR\n\
      \workflowId\DC2I\n\
      \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2C\n\
      \\n\
      \task_queue\CAN\EOT \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC26\n\
      \\ENQinput\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2W\n\
      \\SUBworkflow_execution_timeout\CAN\ACK \SOH(\v2\EM.google.protobuf.DurationR\CANworkflowExecutionTimeout\DC2K\n\
      \\DC4workflow_run_timeout\CAN\a \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowRunTimeout\DC2M\n\
      \\NAKworkflow_task_timeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\DC3workflowTaskTimeout\DC2\SUB\n\
      \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\n\
      \ \SOH(\tR\trequestId\DC2e\n\
      \\CANworkflow_id_reuse_policy\CAN\v \SOH(\SO2,.temporal.api.enums.v1.WorkflowIdReusePolicyR\NAKworkflowIdReusePolicy\DC2n\n\
      \\ESCworkflow_id_conflict_policy\CAN\SYN \SOH(\SO2/.temporal.api.enums.v1.WorkflowIdConflictPolicyR\CANworkflowIdConflictPolicy\DC2F\n\
      \\fretry_policy\CAN\f \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2#\n\
      \\rcron_schedule\CAN\r \SOH(\tR\fcronSchedule\DC20\n\
      \\EOTmemo\CAN\SO \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
      \\DC1search_attributes\CAN\SI \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC26\n\
      \\ACKheader\CAN\DLE \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC26\n\
      \\ETBrequest_eager_execution\CAN\DC1 \SOH(\bR\NAKrequestEagerExecution\DC2M\n\
      \\DC1continued_failure\CAN\DC2 \SOH(\v2 .temporal.api.failure.v1.FailureR\DLEcontinuedFailure\DC2V\n\
      \\SYNlast_completion_result\CAN\DC3 \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastCompletionResult\DC2K\n\
      \\DC4workflow_start_delay\CAN\DC4 \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowStartDelay\DC2S\n\
      \\DC4completion_callbacks\CAN\NAK \ETX(\v2 .temporal.api.common.v1.CallbackR\DC3completionCallbacks\DC2F\n\
      \\ruser_metadata\CAN\ETB \SOH(\v2!.temporal.api.sdk.v1.UserMetadataR\fuserMetadata\DC22\n\
      \\ENQlinks\CAN\CAN \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\DC2]\n\
      \\DC3versioning_override\CAN\EM \SOH(\v2,.temporal.api.workflow.v1.VersioningOverrideR\DC2versioningOverride\DC2[\n\
      \\DC3on_conflict_options\CAN\SUB \SOH(\v2+.temporal.api.workflow.v1.OnConflictOptionsR\DC1onConflictOptions\DC2<\n\
      \\bpriority\CAN\ESC \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriority"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowId")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_type"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowType)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowType")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TaskQueue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'taskQueue")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        input__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "input"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'input")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowExecutionTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecutionTimeout")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowRunTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_run_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowRunTimeout")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowTaskTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_task_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowTaskTimeout")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowIdReusePolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id_reuse_policy"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdReusePolicy)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowIdReusePolicy")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowIdConflictPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_id_conflict_policy"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Workflow.WorkflowIdConflictPolicy)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"workflowIdConflictPolicy")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        retryPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.RetryPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicy")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        cronSchedule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cron_schedule"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"cronSchedule")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        memo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "memo"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Memo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'memo")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        searchAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "search_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.SearchAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'searchAttributes")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        header__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Header)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'header")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        requestEagerExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_eager_execution"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestEagerExecution")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        continuedFailure__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "continued_failure"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Failure.V1.Message.Failure)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'continuedFailure")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        lastCompletionResult__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "last_completion_result"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'lastCompletionResult")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        workflowStartDelay__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_start_delay"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowStartDelay")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        completionCallbacks__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "completion_callbacks"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Callback)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"completionCallbacks")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        userMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "user_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Sdk.V1.UserMetadata.UserMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'userMetadata")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        links__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "links"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Link)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"links")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        versioningOverride__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "versioning_override"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.VersioningOverride)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'versioningOverride")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        onConflictOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "on_conflict_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.OnConflictOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'onConflictOptions")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
        priority__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "priority"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Priority)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'priority")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowId__field_descriptor),
           (Data.ProtoLens.Tag 3, workflowType__field_descriptor),
           (Data.ProtoLens.Tag 4, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 5, input__field_descriptor),
           (Data.ProtoLens.Tag 6, workflowExecutionTimeout__field_descriptor),
           (Data.ProtoLens.Tag 7, workflowRunTimeout__field_descriptor),
           (Data.ProtoLens.Tag 8, workflowTaskTimeout__field_descriptor),
           (Data.ProtoLens.Tag 9, identity__field_descriptor),
           (Data.ProtoLens.Tag 10, requestId__field_descriptor),
           (Data.ProtoLens.Tag 11, workflowIdReusePolicy__field_descriptor),
           (Data.ProtoLens.Tag 22, 
            workflowIdConflictPolicy__field_descriptor),
           (Data.ProtoLens.Tag 12, retryPolicy__field_descriptor),
           (Data.ProtoLens.Tag 13, cronSchedule__field_descriptor),
           (Data.ProtoLens.Tag 14, memo__field_descriptor),
           (Data.ProtoLens.Tag 15, searchAttributes__field_descriptor),
           (Data.ProtoLens.Tag 16, header__field_descriptor),
           (Data.ProtoLens.Tag 17, requestEagerExecution__field_descriptor),
           (Data.ProtoLens.Tag 18, continuedFailure__field_descriptor),
           (Data.ProtoLens.Tag 19, lastCompletionResult__field_descriptor),
           (Data.ProtoLens.Tag 20, workflowStartDelay__field_descriptor),
           (Data.ProtoLens.Tag 21, completionCallbacks__field_descriptor),
           (Data.ProtoLens.Tag 23, userMetadata__field_descriptor),
           (Data.ProtoLens.Tag 24, links__field_descriptor),
           (Data.ProtoLens.Tag 25, versioningOverride__field_descriptor),
           (Data.ProtoLens.Tag 26, onConflictOptions__field_descriptor),
           (Data.ProtoLens.Tag 27, priority__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StartWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_StartWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = StartWorkflowExecutionRequest'_constructor
        {_StartWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'workflowId = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'workflowType = Prelude.Nothing,
         _StartWorkflowExecutionRequest'taskQueue = Prelude.Nothing,
         _StartWorkflowExecutionRequest'input = Prelude.Nothing,
         _StartWorkflowExecutionRequest'workflowExecutionTimeout = Prelude.Nothing,
         _StartWorkflowExecutionRequest'workflowRunTimeout = Prelude.Nothing,
         _StartWorkflowExecutionRequest'workflowTaskTimeout = Prelude.Nothing,
         _StartWorkflowExecutionRequest'identity = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'requestId = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'workflowIdReusePolicy = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'workflowIdConflictPolicy = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'retryPolicy = Prelude.Nothing,
         _StartWorkflowExecutionRequest'cronSchedule = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'memo = Prelude.Nothing,
         _StartWorkflowExecutionRequest'searchAttributes = Prelude.Nothing,
         _StartWorkflowExecutionRequest'header = Prelude.Nothing,
         _StartWorkflowExecutionRequest'requestEagerExecution = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionRequest'continuedFailure = Prelude.Nothing,
         _StartWorkflowExecutionRequest'lastCompletionResult = Prelude.Nothing,
         _StartWorkflowExecutionRequest'workflowStartDelay = Prelude.Nothing,
         _StartWorkflowExecutionRequest'completionCallbacks = Data.Vector.Generic.empty,
         _StartWorkflowExecutionRequest'userMetadata = Prelude.Nothing,
         _StartWorkflowExecutionRequest'links = Data.Vector.Generic.empty,
         _StartWorkflowExecutionRequest'versioningOverride = Prelude.Nothing,
         _StartWorkflowExecutionRequest'onConflictOptions = Prelude.Nothing,
         _StartWorkflowExecutionRequest'priority = Prelude.Nothing,
         _StartWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StartWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Callback
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Link
                -> Data.ProtoLens.Encoding.Bytes.Parser StartWorkflowExecutionRequest
        loop x mutable'completionCallbacks mutable'links
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'completionCallbacks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                      (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                         mutable'completionCallbacks)
                      frozen'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'links)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'completionCallbacks")
                              frozen'completionCallbacks
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'links") frozen'links x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'completionCallbacks mutable'links
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "workflow_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"workflowId") y x)
                                  mutable'completionCallbacks mutable'links
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_type"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowType") y x)
                                  mutable'completionCallbacks mutable'links
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                                  mutable'completionCallbacks mutable'links
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "input"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"input") y x)
                                  mutable'completionCallbacks mutable'links
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionTimeout") y x)
                                  mutable'completionCallbacks mutable'links
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_run_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowRunTimeout") y x)
                                  mutable'completionCallbacks mutable'links
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_task_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowTaskTimeout") y x)
                                  mutable'completionCallbacks mutable'links
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'completionCallbacks mutable'links
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                                  mutable'completionCallbacks mutable'links
                        88
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "workflow_id_reuse_policy"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowIdReusePolicy") y x)
                                  mutable'completionCallbacks mutable'links
                        176
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "workflow_id_conflict_policy"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowIdConflictPolicy") y x)
                                  mutable'completionCallbacks mutable'links
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryPolicy") y x)
                                  mutable'completionCallbacks mutable'links
                        106
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "cron_schedule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"cronSchedule") y x)
                                  mutable'completionCallbacks mutable'links
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "memo"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"memo") y x)
                                  mutable'completionCallbacks mutable'links
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "search_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"searchAttributes") y x)
                                  mutable'completionCallbacks mutable'links
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"header") y x)
                                  mutable'completionCallbacks mutable'links
                        136
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "request_eager_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"requestEagerExecution") y x)
                                  mutable'completionCallbacks mutable'links
                        146
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "continued_failure"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"continuedFailure") y x)
                                  mutable'completionCallbacks mutable'links
                        154
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "last_completion_result"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"lastCompletionResult") y x)
                                  mutable'completionCallbacks mutable'links
                        162
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_start_delay"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowStartDelay") y x)
                                  mutable'completionCallbacks mutable'links
                        170
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "completion_callbacks"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'completionCallbacks y)
                                loop x v mutable'links
                        186
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "user_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"userMetadata") y x)
                                  mutable'completionCallbacks mutable'links
                        194
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "links"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'links y)
                                loop x mutable'completionCallbacks v
                        202
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "versioning_override"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"versioningOverride") y x)
                                  mutable'completionCallbacks mutable'links
                        210
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "on_conflict_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"onConflictOptions") y x)
                                  mutable'completionCallbacks mutable'links
                        218
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "priority"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"priority") y x)
                                  mutable'completionCallbacks mutable'links
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'completionCallbacks mutable'links
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'completionCallbacks <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               Data.ProtoLens.Encoding.Growing.new
              mutable'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'completionCallbacks
                mutable'links)
          "StartWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"workflowId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'workflowType") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'taskQueue") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'input") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'workflowExecutionTimeout") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'workflowRunTimeout") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'workflowTaskTimeout")
                                         _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage _v))
                                  ((Data.Monoid.<>)
                                     (let
                                        _v
                                          = Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"identity") _x
                                      in
                                        if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                            Data.Monoid.mempty
                                        else
                                            (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                              ((Prelude..)
                                                 (\ bs
                                                    -> (Data.Monoid.<>)
                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                            (Prelude.fromIntegral
                                                               (Data.ByteString.length bs)))
                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                            bs))
                                                 Data.Text.Encoding.encodeUtf8 _v))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"requestId") _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                 ((Prelude..)
                                                    (\ bs
                                                       -> (Data.Monoid.<>)
                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                               (Prelude.fromIntegral
                                                                  (Data.ByteString.length bs)))
                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                               bs))
                                                    Data.Text.Encoding.encodeUtf8 _v))
                                        ((Data.Monoid.<>)
                                           (let
                                              _v
                                                = Lens.Family2.view
                                                    (Data.ProtoLens.Field.field
                                                       @"workflowIdReusePolicy")
                                                    _x
                                            in
                                              if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                  Data.Monoid.mempty
                                              else
                                                  (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 88)
                                                    ((Prelude..)
                                                       ((Prelude..)
                                                          Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          Prelude.fromIntegral)
                                                       Prelude.fromEnum _v))
                                           ((Data.Monoid.<>)
                                              (let
                                                 _v
                                                   = Lens.Family2.view
                                                       (Data.ProtoLens.Field.field
                                                          @"workflowIdConflictPolicy")
                                                       _x
                                               in
                                                 if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                                     Data.Monoid.mempty
                                                 else
                                                     (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 176)
                                                       ((Prelude..)
                                                          ((Prelude..)
                                                             Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             Prelude.fromIntegral)
                                                          Prelude.fromEnum _v))
                                              ((Data.Monoid.<>)
                                                 (case
                                                      Lens.Family2.view
                                                        (Data.ProtoLens.Field.field
                                                           @"maybe'retryPolicy")
                                                        _x
                                                  of
                                                    Prelude.Nothing -> Data.Monoid.mempty
                                                    (Prelude.Just _v)
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              98)
                                                           ((Prelude..)
                                                              (\ bs
                                                                 -> (Data.Monoid.<>)
                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                         (Prelude.fromIntegral
                                                                            (Data.ByteString.length
                                                                               bs)))
                                                                      (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                         bs))
                                                              Data.ProtoLens.encodeMessage _v))
                                                 ((Data.Monoid.<>)
                                                    (let
                                                       _v
                                                         = Lens.Family2.view
                                                             (Data.ProtoLens.Field.field
                                                                @"cronSchedule")
                                                             _x
                                                     in
                                                       if (Prelude.==)
                                                            _v Data.ProtoLens.fieldDefault then
                                                           Data.Monoid.mempty
                                                       else
                                                           (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                106)
                                                             ((Prelude..)
                                                                (\ bs
                                                                   -> (Data.Monoid.<>)
                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                           (Prelude.fromIntegral
                                                                              (Data.ByteString.length
                                                                                 bs)))
                                                                        (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                           bs))
                                                                Data.Text.Encoding.encodeUtf8 _v))
                                                    ((Data.Monoid.<>)
                                                       (case
                                                            Lens.Family2.view
                                                              (Data.ProtoLens.Field.field
                                                                 @"maybe'memo")
                                                              _x
                                                        of
                                                          Prelude.Nothing -> Data.Monoid.mempty
                                                          (Prelude.Just _v)
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    114)
                                                                 ((Prelude..)
                                                                    (\ bs
                                                                       -> (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               (Prelude.fromIntegral
                                                                                  (Data.ByteString.length
                                                                                     bs)))
                                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                               bs))
                                                                    Data.ProtoLens.encodeMessage
                                                                    _v))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'searchAttributes")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       122)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          ((Data.Monoid.<>)
                                                             (case
                                                                  Lens.Family2.view
                                                                    (Data.ProtoLens.Field.field
                                                                       @"maybe'header")
                                                                    _x
                                                              of
                                                                Prelude.Nothing
                                                                  -> Data.Monoid.mempty
                                                                (Prelude.Just _v)
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          130)
                                                                       ((Prelude..)
                                                                          (\ bs
                                                                             -> (Data.Monoid.<>)
                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                     (Prelude.fromIntegral
                                                                                        (Data.ByteString.length
                                                                                           bs)))
                                                                                  (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                     bs))
                                                                          Data.ProtoLens.encodeMessage
                                                                          _v))
                                                             ((Data.Monoid.<>)
                                                                (let
                                                                   _v
                                                                     = Lens.Family2.view
                                                                         (Data.ProtoLens.Field.field
                                                                            @"requestEagerExecution")
                                                                         _x
                                                                 in
                                                                   if (Prelude.==)
                                                                        _v
                                                                        Data.ProtoLens.fieldDefault then
                                                                       Data.Monoid.mempty
                                                                   else
                                                                       (Data.Monoid.<>)
                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            136)
                                                                         ((Prelude..)
                                                                            Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            (\ b
                                                                               -> if b then
                                                                                      1
                                                                                  else
                                                                                      0)
                                                                            _v))
                                                                ((Data.Monoid.<>)
                                                                   (case
                                                                        Lens.Family2.view
                                                                          (Data.ProtoLens.Field.field
                                                                             @"maybe'continuedFailure")
                                                                          _x
                                                                    of
                                                                      Prelude.Nothing
                                                                        -> Data.Monoid.mempty
                                                                      (Prelude.Just _v)
                                                                        -> (Data.Monoid.<>)
                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                146)
                                                                             ((Prelude..)
                                                                                (\ bs
                                                                                   -> (Data.Monoid.<>)
                                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                           (Prelude.fromIntegral
                                                                                              (Data.ByteString.length
                                                                                                 bs)))
                                                                                        (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                           bs))
                                                                                Data.ProtoLens.encodeMessage
                                                                                _v))
                                                                   ((Data.Monoid.<>)
                                                                      (case
                                                                           Lens.Family2.view
                                                                             (Data.ProtoLens.Field.field
                                                                                @"maybe'lastCompletionResult")
                                                                             _x
                                                                       of
                                                                         Prelude.Nothing
                                                                           -> Data.Monoid.mempty
                                                                         (Prelude.Just _v)
                                                                           -> (Data.Monoid.<>)
                                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                   154)
                                                                                ((Prelude..)
                                                                                   (\ bs
                                                                                      -> (Data.Monoid.<>)
                                                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                              (Prelude.fromIntegral
                                                                                                 (Data.ByteString.length
                                                                                                    bs)))
                                                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                              bs))
                                                                                   Data.ProtoLens.encodeMessage
                                                                                   _v))
                                                                      ((Data.Monoid.<>)
                                                                         (case
                                                                              Lens.Family2.view
                                                                                (Data.ProtoLens.Field.field
                                                                                   @"maybe'workflowStartDelay")
                                                                                _x
                                                                          of
                                                                            Prelude.Nothing
                                                                              -> Data.Monoid.mempty
                                                                            (Prelude.Just _v)
                                                                              -> (Data.Monoid.<>)
                                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                      162)
                                                                                   ((Prelude..)
                                                                                      (\ bs
                                                                                         -> (Data.Monoid.<>)
                                                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                 (Prelude.fromIntegral
                                                                                                    (Data.ByteString.length
                                                                                                       bs)))
                                                                                              (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                 bs))
                                                                                      Data.ProtoLens.encodeMessage
                                                                                      _v))
                                                                         ((Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                                               (\ _v
                                                                                  -> (Data.Monoid.<>)
                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                          170)
                                                                                       ((Prelude..)
                                                                                          (\ bs
                                                                                             -> (Data.Monoid.<>)
                                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                     (Prelude.fromIntegral
                                                                                                        (Data.ByteString.length
                                                                                                           bs)))
                                                                                                  (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                     bs))
                                                                                          Data.ProtoLens.encodeMessage
                                                                                          _v))
                                                                               (Lens.Family2.view
                                                                                  (Data.ProtoLens.Field.field
                                                                                     @"vec'completionCallbacks")
                                                                                  _x))
                                                                            ((Data.Monoid.<>)
                                                                               (case
                                                                                    Lens.Family2.view
                                                                                      (Data.ProtoLens.Field.field
                                                                                         @"maybe'userMetadata")
                                                                                      _x
                                                                                of
                                                                                  Prelude.Nothing
                                                                                    -> Data.Monoid.mempty
                                                                                  (Prelude.Just _v)
                                                                                    -> (Data.Monoid.<>)
                                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                            186)
                                                                                         ((Prelude..)
                                                                                            (\ bs
                                                                                               -> (Data.Monoid.<>)
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                       (Prelude.fromIntegral
                                                                                                          (Data.ByteString.length
                                                                                                             bs)))
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                       bs))
                                                                                            Data.ProtoLens.encodeMessage
                                                                                            _v))
                                                                               ((Data.Monoid.<>)
                                                                                  (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                                                     (\ _v
                                                                                        -> (Data.Monoid.<>)
                                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                194)
                                                                                             ((Prelude..)
                                                                                                (\ bs
                                                                                                   -> (Data.Monoid.<>)
                                                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                           (Prelude.fromIntegral
                                                                                                              (Data.ByteString.length
                                                                                                                 bs)))
                                                                                                        (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                           bs))
                                                                                                Data.ProtoLens.encodeMessage
                                                                                                _v))
                                                                                     (Lens.Family2.view
                                                                                        (Data.ProtoLens.Field.field
                                                                                           @"vec'links")
                                                                                        _x))
                                                                                  ((Data.Monoid.<>)
                                                                                     (case
                                                                                          Lens.Family2.view
                                                                                            (Data.ProtoLens.Field.field
                                                                                               @"maybe'versioningOverride")
                                                                                            _x
                                                                                      of
                                                                                        Prelude.Nothing
                                                                                          -> Data.Monoid.mempty
                                                                                        (Prelude.Just _v)
                                                                                          -> (Data.Monoid.<>)
                                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                  202)
                                                                                               ((Prelude..)
                                                                                                  (\ bs
                                                                                                     -> (Data.Monoid.<>)
                                                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                             (Prelude.fromIntegral
                                                                                                                (Data.ByteString.length
                                                                                                                   bs)))
                                                                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                             bs))
                                                                                                  Data.ProtoLens.encodeMessage
                                                                                                  _v))
                                                                                     ((Data.Monoid.<>)
                                                                                        (case
                                                                                             Lens.Family2.view
                                                                                               (Data.ProtoLens.Field.field
                                                                                                  @"maybe'onConflictOptions")
                                                                                               _x
                                                                                         of
                                                                                           Prelude.Nothing
                                                                                             -> Data.Monoid.mempty
                                                                                           (Prelude.Just _v)
                                                                                             -> (Data.Monoid.<>)
                                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                     210)
                                                                                                  ((Prelude..)
                                                                                                     (\ bs
                                                                                                        -> (Data.Monoid.<>)
                                                                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                                (Prelude.fromIntegral
                                                                                                                   (Data.ByteString.length
                                                                                                                      bs)))
                                                                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                                bs))
                                                                                                     Data.ProtoLens.encodeMessage
                                                                                                     _v))
                                                                                        ((Data.Monoid.<>)
                                                                                           (case
                                                                                                Lens.Family2.view
                                                                                                  (Data.ProtoLens.Field.field
                                                                                                     @"maybe'priority")
                                                                                                  _x
                                                                                            of
                                                                                              Prelude.Nothing
                                                                                                -> Data.Monoid.mempty
                                                                                              (Prelude.Just _v)
                                                                                                -> (Data.Monoid.<>)
                                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                        218)
                                                                                                     ((Prelude..)
                                                                                                        (\ bs
                                                                                                           -> (Data.Monoid.<>)
                                                                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                                   (Prelude.fromIntegral
                                                                                                                      (Data.ByteString.length
                                                                                                                         bs)))
                                                                                                                (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                                   bs))
                                                                                                        Data.ProtoLens.encodeMessage
                                                                                                        _v))
                                                                                           (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                                              (Lens.Family2.view
                                                                                                 Data.ProtoLens.unknownFields
                                                                                                 _x))))))))))))))))))))))))))))
instance Control.DeepSeq.NFData StartWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StartWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_StartWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_StartWorkflowExecutionRequest'workflowId x__)
                   (Control.DeepSeq.deepseq
                      (_StartWorkflowExecutionRequest'workflowType x__)
                      (Control.DeepSeq.deepseq
                         (_StartWorkflowExecutionRequest'taskQueue x__)
                         (Control.DeepSeq.deepseq
                            (_StartWorkflowExecutionRequest'input x__)
                            (Control.DeepSeq.deepseq
                               (_StartWorkflowExecutionRequest'workflowExecutionTimeout x__)
                               (Control.DeepSeq.deepseq
                                  (_StartWorkflowExecutionRequest'workflowRunTimeout x__)
                                  (Control.DeepSeq.deepseq
                                     (_StartWorkflowExecutionRequest'workflowTaskTimeout x__)
                                     (Control.DeepSeq.deepseq
                                        (_StartWorkflowExecutionRequest'identity x__)
                                        (Control.DeepSeq.deepseq
                                           (_StartWorkflowExecutionRequest'requestId x__)
                                           (Control.DeepSeq.deepseq
                                              (_StartWorkflowExecutionRequest'workflowIdReusePolicy
                                                 x__)
                                              (Control.DeepSeq.deepseq
                                                 (_StartWorkflowExecutionRequest'workflowIdConflictPolicy
                                                    x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_StartWorkflowExecutionRequest'retryPolicy x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_StartWorkflowExecutionRequest'cronSchedule
                                                          x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_StartWorkflowExecutionRequest'memo x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_StartWorkflowExecutionRequest'searchAttributes
                                                                x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_StartWorkflowExecutionRequest'header
                                                                   x__)
                                                                (Control.DeepSeq.deepseq
                                                                   (_StartWorkflowExecutionRequest'requestEagerExecution
                                                                      x__)
                                                                   (Control.DeepSeq.deepseq
                                                                      (_StartWorkflowExecutionRequest'continuedFailure
                                                                         x__)
                                                                      (Control.DeepSeq.deepseq
                                                                         (_StartWorkflowExecutionRequest'lastCompletionResult
                                                                            x__)
                                                                         (Control.DeepSeq.deepseq
                                                                            (_StartWorkflowExecutionRequest'workflowStartDelay
                                                                               x__)
                                                                            (Control.DeepSeq.deepseq
                                                                               (_StartWorkflowExecutionRequest'completionCallbacks
                                                                                  x__)
                                                                               (Control.DeepSeq.deepseq
                                                                                  (_StartWorkflowExecutionRequest'userMetadata
                                                                                     x__)
                                                                                  (Control.DeepSeq.deepseq
                                                                                     (_StartWorkflowExecutionRequest'links
                                                                                        x__)
                                                                                     (Control.DeepSeq.deepseq
                                                                                        (_StartWorkflowExecutionRequest'versioningOverride
                                                                                           x__)
                                                                                        (Control.DeepSeq.deepseq
                                                                                           (_StartWorkflowExecutionRequest'onConflictOptions
                                                                                              x__)
                                                                                           (Control.DeepSeq.deepseq
                                                                                              (_StartWorkflowExecutionRequest'priority
                                                                                                 x__)
                                                                                              ())))))))))))))))))))))))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.runId' @:: Lens' StartWorkflowExecutionResponse Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.started' @:: Lens' StartWorkflowExecutionResponse Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.eagerWorkflowTask' @:: Lens' StartWorkflowExecutionResponse PollWorkflowTaskQueueResponse@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'eagerWorkflowTask' @:: Lens' StartWorkflowExecutionResponse (Prelude.Maybe PollWorkflowTaskQueueResponse)@ -}
data StartWorkflowExecutionResponse
  = StartWorkflowExecutionResponse'_constructor {_StartWorkflowExecutionResponse'runId :: !Data.Text.Text,
                                                 _StartWorkflowExecutionResponse'started :: !Prelude.Bool,
                                                 _StartWorkflowExecutionResponse'eagerWorkflowTask :: !(Prelude.Maybe PollWorkflowTaskQueueResponse),
                                                 _StartWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StartWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionResponse "runId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionResponse'runId
           (\ x__ y__ -> x__ {_StartWorkflowExecutionResponse'runId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionResponse "started" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionResponse'started
           (\ x__ y__ -> x__ {_StartWorkflowExecutionResponse'started = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionResponse "eagerWorkflowTask" PollWorkflowTaskQueueResponse where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionResponse'eagerWorkflowTask
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionResponse'eagerWorkflowTask = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField StartWorkflowExecutionResponse "maybe'eagerWorkflowTask" (Prelude.Maybe PollWorkflowTaskQueueResponse) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StartWorkflowExecutionResponse'eagerWorkflowTask
           (\ x__ y__
              -> x__ {_StartWorkflowExecutionResponse'eagerWorkflowTask = y__}))
        Prelude.id
instance Data.ProtoLens.Message StartWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StartWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\RSStartWorkflowExecutionResponse\DC2\NAK\n\
      \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId\DC2\CAN\n\
      \\astarted\CAN\ETX \SOH(\bR\astarted\DC2n\n\
      \\DC3eager_workflow_task\CAN\STX \SOH(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\DC1eagerWorkflowTask"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        runId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"runId")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionResponse
        started__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "started"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"started")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionResponse
        eagerWorkflowTask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "eager_workflow_task"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor PollWorkflowTaskQueueResponse)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'eagerWorkflowTask")) ::
              Data.ProtoLens.FieldDescriptor StartWorkflowExecutionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, runId__field_descriptor),
           (Data.ProtoLens.Tag 3, started__field_descriptor),
           (Data.ProtoLens.Tag 2, eagerWorkflowTask__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StartWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_StartWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = StartWorkflowExecutionResponse'_constructor
        {_StartWorkflowExecutionResponse'runId = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionResponse'started = Data.ProtoLens.fieldDefault,
         _StartWorkflowExecutionResponse'eagerWorkflowTask = Prelude.Nothing,
         _StartWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StartWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser StartWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "run_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"runId") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "started"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"started") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "eager_workflow_task"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"eagerWorkflowTask") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "StartWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"runId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"started") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'eagerWorkflowTask") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData StartWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StartWorkflowExecutionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_StartWorkflowExecutionResponse'runId x__)
                (Control.DeepSeq.deepseq
                   (_StartWorkflowExecutionResponse'started x__)
                   (Control.DeepSeq.deepseq
                      (_StartWorkflowExecutionResponse'eagerWorkflowTask x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' StopBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jobId' @:: Lens' StopBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' StopBatchOperationRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' StopBatchOperationRequest Data.Text.Text@ -}
data StopBatchOperationRequest
  = StopBatchOperationRequest'_constructor {_StopBatchOperationRequest'namespace :: !Data.Text.Text,
                                            _StopBatchOperationRequest'jobId :: !Data.Text.Text,
                                            _StopBatchOperationRequest'reason :: !Data.Text.Text,
                                            _StopBatchOperationRequest'identity :: !Data.Text.Text,
                                            _StopBatchOperationRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StopBatchOperationRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField StopBatchOperationRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StopBatchOperationRequest'namespace
           (\ x__ y__ -> x__ {_StopBatchOperationRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StopBatchOperationRequest "jobId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StopBatchOperationRequest'jobId
           (\ x__ y__ -> x__ {_StopBatchOperationRequest'jobId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StopBatchOperationRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StopBatchOperationRequest'reason
           (\ x__ y__ -> x__ {_StopBatchOperationRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField StopBatchOperationRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _StopBatchOperationRequest'identity
           (\ x__ y__ -> x__ {_StopBatchOperationRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Message StopBatchOperationRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StopBatchOperationRequest"
  packedMessageDescriptor _
    = "\n\
      \\EMStopBatchOperationRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\NAK\n\
      \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\DC2\SYN\n\
      \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2\SUB\n\
      \\bidentity\CAN\EOT \SOH(\tR\bidentity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor StopBatchOperationRequest
        jobId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "job_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"jobId")) ::
              Data.ProtoLens.FieldDescriptor StopBatchOperationRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor StopBatchOperationRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor StopBatchOperationRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, jobId__field_descriptor),
           (Data.ProtoLens.Tag 3, reason__field_descriptor),
           (Data.ProtoLens.Tag 4, identity__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StopBatchOperationRequest'_unknownFields
        (\ x__ y__
           -> x__ {_StopBatchOperationRequest'_unknownFields = y__})
  defMessage
    = StopBatchOperationRequest'_constructor
        {_StopBatchOperationRequest'namespace = Data.ProtoLens.fieldDefault,
         _StopBatchOperationRequest'jobId = Data.ProtoLens.fieldDefault,
         _StopBatchOperationRequest'reason = Data.ProtoLens.fieldDefault,
         _StopBatchOperationRequest'identity = Data.ProtoLens.fieldDefault,
         _StopBatchOperationRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StopBatchOperationRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser StopBatchOperationRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "job_id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jobId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "StopBatchOperationRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"jobId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8 _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData StopBatchOperationRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StopBatchOperationRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_StopBatchOperationRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_StopBatchOperationRequest'jobId x__)
                   (Control.DeepSeq.deepseq
                      (_StopBatchOperationRequest'reason x__)
                      (Control.DeepSeq.deepseq
                         (_StopBatchOperationRequest'identity x__) ()))))
{- | Fields :
      -}
data StopBatchOperationResponse
  = StopBatchOperationResponse'_constructor {_StopBatchOperationResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show StopBatchOperationResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message StopBatchOperationResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.StopBatchOperationResponse"
  packedMessageDescriptor _
    = "\n\
      \\SUBStopBatchOperationResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _StopBatchOperationResponse'_unknownFields
        (\ x__ y__
           -> x__ {_StopBatchOperationResponse'_unknownFields = y__})
  defMessage
    = StopBatchOperationResponse'_constructor
        {_StopBatchOperationResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          StopBatchOperationResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser StopBatchOperationResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "StopBatchOperationResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData StopBatchOperationResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_StopBatchOperationResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' TerminateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' TerminateWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' TerminateWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.reason' @:: Lens' TerminateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.details' @:: Lens' TerminateWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.Payloads@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'details' @:: Lens' TerminateWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' TerminateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.firstExecutionRunId' @:: Lens' TerminateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.links' @:: Lens' TerminateWorkflowExecutionRequest [Proto.Temporal.Api.Common.V1.Message.Link]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'links' @:: Lens' TerminateWorkflowExecutionRequest (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link)@ -}
data TerminateWorkflowExecutionRequest
  = TerminateWorkflowExecutionRequest'_constructor {_TerminateWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                    _TerminateWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                    _TerminateWorkflowExecutionRequest'reason :: !Data.Text.Text,
                                                    _TerminateWorkflowExecutionRequest'details :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads),
                                                    _TerminateWorkflowExecutionRequest'identity :: !Data.Text.Text,
                                                    _TerminateWorkflowExecutionRequest'firstExecutionRunId :: !Data.Text.Text,
                                                    _TerminateWorkflowExecutionRequest'links :: !(Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link),
                                                    _TerminateWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show TerminateWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_TerminateWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_TerminateWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "reason" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'reason
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'reason = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "details" Proto.Temporal.Api.Common.V1.Message.Payloads where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'details
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'details = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "maybe'details" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payloads) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'details
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'details = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'identity
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "firstExecutionRunId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'firstExecutionRunId
           (\ x__ y__
              -> x__
                   {_TerminateWorkflowExecutionRequest'firstExecutionRunId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "links" [Proto.Temporal.Api.Common.V1.Message.Link] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'links = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField TerminateWorkflowExecutionRequest "vec'links" (Data.Vector.Vector Proto.Temporal.Api.Common.V1.Message.Link) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TerminateWorkflowExecutionRequest'links
           (\ x__ y__
              -> x__ {_TerminateWorkflowExecutionRequest'links = y__}))
        Prelude.id
instance Data.ProtoLens.Message TerminateWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.TerminateWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \!TerminateWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SYN\n\
      \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2:\n\
      \\adetails\CAN\EOT \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
      \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC23\n\
      \\SYNfirst_execution_run_id\CAN\ACK \SOH(\tR\DC3firstExecutionRunId\DC22\n\
      \\ENQlinks\CAN\a \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        reason__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reason"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"reason")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        details__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "details"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payloads)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'details")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        firstExecutionRunId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "first_execution_run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"firstExecutionRunId")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
        links__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "links"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Link)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"links")) ::
              Data.ProtoLens.FieldDescriptor TerminateWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, reason__field_descriptor),
           (Data.ProtoLens.Tag 4, details__field_descriptor),
           (Data.ProtoLens.Tag 5, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, firstExecutionRunId__field_descriptor),
           (Data.ProtoLens.Tag 7, links__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _TerminateWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_TerminateWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = TerminateWorkflowExecutionRequest'_constructor
        {_TerminateWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _TerminateWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _TerminateWorkflowExecutionRequest'reason = Data.ProtoLens.fieldDefault,
         _TerminateWorkflowExecutionRequest'details = Prelude.Nothing,
         _TerminateWorkflowExecutionRequest'identity = Data.ProtoLens.fieldDefault,
         _TerminateWorkflowExecutionRequest'firstExecutionRunId = Data.ProtoLens.fieldDefault,
         _TerminateWorkflowExecutionRequest'links = Data.Vector.Generic.empty,
         _TerminateWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          TerminateWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Common.V1.Message.Link
             -> Data.ProtoLens.Encoding.Bytes.Parser TerminateWorkflowExecutionRequest
        loop x mutable'links
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze mutable'links)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'links") frozen'links x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'links
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                                  mutable'links
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "reason"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"reason") y x)
                                  mutable'links
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "details"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"details") y x)
                                  mutable'links
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                                  mutable'links
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "first_execution_run_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"firstExecutionRunId") y x)
                                  mutable'links
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "links"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'links y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'links
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'links <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                 Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'links)
          "TerminateWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"reason") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'details") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"firstExecutionRunId") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.ProtoLens.encodeMessage _v))
                                  (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'links") _x))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData TerminateWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_TerminateWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_TerminateWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_TerminateWorkflowExecutionRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_TerminateWorkflowExecutionRequest'reason x__)
                      (Control.DeepSeq.deepseq
                         (_TerminateWorkflowExecutionRequest'details x__)
                         (Control.DeepSeq.deepseq
                            (_TerminateWorkflowExecutionRequest'identity x__)
                            (Control.DeepSeq.deepseq
                               (_TerminateWorkflowExecutionRequest'firstExecutionRunId x__)
                               (Control.DeepSeq.deepseq
                                  (_TerminateWorkflowExecutionRequest'links x__) ())))))))
{- | Fields :
      -}
data TerminateWorkflowExecutionResponse
  = TerminateWorkflowExecutionResponse'_constructor {_TerminateWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show TerminateWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message TerminateWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.TerminateWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\"TerminateWorkflowExecutionResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _TerminateWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_TerminateWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = TerminateWorkflowExecutionResponse'_constructor
        {_TerminateWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          TerminateWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser TerminateWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "TerminateWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData TerminateWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_TerminateWorkflowExecutionResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' TriggerWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' TriggerWorkflowRuleRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' TriggerWorkflowRuleRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' TriggerWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' TriggerWorkflowRuleRequest (Prelude.Maybe TriggerWorkflowRuleRequest'Rule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'id' @:: Lens' TriggerWorkflowRuleRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' TriggerWorkflowRuleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'spec' @:: Lens' TriggerWorkflowRuleRequest (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.spec' @:: Lens' TriggerWorkflowRuleRequest Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec@ -}
data TriggerWorkflowRuleRequest
  = TriggerWorkflowRuleRequest'_constructor {_TriggerWorkflowRuleRequest'namespace :: !Data.Text.Text,
                                             _TriggerWorkflowRuleRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                             _TriggerWorkflowRuleRequest'identity :: !Data.Text.Text,
                                             _TriggerWorkflowRuleRequest'rule :: !(Prelude.Maybe TriggerWorkflowRuleRequest'Rule),
                                             _TriggerWorkflowRuleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show TriggerWorkflowRuleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data TriggerWorkflowRuleRequest'Rule
  = TriggerWorkflowRuleRequest'Id !Data.Text.Text |
    TriggerWorkflowRuleRequest'Spec !Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'namespace
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'execution
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'execution
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'identity
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "maybe'rule" (Prelude.Maybe TriggerWorkflowRuleRequest'Rule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'rule
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "maybe'id" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'rule
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'rule = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (TriggerWorkflowRuleRequest'Id x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap TriggerWorkflowRuleRequest'Id y__))
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'rule
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'rule = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (TriggerWorkflowRuleRequest'Id x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap TriggerWorkflowRuleRequest'Id y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "maybe'spec" (Prelude.Maybe Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'rule
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'rule = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (TriggerWorkflowRuleRequest'Spec x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap TriggerWorkflowRuleRequest'Spec y__))
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleRequest "spec" Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleRequest'rule
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleRequest'rule = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (TriggerWorkflowRuleRequest'Spec x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap TriggerWorkflowRuleRequest'Spec y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message TriggerWorkflowRuleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.TriggerWorkflowRuleRequest"
  packedMessageDescriptor _
    = "\n\
      \\SUBTriggerWorkflowRuleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\DLE\n\
      \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2=\n\
      \\EOTspec\CAN\ENQ \SOH(\v2'.temporal.api.rules.v1.WorkflowRuleSpecH\NULR\EOTspec\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentityB\ACK\n\
      \\EOTrule"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'id")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleRequest
        spec__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "spec"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'spec")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, id__field_descriptor),
           (Data.ProtoLens.Tag 5, spec__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _TriggerWorkflowRuleRequest'_unknownFields
        (\ x__ y__
           -> x__ {_TriggerWorkflowRuleRequest'_unknownFields = y__})
  defMessage
    = TriggerWorkflowRuleRequest'_constructor
        {_TriggerWorkflowRuleRequest'namespace = Data.ProtoLens.fieldDefault,
         _TriggerWorkflowRuleRequest'execution = Prelude.Nothing,
         _TriggerWorkflowRuleRequest'identity = Data.ProtoLens.fieldDefault,
         _TriggerWorkflowRuleRequest'rule = Prelude.Nothing,
         _TriggerWorkflowRuleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          TriggerWorkflowRuleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser TriggerWorkflowRuleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "spec"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"spec") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TriggerWorkflowRuleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just (TriggerWorkflowRuleRequest'Id v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.Text.Encoding.encodeUtf8 v)
                         (Prelude.Just (TriggerWorkflowRuleRequest'Spec v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData TriggerWorkflowRuleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_TriggerWorkflowRuleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_TriggerWorkflowRuleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_TriggerWorkflowRuleRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_TriggerWorkflowRuleRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_TriggerWorkflowRuleRequest'rule x__) ()))))
instance Control.DeepSeq.NFData TriggerWorkflowRuleRequest'Rule where
  rnf (TriggerWorkflowRuleRequest'Id x__) = Control.DeepSeq.rnf x__
  rnf (TriggerWorkflowRuleRequest'Spec x__) = Control.DeepSeq.rnf x__
_TriggerWorkflowRuleRequest'Id ::
  Data.ProtoLens.Prism.Prism' TriggerWorkflowRuleRequest'Rule Data.Text.Text
_TriggerWorkflowRuleRequest'Id
  = Data.ProtoLens.Prism.prism'
      TriggerWorkflowRuleRequest'Id
      (\ p__
         -> case p__ of
              (TriggerWorkflowRuleRequest'Id p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_TriggerWorkflowRuleRequest'Spec ::
  Data.ProtoLens.Prism.Prism' TriggerWorkflowRuleRequest'Rule Proto.Temporal.Api.Rules.V1.Message.WorkflowRuleSpec
_TriggerWorkflowRuleRequest'Spec
  = Data.ProtoLens.Prism.prism'
      TriggerWorkflowRuleRequest'Spec
      (\ p__
         -> case p__ of
              (TriggerWorkflowRuleRequest'Spec p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.applied' @:: Lens' TriggerWorkflowRuleResponse Prelude.Bool@ -}
data TriggerWorkflowRuleResponse
  = TriggerWorkflowRuleResponse'_constructor {_TriggerWorkflowRuleResponse'applied :: !Prelude.Bool,
                                              _TriggerWorkflowRuleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show TriggerWorkflowRuleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField TriggerWorkflowRuleResponse "applied" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _TriggerWorkflowRuleResponse'applied
           (\ x__ y__ -> x__ {_TriggerWorkflowRuleResponse'applied = y__}))
        Prelude.id
instance Data.ProtoLens.Message TriggerWorkflowRuleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.TriggerWorkflowRuleResponse"
  packedMessageDescriptor _
    = "\n\
      \\ESCTriggerWorkflowRuleResponse\DC2\CAN\n\
      \\aapplied\CAN\SOH \SOH(\bR\aapplied"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        applied__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "applied"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"applied")) ::
              Data.ProtoLens.FieldDescriptor TriggerWorkflowRuleResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, applied__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _TriggerWorkflowRuleResponse'_unknownFields
        (\ x__ y__
           -> x__ {_TriggerWorkflowRuleResponse'_unknownFields = y__})
  defMessage
    = TriggerWorkflowRuleResponse'_constructor
        {_TriggerWorkflowRuleResponse'applied = Data.ProtoLens.fieldDefault,
         _TriggerWorkflowRuleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          TriggerWorkflowRuleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser TriggerWorkflowRuleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "applied"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"applied") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TriggerWorkflowRuleResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"applied") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData TriggerWorkflowRuleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_TriggerWorkflowRuleResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_TriggerWorkflowRuleResponse'applied x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UnpauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' UnpauseActivityRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' UnpauseActivityRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' UnpauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetAttempts' @:: Lens' UnpauseActivityRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.resetHeartbeat' @:: Lens' UnpauseActivityRequest Prelude.Bool@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.jitter' @:: Lens' UnpauseActivityRequest Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'jitter' @:: Lens' UnpauseActivityRequest (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activity' @:: Lens' UnpauseActivityRequest (Prelude.Maybe UnpauseActivityRequest'Activity)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'id' @:: Lens' UnpauseActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' UnpauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'type'' @:: Lens' UnpauseActivityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.type'' @:: Lens' UnpauseActivityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'unpauseAll' @:: Lens' UnpauseActivityRequest (Prelude.Maybe Prelude.Bool)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.unpauseAll' @:: Lens' UnpauseActivityRequest Prelude.Bool@ -}
data UnpauseActivityRequest
  = UnpauseActivityRequest'_constructor {_UnpauseActivityRequest'namespace :: !Data.Text.Text,
                                         _UnpauseActivityRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                         _UnpauseActivityRequest'identity :: !Data.Text.Text,
                                         _UnpauseActivityRequest'resetAttempts :: !Prelude.Bool,
                                         _UnpauseActivityRequest'resetHeartbeat :: !Prelude.Bool,
                                         _UnpauseActivityRequest'jitter :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                         _UnpauseActivityRequest'activity :: !(Prelude.Maybe UnpauseActivityRequest'Activity),
                                         _UnpauseActivityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UnpauseActivityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data UnpauseActivityRequest'Activity
  = UnpauseActivityRequest'Id !Data.Text.Text |
    UnpauseActivityRequest'Type !Data.Text.Text |
    UnpauseActivityRequest'UnpauseAll !Prelude.Bool
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'namespace
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'execution
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'execution
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'identity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "resetAttempts" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'resetAttempts
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'resetAttempts = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "resetHeartbeat" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'resetHeartbeat
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'resetHeartbeat = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "jitter" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'jitter
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'jitter = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'jitter" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'jitter
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'jitter = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'activity" (Prelude.Maybe UnpauseActivityRequest'Activity) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'id" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UnpauseActivityRequest'Id x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'Id y__))
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UnpauseActivityRequest'Id x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'Id y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'type'" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UnpauseActivityRequest'Type x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'Type y__))
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "type'" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UnpauseActivityRequest'Type x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'Type y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "maybe'unpauseAll" (Prelude.Maybe Prelude.Bool) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UnpauseActivityRequest'UnpauseAll x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'UnpauseAll y__))
instance Data.ProtoLens.Field.HasField UnpauseActivityRequest "unpauseAll" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UnpauseActivityRequest'activity
           (\ x__ y__ -> x__ {_UnpauseActivityRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UnpauseActivityRequest'UnpauseAll x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap UnpauseActivityRequest'UnpauseAll y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message UnpauseActivityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UnpauseActivityRequest"
  packedMessageDescriptor _
    = "\n\
      \\SYNUnpauseActivityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
      \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
      \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2!\n\
      \\vunpause_all\CAN\ACK \SOH(\bH\NULR\n\
      \unpauseAll\DC2%\n\
      \\SOreset_attempts\CAN\a \SOH(\bR\rresetAttempts\DC2'\n\
      \\SIreset_heartbeat\CAN\b \SOH(\bR\SOresetHeartbeat\DC21\n\
      \\ACKjitter\CAN\t \SOH(\v2\EM.google.protobuf.DurationR\ACKjitterB\n\
      \\n\
      \\bactivity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        resetAttempts__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_attempts"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"resetAttempts")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        resetHeartbeat__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_heartbeat"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"resetHeartbeat")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        jitter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "jitter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'jitter")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'id")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        type'__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'type'")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
        unpauseAll__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "unpause_all"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'unpauseAll")) ::
              Data.ProtoLens.FieldDescriptor UnpauseActivityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 7, resetAttempts__field_descriptor),
           (Data.ProtoLens.Tag 8, resetHeartbeat__field_descriptor),
           (Data.ProtoLens.Tag 9, jitter__field_descriptor),
           (Data.ProtoLens.Tag 4, id__field_descriptor),
           (Data.ProtoLens.Tag 5, type'__field_descriptor),
           (Data.ProtoLens.Tag 6, unpauseAll__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UnpauseActivityRequest'_unknownFields
        (\ x__ y__ -> x__ {_UnpauseActivityRequest'_unknownFields = y__})
  defMessage
    = UnpauseActivityRequest'_constructor
        {_UnpauseActivityRequest'namespace = Data.ProtoLens.fieldDefault,
         _UnpauseActivityRequest'execution = Prelude.Nothing,
         _UnpauseActivityRequest'identity = Data.ProtoLens.fieldDefault,
         _UnpauseActivityRequest'resetAttempts = Data.ProtoLens.fieldDefault,
         _UnpauseActivityRequest'resetHeartbeat = Data.ProtoLens.fieldDefault,
         _UnpauseActivityRequest'jitter = Prelude.Nothing,
         _UnpauseActivityRequest'activity = Prelude.Nothing,
         _UnpauseActivityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UnpauseActivityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UnpauseActivityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "reset_attempts"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetAttempts") y x)
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "reset_heartbeat"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"resetHeartbeat") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "jitter"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"jitter") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "type"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"type'") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "unpause_all"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"unpauseAll") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UnpauseActivityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"resetAttempts") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0) _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"resetHeartbeat") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'jitter") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'activity") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just (UnpauseActivityRequest'Id v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8 v)
                                  (Prelude.Just (UnpauseActivityRequest'Type v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8 v)
                                  (Prelude.Just (UnpauseActivityRequest'UnpauseAll v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                         ((Prelude..)
                                            Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (\ b -> if b then 1 else 0) v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData UnpauseActivityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UnpauseActivityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UnpauseActivityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UnpauseActivityRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_UnpauseActivityRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_UnpauseActivityRequest'resetAttempts x__)
                         (Control.DeepSeq.deepseq
                            (_UnpauseActivityRequest'resetHeartbeat x__)
                            (Control.DeepSeq.deepseq
                               (_UnpauseActivityRequest'jitter x__)
                               (Control.DeepSeq.deepseq
                                  (_UnpauseActivityRequest'activity x__) ())))))))
instance Control.DeepSeq.NFData UnpauseActivityRequest'Activity where
  rnf (UnpauseActivityRequest'Id x__) = Control.DeepSeq.rnf x__
  rnf (UnpauseActivityRequest'Type x__) = Control.DeepSeq.rnf x__
  rnf (UnpauseActivityRequest'UnpauseAll x__)
    = Control.DeepSeq.rnf x__
_UnpauseActivityRequest'Id ::
  Data.ProtoLens.Prism.Prism' UnpauseActivityRequest'Activity Data.Text.Text
_UnpauseActivityRequest'Id
  = Data.ProtoLens.Prism.prism'
      UnpauseActivityRequest'Id
      (\ p__
         -> case p__ of
              (UnpauseActivityRequest'Id p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UnpauseActivityRequest'Type ::
  Data.ProtoLens.Prism.Prism' UnpauseActivityRequest'Activity Data.Text.Text
_UnpauseActivityRequest'Type
  = Data.ProtoLens.Prism.prism'
      UnpauseActivityRequest'Type
      (\ p__
         -> case p__ of
              (UnpauseActivityRequest'Type p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UnpauseActivityRequest'UnpauseAll ::
  Data.ProtoLens.Prism.Prism' UnpauseActivityRequest'Activity Prelude.Bool
_UnpauseActivityRequest'UnpauseAll
  = Data.ProtoLens.Prism.prism'
      UnpauseActivityRequest'UnpauseAll
      (\ p__
         -> case p__ of
              (UnpauseActivityRequest'UnpauseAll p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data UnpauseActivityResponse
  = UnpauseActivityResponse'_constructor {_UnpauseActivityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UnpauseActivityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message UnpauseActivityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UnpauseActivityResponse"
  packedMessageDescriptor _
    = "\n\
      \\ETBUnpauseActivityResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UnpauseActivityResponse'_unknownFields
        (\ x__ y__ -> x__ {_UnpauseActivityResponse'_unknownFields = y__})
  defMessage
    = UnpauseActivityResponse'_constructor
        {_UnpauseActivityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UnpauseActivityResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UnpauseActivityResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UnpauseActivityResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData UnpauseActivityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UnpauseActivityResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateActivityOptionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.execution' @:: Lens' UpdateActivityOptionsRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'execution' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' UpdateActivityOptionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityOptions' @:: Lens' UpdateActivityOptionsRequest Proto.Temporal.Api.Activity.V1.Message.ActivityOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activityOptions' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateMask' @:: Lens' UpdateActivityOptionsRequest Proto.Google.Protobuf.FieldMask.FieldMask@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateMask' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activity' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe UpdateActivityOptionsRequest'Activity)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'id' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.id' @:: Lens' UpdateActivityOptionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'type'' @:: Lens' UpdateActivityOptionsRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.type'' @:: Lens' UpdateActivityOptionsRequest Data.Text.Text@ -}
data UpdateActivityOptionsRequest
  = UpdateActivityOptionsRequest'_constructor {_UpdateActivityOptionsRequest'namespace :: !Data.Text.Text,
                                               _UpdateActivityOptionsRequest'execution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                               _UpdateActivityOptionsRequest'identity :: !Data.Text.Text,
                                               _UpdateActivityOptionsRequest'activityOptions :: !(Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions),
                                               _UpdateActivityOptionsRequest'updateMask :: !(Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask),
                                               _UpdateActivityOptionsRequest'activity :: !(Prelude.Maybe UpdateActivityOptionsRequest'Activity),
                                               _UpdateActivityOptionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateActivityOptionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data UpdateActivityOptionsRequest'Activity
  = UpdateActivityOptionsRequest'Id !Data.Text.Text |
    UpdateActivityOptionsRequest'Type !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'namespace
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "execution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'execution
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'execution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'execution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'execution
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'execution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'identity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "activityOptions" Proto.Temporal.Api.Activity.V1.Message.ActivityOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activityOptions
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsRequest'activityOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'activityOptions" (Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activityOptions
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsRequest'activityOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "updateMask" Proto.Google.Protobuf.FieldMask.FieldMask where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'updateMask
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsRequest'updateMask = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'updateMask" (Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'updateMask
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsRequest'updateMask = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'activity" (Prelude.Maybe UpdateActivityOptionsRequest'Activity) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'activity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'id" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateActivityOptionsRequest'Id x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap UpdateActivityOptionsRequest'Id y__))
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "id" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateActivityOptionsRequest'Id x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap UpdateActivityOptionsRequest'Id y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "maybe'type'" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'activity = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateActivityOptionsRequest'Type x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap UpdateActivityOptionsRequest'Type y__))
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsRequest "type'" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsRequest'activity
           (\ x__ y__ -> x__ {_UpdateActivityOptionsRequest'activity = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateActivityOptionsRequest'Type x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap UpdateActivityOptionsRequest'Type y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message UpdateActivityOptionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateActivityOptionsRequest"
  packedMessageDescriptor _
    = "\n\
      \\FSUpdateActivityOptionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
      \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
      \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2T\n\
      \\DLEactivity_options\CAN\EOT \SOH(\v2).temporal.api.activity.v1.ActivityOptionsR\SIactivityOptions\DC2;\n\
      \\vupdate_mask\CAN\ENQ \SOH(\v2\SUB.google.protobuf.FieldMaskR\n\
      \updateMask\DC2\DLE\n\
      \\STXid\CAN\ACK \SOH(\tH\NULR\STXid\DC2\DC4\n\
      \\EOTtype\CAN\a \SOH(\tH\NULR\EOTtypeB\n\
      \\n\
      \\bactivity"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        execution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'execution")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        activityOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Activity.V1.Message.ActivityOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'activityOptions")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        updateMask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_mask"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.FieldMask.FieldMask)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateMask")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        id__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'id")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
        type'__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'type'")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, execution__field_descriptor),
           (Data.ProtoLens.Tag 3, identity__field_descriptor),
           (Data.ProtoLens.Tag 4, activityOptions__field_descriptor),
           (Data.ProtoLens.Tag 5, updateMask__field_descriptor),
           (Data.ProtoLens.Tag 6, id__field_descriptor),
           (Data.ProtoLens.Tag 7, type'__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateActivityOptionsRequest'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateActivityOptionsRequest'_unknownFields = y__})
  defMessage
    = UpdateActivityOptionsRequest'_constructor
        {_UpdateActivityOptionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateActivityOptionsRequest'execution = Prelude.Nothing,
         _UpdateActivityOptionsRequest'identity = Data.ProtoLens.fieldDefault,
         _UpdateActivityOptionsRequest'activityOptions = Prelude.Nothing,
         _UpdateActivityOptionsRequest'updateMask = Prelude.Nothing,
         _UpdateActivityOptionsRequest'activity = Prelude.Nothing,
         _UpdateActivityOptionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateActivityOptionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateActivityOptionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "execution"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"execution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "activity_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityOptions") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_mask"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateMask") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "id"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"id") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "type"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"type'") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateActivityOptionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'execution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'activityOptions") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'updateMask") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'activity") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just (UpdateActivityOptionsRequest'Id v))
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.Text.Encoding.encodeUtf8 v)
                               (Prelude.Just (UpdateActivityOptionsRequest'Type v))
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.Text.Encoding.encodeUtf8 v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData UpdateActivityOptionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateActivityOptionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateActivityOptionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateActivityOptionsRequest'execution x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateActivityOptionsRequest'identity x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateActivityOptionsRequest'activityOptions x__)
                         (Control.DeepSeq.deepseq
                            (_UpdateActivityOptionsRequest'updateMask x__)
                            (Control.DeepSeq.deepseq
                               (_UpdateActivityOptionsRequest'activity x__) ()))))))
instance Control.DeepSeq.NFData UpdateActivityOptionsRequest'Activity where
  rnf (UpdateActivityOptionsRequest'Id x__) = Control.DeepSeq.rnf x__
  rnf (UpdateActivityOptionsRequest'Type x__)
    = Control.DeepSeq.rnf x__
_UpdateActivityOptionsRequest'Id ::
  Data.ProtoLens.Prism.Prism' UpdateActivityOptionsRequest'Activity Data.Text.Text
_UpdateActivityOptionsRequest'Id
  = Data.ProtoLens.Prism.prism'
      UpdateActivityOptionsRequest'Id
      (\ p__
         -> case p__ of
              (UpdateActivityOptionsRequest'Id p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateActivityOptionsRequest'Type ::
  Data.ProtoLens.Prism.Prism' UpdateActivityOptionsRequest'Activity Data.Text.Text
_UpdateActivityOptionsRequest'Type
  = Data.ProtoLens.Prism.prism'
      UpdateActivityOptionsRequest'Type
      (\ p__
         -> case p__ of
              (UpdateActivityOptionsRequest'Type p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.activityOptions' @:: Lens' UpdateActivityOptionsResponse Proto.Temporal.Api.Activity.V1.Message.ActivityOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'activityOptions' @:: Lens' UpdateActivityOptionsResponse (Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions)@ -}
data UpdateActivityOptionsResponse
  = UpdateActivityOptionsResponse'_constructor {_UpdateActivityOptionsResponse'activityOptions :: !(Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions),
                                                _UpdateActivityOptionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateActivityOptionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsResponse "activityOptions" Proto.Temporal.Api.Activity.V1.Message.ActivityOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsResponse'activityOptions
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsResponse'activityOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateActivityOptionsResponse "maybe'activityOptions" (Prelude.Maybe Proto.Temporal.Api.Activity.V1.Message.ActivityOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateActivityOptionsResponse'activityOptions
           (\ x__ y__
              -> x__ {_UpdateActivityOptionsResponse'activityOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateActivityOptionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateActivityOptionsResponse"
  packedMessageDescriptor _
    = "\n\
      \\GSUpdateActivityOptionsResponse\DC2T\n\
      \\DLEactivity_options\CAN\SOH \SOH(\v2).temporal.api.activity.v1.ActivityOptionsR\SIactivityOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        activityOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "activity_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Activity.V1.Message.ActivityOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'activityOptions")) ::
              Data.ProtoLens.FieldDescriptor UpdateActivityOptionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, activityOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateActivityOptionsResponse'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateActivityOptionsResponse'_unknownFields = y__})
  defMessage
    = UpdateActivityOptionsResponse'_constructor
        {_UpdateActivityOptionsResponse'activityOptions = Prelude.Nothing,
         _UpdateActivityOptionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateActivityOptionsResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateActivityOptionsResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "activity_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"activityOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateActivityOptionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'activityOptions") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateActivityOptionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateActivityOptionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateActivityOptionsResponse'activityOptions x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateInfo' @:: Lens' UpdateNamespaceRequest Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateInfo' @:: Lens' UpdateNamespaceRequest (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.config' @:: Lens' UpdateNamespaceRequest Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'config' @:: Lens' UpdateNamespaceRequest (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.replicationConfig' @:: Lens' UpdateNamespaceRequest Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'replicationConfig' @:: Lens' UpdateNamespaceRequest (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.securityToken' @:: Lens' UpdateNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deleteBadBinary' @:: Lens' UpdateNamespaceRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.promoteNamespace' @:: Lens' UpdateNamespaceRequest Prelude.Bool@ -}
data UpdateNamespaceRequest
  = UpdateNamespaceRequest'_constructor {_UpdateNamespaceRequest'namespace :: !Data.Text.Text,
                                         _UpdateNamespaceRequest'updateInfo :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo),
                                         _UpdateNamespaceRequest'config :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig),
                                         _UpdateNamespaceRequest'replicationConfig :: !(Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig),
                                         _UpdateNamespaceRequest'securityToken :: !Data.Text.Text,
                                         _UpdateNamespaceRequest'deleteBadBinary :: !Data.Text.Text,
                                         _UpdateNamespaceRequest'promoteNamespace :: !Prelude.Bool,
                                         _UpdateNamespaceRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateNamespaceRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'namespace
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "updateInfo" Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'updateInfo
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'updateInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "maybe'updateInfo" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'updateInfo
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'updateInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "config" Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'config
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'config = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "maybe'config" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'config
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'config = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "replicationConfig" Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'replicationConfig
           (\ x__ y__
              -> x__ {_UpdateNamespaceRequest'replicationConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "maybe'replicationConfig" (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'replicationConfig
           (\ x__ y__
              -> x__ {_UpdateNamespaceRequest'replicationConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "securityToken" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'securityToken
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'securityToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "deleteBadBinary" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'deleteBadBinary
           (\ x__ y__ -> x__ {_UpdateNamespaceRequest'deleteBadBinary = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceRequest "promoteNamespace" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceRequest'promoteNamespace
           (\ x__ y__
              -> x__ {_UpdateNamespaceRequest'promoteNamespace = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateNamespaceRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateNamespaceRequest"
  packedMessageDescriptor _
    = "\n\
      \\SYNUpdateNamespaceRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2O\n\
      \\vupdate_info\CAN\STX \SOH(\v2..temporal.api.namespace.v1.UpdateNamespaceInfoR\n\
      \updateInfo\DC2B\n\
      \\ACKconfig\CAN\ETX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
      \\DC2replication_config\CAN\EOT \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2%\n\
      \\SOsecurity_token\CAN\ENQ \SOH(\tR\rsecurityToken\DC2*\n\
      \\DC1delete_bad_binary\CAN\ACK \SOH(\tR\SIdeleteBadBinary\DC2+\n\
      \\DC1promote_namespace\CAN\a \SOH(\bR\DLEpromoteNamespace"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        updateInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.UpdateNamespaceInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateInfo")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        config__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'config")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        replicationConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "replication_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'replicationConfig")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        securityToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "security_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"securityToken")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        deleteBadBinary__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "delete_bad_binary"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"deleteBadBinary")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
        promoteNamespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "promote_namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"promoteNamespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, updateInfo__field_descriptor),
           (Data.ProtoLens.Tag 3, config__field_descriptor),
           (Data.ProtoLens.Tag 4, replicationConfig__field_descriptor),
           (Data.ProtoLens.Tag 5, securityToken__field_descriptor),
           (Data.ProtoLens.Tag 6, deleteBadBinary__field_descriptor),
           (Data.ProtoLens.Tag 7, promoteNamespace__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateNamespaceRequest'_unknownFields
        (\ x__ y__ -> x__ {_UpdateNamespaceRequest'_unknownFields = y__})
  defMessage
    = UpdateNamespaceRequest'_constructor
        {_UpdateNamespaceRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceRequest'updateInfo = Prelude.Nothing,
         _UpdateNamespaceRequest'config = Prelude.Nothing,
         _UpdateNamespaceRequest'replicationConfig = Prelude.Nothing,
         _UpdateNamespaceRequest'securityToken = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceRequest'deleteBadBinary = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceRequest'promoteNamespace = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateNamespaceRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateNamespaceRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_info"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateInfo") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "config"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"config") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "replication_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"replicationConfig") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "security_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"securityToken") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "delete_bad_binary"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deleteBadBinary") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "promote_namespace"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"promoteNamespace") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateNamespaceRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'updateInfo") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'config") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'replicationConfig") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"securityToken") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"deleteBadBinary") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (let
                                  _v
                                    = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"promoteNamespace") _x
                                in
                                  if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                                        ((Prelude..)
                                           Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (\ b -> if b then 1 else 0) _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData UpdateNamespaceRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateNamespaceRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateNamespaceRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateNamespaceRequest'updateInfo x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateNamespaceRequest'config x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateNamespaceRequest'replicationConfig x__)
                         (Control.DeepSeq.deepseq
                            (_UpdateNamespaceRequest'securityToken x__)
                            (Control.DeepSeq.deepseq
                               (_UpdateNamespaceRequest'deleteBadBinary x__)
                               (Control.DeepSeq.deepseq
                                  (_UpdateNamespaceRequest'promoteNamespace x__) ())))))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespaceInfo' @:: Lens' UpdateNamespaceResponse Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'namespaceInfo' @:: Lens' UpdateNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.config' @:: Lens' UpdateNamespaceResponse Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'config' @:: Lens' UpdateNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.replicationConfig' @:: Lens' UpdateNamespaceResponse Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'replicationConfig' @:: Lens' UpdateNamespaceResponse (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.failoverVersion' @:: Lens' UpdateNamespaceResponse Data.Int.Int64@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.isGlobalNamespace' @:: Lens' UpdateNamespaceResponse Prelude.Bool@ -}
data UpdateNamespaceResponse
  = UpdateNamespaceResponse'_constructor {_UpdateNamespaceResponse'namespaceInfo :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo),
                                          _UpdateNamespaceResponse'config :: !(Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig),
                                          _UpdateNamespaceResponse'replicationConfig :: !(Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig),
                                          _UpdateNamespaceResponse'failoverVersion :: !Data.Int.Int64,
                                          _UpdateNamespaceResponse'isGlobalNamespace :: !Prelude.Bool,
                                          _UpdateNamespaceResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateNamespaceResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "namespaceInfo" Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'namespaceInfo
           (\ x__ y__ -> x__ {_UpdateNamespaceResponse'namespaceInfo = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "maybe'namespaceInfo" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'namespaceInfo
           (\ x__ y__ -> x__ {_UpdateNamespaceResponse'namespaceInfo = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "config" Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'config
           (\ x__ y__ -> x__ {_UpdateNamespaceResponse'config = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "maybe'config" (Prelude.Maybe Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'config
           (\ x__ y__ -> x__ {_UpdateNamespaceResponse'config = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "replicationConfig" Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'replicationConfig
           (\ x__ y__
              -> x__ {_UpdateNamespaceResponse'replicationConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "maybe'replicationConfig" (Prelude.Maybe Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'replicationConfig
           (\ x__ y__
              -> x__ {_UpdateNamespaceResponse'replicationConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "failoverVersion" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'failoverVersion
           (\ x__ y__
              -> x__ {_UpdateNamespaceResponse'failoverVersion = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateNamespaceResponse "isGlobalNamespace" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateNamespaceResponse'isGlobalNamespace
           (\ x__ y__
              -> x__ {_UpdateNamespaceResponse'isGlobalNamespace = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateNamespaceResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateNamespaceResponse"
  packedMessageDescriptor _
    = "\n\
      \\ETBUpdateNamespaceResponse\DC2O\n\
      \\SOnamespace_info\CAN\SOH \SOH(\v2(.temporal.api.namespace.v1.NamespaceInfoR\rnamespaceInfo\DC2B\n\
      \\ACKconfig\CAN\STX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
      \\DC2replication_config\CAN\ETX \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2)\n\
      \\DLEfailover_version\CAN\EOT \SOH(\ETXR\SIfailoverVersion\DC2.\n\
      \\DC3is_global_namespace\CAN\ENQ \SOH(\bR\DC1isGlobalNamespace"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespaceInfo__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace_info"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceInfo)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'namespaceInfo")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceResponse
        config__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Namespace.V1.Message.NamespaceConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'config")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceResponse
        replicationConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "replication_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Replication.V1.Message.NamespaceReplicationConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'replicationConfig")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceResponse
        failoverVersion__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "failover_version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"failoverVersion")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceResponse
        isGlobalNamespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "is_global_namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"isGlobalNamespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateNamespaceResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespaceInfo__field_descriptor),
           (Data.ProtoLens.Tag 2, config__field_descriptor),
           (Data.ProtoLens.Tag 3, replicationConfig__field_descriptor),
           (Data.ProtoLens.Tag 4, failoverVersion__field_descriptor),
           (Data.ProtoLens.Tag 5, isGlobalNamespace__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateNamespaceResponse'_unknownFields
        (\ x__ y__ -> x__ {_UpdateNamespaceResponse'_unknownFields = y__})
  defMessage
    = UpdateNamespaceResponse'_constructor
        {_UpdateNamespaceResponse'namespaceInfo = Prelude.Nothing,
         _UpdateNamespaceResponse'config = Prelude.Nothing,
         _UpdateNamespaceResponse'replicationConfig = Prelude.Nothing,
         _UpdateNamespaceResponse'failoverVersion = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceResponse'isGlobalNamespace = Data.ProtoLens.fieldDefault,
         _UpdateNamespaceResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateNamespaceResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateNamespaceResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "namespace_info"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"namespaceInfo") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "config"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"config") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "replication_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"replicationConfig") y x)
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "failover_version"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"failoverVersion") y x)
                        40
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "is_global_namespace"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"isGlobalNamespace") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateNamespaceResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'namespaceInfo") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'config") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'replicationConfig") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"failoverVersion") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                      ((Data.Monoid.<>)
                         (let
                            _v
                              = Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"isGlobalNamespace") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 40)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (\ b -> if b then 1 else 0) _v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData UpdateNamespaceResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateNamespaceResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateNamespaceResponse'namespaceInfo x__)
                (Control.DeepSeq.deepseq
                   (_UpdateNamespaceResponse'config x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateNamespaceResponse'replicationConfig x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateNamespaceResponse'failoverVersion x__)
                         (Control.DeepSeq.deepseq
                            (_UpdateNamespaceResponse'isGlobalNamespace x__) ())))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.scheduleId' @:: Lens' UpdateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.schedule' @:: Lens' UpdateScheduleRequest Proto.Temporal.Api.Schedule.V1.Message.Schedule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'schedule' @:: Lens' UpdateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' UpdateScheduleRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.identity' @:: Lens' UpdateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.requestId' @:: Lens' UpdateScheduleRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.searchAttributes' @:: Lens' UpdateScheduleRequest Proto.Temporal.Api.Common.V1.Message.SearchAttributes@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'searchAttributes' @:: Lens' UpdateScheduleRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes)@ -}
data UpdateScheduleRequest
  = UpdateScheduleRequest'_constructor {_UpdateScheduleRequest'namespace :: !Data.Text.Text,
                                        _UpdateScheduleRequest'scheduleId :: !Data.Text.Text,
                                        _UpdateScheduleRequest'schedule :: !(Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule),
                                        _UpdateScheduleRequest'conflictToken :: !Data.ByteString.ByteString,
                                        _UpdateScheduleRequest'identity :: !Data.Text.Text,
                                        _UpdateScheduleRequest'requestId :: !Data.Text.Text,
                                        _UpdateScheduleRequest'searchAttributes :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes),
                                        _UpdateScheduleRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateScheduleRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'namespace
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "scheduleId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'scheduleId
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'scheduleId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "schedule" Proto.Temporal.Api.Schedule.V1.Message.Schedule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'schedule
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'schedule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "maybe'schedule" (Prelude.Maybe Proto.Temporal.Api.Schedule.V1.Message.Schedule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'schedule
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'schedule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'conflictToken
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "identity" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'identity
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'identity = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "requestId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'requestId
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'requestId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "searchAttributes" Proto.Temporal.Api.Common.V1.Message.SearchAttributes where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'searchAttributes
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'searchAttributes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateScheduleRequest "maybe'searchAttributes" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.SearchAttributes) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateScheduleRequest'searchAttributes
           (\ x__ y__ -> x__ {_UpdateScheduleRequest'searchAttributes = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateScheduleRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateScheduleRequest"
  packedMessageDescriptor _
    = "\n\
      \\NAKUpdateScheduleRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
      \\vschedule_id\CAN\STX \SOH(\tR\n\
      \scheduleId\DC2>\n\
      \\bschedule\CAN\ETX \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2%\n\
      \\SOconflict_token\CAN\EOT \SOH(\fR\rconflictToken\DC2\SUB\n\
      \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
      \\n\
      \request_id\CAN\ACK \SOH(\tR\trequestId\DC2U\n\
      \\DC1search_attributes\CAN\a \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        scheduleId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"scheduleId")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        schedule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "schedule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Schedule.V1.Message.Schedule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'schedule")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        identity__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "identity"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"identity")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        requestId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requestId")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
        searchAttributes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "search_attributes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.SearchAttributes)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'searchAttributes")) ::
              Data.ProtoLens.FieldDescriptor UpdateScheduleRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, scheduleId__field_descriptor),
           (Data.ProtoLens.Tag 3, schedule__field_descriptor),
           (Data.ProtoLens.Tag 4, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 5, identity__field_descriptor),
           (Data.ProtoLens.Tag 6, requestId__field_descriptor),
           (Data.ProtoLens.Tag 7, searchAttributes__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateScheduleRequest'_unknownFields
        (\ x__ y__ -> x__ {_UpdateScheduleRequest'_unknownFields = y__})
  defMessage
    = UpdateScheduleRequest'_constructor
        {_UpdateScheduleRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateScheduleRequest'scheduleId = Data.ProtoLens.fieldDefault,
         _UpdateScheduleRequest'schedule = Prelude.Nothing,
         _UpdateScheduleRequest'conflictToken = Data.ProtoLens.fieldDefault,
         _UpdateScheduleRequest'identity = Data.ProtoLens.fieldDefault,
         _UpdateScheduleRequest'requestId = Data.ProtoLens.fieldDefault,
         _UpdateScheduleRequest'searchAttributes = Prelude.Nothing,
         _UpdateScheduleRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateScheduleRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateScheduleRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "schedule_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"scheduleId") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "schedule"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"schedule") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "identity"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"identity") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "request_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requestId") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "search_attributes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"searchAttributes") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateScheduleRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"scheduleId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'schedule") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"conflictToken") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"identity") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8 _v))
                         ((Data.Monoid.<>)
                            (let
                               _v = Lens.Family2.view (Data.ProtoLens.Field.field @"requestId") _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                     ((Prelude..)
                                        (\ bs
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                   (Prelude.fromIntegral
                                                      (Data.ByteString.length bs)))
                                                (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                        Data.Text.Encoding.encodeUtf8 _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'searchAttributes") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage _v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData UpdateScheduleRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateScheduleRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateScheduleRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateScheduleRequest'scheduleId x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateScheduleRequest'schedule x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateScheduleRequest'conflictToken x__)
                         (Control.DeepSeq.deepseq
                            (_UpdateScheduleRequest'identity x__)
                            (Control.DeepSeq.deepseq
                               (_UpdateScheduleRequest'requestId x__)
                               (Control.DeepSeq.deepseq
                                  (_UpdateScheduleRequest'searchAttributes x__) ())))))))
{- | Fields :
      -}
data UpdateScheduleResponse
  = UpdateScheduleResponse'_constructor {_UpdateScheduleResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateScheduleResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message UpdateScheduleResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateScheduleResponse"
  packedMessageDescriptor _
    = "\n\
      \\SYNUpdateScheduleResponse"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateScheduleResponse'_unknownFields
        (\ x__ y__ -> x__ {_UpdateScheduleResponse'_unknownFields = y__})
  defMessage
    = UpdateScheduleResponse'_constructor
        {_UpdateScheduleResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateScheduleResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateScheduleResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpdateScheduleResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData UpdateScheduleResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateScheduleResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'operation' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'Operation)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'addNewBuildIdInNewDefaultSet' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.addNewBuildIdInNewDefaultSet' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'addNewCompatibleBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.addNewCompatibleBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'promoteSetByBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.promoteSetByBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'promoteBuildIdWithinSet' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.promoteBuildIdWithinSet' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'mergeSets' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'MergeSets)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.mergeSets' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest UpdateWorkerBuildIdCompatibilityRequest'MergeSets@ -}
data UpdateWorkerBuildIdCompatibilityRequest
  = UpdateWorkerBuildIdCompatibilityRequest'_constructor {_UpdateWorkerBuildIdCompatibilityRequest'namespace :: !Data.Text.Text,
                                                          _UpdateWorkerBuildIdCompatibilityRequest'taskQueue :: !Data.Text.Text,
                                                          _UpdateWorkerBuildIdCompatibilityRequest'operation :: !(Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'Operation),
                                                          _UpdateWorkerBuildIdCompatibilityRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerBuildIdCompatibilityRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data UpdateWorkerBuildIdCompatibilityRequest'Operation
  = UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet !Data.Text.Text |
    UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId !UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion |
    UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId !Data.Text.Text |
    UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet !Data.Text.Text |
    UpdateWorkerBuildIdCompatibilityRequest'MergeSets' !UpdateWorkerBuildIdCompatibilityRequest'MergeSets
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'namespace
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "taskQueue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'taskQueue
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'operation" (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'Operation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'addNewBuildIdInNewDefaultSet" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet
                   y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "addNewBuildIdInNewDefaultSet" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet
                      y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'addNewCompatibleBuildId" (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId
                   y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "addNewCompatibleBuildId" UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId
                      y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'promoteSetByBuildId" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "promoteSetByBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'promoteBuildIdWithinSet" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet
                   y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "promoteBuildIdWithinSet" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet
                      y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "maybe'mergeSets" (Prelude.Maybe UpdateWorkerBuildIdCompatibilityRequest'MergeSets) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'MergeSets' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerBuildIdCompatibilityRequest'MergeSets' y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest "mergeSets" UpdateWorkerBuildIdCompatibilityRequest'MergeSets where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerBuildIdCompatibilityRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'MergeSets' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerBuildIdCompatibilityRequest'MergeSets' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message UpdateWorkerBuildIdCompatibilityRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest"
  packedMessageDescriptor _
    = "\n\
      \'UpdateWorkerBuildIdCompatibilityRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
      \\n\
      \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2K\n\
      \#add_new_build_id_in_new_default_set\CAN\ETX \SOH(\tH\NULR\FSaddNewBuildIdInNewDefaultSet\DC2\160\SOH\n\
      \\ESCadd_new_compatible_build_id\CAN\EOT \SOH(\v2`.temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.AddNewCompatibleVersionH\NULR\ETBaddNewCompatibleBuildId\DC26\n\
      \\ETBpromote_set_by_build_id\CAN\ENQ \SOH(\tH\NULR\DC3promoteSetByBuildId\DC2>\n\
      \\ESCpromote_build_id_within_set\CAN\ACK \SOH(\tH\NULR\ETBpromoteBuildIdWithinSet\DC2s\n\
      \\n\
      \merge_sets\CAN\a \SOH(\v2R.temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.MergeSetsH\NULR\tmergeSets\SUB\166\SOH\n\
      \\ETBAddNewCompatibleVersion\DC2 \n\
      \\fnew_build_id\CAN\SOH \SOH(\tR\n\
      \newBuildId\DC2?\n\
      \\FSexisting_compatible_build_id\CAN\STX \SOH(\tR\EMexistingCompatibleBuildId\DC2(\n\
      \\DLEmake_set_default\CAN\ETX \SOH(\bR\SOmakeSetDefault\SUBq\n\
      \\tMergeSets\DC2/\n\
      \\DC4primary_set_build_id\CAN\SOH \SOH(\tR\DC1primarySetBuildId\DC23\n\
      \\SYNsecondary_set_build_id\CAN\STX \SOH(\tR\DC3secondarySetBuildIdB\v\n\
      \\toperation"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskQueue")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        addNewBuildIdInNewDefaultSet__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "add_new_build_id_in_new_default_set"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'addNewBuildIdInNewDefaultSet")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        addNewCompatibleBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "add_new_compatible_build_id"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'addNewCompatibleBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        promoteSetByBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "promote_set_by_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'promoteSetByBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        promoteBuildIdWithinSet__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "promote_build_id_within_set"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'promoteBuildIdWithinSet")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
        mergeSets__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "merge_sets"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerBuildIdCompatibilityRequest'MergeSets)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'mergeSets")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, 
            addNewBuildIdInNewDefaultSet__field_descriptor),
           (Data.ProtoLens.Tag 4, addNewCompatibleBuildId__field_descriptor),
           (Data.ProtoLens.Tag 5, promoteSetByBuildId__field_descriptor),
           (Data.ProtoLens.Tag 6, promoteBuildIdWithinSet__field_descriptor),
           (Data.ProtoLens.Tag 7, mergeSets__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerBuildIdCompatibilityRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerBuildIdCompatibilityRequest'_unknownFields = y__})
  defMessage
    = UpdateWorkerBuildIdCompatibilityRequest'_constructor
        {_UpdateWorkerBuildIdCompatibilityRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'taskQueue = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'operation = Prelude.Nothing,
         _UpdateWorkerBuildIdCompatibilityRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerBuildIdCompatibilityRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerBuildIdCompatibilityRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "add_new_build_id_in_new_default_set"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"addNewBuildIdInNewDefaultSet") y
                                     x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "add_new_compatible_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"addNewCompatibleBuildId") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "promote_set_by_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"promoteSetByBuildId") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "promote_build_id_within_set"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"promoteBuildIdWithinSet") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "merge_sets"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"mergeSets") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkerBuildIdCompatibilityRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskQueue") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'operation") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8 v)
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage v)
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8 v)
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8 v)
                      (Prelude.Just (UpdateWorkerBuildIdCompatibilityRequest'MergeSets' v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData UpdateWorkerBuildIdCompatibilityRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerBuildIdCompatibilityRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerBuildIdCompatibilityRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerBuildIdCompatibilityRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerBuildIdCompatibilityRequest'operation x__) ())))
instance Control.DeepSeq.NFData UpdateWorkerBuildIdCompatibilityRequest'Operation where
  rnf
    (UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet x__)
    = Control.DeepSeq.rnf x__
  rnf (UpdateWorkerBuildIdCompatibilityRequest'MergeSets' x__)
    = Control.DeepSeq.rnf x__
_UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerBuildIdCompatibilityRequest'Operation Data.Text.Text
_UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet
      (\ p__
         -> case p__ of
              (UpdateWorkerBuildIdCompatibilityRequest'AddNewBuildIdInNewDefaultSet p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerBuildIdCompatibilityRequest'Operation UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId
      (\ p__
         -> case p__ of
              (UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleBuildId p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerBuildIdCompatibilityRequest'Operation Data.Text.Text
_UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId
      (\ p__
         -> case p__ of
              (UpdateWorkerBuildIdCompatibilityRequest'PromoteSetByBuildId p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerBuildIdCompatibilityRequest'Operation Data.Text.Text
_UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet
      (\ p__
         -> case p__ of
              (UpdateWorkerBuildIdCompatibilityRequest'PromoteBuildIdWithinSet p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerBuildIdCompatibilityRequest'MergeSets' ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerBuildIdCompatibilityRequest'Operation UpdateWorkerBuildIdCompatibilityRequest'MergeSets
_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerBuildIdCompatibilityRequest'MergeSets'
      (\ p__
         -> case p__ of
              (UpdateWorkerBuildIdCompatibilityRequest'MergeSets' p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.newBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.existingCompatibleBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.makeSetDefault' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion Prelude.Bool@ -}
data UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
  = UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_constructor {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'newBuildId :: !Data.Text.Text,
                                                                                  _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'existingCompatibleBuildId :: !Data.Text.Text,
                                                                                  _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'makeSetDefault :: !Prelude.Bool,
                                                                                  _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion "newBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'newBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'newBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion "existingCompatibleBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'existingCompatibleBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'existingCompatibleBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion "makeSetDefault" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'makeSetDefault
           (\ x__ y__
              -> x__
                   {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'makeSetDefault = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.AddNewCompatibleVersion"
  packedMessageDescriptor _
    = "\n\
      \\ETBAddNewCompatibleVersion\DC2 \n\
      \\fnew_build_id\CAN\SOH \SOH(\tR\n\
      \newBuildId\DC2?\n\
      \\FSexisting_compatible_build_id\CAN\STX \SOH(\tR\EMexistingCompatibleBuildId\DC2(\n\
      \\DLEmake_set_default\CAN\ETX \SOH(\bR\SOmakeSetDefault"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        newBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "new_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"newBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
        existingCompatibleBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "existing_compatible_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"existingCompatibleBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
        makeSetDefault__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "make_set_default"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"makeSetDefault")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, newBuildId__field_descriptor),
           (Data.ProtoLens.Tag 2, 
            existingCompatibleBuildId__field_descriptor),
           (Data.ProtoLens.Tag 3, makeSetDefault__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_unknownFields = y__})
  defMessage
    = UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_constructor
        {_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'newBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'existingCompatibleBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'makeSetDefault = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "new_build_id"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"newBuildId") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "existing_compatible_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"existingCompatibleBuildId") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "make_set_default"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"makeSetDefault") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "AddNewCompatibleVersion"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view (Data.ProtoLens.Field.field @"newBuildId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"existingCompatibleBuildId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"makeSetDefault") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'newBuildId
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'existingCompatibleBuildId
                      x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerBuildIdCompatibilityRequest'AddNewCompatibleVersion'makeSetDefault
                         x__)
                      ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.primarySetBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest'MergeSets Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.secondarySetBuildId' @:: Lens' UpdateWorkerBuildIdCompatibilityRequest'MergeSets Data.Text.Text@ -}
data UpdateWorkerBuildIdCompatibilityRequest'MergeSets
  = UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_constructor {_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'primarySetBuildId :: !Data.Text.Text,
                                                                    _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'secondarySetBuildId :: !Data.Text.Text,
                                                                    _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerBuildIdCompatibilityRequest'MergeSets where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest'MergeSets "primarySetBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'primarySetBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'primarySetBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerBuildIdCompatibilityRequest'MergeSets "secondarySetBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'secondarySetBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'secondarySetBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerBuildIdCompatibilityRequest'MergeSets where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.MergeSets"
  packedMessageDescriptor _
    = "\n\
      \\tMergeSets\DC2/\n\
      \\DC4primary_set_build_id\CAN\SOH \SOH(\tR\DC1primarySetBuildId\DC23\n\
      \\SYNsecondary_set_build_id\CAN\STX \SOH(\tR\DC3secondarySetBuildId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        primarySetBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "primary_set_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"primarySetBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest'MergeSets
        secondarySetBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "secondary_set_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"secondarySetBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerBuildIdCompatibilityRequest'MergeSets
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, primarySetBuildId__field_descriptor),
           (Data.ProtoLens.Tag 2, secondarySetBuildId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_unknownFields = y__})
  defMessage
    = UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_constructor
        {_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'primarySetBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'secondarySetBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerBuildIdCompatibilityRequest'MergeSets
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerBuildIdCompatibilityRequest'MergeSets
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "primary_set_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"primarySetBuildId") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "secondary_set_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"secondarySetBuildId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "MergeSets"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"primarySetBuildId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"secondarySetBuildId") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData UpdateWorkerBuildIdCompatibilityRequest'MergeSets where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'primarySetBuildId
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerBuildIdCompatibilityRequest'MergeSets'secondarySetBuildId
                      x__)
                   ()))
{- | Fields :
      -}
data UpdateWorkerBuildIdCompatibilityResponse
  = UpdateWorkerBuildIdCompatibilityResponse'_constructor {_UpdateWorkerBuildIdCompatibilityResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerBuildIdCompatibilityResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message UpdateWorkerBuildIdCompatibilityResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityResponse"
  packedMessageDescriptor _
    = "\n\
      \(UpdateWorkerBuildIdCompatibilityResponseJ\EOT\b\SOH\DLE\STXR\SOversion_set_id"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerBuildIdCompatibilityResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerBuildIdCompatibilityResponse'_unknownFields = y__})
  defMessage
    = UpdateWorkerBuildIdCompatibilityResponse'_constructor
        {_UpdateWorkerBuildIdCompatibilityResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerBuildIdCompatibilityResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerBuildIdCompatibilityResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkerBuildIdCompatibilityResponse"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData UpdateWorkerBuildIdCompatibilityResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerBuildIdCompatibilityResponse'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.version' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.upsertEntries' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Common.V1.Message.Payload)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.removeEntries' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest [Data.Text.Text]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'removeEntries' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest (Data.Vector.Vector Data.Text.Text)@ -}
data UpdateWorkerDeploymentVersionMetadataRequest
  = UpdateWorkerDeploymentVersionMetadataRequest'_constructor {_UpdateWorkerDeploymentVersionMetadataRequest'namespace :: !Data.Text.Text,
                                                               _UpdateWorkerDeploymentVersionMetadataRequest'version :: !Data.Text.Text,
                                                               _UpdateWorkerDeploymentVersionMetadataRequest'upsertEntries :: !(Data.Map.Map Data.Text.Text Proto.Temporal.Api.Common.V1.Message.Payload),
                                                               _UpdateWorkerDeploymentVersionMetadataRequest'removeEntries :: !(Data.Vector.Vector Data.Text.Text),
                                                               _UpdateWorkerDeploymentVersionMetadataRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerDeploymentVersionMetadataRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'namespace
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest "version" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'version
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'version = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest "upsertEntries" (Data.Map.Map Data.Text.Text Proto.Temporal.Api.Common.V1.Message.Payload) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'upsertEntries
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'upsertEntries = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest "removeEntries" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'removeEntries
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'removeEntries = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest "vec'removeEntries" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'removeEntries
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'removeEntries = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerDeploymentVersionMetadataRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerDeploymentVersionMetadataRequest"
  packedMessageDescriptor _
    = "\n\
      \,UpdateWorkerDeploymentVersionMetadataRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
      \\aversion\CAN\STX \SOH(\tR\aversion\DC2\135\SOH\n\
      \\SOupsert_entries\CAN\ETX \ETX(\v2`.temporal.api.workflowservice.v1.UpdateWorkerDeploymentVersionMetadataRequest.UpsertEntriesEntryR\rupsertEntries\DC2%\n\
      \\SOremove_entries\CAN\EOT \ETX(\tR\rremoveEntries\SUBa\n\
      \\DC2UpsertEntriesEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC25\n\
      \\ENQvalue\CAN\STX \SOH(\v2\US.temporal.api.common.v1.PayloadR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest
        version__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "version"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"version")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest
        upsertEntries__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "upsert_entries"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"upsertEntries")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest
        removeEntries__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "remove_entries"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"removeEntries")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, version__field_descriptor),
           (Data.ProtoLens.Tag 3, upsertEntries__field_descriptor),
           (Data.ProtoLens.Tag 4, removeEntries__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerDeploymentVersionMetadataRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerDeploymentVersionMetadataRequest'_unknownFields = y__})
  defMessage
    = UpdateWorkerDeploymentVersionMetadataRequest'_constructor
        {_UpdateWorkerDeploymentVersionMetadataRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateWorkerDeploymentVersionMetadataRequest'version = Data.ProtoLens.fieldDefault,
         _UpdateWorkerDeploymentVersionMetadataRequest'upsertEntries = Data.Map.empty,
         _UpdateWorkerDeploymentVersionMetadataRequest'removeEntries = Data.Vector.Generic.empty,
         _UpdateWorkerDeploymentVersionMetadataRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerDeploymentVersionMetadataRequest
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
             -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerDeploymentVersionMetadataRequest
        loop x mutable'removeEntries
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'removeEntries <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                   mutable'removeEntries)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'removeEntries")
                              frozen'removeEntries x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                                  mutable'removeEntries
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "version"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"version") y x)
                                  mutable'removeEntries
                        26
                          -> do !(entry :: UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                                                 (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                                     Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                                       (Prelude.fromIntegral
                                                                                                                          len)
                                                                                                                       Data.ProtoLens.parseMessage)
                                                                                                                 "upsert_entries"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"upsertEntries")
                                        (\ !t -> Data.Map.insert key value t) x)
                                     mutable'removeEntries)
                        34
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.getText
                                              (Prelude.fromIntegral len))
                                        "remove_entries"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'removeEntries y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'removeEntries
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'removeEntries <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                         Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'removeEntries)
          "UpdateWorkerDeploymentVersionMetadataRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"version") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (Data.Monoid.mconcat
                      (Prelude.map
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"key") (Prelude.fst _v)
                                       (Lens.Family2.set
                                          (Data.ProtoLens.Field.field @"value") (Prelude.snd _v)
                                          (Data.ProtoLens.defMessage ::
                                             UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry)))))
                         (Data.Map.toList
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"upsertEntries") _x))))
                   ((Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.Text.Encoding.encodeUtf8 _v))
                         (Lens.Family2.view
                            (Data.ProtoLens.Field.field @"vec'removeEntries") _x))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData UpdateWorkerDeploymentVersionMetadataRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerDeploymentVersionMetadataRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerDeploymentVersionMetadataRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerDeploymentVersionMetadataRequest'version x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerDeploymentVersionMetadataRequest'upsertEntries x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateWorkerDeploymentVersionMetadataRequest'removeEntries x__)
                         ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.key' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.value' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry Proto.Temporal.Api.Common.V1.Message.Payload@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'value' @:: Lens' UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payload)@ -}
data UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry
  = UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_constructor {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'key :: !Data.Text.Text,
                                                                                  _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payload),
                                                                                  _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'key
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry "value" Proto.Temporal.Api.Common.V1.Message.Payload where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry "maybe'value" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.Payload) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerDeploymentVersionMetadataRequest.UpsertEntriesEntry"
  packedMessageDescriptor _
    = "\n\
      \\DC2UpsertEntriesEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC25\n\
      \\ENQvalue\CAN\STX \SOH(\v2\US.temporal.api.common.v1.PayloadR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.Payload)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_unknownFields = y__})
  defMessage
    = UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_constructor
        {_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'key = Data.ProtoLens.fieldDefault,
         _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value = Prelude.Nothing,
         _UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpsertEntriesEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'key
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerDeploymentVersionMetadataRequest'UpsertEntriesEntry'value
                      x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.metadata' @:: Lens' UpdateWorkerDeploymentVersionMetadataResponse Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'metadata' @:: Lens' UpdateWorkerDeploymentVersionMetadataResponse (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata)@ -}
data UpdateWorkerDeploymentVersionMetadataResponse
  = UpdateWorkerDeploymentVersionMetadataResponse'_constructor {_UpdateWorkerDeploymentVersionMetadataResponse'metadata :: !(Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata),
                                                                _UpdateWorkerDeploymentVersionMetadataResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerDeploymentVersionMetadataResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataResponse "metadata" Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataResponse'metadata
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataResponse'metadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerDeploymentVersionMetadataResponse "maybe'metadata" (Prelude.Maybe Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerDeploymentVersionMetadataResponse'metadata
           (\ x__ y__
              -> x__
                   {_UpdateWorkerDeploymentVersionMetadataResponse'metadata = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerDeploymentVersionMetadataResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerDeploymentVersionMetadataResponse"
  packedMessageDescriptor _
    = "\n\
      \-UpdateWorkerDeploymentVersionMetadataResponse\DC2G\n\
      \\bmetadata\CAN\SOH \SOH(\v2+.temporal.api.deployment.v1.VersionMetadataR\bmetadata"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        metadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Deployment.V1.Message.VersionMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadata")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerDeploymentVersionMetadataResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, metadata__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerDeploymentVersionMetadataResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerDeploymentVersionMetadataResponse'_unknownFields = y__})
  defMessage
    = UpdateWorkerDeploymentVersionMetadataResponse'_constructor
        {_UpdateWorkerDeploymentVersionMetadataResponse'metadata = Prelude.Nothing,
         _UpdateWorkerDeploymentVersionMetadataResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerDeploymentVersionMetadataResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerDeploymentVersionMetadataResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadata") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkerDeploymentVersionMetadataResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'metadata") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateWorkerDeploymentVersionMetadataResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerDeploymentVersionMetadataResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerDeploymentVersionMetadataResponse'metadata x__) ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateWorkerVersioningRulesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.taskQueue' @:: Lens' UpdateWorkerVersioningRulesRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' UpdateWorkerVersioningRulesRequest Data.ByteString.ByteString@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'operation' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'Operation)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'insertAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.insertAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'replaceAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.replaceAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deleteAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deleteAssignmentRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'addCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.addCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'replaceCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.replaceCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'deleteCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.deleteCompatibleRedirectRule' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'commitBuildId' @:: Lens' UpdateWorkerVersioningRulesRequest (Prelude.Maybe UpdateWorkerVersioningRulesRequest'CommitBuildId)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.commitBuildId' @:: Lens' UpdateWorkerVersioningRulesRequest UpdateWorkerVersioningRulesRequest'CommitBuildId@ -}
data UpdateWorkerVersioningRulesRequest
  = UpdateWorkerVersioningRulesRequest'_constructor {_UpdateWorkerVersioningRulesRequest'namespace :: !Data.Text.Text,
                                                     _UpdateWorkerVersioningRulesRequest'taskQueue :: !Data.Text.Text,
                                                     _UpdateWorkerVersioningRulesRequest'conflictToken :: !Data.ByteString.ByteString,
                                                     _UpdateWorkerVersioningRulesRequest'operation :: !(Prelude.Maybe UpdateWorkerVersioningRulesRequest'Operation),
                                                     _UpdateWorkerVersioningRulesRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data UpdateWorkerVersioningRulesRequest'Operation
  = UpdateWorkerVersioningRulesRequest'InsertAssignmentRule !UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule |
    UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule !UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule |
    UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule !UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule |
    UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule !UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule |
    UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule !UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule |
    UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule !UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule |
    UpdateWorkerVersioningRulesRequest'CommitBuildId' !UpdateWorkerVersioningRulesRequest'CommitBuildId
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'namespace
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "taskQueue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'taskQueue
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'taskQueue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'conflictToken
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'operation" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'Operation) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'insertAssignmentRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'InsertAssignmentRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'InsertAssignmentRule y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "insertAssignmentRule" UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'InsertAssignmentRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'InsertAssignmentRule y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'replaceAssignmentRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "replaceAssignmentRule" UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'deleteAssignmentRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "deleteAssignmentRule" UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'addCompatibleRedirectRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "addCompatibleRedirectRule" UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'replaceCompatibleRedirectRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule
                   y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "replaceCompatibleRedirectRule" UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule
                      y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'deleteCompatibleRedirectRule" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule
                   y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "deleteCompatibleRedirectRule" UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule
                      y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "maybe'commitBuildId" (Prelude.Maybe UpdateWorkerVersioningRulesRequest'CommitBuildId) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (UpdateWorkerVersioningRulesRequest'CommitBuildId' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   UpdateWorkerVersioningRulesRequest'CommitBuildId' y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest "commitBuildId" UpdateWorkerVersioningRulesRequest'CommitBuildId where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'operation
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesRequest'operation = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (UpdateWorkerVersioningRulesRequest'CommitBuildId' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      UpdateWorkerVersioningRulesRequest'CommitBuildId' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest"
  packedMessageDescriptor _
    = "\n\
      \\"UpdateWorkerVersioningRulesRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
      \\n\
      \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2%\n\
      \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken\DC2\151\SOH\n\
      \\SYNinsert_assignment_rule\CAN\EOT \SOH(\v2_.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.InsertBuildIdAssignmentRuleH\NULR\DC4insertAssignmentRule\DC2\154\SOH\n\
      \\ETBreplace_assignment_rule\CAN\ENQ \SOH(\v2`.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceBuildIdAssignmentRuleH\NULR\NAKreplaceAssignmentRule\DC2\151\SOH\n\
      \\SYNdelete_assignment_rule\CAN\ACK \SOH(\v2_.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteBuildIdAssignmentRuleH\NULR\DC4deleteAssignmentRule\DC2\167\SOH\n\
      \\FSadd_compatible_redirect_rule\CAN\a \SOH(\v2d.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.AddCompatibleBuildIdRedirectRuleH\NULR\EMaddCompatibleRedirectRule\DC2\179\SOH\n\
      \ replace_compatible_redirect_rule\CAN\b \SOH(\v2h.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceCompatibleBuildIdRedirectRuleH\NULR\GSreplaceCompatibleRedirectRule\DC2\176\SOH\n\
      \\USdelete_compatible_redirect_rule\CAN\t \SOH(\v2g.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteCompatibleBuildIdRedirectRuleH\NULR\FSdeleteCompatibleRedirectRule\DC2{\n\
      \\SIcommit_build_id\CAN\n\
      \ \SOH(\v2Q.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.CommitBuildIdH\NULR\rcommitBuildId\SUB\130\SOH\n\
      \\ESCInsertBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
      \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule\SUB\153\SOH\n\
      \\FSReplaceBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
      \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule\DC2\DC4\n\
      \\ENQforce\CAN\ETX \SOH(\bR\ENQforce\SUBR\n\
      \\ESCDeleteBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2\DC4\n\
      \\ENQforce\CAN\STX \SOH(\bR\ENQforce\SUBp\n\
      \ AddCompatibleBuildIdRedirectRule\DC2L\n\
      \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule\SUBt\n\
      \$ReplaceCompatibleBuildIdRedirectRule\DC2L\n\
      \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule\SUBM\n\
      \#DeleteCompatibleBuildIdRedirectRule\DC2&\n\
      \\SIsource_build_id\CAN\SOH \SOH(\tR\rsourceBuildId\SUBM\n\
      \\rCommitBuildId\DC2&\n\
      \\SItarget_build_id\CAN\SOH \SOH(\tR\rtargetBuildId\DC2\DC4\n\
      \\ENQforce\CAN\STX \SOH(\bR\ENQforceB\v\n\
      \\toperation"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        taskQueue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "task_queue"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"taskQueue")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        insertAssignmentRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "insert_assignment_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'insertAssignmentRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        replaceAssignmentRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "replace_assignment_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'replaceAssignmentRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        deleteAssignmentRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "delete_assignment_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'deleteAssignmentRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        addCompatibleRedirectRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "add_compatible_redirect_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'addCompatibleRedirectRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        replaceCompatibleRedirectRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "replace_compatible_redirect_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'replaceCompatibleRedirectRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        deleteCompatibleRedirectRule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "delete_compatible_redirect_rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'deleteCompatibleRedirectRule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
        commitBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "commit_build_id"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor UpdateWorkerVersioningRulesRequest'CommitBuildId)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'commitBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, taskQueue__field_descriptor),
           (Data.ProtoLens.Tag 3, conflictToken__field_descriptor),
           (Data.ProtoLens.Tag 4, insertAssignmentRule__field_descriptor),
           (Data.ProtoLens.Tag 5, replaceAssignmentRule__field_descriptor),
           (Data.ProtoLens.Tag 6, deleteAssignmentRule__field_descriptor),
           (Data.ProtoLens.Tag 7, 
            addCompatibleRedirectRule__field_descriptor),
           (Data.ProtoLens.Tag 8, 
            replaceCompatibleRedirectRule__field_descriptor),
           (Data.ProtoLens.Tag 9, 
            deleteCompatibleRedirectRule__field_descriptor),
           (Data.ProtoLens.Tag 10, commitBuildId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateWorkerVersioningRulesRequest'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'_constructor
        {_UpdateWorkerVersioningRulesRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'taskQueue = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'conflictToken = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'operation = Prelude.Nothing,
         _UpdateWorkerVersioningRulesRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "task_queue"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"taskQueue") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "insert_assignment_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"insertAssignmentRule") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "replace_assignment_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"replaceAssignmentRule") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "delete_assignment_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deleteAssignmentRule") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "add_compatible_redirect_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"addCompatibleRedirectRule") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "replace_compatible_redirect_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"replaceCompatibleRedirectRule") y
                                     x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "delete_compatible_redirect_rule"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"deleteCompatibleRedirectRule") y
                                     x)
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "commit_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"commitBuildId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkerVersioningRulesRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"taskQueue") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8 _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"conflictToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'operation") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'InsertAssignmentRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v)
                         (Prelude.Just (UpdateWorkerVersioningRulesRequest'CommitBuildId' v))
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesRequest'taskQueue x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerVersioningRulesRequest'conflictToken x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateWorkerVersioningRulesRequest'operation x__) ()))))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'Operation where
  rnf (UpdateWorkerVersioningRulesRequest'InsertAssignmentRule x__)
    = Control.DeepSeq.rnf x__
  rnf (UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule x__)
    = Control.DeepSeq.rnf x__
  rnf (UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule x__)
    = Control.DeepSeq.rnf x__
  rnf
    (UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule x__)
    = Control.DeepSeq.rnf x__
  rnf (UpdateWorkerVersioningRulesRequest'CommitBuildId' x__)
    = Control.DeepSeq.rnf x__
_UpdateWorkerVersioningRulesRequest'InsertAssignmentRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
_UpdateWorkerVersioningRulesRequest'InsertAssignmentRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'InsertAssignmentRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'InsertAssignmentRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
_UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'ReplaceAssignmentRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
_UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'DeleteAssignmentRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule
_UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'AddCompatibleRedirectRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule
_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'ReplaceCompatibleRedirectRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule
_UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'DeleteCompatibleRedirectRule p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_UpdateWorkerVersioningRulesRequest'CommitBuildId' ::
  Data.ProtoLens.Prism.Prism' UpdateWorkerVersioningRulesRequest'Operation UpdateWorkerVersioningRulesRequest'CommitBuildId
_UpdateWorkerVersioningRulesRequest'CommitBuildId'
  = Data.ProtoLens.Prism.prism'
      UpdateWorkerVersioningRulesRequest'CommitBuildId'
      (\ p__
         -> case p__ of
              (UpdateWorkerVersioningRulesRequest'CommitBuildId' p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule)@ -}
data UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule
  = UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_constructor {_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule),
                                                                                      _UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule "rule" Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.AddCompatibleBuildIdRedirectRule"
  packedMessageDescriptor _
    = "\n\
      \ AddCompatibleBuildIdRedirectRule\DC2L\n\
      \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, rule__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule = Prelude.Nothing,
         _UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "AddCompatibleBuildIdRedirectRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'AddCompatibleBuildIdRedirectRule'rule
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.targetBuildId' @:: Lens' UpdateWorkerVersioningRulesRequest'CommitBuildId Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.force' @:: Lens' UpdateWorkerVersioningRulesRequest'CommitBuildId Prelude.Bool@ -}
data UpdateWorkerVersioningRulesRequest'CommitBuildId
  = UpdateWorkerVersioningRulesRequest'CommitBuildId'_constructor {_UpdateWorkerVersioningRulesRequest'CommitBuildId'targetBuildId :: !Data.Text.Text,
                                                                   _UpdateWorkerVersioningRulesRequest'CommitBuildId'force :: !Prelude.Bool,
                                                                   _UpdateWorkerVersioningRulesRequest'CommitBuildId'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'CommitBuildId where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'CommitBuildId "targetBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'CommitBuildId'targetBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'CommitBuildId'targetBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'CommitBuildId "force" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'CommitBuildId'force
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'CommitBuildId'force = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'CommitBuildId where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.CommitBuildId"
  packedMessageDescriptor _
    = "\n\
      \\rCommitBuildId\DC2&\n\
      \\SItarget_build_id\CAN\SOH \SOH(\tR\rtargetBuildId\DC2\DC4\n\
      \\ENQforce\CAN\STX \SOH(\bR\ENQforce"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        targetBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "target_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"targetBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'CommitBuildId
        force__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "force"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"force")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'CommitBuildId
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, targetBuildId__field_descriptor),
           (Data.ProtoLens.Tag 2, force__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'CommitBuildId'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'CommitBuildId'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'CommitBuildId'_constructor
        {_UpdateWorkerVersioningRulesRequest'CommitBuildId'targetBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'CommitBuildId'force = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'CommitBuildId'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'CommitBuildId
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'CommitBuildId
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "target_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"targetBuildId") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "force"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"force") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "CommitBuildId"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"targetBuildId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"force") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'CommitBuildId where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'CommitBuildId'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'CommitBuildId'targetBuildId
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesRequest'CommitBuildId'force x__) ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ruleIndex' @:: Lens' UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.force' @:: Lens' UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule Prelude.Bool@ -}
data UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
  = UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_constructor {_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'ruleIndex :: !Data.Int.Int32,
                                                                                 _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'force :: !Prelude.Bool,
                                                                                 _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule "ruleIndex" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'ruleIndex
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'ruleIndex = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule "force" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'force
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'force = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteBuildIdAssignmentRule"
  packedMessageDescriptor _
    = "\n\
      \\ESCDeleteBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2\DC4\n\
      \\ENQforce\CAN\STX \SOH(\bR\ENQforce"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        ruleIndex__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule_index"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ruleIndex")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
        force__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "force"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"force")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, ruleIndex__field_descriptor),
           (Data.ProtoLens.Tag 2, force__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'ruleIndex = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'force = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "rule_index"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"ruleIndex") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "force"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"force") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DeleteBuildIdAssignmentRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"ruleIndex") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"force") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'ruleIndex
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesRequest'DeleteBuildIdAssignmentRule'force
                      x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.sourceBuildId' @:: Lens' UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule Data.Text.Text@ -}
data UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule
  = UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_constructor {_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'sourceBuildId :: !Data.Text.Text,
                                                                                         _UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule "sourceBuildId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'sourceBuildId
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'sourceBuildId = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteCompatibleBuildIdRedirectRule"
  packedMessageDescriptor _
    = "\n\
      \#DeleteCompatibleBuildIdRedirectRule\DC2&\n\
      \\SIsource_build_id\CAN\SOH \SOH(\tR\rsourceBuildId"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        sourceBuildId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "source_build_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"sourceBuildId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, sourceBuildId__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'sourceBuildId = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "source_build_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"sourceBuildId") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "DeleteCompatibleBuildIdRedirectRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"sourceBuildId") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'DeleteCompatibleBuildIdRedirectRule'sourceBuildId
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ruleIndex' @:: Lens' UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule)@ -}
data UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
  = UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_constructor {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'ruleIndex :: !Data.Int.Int32,
                                                                                 _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule),
                                                                                 _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule "ruleIndex" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'ruleIndex
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'ruleIndex = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule "rule" Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.InsertBuildIdAssignmentRule"
  packedMessageDescriptor _
    = "\n\
      \\ESCInsertBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
      \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        ruleIndex__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule_index"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ruleIndex")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, ruleIndex__field_descriptor),
           (Data.ProtoLens.Tag 2, rule__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'ruleIndex = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule = Prelude.Nothing,
         _UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "rule_index"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"ruleIndex") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "InsertBuildIdAssignmentRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"ruleIndex") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'ruleIndex
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesRequest'InsertBuildIdAssignmentRule'rule
                      x__)
                   ()))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.ruleIndex' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule Data.Int.Int32@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.force' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule Prelude.Bool@ -}
data UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
  = UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_constructor {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'ruleIndex :: !Data.Int.Int32,
                                                                                  _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule),
                                                                                  _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'force :: !Prelude.Bool,
                                                                                  _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule "ruleIndex" Data.Int.Int32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'ruleIndex
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'ruleIndex = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule "rule" Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule "force" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'force
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'force = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceBuildIdAssignmentRule"
  packedMessageDescriptor _
    = "\n\
      \\FSReplaceBuildIdAssignmentRule\DC2\GS\n\
      \\n\
      \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
      \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule\DC2\DC4\n\
      \\ENQforce\CAN\ETX \SOH(\bR\ENQforce"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        ruleIndex__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule_index"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"ruleIndex")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.BuildIdAssignmentRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
        force__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "force"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"force")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, ruleIndex__field_descriptor),
           (Data.ProtoLens.Tag 2, rule__field_descriptor),
           (Data.ProtoLens.Tag 3, force__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'ruleIndex = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule = Prelude.Nothing,
         _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'force = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "rule_index"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"ruleIndex") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "force"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"force") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ReplaceBuildIdAssignmentRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"ruleIndex") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"force") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt (\ b -> if b then 1 else 0)
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'ruleIndex
                   x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'rule
                      x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerVersioningRulesRequest'ReplaceBuildIdAssignmentRule'force
                         x__)
                      ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.rule' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'rule' @:: Lens' UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule)@ -}
data UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule
  = UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_constructor {_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule :: !(Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule),
                                                                                          _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule "rule" Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule "maybe'rule" (Prelude.Maybe Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceCompatibleBuildIdRedirectRule"
  packedMessageDescriptor _
    = "\n\
      \$ReplaceCompatibleBuildIdRedirectRule\DC2L\n\
      \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        rule__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rule"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.CompatibleBuildIdRedirectRule)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rule")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, rule__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_constructor
        {_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule = Prelude.Nothing,
         _UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rule"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"rule") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "ReplaceCompatibleBuildIdRedirectRule"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'rule") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesRequest'ReplaceCompatibleBuildIdRedirectRule'rule
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.assignmentRules' @:: Lens' UpdateWorkerVersioningRulesResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'assignmentRules' @:: Lens' UpdateWorkerVersioningRulesResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.compatibleRedirectRules' @:: Lens' UpdateWorkerVersioningRulesResponse [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule]@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.vec'compatibleRedirectRules' @:: Lens' UpdateWorkerVersioningRulesResponse (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.conflictToken' @:: Lens' UpdateWorkerVersioningRulesResponse Data.ByteString.ByteString@ -}
data UpdateWorkerVersioningRulesResponse
  = UpdateWorkerVersioningRulesResponse'_constructor {_UpdateWorkerVersioningRulesResponse'assignmentRules :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule),
                                                      _UpdateWorkerVersioningRulesResponse'compatibleRedirectRules :: !(Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule),
                                                      _UpdateWorkerVersioningRulesResponse'conflictToken :: !Data.ByteString.ByteString,
                                                      _UpdateWorkerVersioningRulesResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkerVersioningRulesResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesResponse "assignmentRules" [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesResponse'assignmentRules
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesResponse'assignmentRules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesResponse "vec'assignmentRules" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesResponse'assignmentRules
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesResponse'assignmentRules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesResponse "compatibleRedirectRules" [Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesResponse'compatibleRedirectRules
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesResponse'compatibleRedirectRules = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesResponse "vec'compatibleRedirectRules" (Data.Vector.Vector Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesResponse'compatibleRedirectRules
           (\ x__ y__
              -> x__
                   {_UpdateWorkerVersioningRulesResponse'compatibleRedirectRules = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkerVersioningRulesResponse "conflictToken" Data.ByteString.ByteString where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkerVersioningRulesResponse'conflictToken
           (\ x__ y__
              -> x__ {_UpdateWorkerVersioningRulesResponse'conflictToken = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkerVersioningRulesResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesResponse"
  packedMessageDescriptor _
    = "\n\
      \#UpdateWorkerVersioningRulesResponse\DC2f\n\
      \\DLEassignment_rules\CAN\SOH \ETX(\v2;.temporal.api.taskqueue.v1.TimestampedBuildIdAssignmentRuleR\SIassignmentRules\DC2\DEL\n\
      \\EMcompatible_redirect_rules\CAN\STX \ETX(\v2C.temporal.api.taskqueue.v1.TimestampedCompatibleBuildIdRedirectRuleR\ETBcompatibleRedirectRules\DC2%\n\
      \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        assignmentRules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "assignment_rules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"assignmentRules")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesResponse
        compatibleRedirectRules__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "compatible_redirect_rules"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"compatibleRedirectRules")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesResponse
        conflictToken__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "conflict_token"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BytesField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.ByteString.ByteString)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"conflictToken")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkerVersioningRulesResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, assignmentRules__field_descriptor),
           (Data.ProtoLens.Tag 2, compatibleRedirectRules__field_descriptor),
           (Data.ProtoLens.Tag 3, conflictToken__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkerVersioningRulesResponse'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateWorkerVersioningRulesResponse'_unknownFields = y__})
  defMessage
    = UpdateWorkerVersioningRulesResponse'_constructor
        {_UpdateWorkerVersioningRulesResponse'assignmentRules = Data.Vector.Generic.empty,
         _UpdateWorkerVersioningRulesResponse'compatibleRedirectRules = Data.Vector.Generic.empty,
         _UpdateWorkerVersioningRulesResponse'conflictToken = Data.ProtoLens.fieldDefault,
         _UpdateWorkerVersioningRulesResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkerVersioningRulesResponse
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedBuildIdAssignmentRule
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Temporal.Api.Taskqueue.V1.Message.TimestampedCompatibleBuildIdRedirectRule
                -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkerVersioningRulesResponse
        loop x mutable'assignmentRules mutable'compatibleRedirectRules
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'assignmentRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'assignmentRules)
                      frozen'compatibleRedirectRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'compatibleRedirectRules)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'assignmentRules")
                              frozen'assignmentRules
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'compatibleRedirectRules")
                                 frozen'compatibleRedirectRules x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "assignment_rules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'assignmentRules y)
                                loop x v mutable'compatibleRedirectRules
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "compatible_redirect_rules"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'compatibleRedirectRules y)
                                loop x mutable'assignmentRules v
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getBytes
                                             (Prelude.fromIntegral len))
                                       "conflict_token"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"conflictToken") y x)
                                  mutable'assignmentRules mutable'compatibleRedirectRules
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'assignmentRules mutable'compatibleRedirectRules
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'assignmentRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              mutable'compatibleRedirectRules <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'assignmentRules
                mutable'compatibleRedirectRules)
          "UpdateWorkerVersioningRulesResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'assignmentRules") _x))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.ProtoLens.encodeMessage _v))
                   (Lens.Family2.view
                      (Data.ProtoLens.Field.field @"vec'compatibleRedirectRules") _x))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"conflictToken") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData UpdateWorkerVersioningRulesResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkerVersioningRulesResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkerVersioningRulesResponse'assignmentRules x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkerVersioningRulesResponse'compatibleRedirectRules x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkerVersioningRulesResponse'conflictToken x__) ())))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateWorkflowExecutionOptionsRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' UpdateWorkflowExecutionOptionsRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' UpdateWorkflowExecutionOptionsRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionOptions' @:: Lens' UpdateWorkflowExecutionOptionsRequest Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionOptions' @:: Lens' UpdateWorkflowExecutionOptionsRequest (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateMask' @:: Lens' UpdateWorkflowExecutionOptionsRequest Proto.Google.Protobuf.FieldMask.FieldMask@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateMask' @:: Lens' UpdateWorkflowExecutionOptionsRequest (Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask)@ -}
data UpdateWorkflowExecutionOptionsRequest
  = UpdateWorkflowExecutionOptionsRequest'_constructor {_UpdateWorkflowExecutionOptionsRequest'namespace :: !Data.Text.Text,
                                                        _UpdateWorkflowExecutionOptionsRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                        _UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions),
                                                        _UpdateWorkflowExecutionOptionsRequest'updateMask :: !(Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask),
                                                        _UpdateWorkflowExecutionOptionsRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkflowExecutionOptionsRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'namespace
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionOptionsRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'workflowExecution
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "workflowExecutionOptions" Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "maybe'workflowExecutionOptions" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "updateMask" Proto.Google.Protobuf.FieldMask.FieldMask where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'updateMask
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionOptionsRequest'updateMask = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsRequest "maybe'updateMask" (Prelude.Maybe Proto.Google.Protobuf.FieldMask.FieldMask) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsRequest'updateMask
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionOptionsRequest'updateMask = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkflowExecutionOptionsRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkflowExecutionOptionsRequest"
  packedMessageDescriptor _
    = "\n\
      \%UpdateWorkflowExecutionOptionsRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2p\n\
      \\SUBworkflow_execution_options\CAN\ETX \SOH(\v22.temporal.api.workflow.v1.WorkflowExecutionOptionsR\CANworkflowExecutionOptions\DC2;\n\
      \\vupdate_mask\CAN\EOT \SOH(\v2\SUB.google.protobuf.FieldMaskR\n\
      \updateMask"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionOptionsRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionOptionsRequest
        workflowExecutionOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecutionOptions")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionOptionsRequest
        updateMask__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_mask"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.FieldMask.FieldMask)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateMask")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionOptionsRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, workflowExecutionOptions__field_descriptor),
           (Data.ProtoLens.Tag 4, updateMask__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkflowExecutionOptionsRequest'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkflowExecutionOptionsRequest'_unknownFields = y__})
  defMessage
    = UpdateWorkflowExecutionOptionsRequest'_constructor
        {_UpdateWorkflowExecutionOptionsRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateWorkflowExecutionOptionsRequest'workflowExecution = Prelude.Nothing,
         _UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions = Prelude.Nothing,
         _UpdateWorkflowExecutionOptionsRequest'updateMask = Prelude.Nothing,
         _UpdateWorkflowExecutionOptionsRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkflowExecutionOptionsRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkflowExecutionOptionsRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionOptions") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_mask"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateMask") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkflowExecutionOptionsRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'workflowExecutionOptions") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'updateMask") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData UpdateWorkflowExecutionOptionsRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkflowExecutionOptionsRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkflowExecutionOptionsRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkflowExecutionOptionsRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkflowExecutionOptionsRequest'workflowExecutionOptions
                         x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateWorkflowExecutionOptionsRequest'updateMask x__) ()))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecutionOptions' @:: Lens' UpdateWorkflowExecutionOptionsResponse Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecutionOptions' @:: Lens' UpdateWorkflowExecutionOptionsResponse (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions)@ -}
data UpdateWorkflowExecutionOptionsResponse
  = UpdateWorkflowExecutionOptionsResponse'_constructor {_UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions :: !(Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions),
                                                         _UpdateWorkflowExecutionOptionsResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkflowExecutionOptionsResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsResponse "workflowExecutionOptions" Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionOptionsResponse "maybe'workflowExecutionOptions" (Prelude.Maybe Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkflowExecutionOptionsResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkflowExecutionOptionsResponse"
  packedMessageDescriptor _
    = "\n\
      \&UpdateWorkflowExecutionOptionsResponse\DC2p\n\
      \\SUBworkflow_execution_options\CAN\SOH \SOH(\v22.temporal.api.workflow.v1.WorkflowExecutionOptionsR\CANworkflowExecutionOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        workflowExecutionOptions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution_options"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Workflow.V1.Message.WorkflowExecutionOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecutionOptions")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionOptionsResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, 
            workflowExecutionOptions__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkflowExecutionOptionsResponse'_unknownFields
        (\ x__ y__
           -> x__
                {_UpdateWorkflowExecutionOptionsResponse'_unknownFields = y__})
  defMessage
    = UpdateWorkflowExecutionOptionsResponse'_constructor
        {_UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions = Prelude.Nothing,
         _UpdateWorkflowExecutionOptionsResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkflowExecutionOptionsResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkflowExecutionOptionsResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution_options"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecutionOptions") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkflowExecutionOptionsResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'workflowExecutionOptions") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData UpdateWorkflowExecutionOptionsResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkflowExecutionOptionsResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkflowExecutionOptionsResponse'workflowExecutionOptions
                   x__)
                ())
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.namespace' @:: Lens' UpdateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.workflowExecution' @:: Lens' UpdateWorkflowExecutionRequest Proto.Temporal.Api.Common.V1.Message.WorkflowExecution@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'workflowExecution' @:: Lens' UpdateWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.firstExecutionRunId' @:: Lens' UpdateWorkflowExecutionRequest Data.Text.Text@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.waitPolicy' @:: Lens' UpdateWorkflowExecutionRequest Proto.Temporal.Api.Update.V1.Message.WaitPolicy@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'waitPolicy' @:: Lens' UpdateWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.request' @:: Lens' UpdateWorkflowExecutionRequest Proto.Temporal.Api.Update.V1.Message.Request@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'request' @:: Lens' UpdateWorkflowExecutionRequest (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Request)@ -}
data UpdateWorkflowExecutionRequest
  = UpdateWorkflowExecutionRequest'_constructor {_UpdateWorkflowExecutionRequest'namespace :: !Data.Text.Text,
                                                 _UpdateWorkflowExecutionRequest'workflowExecution :: !(Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution),
                                                 _UpdateWorkflowExecutionRequest'firstExecutionRunId :: !Data.Text.Text,
                                                 _UpdateWorkflowExecutionRequest'waitPolicy :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy),
                                                 _UpdateWorkflowExecutionRequest'request :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Request),
                                                 _UpdateWorkflowExecutionRequest'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkflowExecutionRequest where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "namespace" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'namespace
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionRequest'namespace = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "workflowExecution" Proto.Temporal.Api.Common.V1.Message.WorkflowExecution where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionRequest'workflowExecution = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "maybe'workflowExecution" (Prelude.Maybe Proto.Temporal.Api.Common.V1.Message.WorkflowExecution) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'workflowExecution
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionRequest'workflowExecution = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "firstExecutionRunId" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'firstExecutionRunId
           (\ x__ y__
              -> x__
                   {_UpdateWorkflowExecutionRequest'firstExecutionRunId = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "waitPolicy" Proto.Temporal.Api.Update.V1.Message.WaitPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'waitPolicy
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionRequest'waitPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "maybe'waitPolicy" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.WaitPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'waitPolicy
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionRequest'waitPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "request" Proto.Temporal.Api.Update.V1.Message.Request where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'request
           (\ x__ y__ -> x__ {_UpdateWorkflowExecutionRequest'request = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionRequest "maybe'request" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Request) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionRequest'request
           (\ x__ y__ -> x__ {_UpdateWorkflowExecutionRequest'request = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkflowExecutionRequest where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequest"
  packedMessageDescriptor _
    = "\n\
      \\RSUpdateWorkflowExecutionRequest\DC2\FS\n\
      \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
      \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC23\n\
      \\SYNfirst_execution_run_id\CAN\ETX \SOH(\tR\DC3firstExecutionRunId\DC2C\n\
      \\vwait_policy\CAN\EOT \SOH(\v2\".temporal.api.update.v1.WaitPolicyR\n\
      \waitPolicy\DC29\n\
      \\arequest\CAN\ENQ \SOH(\v2\US.temporal.api.update.v1.RequestR\arequest"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        namespace__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "namespace"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"namespace")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionRequest
        workflowExecution__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "workflow_execution"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Common.V1.Message.WorkflowExecution)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'workflowExecution")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionRequest
        firstExecutionRunId__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "first_execution_run_id"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"firstExecutionRunId")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionRequest
        waitPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "wait_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.WaitPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'waitPolicy")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionRequest
        request__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.Request)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'request")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionRequest
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, namespace__field_descriptor),
           (Data.ProtoLens.Tag 2, workflowExecution__field_descriptor),
           (Data.ProtoLens.Tag 3, firstExecutionRunId__field_descriptor),
           (Data.ProtoLens.Tag 4, waitPolicy__field_descriptor),
           (Data.ProtoLens.Tag 5, request__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkflowExecutionRequest'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateWorkflowExecutionRequest'_unknownFields = y__})
  defMessage
    = UpdateWorkflowExecutionRequest'_constructor
        {_UpdateWorkflowExecutionRequest'namespace = Data.ProtoLens.fieldDefault,
         _UpdateWorkflowExecutionRequest'workflowExecution = Prelude.Nothing,
         _UpdateWorkflowExecutionRequest'firstExecutionRunId = Data.ProtoLens.fieldDefault,
         _UpdateWorkflowExecutionRequest'waitPolicy = Prelude.Nothing,
         _UpdateWorkflowExecutionRequest'request = Prelude.Nothing,
         _UpdateWorkflowExecutionRequest'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkflowExecutionRequest
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkflowExecutionRequest
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "namespace"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"namespace") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "workflow_execution"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"workflowExecution") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.getText
                                             (Prelude.fromIntegral len))
                                       "first_execution_run_id"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"firstExecutionRunId") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "wait_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"waitPolicy") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "request"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"request") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkflowExecutionRequest"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"namespace") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8 _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'workflowExecution") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"firstExecutionRunId") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8 _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'waitPolicy") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'request") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage _v))
                         (Data.ProtoLens.Encoding.Wire.buildFieldSet
                            (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))
instance Control.DeepSeq.NFData UpdateWorkflowExecutionRequest where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkflowExecutionRequest'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkflowExecutionRequest'namespace x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkflowExecutionRequest'workflowExecution x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkflowExecutionRequest'firstExecutionRunId x__)
                      (Control.DeepSeq.deepseq
                         (_UpdateWorkflowExecutionRequest'waitPolicy x__)
                         (Control.DeepSeq.deepseq
                            (_UpdateWorkflowExecutionRequest'request x__) ())))))
{- | Fields :
     
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.updateRef' @:: Lens' UpdateWorkflowExecutionResponse Proto.Temporal.Api.Update.V1.Message.UpdateRef@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'updateRef' @:: Lens' UpdateWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.outcome' @:: Lens' UpdateWorkflowExecutionResponse Proto.Temporal.Api.Update.V1.Message.Outcome@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.maybe'outcome' @:: Lens' UpdateWorkflowExecutionResponse (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome)@
         * 'Proto.Temporal.Api.Workflowservice.V1.RequestResponse_Fields.stage' @:: Lens' UpdateWorkflowExecutionResponse Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage@ -}
data UpdateWorkflowExecutionResponse
  = UpdateWorkflowExecutionResponse'_constructor {_UpdateWorkflowExecutionResponse'updateRef :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef),
                                                  _UpdateWorkflowExecutionResponse'outcome :: !(Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome),
                                                  _UpdateWorkflowExecutionResponse'stage :: !Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage,
                                                  _UpdateWorkflowExecutionResponse'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show UpdateWorkflowExecutionResponse where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionResponse "updateRef" Proto.Temporal.Api.Update.V1.Message.UpdateRef where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionResponse'updateRef
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionResponse'updateRef = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionResponse "maybe'updateRef" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.UpdateRef) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionResponse'updateRef
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionResponse'updateRef = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionResponse "outcome" Proto.Temporal.Api.Update.V1.Message.Outcome where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionResponse'outcome
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionResponse'outcome = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionResponse "maybe'outcome" (Prelude.Maybe Proto.Temporal.Api.Update.V1.Message.Outcome) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionResponse'outcome
           (\ x__ y__
              -> x__ {_UpdateWorkflowExecutionResponse'outcome = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField UpdateWorkflowExecutionResponse "stage" Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _UpdateWorkflowExecutionResponse'stage
           (\ x__ y__ -> x__ {_UpdateWorkflowExecutionResponse'stage = y__}))
        Prelude.id
instance Data.ProtoLens.Message UpdateWorkflowExecutionResponse where
  messageName _
    = Data.Text.pack
        "temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponse"
  packedMessageDescriptor _
    = "\n\
      \\USUpdateWorkflowExecutionResponse\DC2@\n\
      \\n\
      \update_ref\CAN\SOH \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef\DC29\n\
      \\aoutcome\CAN\STX \SOH(\v2\US.temporal.api.update.v1.OutcomeR\aoutcome\DC2R\n\
      \\ENQstage\CAN\ETX \SOH(\SO2<.temporal.api.enums.v1.UpdateWorkflowExecutionLifecycleStageR\ENQstage"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        updateRef__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "update_ref"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.UpdateRef)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'updateRef")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionResponse
        outcome__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "outcome"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Update.V1.Message.Outcome)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'outcome")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionResponse
        stage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "stage"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Temporal.Api.Enums.V1.Update.UpdateWorkflowExecutionLifecycleStage)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"stage")) ::
              Data.ProtoLens.FieldDescriptor UpdateWorkflowExecutionResponse
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, updateRef__field_descriptor),
           (Data.ProtoLens.Tag 2, outcome__field_descriptor),
           (Data.ProtoLens.Tag 3, stage__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _UpdateWorkflowExecutionResponse'_unknownFields
        (\ x__ y__
           -> x__ {_UpdateWorkflowExecutionResponse'_unknownFields = y__})
  defMessage
    = UpdateWorkflowExecutionResponse'_constructor
        {_UpdateWorkflowExecutionResponse'updateRef = Prelude.Nothing,
         _UpdateWorkflowExecutionResponse'outcome = Prelude.Nothing,
         _UpdateWorkflowExecutionResponse'stage = Data.ProtoLens.fieldDefault,
         _UpdateWorkflowExecutionResponse'_unknownFields = []}
  parseMessage
    = let
        loop ::
          UpdateWorkflowExecutionResponse
          -> Data.ProtoLens.Encoding.Bytes.Parser UpdateWorkflowExecutionResponse
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "update_ref"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"updateRef") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "outcome"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"outcome") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "stage"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"stage") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage)
          "UpdateWorkflowExecutionResponse"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'updateRef") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'outcome") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage _v))
                ((Data.Monoid.<>)
                   (let
                      _v = Lens.Family2.view (Data.ProtoLens.Field.field @"stage") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                               Prelude.fromEnum _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData UpdateWorkflowExecutionResponse where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_UpdateWorkflowExecutionResponse'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_UpdateWorkflowExecutionResponse'updateRef x__)
                (Control.DeepSeq.deepseq
                   (_UpdateWorkflowExecutionResponse'outcome x__)
                   (Control.DeepSeq.deepseq
                      (_UpdateWorkflowExecutionResponse'stage x__) ())))
packedFileDescriptor :: Data.ByteString.ByteString
packedFileDescriptor
  = "\n\
    \6temporal/api/workflowservice/v1/request_response.proto\DC2\UStemporal.api.workflowservice.v1\SUB+temporal/api/enums/v1/batch_operation.proto\SUB\"temporal/api/enums/v1/common.proto\SUB$temporal/api/enums/v1/workflow.proto\SUB%temporal/api/enums/v1/namespace.proto\SUB(temporal/api/enums/v1/failed_cause.proto\SUB!temporal/api/enums/v1/query.proto\SUB!temporal/api/enums/v1/reset.proto\SUB&temporal/api/enums/v1/task_queue.proto\SUB&temporal/api/enums/v1/deployment.proto\SUB\"temporal/api/enums/v1/update.proto\SUB&temporal/api/activity/v1/message.proto\SUB$temporal/api/common/v1/message.proto\SUB%temporal/api/history/v1/message.proto\SUB&temporal/api/workflow/v1/message.proto\SUB%temporal/api/command/v1/message.proto\SUB(temporal/api/deployment/v1/message.proto\SUB%temporal/api/failure/v1/message.proto\SUB$temporal/api/filter/v1/message.proto\SUB&temporal/api/protocol/v1/message.proto\SUB'temporal/api/namespace/v1/message.proto\SUB#temporal/api/query/v1/message.proto\SUB)temporal/api/replication/v1/message.proto\SUB#temporal/api/rules/v1/message.proto\SUB&temporal/api/schedule/v1/message.proto\SUB'temporal/api/taskqueue/v1/message.proto\SUB$temporal/api/update/v1/message.proto\SUB%temporal/api/version/v1/message.proto\SUB#temporal/api/batch/v1/message.proto\SUB0temporal/api/sdk/v1/task_complete_metadata.proto\SUB'temporal/api/sdk/v1/user_metadata.proto\SUB#temporal/api/nexus/v1/message.proto\SUB\RSgoogle/protobuf/duration.proto\SUB google/protobuf/field_mask.proto\SUB\USgoogle/protobuf/timestamp.proto\"\249\ACK\n\
    \\CANRegisterNamespaceRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2 \n\
    \\vdescription\CAN\STX \SOH(\tR\vdescription\DC2\US\n\
    \\vowner_email\CAN\ETX \SOH(\tR\n\
    \ownerEmail\DC2h\n\
    \#workflow_execution_retention_period\CAN\EOT \SOH(\v2\EM.google.protobuf.DurationR workflowExecutionRetentionPeriod\DC2Q\n\
    \\bclusters\CAN\ENQ \ETX(\v25.temporal.api.replication.v1.ClusterReplicationConfigR\bclusters\DC2.\n\
    \\DC3active_cluster_name\CAN\ACK \SOH(\tR\DC1activeClusterName\DC2W\n\
    \\EOTdata\CAN\a \ETX(\v2C.temporal.api.workflowservice.v1.RegisterNamespaceRequest.DataEntryR\EOTdata\DC2%\n\
    \\SOsecurity_token\CAN\b \SOH(\tR\rsecurityToken\DC2.\n\
    \\DC3is_global_namespace\CAN\t \SOH(\bR\DC1isGlobalNamespace\DC2Z\n\
    \\SYNhistory_archival_state\CAN\n\
    \ \SOH(\SO2$.temporal.api.enums.v1.ArchivalStateR\DC4historyArchivalState\DC20\n\
    \\DC4history_archival_uri\CAN\v \SOH(\tR\DC2historyArchivalUri\DC2`\n\
    \\EMvisibility_archival_state\CAN\f \SOH(\SO2$.temporal.api.enums.v1.ArchivalStateR\ETBvisibilityArchivalState\DC26\n\
    \\ETBvisibility_archival_uri\CAN\r \SOH(\tR\NAKvisibilityArchivalUri\SUB7\n\
    \\tDataEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
    \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH\"\ESC\n\
    \\EMRegisterNamespaceResponse\"\179\SOH\n\
    \\NAKListNamespacesRequest\DC2\ESC\n\
    \\tpage_size\CAN\SOH \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\DC2U\n\
    \\DLEnamespace_filter\CAN\ETX \SOH(\v2*.temporal.api.namespace.v1.NamespaceFilterR\SInamespaceFilter\"\156\SOH\n\
    \\SYNListNamespacesResponse\DC2Z\n\
    \\n\
    \namespaces\CAN\SOH \ETX(\v2:.temporal.api.workflowservice.v1.DescribeNamespaceResponseR\n\
    \namespaces\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"H\n\
    \\CANDescribeNamespaceRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SO\n\
    \\STXid\CAN\STX \SOH(\tR\STXid\"\203\ETX\n\
    \\EMDescribeNamespaceResponse\DC2O\n\
    \\SOnamespace_info\CAN\SOH \SOH(\v2(.temporal.api.namespace.v1.NamespaceInfoR\rnamespaceInfo\DC2B\n\
    \\ACKconfig\CAN\STX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
    \\DC2replication_config\CAN\ETX \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2)\n\
    \\DLEfailover_version\CAN\EOT \SOH(\ETXR\SIfailoverVersion\DC2.\n\
    \\DC3is_global_namespace\CAN\ENQ \SOH(\bR\DC1isGlobalNamespace\DC2V\n\
    \\DLEfailover_history\CAN\ACK \ETX(\v2+.temporal.api.replication.v1.FailoverStatusR\SIfailoverHistory\"\179\ETX\n\
    \\SYNUpdateNamespaceRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2O\n\
    \\vupdate_info\CAN\STX \SOH(\v2..temporal.api.namespace.v1.UpdateNamespaceInfoR\n\
    \updateInfo\DC2B\n\
    \\ACKconfig\CAN\ETX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
    \\DC2replication_config\CAN\EOT \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2%\n\
    \\SOsecurity_token\CAN\ENQ \SOH(\tR\rsecurityToken\DC2*\n\
    \\DC1delete_bad_binary\CAN\ACK \SOH(\tR\SIdeleteBadBinary\DC2+\n\
    \\DC1promote_namespace\CAN\a \SOH(\bR\DLEpromoteNamespace\"\241\STX\n\
    \\ETBUpdateNamespaceResponse\DC2O\n\
    \\SOnamespace_info\CAN\SOH \SOH(\v2(.temporal.api.namespace.v1.NamespaceInfoR\rnamespaceInfo\DC2B\n\
    \\ACKconfig\CAN\STX \SOH(\v2*.temporal.api.namespace.v1.NamespaceConfigR\ACKconfig\DC2f\n\
    \\DC2replication_config\CAN\ETX \SOH(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\DC1replicationConfig\DC2)\n\
    \\DLEfailover_version\CAN\EOT \SOH(\ETXR\SIfailoverVersion\DC2.\n\
    \\DC3is_global_namespace\CAN\ENQ \SOH(\bR\DC1isGlobalNamespace\"`\n\
    \\EMDeprecateNamespaceRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2%\n\
    \\SOsecurity_token\CAN\STX \SOH(\tR\rsecurityToken\"\FS\n\
    \\SUBDeprecateNamespaceResponse\"\210\SO\n\
    \\GSStartWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2I\n\
    \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2C\n\
    \\n\
    \task_queue\CAN\EOT \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC26\n\
    \\ENQinput\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2W\n\
    \\SUBworkflow_execution_timeout\CAN\ACK \SOH(\v2\EM.google.protobuf.DurationR\CANworkflowExecutionTimeout\DC2K\n\
    \\DC4workflow_run_timeout\CAN\a \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowRunTimeout\DC2M\n\
    \\NAKworkflow_task_timeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\DC3workflowTaskTimeout\DC2\SUB\n\
    \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\n\
    \ \SOH(\tR\trequestId\DC2e\n\
    \\CANworkflow_id_reuse_policy\CAN\v \SOH(\SO2,.temporal.api.enums.v1.WorkflowIdReusePolicyR\NAKworkflowIdReusePolicy\DC2n\n\
    \\ESCworkflow_id_conflict_policy\CAN\SYN \SOH(\SO2/.temporal.api.enums.v1.WorkflowIdConflictPolicyR\CANworkflowIdConflictPolicy\DC2F\n\
    \\fretry_policy\CAN\f \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2#\n\
    \\rcron_schedule\CAN\r \SOH(\tR\fcronSchedule\DC20\n\
    \\EOTmemo\CAN\SO \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
    \\DC1search_attributes\CAN\SI \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC26\n\
    \\ACKheader\CAN\DLE \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC26\n\
    \\ETBrequest_eager_execution\CAN\DC1 \SOH(\bR\NAKrequestEagerExecution\DC2M\n\
    \\DC1continued_failure\CAN\DC2 \SOH(\v2 .temporal.api.failure.v1.FailureR\DLEcontinuedFailure\DC2V\n\
    \\SYNlast_completion_result\CAN\DC3 \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastCompletionResult\DC2K\n\
    \\DC4workflow_start_delay\CAN\DC4 \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowStartDelay\DC2S\n\
    \\DC4completion_callbacks\CAN\NAK \ETX(\v2 .temporal.api.common.v1.CallbackR\DC3completionCallbacks\DC2F\n\
    \\ruser_metadata\CAN\ETB \SOH(\v2!.temporal.api.sdk.v1.UserMetadataR\fuserMetadata\DC22\n\
    \\ENQlinks\CAN\CAN \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\DC2]\n\
    \\DC3versioning_override\CAN\EM \SOH(\v2,.temporal.api.workflow.v1.VersioningOverrideR\DC2versioningOverride\DC2[\n\
    \\DC3on_conflict_options\CAN\SUB \SOH(\v2+.temporal.api.workflow.v1.OnConflictOptionsR\DC1onConflictOptions\DC2<\n\
    \\bpriority\CAN\ESC \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriority\"\193\SOH\n\
    \\RSStartWorkflowExecutionResponse\DC2\NAK\n\
    \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId\DC2\CAN\n\
    \\astarted\CAN\ETX \SOH(\bR\astarted\DC2n\n\
    \\DC3eager_workflow_task\CAN\STX \SOH(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\DC1eagerWorkflowTask\"\148\ETX\n\
    \\"GetWorkflowExecutionHistoryRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2*\n\
    \\DC1maximum_page_size\CAN\ETX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
    \\SInext_page_token\CAN\EOT \SOH(\fR\rnextPageToken\DC2$\n\
    \\SOwait_new_event\CAN\ENQ \SOH(\bR\fwaitNewEvent\DC2h\n\
    \\EMhistory_event_filter_type\CAN\ACK \SOH(\SO2-.temporal.api.enums.v1.HistoryEventFilterTypeR\SYNhistoryEventFilterType\DC2#\n\
    \\rskip_archival\CAN\a \SOH(\bR\fskipArchival\"\232\SOH\n\
    \#GetWorkflowExecutionHistoryResponse\DC2:\n\
    \\ahistory\CAN\SOH \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2A\n\
    \\vraw_history\CAN\STX \ETX(\v2 .temporal.api.common.v1.DataBlobR\n\
    \rawHistory\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\SUB\n\
    \\barchived\CAN\EOT \SOH(\bR\barchived\"\230\SOH\n\
    \)GetWorkflowExecutionHistoryReverseRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2*\n\
    \\DC1maximum_page_size\CAN\ETX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
    \\SInext_page_token\CAN\EOT \SOH(\fR\rnextPageToken\"\144\SOH\n\
    \*GetWorkflowExecutionHistoryReverseResponse\DC2:\n\
    \\ahistory\CAN\SOH \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\"\161\ETX\n\
    \\FSPollWorkflowTaskQueueRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
    \\n\
    \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2'\n\
    \\SIbinary_checksum\CAN\EOT \SOH(\tR\SObinaryChecksum\DC2u\n\
    \\ESCworker_version_capabilities\CAN\ENQ \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"\141\t\n\
    \\GSPollWorkflowTaskQueueResponse\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2I\n\
    \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC29\n\
    \\EMprevious_started_event_id\CAN\EOT \SOH(\ETXR\SYNpreviousStartedEventId\DC2(\n\
    \\DLEstarted_event_id\CAN\ENQ \SOH(\ETXR\SOstartedEventId\DC2\CAN\n\
    \\aattempt\CAN\ACK \SOH(\ENQR\aattempt\DC2,\n\
    \\DC2backlog_count_hint\CAN\a \SOH(\ETXR\DLEbacklogCountHint\DC2:\n\
    \\ahistory\CAN\b \SOH(\v2 .temporal.api.history.v1.HistoryR\ahistory\DC2&\n\
    \\SInext_page_token\CAN\t \SOH(\fR\rnextPageToken\DC2:\n\
    \\ENQquery\CAN\n\
    \ \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQquery\DC2g\n\
    \\GSworkflow_execution_task_queue\CAN\v \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\SUBworkflowExecutionTaskQueue\DC2A\n\
    \\SOscheduled_time\CAN\f \SOH(\v2\SUB.google.protobuf.TimestampR\rscheduledTime\DC2=\n\
    \\fstarted_time\CAN\r \SOH(\v2\SUB.google.protobuf.TimestampR\vstartedTime\DC2e\n\
    \\aqueries\CAN\SO \ETX(\v2K.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse.QueriesEntryR\aqueries\DC2=\n\
    \\bmessages\CAN\SI \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2h\n\
    \\ETBpoller_scaling_decision\CAN\DLE \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision\SUB`\n\
    \\fQueriesEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2:\n\
    \\ENQvalue\CAN\STX \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQvalue:\STX8\SOH\"\242\v\n\
    \#RespondWorkflowTaskCompletedRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2<\n\
    \\bcommands\CAN\STX \ETX(\v2 .temporal.api.command.v1.CommandR\bcommands\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2a\n\
    \\DC1sticky_attributes\CAN\EOT \SOH(\v24.temporal.api.taskqueue.v1.StickyExecutionAttributesR\DLEstickyAttributes\DC27\n\
    \\CANreturn_new_workflow_task\CAN\ENQ \SOH(\bR\NAKreturnNewWorkflowTask\DC2B\n\
    \\RSforce_create_new_workflow_task\CAN\ACK \SOH(\bR\SUBforceCreateNewWorkflowTask\DC2'\n\
    \\SIbinary_checksum\CAN\a \SOH(\tR\SObinaryChecksum\DC2{\n\
    \\rquery_results\CAN\b \ETX(\v2V.temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.QueryResultsEntryR\fqueryResults\DC2\FS\n\
    \\tnamespace\CAN\t \SOH(\tR\tnamespace\DC2`\n\
    \\DC4worker_version_stamp\CAN\n\
    \ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\DC2workerVersionStampB\STX\CAN\SOH\DC2=\n\
    \\bmessages\CAN\v \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2U\n\
    \\fsdk_metadata\CAN\f \SOH(\v22.temporal.api.sdk.v1.WorkflowTaskCompletedMetadataR\vsdkMetadata\DC2U\n\
    \\DC1metering_metadata\CAN\r \SOH(\v2(.temporal.api.common.v1.MeteringMetadataR\DLEmeteringMetadata\DC2u\n\
    \\fcapabilities\CAN\SO \SOH(\v2Q.temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest.CapabilitiesR\fcapabilities\DC2J\n\
    \\n\
    \deployment\CAN\SI \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deploymentB\STX\CAN\SOH\DC2Z\n\
    \\DC3versioning_behavior\CAN\DLE \SOH(\SO2).temporal.api.enums.v1.VersioningBehaviorR\DC2versioningBehavior\DC2b\n\
    \\DC2deployment_options\CAN\DC1 \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\SUBk\n\
    \\DC1QueryResultsEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2@\n\
    \\ENQvalue\CAN\STX \SOH(\v2*.temporal.api.query.v1.WorkflowQueryResultR\ENQvalue:\STX8\SOH\SUBo\n\
    \\fCapabilities\DC2_\n\
    \-discard_speculative_workflow_task_with_events\CAN\SOH \SOH(\bR(discardSpeculativeWorkflowTaskWithEvents\"\167\STX\n\
    \$RespondWorkflowTaskCompletedResponse\DC2c\n\
    \\rworkflow_task\CAN\SOH \SOH(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\fworkflowTask\DC2e\n\
    \\SOactivity_tasks\CAN\STX \ETX(\v2>.temporal.api.workflowservice.v1.PollActivityTaskQueueResponseR\ractivityTasks\DC23\n\
    \\SYNreset_history_event_id\CAN\ETX \SOH(\ETXR\DC3resetHistoryEventId\"\232\EOT\n\
    \ RespondWorkflowTaskFailedRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2D\n\
    \\ENQcause\CAN\STX \SOH(\SO2..temporal.api.enums.v1.WorkflowTaskFailedCauseR\ENQcause\DC2:\n\
    \\afailure\CAN\ETX \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
    \\bidentity\CAN\EOT \SOH(\tR\bidentity\DC2'\n\
    \\SIbinary_checksum\CAN\ENQ \SOH(\tR\SObinaryChecksum\DC2\FS\n\
    \\tnamespace\CAN\ACK \SOH(\tR\tnamespace\DC2=\n\
    \\bmessages\CAN\a \ETX(\v2!.temporal.api.protocol.v1.MessageR\bmessages\DC2U\n\
    \\SOworker_version\CAN\b \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2F\n\
    \\n\
    \deployment\CAN\t \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deployment\DC2b\n\
    \\DC2deployment_options\CAN\n\
    \ \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"#\n\
    \!RespondWorkflowTaskFailedResponse\"\214\ETX\n\
    \\FSPollActivityTaskQueueRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
    \\n\
    \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\\\n\
    \\DC3task_queue_metadata\CAN\EOT \SOH(\v2,.temporal.api.taskqueue.v1.TaskQueueMetadataR\DC1taskQueueMetadata\DC2u\n\
    \\ESCworker_version_capabilities\CAN\ENQ \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"\152\n\
    \\n\
    \\GSPollActivityTaskQueueResponse\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2-\n\
    \\DC2workflow_namespace\CAN\STX \SOH(\tR\DC1workflowNamespace\DC2I\n\
    \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2X\n\
    \\DC2workflow_execution\CAN\EOT \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2I\n\
    \\ractivity_type\CAN\ENQ \SOH(\v2$.temporal.api.common.v1.ActivityTypeR\factivityType\DC2\US\n\
    \\vactivity_id\CAN\ACK \SOH(\tR\n\
    \activityId\DC26\n\
    \\ACKheader\CAN\a \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC26\n\
    \\ENQinput\CAN\b \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2M\n\
    \\DC1heartbeat_details\CAN\t \SOH(\v2 .temporal.api.common.v1.PayloadsR\DLEheartbeatDetails\DC2A\n\
    \\SOscheduled_time\CAN\n\
    \ \SOH(\v2\SUB.google.protobuf.TimestampR\rscheduledTime\DC2_\n\
    \\RScurrent_attempt_scheduled_time\CAN\v \SOH(\v2\SUB.google.protobuf.TimestampR\ESCcurrentAttemptScheduledTime\DC2=\n\
    \\fstarted_time\CAN\f \SOH(\v2\SUB.google.protobuf.TimestampR\vstartedTime\DC2\CAN\n\
    \\aattempt\CAN\r \SOH(\ENQR\aattempt\DC2T\n\
    \\EMschedule_to_close_timeout\CAN\SO \SOH(\v2\EM.google.protobuf.DurationR\SYNscheduleToCloseTimeout\DC2N\n\
    \\SYNstart_to_close_timeout\CAN\SI \SOH(\v2\EM.google.protobuf.DurationR\DC3startToCloseTimeout\DC2F\n\
    \\DC1heartbeat_timeout\CAN\DLE \SOH(\v2\EM.google.protobuf.DurationR\DLEheartbeatTimeout\DC2F\n\
    \\fretry_policy\CAN\DC1 \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2h\n\
    \\ETBpoller_scaling_decision\CAN\DC2 \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision\DC2<\n\
    \\bpriority\CAN\DC3 \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriority\"\185\SOH\n\
    \\"RecordActivityTaskHeartbeatRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
    \\adetails\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
    \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\"y\n\
    \#RecordActivityTaskHeartbeatResponse\DC2)\n\
    \\DLEcancel_requested\CAN\SOH \SOH(\bR\SIcancelRequested\DC2'\n\
    \\SIactivity_paused\CAN\STX \SOH(\bR\SOactivityPaused\"\247\SOH\n\
    \&RecordActivityTaskHeartbeatByIdRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2\NAK\n\
    \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
    \\vactivity_id\CAN\EOT \SOH(\tR\n\
    \activityId\DC2:\n\
    \\adetails\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
    \\bidentity\CAN\ACK \SOH(\tR\bidentity\"}\n\
    \'RecordActivityTaskHeartbeatByIdResponse\DC2)\n\
    \\DLEcancel_requested\CAN\SOH \SOH(\bR\SIcancelRequested\DC2'\n\
    \\SIactivity_paused\CAN\STX \SOH(\bR\SOactivityPaused\"\191\ETX\n\
    \#RespondActivityTaskCompletedRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC28\n\
    \\ACKresult\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\ACKresult\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
    \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2U\n\
    \\SOworker_version\CAN\ENQ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
    \\n\
    \deployment\CAN\ACK \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deploymentB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\a \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"&\n\
    \$RespondActivityTaskCompletedResponse\"\246\SOH\n\
    \'RespondActivityTaskCompletedByIdRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2\NAK\n\
    \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
    \\vactivity_id\CAN\EOT \SOH(\tR\n\
    \activityId\DC28\n\
    \\ACKresult\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ACKresult\DC2\SUB\n\
    \\bidentity\CAN\ACK \SOH(\tR\bidentity\"*\n\
    \(RespondActivityTaskCompletedByIdResponse\"\150\EOT\n\
    \ RespondActivityTaskFailedRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
    \\afailure\CAN\STX \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
    \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2V\n\
    \\SYNlast_heartbeat_details\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastHeartbeatDetails\DC2U\n\
    \\SOworker_version\CAN\ACK \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
    \\n\
    \deployment\CAN\a \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deploymentB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\b \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"a\n\
    \!RespondActivityTaskFailedResponse\DC2<\n\
    \\bfailures\CAN\SOH \ETX(\v2 .temporal.api.failure.v1.FailureR\bfailures\"\205\STX\n\
    \$RespondActivityTaskFailedByIdRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2\NAK\n\
    \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
    \\vactivity_id\CAN\EOT \SOH(\tR\n\
    \activityId\DC2:\n\
    \\afailure\CAN\ENQ \SOH(\v2 .temporal.api.failure.v1.FailureR\afailure\DC2\SUB\n\
    \\bidentity\CAN\ACK \SOH(\tR\bidentity\DC2V\n\
    \\SYNlast_heartbeat_details\CAN\a \SOH(\v2 .temporal.api.common.v1.PayloadsR\DC4lastHeartbeatDetails\"e\n\
    \%RespondActivityTaskFailedByIdResponse\DC2<\n\
    \\bfailures\CAN\SOH \ETX(\v2 .temporal.api.failure.v1.FailureR\bfailures\"\192\ETX\n\
    \\"RespondActivityTaskCanceledRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2:\n\
    \\adetails\CAN\STX \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\FS\n\
    \\tnamespace\CAN\EOT \SOH(\tR\tnamespace\DC2U\n\
    \\SOworker_version\CAN\ENQ \SOH(\v2*.temporal.api.common.v1.WorkerVersionStampR\rworkerVersionB\STX\CAN\SOH\DC2J\n\
    \\n\
    \deployment\CAN\ACK \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deploymentB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\a \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"%\n\
    \#RespondActivityTaskCanceledResponse\"\247\SOH\n\
    \&RespondActivityTaskCanceledByIdRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2\NAK\n\
    \\ACKrun_id\CAN\ETX \SOH(\tR\ENQrunId\DC2\US\n\
    \\vactivity_id\CAN\EOT \SOH(\tR\n\
    \activityId\DC2:\n\
    \\adetails\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
    \\bidentity\CAN\ACK \SOH(\tR\bidentity\")\n\
    \'RespondActivityTaskCanceledByIdResponse\"\219\STX\n\
    \%RequestCancelWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\EOT \SOH(\tR\trequestId\DC23\n\
    \\SYNfirst_execution_run_id\CAN\ENQ \SOH(\tR\DC3firstExecutionRunId\DC2\SYN\n\
    \\ACKreason\CAN\ACK \SOH(\tR\ACKreason\DC22\n\
    \\ENQlinks\CAN\a \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\"(\n\
    \&RequestCancelWorkflowExecutionResponse\"\184\ETX\n\
    \\RSSignalWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\US\n\
    \\vsignal_name\CAN\ETX \SOH(\tR\n\
    \signalName\DC26\n\
    \\ENQinput\CAN\EOT \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2\SUB\n\
    \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\ACK \SOH(\tR\trequestId\DC2\CAN\n\
    \\acontrol\CAN\a \SOH(\tR\acontrol\DC26\n\
    \\ACKheader\CAN\b \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC22\n\
    \\ENQlinks\CAN\n\
    \ \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinksJ\EOT\b\t\DLE\n\
    \\"!\n\
    \\USSignalWorkflowExecutionResponse\"\209\f\n\
    \'SignalWithStartWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vworkflow_id\CAN\STX \SOH(\tR\n\
    \workflowId\DC2I\n\
    \\rworkflow_type\CAN\ETX \SOH(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\DC2C\n\
    \\n\
    \task_queue\CAN\EOT \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC26\n\
    \\ENQinput\CAN\ENQ \SOH(\v2 .temporal.api.common.v1.PayloadsR\ENQinput\DC2W\n\
    \\SUBworkflow_execution_timeout\CAN\ACK \SOH(\v2\EM.google.protobuf.DurationR\CANworkflowExecutionTimeout\DC2K\n\
    \\DC4workflow_run_timeout\CAN\a \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowRunTimeout\DC2M\n\
    \\NAKworkflow_task_timeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\DC3workflowTaskTimeout\DC2\SUB\n\
    \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\n\
    \ \SOH(\tR\trequestId\DC2e\n\
    \\CANworkflow_id_reuse_policy\CAN\v \SOH(\SO2,.temporal.api.enums.v1.WorkflowIdReusePolicyR\NAKworkflowIdReusePolicy\DC2n\n\
    \\ESCworkflow_id_conflict_policy\CAN\SYN \SOH(\SO2/.temporal.api.enums.v1.WorkflowIdConflictPolicyR\CANworkflowIdConflictPolicy\DC2\US\n\
    \\vsignal_name\CAN\f \SOH(\tR\n\
    \signalName\DC2C\n\
    \\fsignal_input\CAN\r \SOH(\v2 .temporal.api.common.v1.PayloadsR\vsignalInput\DC2\CAN\n\
    \\acontrol\CAN\SO \SOH(\tR\acontrol\DC2F\n\
    \\fretry_policy\CAN\SI \SOH(\v2#.temporal.api.common.v1.RetryPolicyR\vretryPolicy\DC2#\n\
    \\rcron_schedule\CAN\DLE \SOH(\tR\fcronSchedule\DC20\n\
    \\EOTmemo\CAN\DC1 \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
    \\DC1search_attributes\CAN\DC2 \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC26\n\
    \\ACKheader\CAN\DC3 \SOH(\v2\RS.temporal.api.common.v1.HeaderR\ACKheader\DC2K\n\
    \\DC4workflow_start_delay\CAN\DC4 \SOH(\v2\EM.google.protobuf.DurationR\DC2workflowStartDelay\DC2F\n\
    \\ruser_metadata\CAN\ETB \SOH(\v2!.temporal.api.sdk.v1.UserMetadataR\fuserMetadata\DC22\n\
    \\ENQlinks\CAN\CAN \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\DC2]\n\
    \\DC3versioning_override\CAN\EM \SOH(\v2,.temporal.api.workflow.v1.VersioningOverrideR\DC2versioningOverride\DC2<\n\
    \\bpriority\CAN\SUB \SOH(\v2 .temporal.api.common.v1.PriorityR\bpriorityJ\EOT\b\NAK\DLE\SYN\"[\n\
    \(SignalWithStartWorkflowExecutionResponse\DC2\NAK\n\
    \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId\DC2\CAN\n\
    \\astarted\CAN\STX \SOH(\bR\astarted\"\214\ETX\n\
    \\GSResetWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SYN\n\
    \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2@\n\
    \\GSworkflow_task_finish_event_id\CAN\EOT \SOH(\ETXR\EMworkflowTaskFinishEventId\DC2\GS\n\
    \\n\
    \request_id\CAN\ENQ \SOH(\tR\trequestId\DC2U\n\
    \\DC2reset_reapply_type\CAN\ACK \SOH(\SO2'.temporal.api.enums.v1.ResetReapplyTypeR\DLEresetReapplyType\DC2m\n\
    \\ESCreset_reapply_exclude_types\CAN\a \ETX(\SO2..temporal.api.enums.v1.ResetReapplyExcludeTypeR\CANresetReapplyExcludeTypes\"7\n\
    \\RSResetWorkflowExecutionResponse\DC2\NAK\n\
    \\ACKrun_id\CAN\SOH \SOH(\tR\ENQrunId\"\244\STX\n\
    \!TerminateWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2\SYN\n\
    \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2:\n\
    \\adetails\CAN\EOT \SOH(\v2 .temporal.api.common.v1.PayloadsR\adetails\DC2\SUB\n\
    \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC23\n\
    \\SYNfirst_execution_run_id\CAN\ACK \SOH(\tR\DC3firstExecutionRunId\DC22\n\
    \\ENQlinks\CAN\a \ETX(\v2\FS.temporal.api.common.v1.LinkR\ENQlinks\"$\n\
    \\"TerminateWorkflowExecutionResponse\"\152\SOH\n\
    \\RSDeleteWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\"!\n\
    \\USDeleteWorkflowExecutionResponse\"\162\ETX\n\
    \!ListOpenWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
    \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2S\n\
    \\DC1start_time_filter\CAN\EOT \SOH(\v2'.temporal.api.filter.v1.StartTimeFilterR\SIstartTimeFilter\DC2\\\n\
    \\DLEexecution_filter\CAN\ENQ \SOH(\v2/.temporal.api.filter.v1.WorkflowExecutionFilterH\NULR\SIexecutionFilter\DC2M\n\
    \\vtype_filter\CAN\ACK \SOH(\v2*.temporal.api.filter.v1.WorkflowTypeFilterH\NULR\n\
    \typeFilterB\t\n\
    \\afilters\"\157\SOH\n\
    \\"ListOpenWorkflowExecutionsResponse\DC2O\n\
    \\n\
    \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
    \executions\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\241\ETX\n\
    \#ListClosedWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
    \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2S\n\
    \\DC1start_time_filter\CAN\EOT \SOH(\v2'.temporal.api.filter.v1.StartTimeFilterR\SIstartTimeFilter\DC2\\\n\
    \\DLEexecution_filter\CAN\ENQ \SOH(\v2/.temporal.api.filter.v1.WorkflowExecutionFilterH\NULR\SIexecutionFilter\DC2M\n\
    \\vtype_filter\CAN\ACK \SOH(\v2*.temporal.api.filter.v1.WorkflowTypeFilterH\NULR\n\
    \typeFilter\DC2K\n\
    \\rstatus_filter\CAN\a \SOH(\v2$.temporal.api.filter.v1.StatusFilterH\NULR\fstatusFilterB\t\n\
    \\afilters\"\159\SOH\n\
    \$ListClosedWorkflowExecutionsResponse\DC2O\n\
    \\n\
    \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
    \executions\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\152\SOH\n\
    \\GSListWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
    \\ENQquery\CAN\EOT \SOH(\tR\ENQquery\"\153\SOH\n\
    \\RSListWorkflowExecutionsResponse\DC2O\n\
    \\n\
    \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
    \executions\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\160\SOH\n\
    \%ListArchivedWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
    \\ENQquery\CAN\EOT \SOH(\tR\ENQquery\"\161\SOH\n\
    \&ListArchivedWorkflowExecutionsResponse\DC2O\n\
    \\n\
    \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
    \executions\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\152\SOH\n\
    \\GSScanWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
    \\ENQquery\CAN\EOT \SOH(\tR\ENQquery\"\153\SOH\n\
    \\RSScanWorkflowExecutionsResponse\DC2O\n\
    \\n\
    \executions\CAN\SOH \ETX(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\n\
    \executions\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"T\n\
    \\RSCountWorkflowExecutionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\DC4\n\
    \\ENQquery\CAN\STX \SOH(\tR\ENQquery\"\144\STX\n\
    \\USCountWorkflowExecutionsResponse\DC2\DC4\n\
    \\ENQcount\CAN\SOH \SOH(\ETXR\ENQcount\DC2i\n\
    \\ACKgroups\CAN\STX \ETX(\v2Q.temporal.api.workflowservice.v1.CountWorkflowExecutionsResponse.AggregationGroupR\ACKgroups\SUBl\n\
    \\DLEAggregationGroup\DC2B\n\
    \\fgroup_values\CAN\SOH \ETX(\v2\US.temporal.api.common.v1.PayloadR\vgroupValues\DC2\DC4\n\
    \\ENQcount\CAN\STX \SOH(\ETXR\ENQcount\"\FS\n\
    \\SUBGetSearchAttributesRequest\"\219\SOH\n\
    \\ESCGetSearchAttributesResponse\DC2Z\n\
    \\EOTkeys\CAN\SOH \ETX(\v2F.temporal.api.workflowservice.v1.GetSearchAttributesResponse.KeysEntryR\EOTkeys\SUB`\n\
    \\tKeysEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2=\n\
    \\ENQvalue\CAN\STX \SOH(\SO2'.temporal.api.enums.v1.IndexedValueTypeR\ENQvalue:\STX8\SOH\"\218\STX\n\
    \ RespondQueryTaskCompletedRequest\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC2M\n\
    \\SOcompleted_type\CAN\STX \SOH(\SO2&.temporal.api.enums.v1.QueryResultTypeR\rcompletedType\DC2C\n\
    \\fquery_result\CAN\ETX \SOH(\v2 .temporal.api.common.v1.PayloadsR\vqueryResult\DC2#\n\
    \\rerror_message\CAN\EOT \SOH(\tR\ferrorMessage\DC2\FS\n\
    \\tnamespace\CAN\ACK \SOH(\tR\tnamespace\DC2:\n\
    \\afailure\CAN\a \SOH(\v2 .temporal.api.failure.v1.FailureR\afailureJ\EOT\b\ENQ\DLE\ACK\"#\n\
    \!RespondQueryTaskCompletedResponse\"\132\SOH\n\
    \\ESCResetStickyTaskQueueRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"\RS\n\
    \\FSResetStickyTaskQueueResponse\"\149\SOH\n\
    \\NAKShutdownWorkerRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
    \\DC1sticky_task_queue\CAN\STX \SOH(\tR\SIstickyTaskQueue\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\SYN\n\
    \\ACKreason\CAN\EOT \SOH(\tR\ACKreason\"\CAN\n\
    \\SYNShutdownWorkerResponse\"\156\STX\n\
    \\DC4QueryWorkflowRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2:\n\
    \\ENQquery\CAN\ETX \SOH(\v2$.temporal.api.query.v1.WorkflowQueryR\ENQquery\DC2a\n\
    \\SYNquery_reject_condition\CAN\EOT \SOH(\SO2+.temporal.api.enums.v1.QueryRejectConditionR\DC4queryRejectCondition\"\169\SOH\n\
    \\NAKQueryWorkflowResponse\DC2C\n\
    \\fquery_result\CAN\SOH \SOH(\v2 .temporal.api.common.v1.PayloadsR\vqueryResult\DC2K\n\
    \\SOquery_rejected\CAN\STX \SOH(\v2$.temporal.api.query.v1.QueryRejectedR\rqueryRejected\"\137\SOH\n\
    \ DescribeWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"\179\ACK\n\
    \!DescribeWorkflowExecutionResponse\DC2\\\n\
    \\DLEexecution_config\CAN\SOH \SOH(\v21.temporal.api.workflow.v1.WorkflowExecutionConfigR\SIexecutionConfig\DC2g\n\
    \\ETBworkflow_execution_info\CAN\STX \SOH(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\NAKworkflowExecutionInfo\DC2\\\n\
    \\DC2pending_activities\CAN\ETX \ETX(\v2-.temporal.api.workflow.v1.PendingActivityInfoR\DC1pendingActivities\DC2^\n\
    \\DLEpending_children\CAN\EOT \ETX(\v23.temporal.api.workflow.v1.PendingChildExecutionInfoR\SIpendingChildren\DC2e\n\
    \\NAKpending_workflow_task\CAN\ENQ \SOH(\v21.temporal.api.workflow.v1.PendingWorkflowTaskInfoR\DC3pendingWorkflowTask\DC2D\n\
    \\tcallbacks\CAN\ACK \ETX(\v2&.temporal.api.workflow.v1.CallbackInfoR\tcallbacks\DC2m\n\
    \\CANpending_nexus_operations\CAN\a \ETX(\v23.temporal.api.workflow.v1.PendingNexusOperationInfoR\SYNpendingNexusOperations\DC2m\n\
    \\SYNworkflow_extended_info\CAN\b \SOH(\v27.temporal.api.workflow.v1.WorkflowExecutionExtendedInfoR\DC4workflowExtendedInfo\"\245\EOT\n\
    \\CANDescribeTaskQueueRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
    \\n\
    \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2L\n\
    \\SItask_queue_type\CAN\ETX \SOH(\SO2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\DC29\n\
    \\EMinclude_task_queue_status\CAN\EOT \SOH(\bR\SYNincludeTaskQueueStatus\DC2G\n\
    \\bapi_mode\CAN\ENQ \SOH(\SO2,.temporal.api.enums.v1.DescribeTaskQueueModeR\aapiMode\DC2P\n\
    \\bversions\CAN\ACK \SOH(\v24.temporal.api.taskqueue.v1.TaskQueueVersionSelectionR\bversions\DC2N\n\
    \\DLEtask_queue_types\CAN\a \ETX(\SO2$.temporal.api.enums.v1.TaskQueueTypeR\SOtaskQueueTypes\DC2!\n\
    \\freport_stats\CAN\b \SOH(\bR\vreportStats\DC2%\n\
    \\SOreport_pollers\CAN\t \SOH(\bR\rreportPollers\DC28\n\
    \\CANreport_task_reachability\CAN\n\
    \ \SOH(\bR\SYNreportTaskReachability\"\246\ETX\n\
    \\EMDescribeTaskQueueResponse\DC2?\n\
    \\apollers\CAN\SOH \ETX(\v2%.temporal.api.taskqueue.v1.PollerInfoR\apollers\DC2V\n\
    \\DC1task_queue_status\CAN\STX \SOH(\v2*.temporal.api.taskqueue.v1.TaskQueueStatusR\SItaskQueueStatus\DC2q\n\
    \\rversions_info\CAN\ETX \ETX(\v2L.temporal.api.workflowservice.v1.DescribeTaskQueueResponse.VersionsInfoEntryR\fversionsInfo\DC2[\n\
    \\SIversioning_info\CAN\EOT \SOH(\v22.temporal.api.taskqueue.v1.TaskQueueVersioningInfoR\SOversioningInfo\SUBp\n\
    \\DC1VersionsInfoEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2E\n\
    \\ENQvalue\CAN\STX \SOH(\v2/.temporal.api.taskqueue.v1.TaskQueueVersionInfoR\ENQvalue:\STX8\SOH\"\ETB\n\
    \\NAKGetClusterInfoRequest\"\147\EOT\n\
    \\SYNGetClusterInfoResponse\DC2z\n\
    \\DC1supported_clients\CAN\SOH \ETX(\v2M.temporal.api.workflowservice.v1.GetClusterInfoResponse.SupportedClientsEntryR\DLEsupportedClients\DC2%\n\
    \\SOserver_version\CAN\STX \SOH(\tR\rserverVersion\DC2\GS\n\
    \\n\
    \cluster_id\CAN\ETX \SOH(\tR\tclusterId\DC2G\n\
    \\fversion_info\CAN\EOT \SOH(\v2$.temporal.api.version.v1.VersionInfoR\vversionInfo\DC2!\n\
    \\fcluster_name\CAN\ENQ \SOH(\tR\vclusterName\DC2.\n\
    \\DC3history_shard_count\CAN\ACK \SOH(\ENQR\DC1historyShardCount\DC2+\n\
    \\DC1persistence_store\CAN\a \SOH(\tR\DLEpersistenceStore\DC2)\n\
    \\DLEvisibility_store\CAN\b \SOH(\tR\SIvisibilityStore\SUBC\n\
    \\NAKSupportedClientsEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2\DC4\n\
    \\ENQvalue\CAN\STX \SOH(\tR\ENQvalue:\STX8\SOH\"\SYN\n\
    \\DC4GetSystemInfoRequest\"\252\ENQ\n\
    \\NAKGetSystemInfoResponse\DC2%\n\
    \\SOserver_version\CAN\SOH \SOH(\tR\rserverVersion\DC2g\n\
    \\fcapabilities\CAN\STX \SOH(\v2C.temporal.api.workflowservice.v1.GetSystemInfoResponse.CapabilitiesR\fcapabilities\SUB\210\EOT\n\
    \\fCapabilities\DC25\n\
    \\ETBsignal_and_query_header\CAN\SOH \SOH(\bR\DC4signalAndQueryHeader\DC2D\n\
    \\RSinternal_error_differentiation\CAN\STX \SOH(\bR\FSinternalErrorDifferentiation\DC2K\n\
    \\"activity_failure_include_heartbeat\CAN\ETX \SOH(\bR\USactivityFailureIncludeHeartbeat\DC2-\n\
    \\DC2supports_schedules\CAN\EOT \SOH(\bR\DC1supportsSchedules\DC2<\n\
    \\SUBencoded_failure_attributes\CAN\ENQ \SOH(\bR\CANencodedFailureAttributes\DC29\n\
    \\EMbuild_id_based_versioning\CAN\ACK \SOH(\bR\SYNbuildIdBasedVersioning\DC2\US\n\
    \\vupsert_memo\CAN\a \SOH(\bR\n\
    \upsertMemo\DC20\n\
    \\DC4eager_workflow_start\CAN\b \SOH(\bR\DC2eagerWorkflowStart\DC2!\n\
    \\fsdk_metadata\CAN\t \SOH(\bR\vsdkMetadata\DC2D\n\
    \\UScount_group_by_execution_status\CAN\n\
    \ \SOH(\bR\ESCcountGroupByExecutionStatus\DC2\DC4\n\
    \\ENQnexus\CAN\v \SOH(\bR\ENQnexus\"\131\SOH\n\
    \\RSListTaskQueuePartitionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2C\n\
    \\n\
    \task_queue\CAN\STX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\"\153\STX\n\
    \\USListTaskQueuePartitionsResponse\DC2z\n\
    \\RSactivity_task_queue_partitions\CAN\SOH \ETX(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\ESCactivityTaskQueuePartitions\DC2z\n\
    \\RSworkflow_task_queue_partitions\CAN\STX \ETX(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\ESCworkflowTaskQueuePartitions\"\168\ETX\n\
    \\NAKCreateScheduleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\DC2>\n\
    \\bschedule\CAN\ETX \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2L\n\
    \\rinitial_patch\CAN\EOT \SOH(\v2'.temporal.api.schedule.v1.SchedulePatchR\finitialPatch\DC2\SUB\n\
    \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\ACK \SOH(\tR\trequestId\DC20\n\
    \\EOTmemo\CAN\a \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
    \\DC1search_attributes\CAN\b \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\"?\n\
    \\SYNCreateScheduleResponse\DC2%\n\
    \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\"X\n\
    \\ETBDescribeScheduleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\"\198\STX\n\
    \\CANDescribeScheduleResponse\DC2>\n\
    \\bschedule\CAN\SOH \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2:\n\
    \\EOTinfo\CAN\STX \SOH(\v2&.temporal.api.schedule.v1.ScheduleInfoR\EOTinfo\DC20\n\
    \\EOTmemo\CAN\ETX \SOH(\v2\FS.temporal.api.common.v1.MemoR\EOTmemo\DC2U\n\
    \\DC1search_attributes\CAN\EOT \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\DC2%\n\
    \\SOconflict_token\CAN\ENQ \SOH(\fR\rconflictToken\"\207\STX\n\
    \\NAKUpdateScheduleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\DC2>\n\
    \\bschedule\CAN\ETX \SOH(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\DC2%\n\
    \\SOconflict_token\CAN\EOT \SOH(\fR\rconflictToken\DC2\SUB\n\
    \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\ACK \SOH(\tR\trequestId\DC2U\n\
    \\DC1search_attributes\CAN\a \SOH(\v2(.temporal.api.common.v1.SearchAttributesR\DLEsearchAttributes\"\CAN\n\
    \\SYNUpdateScheduleResponse\"\207\SOH\n\
    \\DC4PatchScheduleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\DC2=\n\
    \\ENQpatch\CAN\ETX \SOH(\v2'.temporal.api.schedule.v1.SchedulePatchR\ENQpatch\DC2\SUB\n\
    \\bidentity\CAN\EOT \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \request_id\CAN\ENQ \SOH(\tR\trequestId\"\ETB\n\
    \\NAKPatchScheduleResponse\"\211\SOH\n\
    \ ListScheduleMatchingTimesRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\DC29\n\
    \\n\
    \start_time\CAN\ETX \SOH(\v2\SUB.google.protobuf.TimestampR\tstartTime\DC25\n\
    \\bend_time\CAN\EOT \SOH(\v2\SUB.google.protobuf.TimestampR\aendTime\"^\n\
    \!ListScheduleMatchingTimesResponse\DC29\n\
    \\n\
    \start_time\CAN\SOH \ETX(\v2\SUB.google.protobuf.TimestampR\tstartTime\"r\n\
    \\NAKDeleteScheduleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vschedule_id\CAN\STX \SOH(\tR\n\
    \scheduleId\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\"\CAN\n\
    \\SYNDeleteScheduleResponse\"\158\SOH\n\
    \\DC4ListSchedulesRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2*\n\
    \\DC1maximum_page_size\CAN\STX \SOH(\ENQR\SImaximumPageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\DC4\n\
    \\ENQquery\CAN\EOT \SOH(\tR\ENQquery\"\138\SOH\n\
    \\NAKListSchedulesResponse\DC2I\n\
    \\tschedules\CAN\SOH \ETX(\v2+.temporal.api.schedule.v1.ScheduleListEntryR\tschedules\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\236\ACK\n\
    \'UpdateWorkerBuildIdCompatibilityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
    \\n\
    \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2K\n\
    \#add_new_build_id_in_new_default_set\CAN\ETX \SOH(\tH\NULR\FSaddNewBuildIdInNewDefaultSet\DC2\160\SOH\n\
    \\ESCadd_new_compatible_build_id\CAN\EOT \SOH(\v2`.temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.AddNewCompatibleVersionH\NULR\ETBaddNewCompatibleBuildId\DC26\n\
    \\ETBpromote_set_by_build_id\CAN\ENQ \SOH(\tH\NULR\DC3promoteSetByBuildId\DC2>\n\
    \\ESCpromote_build_id_within_set\CAN\ACK \SOH(\tH\NULR\ETBpromoteBuildIdWithinSet\DC2s\n\
    \\n\
    \merge_sets\CAN\a \SOH(\v2R.temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest.MergeSetsH\NULR\tmergeSets\SUB\166\SOH\n\
    \\ETBAddNewCompatibleVersion\DC2 \n\
    \\fnew_build_id\CAN\SOH \SOH(\tR\n\
    \newBuildId\DC2?\n\
    \\FSexisting_compatible_build_id\CAN\STX \SOH(\tR\EMexistingCompatibleBuildId\DC2(\n\
    \\DLEmake_set_default\CAN\ETX \SOH(\bR\SOmakeSetDefault\SUBq\n\
    \\tMergeSets\DC2/\n\
    \\DC4primary_set_build_id\CAN\SOH \SOH(\tR\DC1primarySetBuildId\DC23\n\
    \\SYNsecondary_set_build_id\CAN\STX \SOH(\tR\DC3secondarySetBuildIdB\v\n\
    \\toperation\"@\n\
    \(UpdateWorkerBuildIdCompatibilityResponseJ\EOT\b\SOH\DLE\STXR\SOversion_set_id\"~\n\
    \$GetWorkerBuildIdCompatibilityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
    \\n\
    \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2\EM\n\
    \\bmax_sets\CAN\ETX \SOH(\ENQR\amaxSets\"\134\SOH\n\
    \%GetWorkerBuildIdCompatibilityResponse\DC2]\n\
    \\DC2major_version_sets\CAN\SOH \ETX(\v2/.temporal.api.taskqueue.v1.CompatibleVersionSetR\DLEmajorVersionSets\"\241\SI\n\
    \\"UpdateWorkerVersioningRulesRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
    \\n\
    \task_queue\CAN\STX \SOH(\tR\ttaskQueue\DC2%\n\
    \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken\DC2\151\SOH\n\
    \\SYNinsert_assignment_rule\CAN\EOT \SOH(\v2_.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.InsertBuildIdAssignmentRuleH\NULR\DC4insertAssignmentRule\DC2\154\SOH\n\
    \\ETBreplace_assignment_rule\CAN\ENQ \SOH(\v2`.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceBuildIdAssignmentRuleH\NULR\NAKreplaceAssignmentRule\DC2\151\SOH\n\
    \\SYNdelete_assignment_rule\CAN\ACK \SOH(\v2_.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteBuildIdAssignmentRuleH\NULR\DC4deleteAssignmentRule\DC2\167\SOH\n\
    \\FSadd_compatible_redirect_rule\CAN\a \SOH(\v2d.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.AddCompatibleBuildIdRedirectRuleH\NULR\EMaddCompatibleRedirectRule\DC2\179\SOH\n\
    \ replace_compatible_redirect_rule\CAN\b \SOH(\v2h.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.ReplaceCompatibleBuildIdRedirectRuleH\NULR\GSreplaceCompatibleRedirectRule\DC2\176\SOH\n\
    \\USdelete_compatible_redirect_rule\CAN\t \SOH(\v2g.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.DeleteCompatibleBuildIdRedirectRuleH\NULR\FSdeleteCompatibleRedirectRule\DC2{\n\
    \\SIcommit_build_id\CAN\n\
    \ \SOH(\v2Q.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest.CommitBuildIdH\NULR\rcommitBuildId\SUB\130\SOH\n\
    \\ESCInsertBuildIdAssignmentRule\DC2\GS\n\
    \\n\
    \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
    \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule\SUB\153\SOH\n\
    \\FSReplaceBuildIdAssignmentRule\DC2\GS\n\
    \\n\
    \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2D\n\
    \\EOTrule\CAN\STX \SOH(\v20.temporal.api.taskqueue.v1.BuildIdAssignmentRuleR\EOTrule\DC2\DC4\n\
    \\ENQforce\CAN\ETX \SOH(\bR\ENQforce\SUBR\n\
    \\ESCDeleteBuildIdAssignmentRule\DC2\GS\n\
    \\n\
    \rule_index\CAN\SOH \SOH(\ENQR\truleIndex\DC2\DC4\n\
    \\ENQforce\CAN\STX \SOH(\bR\ENQforce\SUBp\n\
    \ AddCompatibleBuildIdRedirectRule\DC2L\n\
    \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule\SUBt\n\
    \$ReplaceCompatibleBuildIdRedirectRule\DC2L\n\
    \\EOTrule\CAN\SOH \SOH(\v28.temporal.api.taskqueue.v1.CompatibleBuildIdRedirectRuleR\EOTrule\SUBM\n\
    \#DeleteCompatibleBuildIdRedirectRule\DC2&\n\
    \\SIsource_build_id\CAN\SOH \SOH(\tR\rsourceBuildId\SUBM\n\
    \\rCommitBuildId\DC2&\n\
    \\SItarget_build_id\CAN\SOH \SOH(\tR\rtargetBuildId\DC2\DC4\n\
    \\ENQforce\CAN\STX \SOH(\bR\ENQforceB\v\n\
    \\toperation\"\181\STX\n\
    \#UpdateWorkerVersioningRulesResponse\DC2f\n\
    \\DLEassignment_rules\CAN\SOH \ETX(\v2;.temporal.api.taskqueue.v1.TimestampedBuildIdAssignmentRuleR\SIassignmentRules\DC2\DEL\n\
    \\EMcompatible_redirect_rules\CAN\STX \ETX(\v2C.temporal.api.taskqueue.v1.TimestampedCompatibleBuildIdRedirectRuleR\ETBcompatibleRedirectRules\DC2%\n\
    \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken\"^\n\
    \\USGetWorkerVersioningRulesRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\GS\n\
    \\n\
    \task_queue\CAN\STX \SOH(\tR\ttaskQueue\"\178\STX\n\
    \ GetWorkerVersioningRulesResponse\DC2f\n\
    \\DLEassignment_rules\CAN\SOH \ETX(\v2;.temporal.api.taskqueue.v1.TimestampedBuildIdAssignmentRuleR\SIassignmentRules\DC2\DEL\n\
    \\EMcompatible_redirect_rules\CAN\STX \ETX(\v2C.temporal.api.taskqueue.v1.TimestampedCompatibleBuildIdRedirectRuleR\ETBcompatibleRedirectRules\DC2%\n\
    \\SOconflict_token\CAN\ETX \SOH(\fR\rconflictToken\"\203\SOH\n\
    \ GetWorkerTaskReachabilityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tbuild_ids\CAN\STX \ETX(\tR\bbuildIds\DC2\US\n\
    \\vtask_queues\CAN\ETX \ETX(\tR\n\
    \taskQueues\DC2K\n\
    \\freachability\CAN\EOT \SOH(\SO2'.temporal.api.enums.v1.TaskReachabilityR\freachability\"\135\SOH\n\
    \!GetWorkerTaskReachabilityResponse\DC2b\n\
    \\NAKbuild_id_reachability\CAN\SOH \ETX(\v2..temporal.api.taskqueue.v1.BuildIdReachabilityR\DC3buildIdReachability\"\205\STX\n\
    \\RSUpdateWorkflowExecutionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC23\n\
    \\SYNfirst_execution_run_id\CAN\ETX \SOH(\tR\DC3firstExecutionRunId\DC2C\n\
    \\vwait_policy\CAN\EOT \SOH(\v2\".temporal.api.update.v1.WaitPolicyR\n\
    \waitPolicy\DC29\n\
    \\arequest\CAN\ENQ \SOH(\v2\US.temporal.api.update.v1.RequestR\arequest\"\242\SOH\n\
    \\USUpdateWorkflowExecutionResponse\DC2@\n\
    \\n\
    \update_ref\CAN\SOH \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef\DC29\n\
    \\aoutcome\CAN\STX \SOH(\v2\US.temporal.api.update.v1.OutcomeR\aoutcome\DC2R\n\
    \\ENQstage\CAN\ETX \SOH(\SO2<.temporal.api.enums.v1.UpdateWorkflowExecutionLifecycleStageR\ENQstage\"\156\b\n\
    \\SUBStartBatchOperationRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2)\n\
    \\DLEvisibility_query\CAN\STX \SOH(\tR\SIvisibilityQuery\DC2\NAK\n\
    \\ACKjob_id\CAN\ETX \SOH(\tR\ENQjobId\DC2\SYN\n\
    \\ACKreason\CAN\EOT \SOH(\tR\ACKreason\DC2I\n\
    \\n\
    \executions\CAN\ENQ \ETX(\v2).temporal.api.common.v1.WorkflowExecutionR\n\
    \executions\DC29\n\
    \\EMmax_operations_per_second\CAN\ACK \SOH(\STXR\SYNmaxOperationsPerSecond\DC2g\n\
    \\NAKtermination_operation\CAN\n\
    \ \SOH(\v20.temporal.api.batch.v1.BatchOperationTerminationH\NULR\DC4terminationOperation\DC2X\n\
    \\DLEsignal_operation\CAN\v \SOH(\v2+.temporal.api.batch.v1.BatchOperationSignalH\NULR\SIsignalOperation\DC2j\n\
    \\SYNcancellation_operation\CAN\f \SOH(\v21.temporal.api.batch.v1.BatchOperationCancellationH\NULR\NAKcancellationOperation\DC2^\n\
    \\DC2deletion_operation\CAN\r \SOH(\v2-.temporal.api.batch.v1.BatchOperationDeletionH\NULR\DC1deletionOperation\DC2U\n\
    \\SIreset_operation\CAN\SO \SOH(\v2*.temporal.api.batch.v1.BatchOperationResetH\NULR\SOresetOperation\DC2\144\SOH\n\
    \!update_workflow_options_operation\CAN\SI \SOH(\v2C.temporal.api.batch.v1.BatchOperationUpdateWorkflowExecutionOptionsH\NULR\RSupdateWorkflowOptionsOperation\DC2z\n\
    \\FSunpause_activities_operation\CAN\DLE \SOH(\v26.temporal.api.batch.v1.BatchOperationUnpauseActivitiesH\NULR\SUBunpauseActivitiesOperationB\v\n\
    \\toperation\"\GS\n\
    \\ESCStartBatchOperationResponse\"\132\SOH\n\
    \\EMStopBatchOperationRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\NAK\n\
    \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\DC2\SYN\n\
    \\ACKreason\CAN\ETX \SOH(\tR\ACKreason\DC2\SUB\n\
    \\bidentity\CAN\EOT \SOH(\tR\bidentity\"\FS\n\
    \\SUBStopBatchOperationResponse\"T\n\
    \\GSDescribeBatchOperationRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\NAK\n\
    \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\"\155\EOT\n\
    \\RSDescribeBatchOperationResponse\DC2P\n\
    \\SOoperation_type\CAN\SOH \SOH(\SO2).temporal.api.enums.v1.BatchOperationTypeR\roperationType\DC2\NAK\n\
    \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\DC2@\n\
    \\ENQstate\CAN\ETX \SOH(\SO2*.temporal.api.enums.v1.BatchOperationStateR\ENQstate\DC29\n\
    \\n\
    \start_time\CAN\EOT \SOH(\v2\SUB.google.protobuf.TimestampR\tstartTime\DC29\n\
    \\n\
    \close_time\CAN\ENQ \SOH(\v2\SUB.google.protobuf.TimestampR\tcloseTime\DC22\n\
    \\NAKtotal_operation_count\CAN\ACK \SOH(\ETXR\DC3totalOperationCount\DC28\n\
    \\CANcomplete_operation_count\CAN\a \SOH(\ETXR\SYNcompleteOperationCount\DC26\n\
    \\ETBfailure_operation_count\CAN\b \SOH(\ETXR\NAKfailureOperationCount\DC2\SUB\n\
    \\bidentity\CAN\t \SOH(\tR\bidentity\DC2\SYN\n\
    \\ACKreason\CAN\n\
    \ \SOH(\tR\ACKreason\"\DEL\n\
    \\SUBListBatchOperationsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\"\151\SOH\n\
    \\ESCListBatchOperationsResponse\DC2P\n\
    \\SOoperation_info\CAN\SOH \ETX(\v2).temporal.api.batch.v1.BatchOperationInfoR\roperationInfo\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\229\SOH\n\
    \\"PollWorkflowExecutionUpdateRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2@\n\
    \\n\
    \update_ref\CAN\STX \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2C\n\
    \\vwait_policy\CAN\EOT \SOH(\v2\".temporal.api.update.v1.WaitPolicyR\n\
    \waitPolicy\"\246\SOH\n\
    \#PollWorkflowExecutionUpdateResponse\DC29\n\
    \\aoutcome\CAN\SOH \SOH(\v2\US.temporal.api.update.v1.OutcomeR\aoutcome\DC2R\n\
    \\ENQstage\CAN\STX \SOH(\SO2<.temporal.api.enums.v1.UpdateWorkflowExecutionLifecycleStageR\ENQstage\DC2@\n\
    \\n\
    \update_ref\CAN\ETX \SOH(\v2!.temporal.api.update.v1.UpdateRefR\tupdateRef\"\245\STX\n\
    \\EMPollNexusTaskQueueRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
    \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2C\n\
    \\n\
    \task_queue\CAN\ETX \SOH(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\DC2u\n\
    \\ESCworker_version_capabilities\CAN\EOT \SOH(\v21.temporal.api.common.v1.WorkerVersionCapabilitiesR\EMworkerVersionCapabilitiesB\STX\CAN\SOH\DC2b\n\
    \\DC2deployment_options\CAN\ACK \SOH(\v23.temporal.api.deployment.v1.WorkerDeploymentOptionsR\DC1deploymentOptions\"\223\SOH\n\
    \\SUBPollNexusTaskQueueResponse\DC2\GS\n\
    \\n\
    \task_token\CAN\SOH \SOH(\fR\ttaskToken\DC28\n\
    \\arequest\CAN\STX \SOH(\v2\RS.temporal.api.nexus.v1.RequestR\arequest\DC2h\n\
    \\ETBpoller_scaling_decision\CAN\ETX \SOH(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\NAKpollerScalingDecision\"\184\SOH\n\
    \ RespondNexusTaskCompletedRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
    \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \task_token\CAN\ETX \SOH(\fR\ttaskToken\DC2;\n\
    \\bresponse\CAN\EOT \SOH(\v2\US.temporal.api.nexus.v1.ResponseR\bresponse\"#\n\
    \!RespondNexusTaskCompletedResponse\"\179\SOH\n\
    \\GSRespondNexusTaskFailedRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\SUB\n\
    \\bidentity\CAN\STX \SOH(\tR\bidentity\DC2\GS\n\
    \\n\
    \task_token\CAN\ETX \SOH(\fR\ttaskToken\DC29\n\
    \\ENQerror\CAN\EOT \SOH(\v2#.temporal.api.nexus.v1.HandlerErrorR\ENQerror\" \n\
    \\RSRespondNexusTaskFailedResponse\"\149\ETX\n\
    \\FSExecuteMultiOperationRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2g\n\
    \\n\
    \operations\CAN\STX \ETX(\v2G.temporal.api.workflowservice.v1.ExecuteMultiOperationRequest.OperationR\n\
    \operations\SUB\237\SOH\n\
    \\tOperation\DC2g\n\
    \\SOstart_workflow\CAN\SOH \SOH(\v2>.temporal.api.workflowservice.v1.StartWorkflowExecutionRequestH\NULR\rstartWorkflow\DC2j\n\
    \\SIupdate_workflow\CAN\STX \SOH(\v2?.temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequestH\NULR\SOupdateWorkflowB\v\n\
    \\toperation\"\246\STX\n\
    \\GSExecuteMultiOperationResponse\DC2e\n\
    \\tresponses\CAN\SOH \ETX(\v2G.temporal.api.workflowservice.v1.ExecuteMultiOperationResponse.ResponseR\tresponses\SUB\237\SOH\n\
    \\bResponse\DC2h\n\
    \\SOstart_workflow\CAN\SOH \SOH(\v2?.temporal.api.workflowservice.v1.StartWorkflowExecutionResponseH\NULR\rstartWorkflow\DC2k\n\
    \\SIupdate_workflow\CAN\STX \SOH(\v2@.temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponseH\NULR\SOupdateWorkflowB\n\
    \\n\
    \\bresponse\"\232\STX\n\
    \\FSUpdateActivityOptionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2T\n\
    \\DLEactivity_options\CAN\EOT \SOH(\v2).temporal.api.activity.v1.ActivityOptionsR\SIactivityOptions\DC2;\n\
    \\vupdate_mask\CAN\ENQ \SOH(\v2\SUB.google.protobuf.FieldMaskR\n\
    \updateMask\DC2\DLE\n\
    \\STXid\CAN\ACK \SOH(\tH\NULR\STXid\DC2\DC4\n\
    \\EOTtype\CAN\a \SOH(\tH\NULR\EOTtypeB\n\
    \\n\
    \\bactivity\"u\n\
    \\GSUpdateActivityOptionsResponse\DC2T\n\
    \\DLEactivity_options\CAN\SOH \SOH(\v2).temporal.api.activity.v1.ActivityOptionsR\SIactivityOptions\"\229\SOH\n\
    \\DC4PauseActivityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
    \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
    \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2\SYN\n\
    \\ACKreason\CAN\ACK \SOH(\tR\ACKreasonB\n\
    \\n\
    \\bactivity\"\ETB\n\
    \\NAKPauseActivityResponse\"\245\STX\n\
    \\SYNUnpauseActivityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
    \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
    \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2!\n\
    \\vunpause_all\CAN\ACK \SOH(\bH\NULR\n\
    \unpauseAll\DC2%\n\
    \\SOreset_attempts\CAN\a \SOH(\bR\rresetAttempts\DC2'\n\
    \\SIreset_heartbeat\CAN\b \SOH(\bR\SOresetHeartbeat\DC21\n\
    \\ACKjitter\CAN\t \SOH(\v2\EM.google.protobuf.DurationR\ACKjitterB\n\
    \\n\
    \\bactivity\"\EM\n\
    \\ETBUnpauseActivityResponse\"\202\STX\n\
    \\DC4ResetActivityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2\DLE\n\
    \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2\DC4\n\
    \\EOTtype\CAN\ENQ \SOH(\tH\NULR\EOTtype\DC2'\n\
    \\SIreset_heartbeat\CAN\ACK \SOH(\bR\SOresetHeartbeat\DC2\US\n\
    \\vkeep_paused\CAN\a \SOH(\bR\n\
    \keepPaused\DC21\n\
    \\ACKjitter\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\ACKjitterB\n\
    \\n\
    \\bactivity\"\ETB\n\
    \\NAKResetActivityResponse\"\206\STX\n\
    \%UpdateWorkflowExecutionOptionsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2X\n\
    \\DC2workflow_execution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\DC1workflowExecution\DC2p\n\
    \\SUBworkflow_execution_options\CAN\ETX \SOH(\v22.temporal.api.workflow.v1.WorkflowExecutionOptionsR\CANworkflowExecutionOptions\DC2;\n\
    \\vupdate_mask\CAN\EOT \SOH(\v2\SUB.google.protobuf.FieldMaskR\n\
    \updateMask\"\154\SOH\n\
    \&UpdateWorkflowExecutionOptionsResponse\DC2p\n\
    \\SUBworkflow_execution_options\CAN\SOH \SOH(\v22.temporal.api.workflow.v1.WorkflowExecutionOptionsR\CANworkflowExecutionOptions\"\129\SOH\n\
    \\EMDescribeDeploymentRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
    \\n\
    \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deployment\"q\n\
    \\SUBDescribeDeploymentResponse\DC2S\n\
    \\SIdeployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SOdeploymentInfo\"`\n\
    \&DescribeWorkerDeploymentVersionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
    \\aversion\CAN\STX \SOH(\tR\aversion\"\167\SOH\n\
    \'DescribeWorkerDeploymentVersionResponse\DC2|\n\
    \\RSworker_deployment_version_info\CAN\SOH \SOH(\v27.temporal.api.deployment.v1.WorkerDeploymentVersionInfoR\ESCworkerDeploymentVersionInfo\"h\n\
    \\USDescribeWorkerDeploymentRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
    \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\"\177\SOH\n\
    \ DescribeWorkerDeploymentResponse\DC2%\n\
    \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2f\n\
    \\SYNworker_deployment_info\CAN\STX \SOH(\v20.temporal.api.deployment.v1.WorkerDeploymentInfoR\DC4workerDeploymentInfo\"\156\SOH\n\
    \\SYNListDeploymentsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\DC2\US\n\
    \\vseries_name\CAN\EOT \SOH(\tR\n\
    \seriesName\"\147\SOH\n\
    \\ETBListDeploymentsResponse\DC2&\n\
    \\SInext_page_token\CAN\SOH \SOH(\fR\rnextPageToken\DC2P\n\
    \\vdeployments\CAN\STX \ETX(\v2..temporal.api.deployment.v1.DeploymentListInfoR\vdeployments\"\254\SOH\n\
    \\ESCSetCurrentDeploymentRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
    \\n\
    \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deployment\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\DC2]\n\
    \\SIupdate_metadata\CAN\EOT \SOH(\v24.temporal.api.deployment.v1.UpdateDeploymentMetadataR\SOupdateMetadata\"\232\SOH\n\
    \\FSSetCurrentDeploymentResponse\DC2b\n\
    \\ETBcurrent_deployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\NAKcurrentDeploymentInfo\DC2d\n\
    \\CANprevious_deployment_info\CAN\STX \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SYNpreviousDeploymentInfo\"\139\STX\n\
    \(SetWorkerDeploymentCurrentVersionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
    \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\CAN\n\
    \\aversion\CAN\ETX \SOH(\tR\aversion\DC2%\n\
    \\SOconflict_token\CAN\EOT \SOH(\fR\rconflictToken\DC2\SUB\n\
    \\bidentity\CAN\ENQ \SOH(\tR\bidentity\DC2;\n\
    \\SUBignore_missing_task_queues\CAN\ACK \SOH(\bR\ETBignoreMissingTaskQueues\"}\n\
    \)SetWorkerDeploymentCurrentVersionResponse\DC2%\n\
    \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2)\n\
    \\DLEprevious_version\CAN\STX \SOH(\tR\SIpreviousVersion\"\171\STX\n\
    \(SetWorkerDeploymentRampingVersionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
    \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\CAN\n\
    \\aversion\CAN\ETX \SOH(\tR\aversion\DC2\RS\n\
    \\n\
    \percentage\CAN\EOT \SOH(\STXR\n\
    \percentage\DC2%\n\
    \\SOconflict_token\CAN\ENQ \SOH(\fR\rconflictToken\DC2\SUB\n\
    \\bidentity\CAN\ACK \SOH(\tR\bidentity\DC2;\n\
    \\SUBignore_missing_task_queues\CAN\a \SOH(\bR\ETBignoreMissingTaskQueues\"\174\SOH\n\
    \)SetWorkerDeploymentRampingVersionResponse\DC2%\n\
    \\SOconflict_token\CAN\SOH \SOH(\fR\rconflictToken\DC2)\n\
    \\DLEprevious_version\CAN\STX \SOH(\tR\SIpreviousVersion\DC2/\n\
    \\DC3previous_percentage\CAN\ETX \SOH(\STXR\DC2previousPercentage\"\129\SOH\n\
    \\FSListWorkerDeploymentsRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ESC\n\
    \\tpage_size\CAN\STX \SOH(\ENQR\bpageSize\DC2&\n\
    \\SInext_page_token\CAN\ETX \SOH(\fR\rnextPageToken\"\142\ETX\n\
    \\GSListWorkerDeploymentsResponse\DC2&\n\
    \\SInext_page_token\CAN\SOH \SOH(\fR\rnextPageToken\DC2\133\SOH\n\
    \\DC2worker_deployments\CAN\STX \ETX(\v2V.temporal.api.workflowservice.v1.ListWorkerDeploymentsResponse.WorkerDeploymentSummaryR\DC1workerDeployments\SUB\188\SOH\n\
    \\ETBWorkerDeploymentSummary\DC2\DC2\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTname\DC2;\n\
    \\vcreate_time\CAN\STX \SOH(\v2\SUB.google.protobuf.TimestampR\n\
    \createTime\DC2P\n\
    \\SOrouting_config\CAN\ETX \SOH(\v2).temporal.api.deployment.v1.RoutingConfigR\rroutingConfig\"\159\SOH\n\
    \$DeleteWorkerDeploymentVersionRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
    \\aversion\CAN\STX \SOH(\tR\aversion\DC2#\n\
    \\rskip_drainage\CAN\ETX \SOH(\bR\fskipDrainage\DC2\SUB\n\
    \\bidentity\CAN\EOT \SOH(\tR\bidentity\"'\n\
    \%DeleteWorkerDeploymentVersionResponse\"\130\SOH\n\
    \\GSDeleteWorkerDeploymentRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2'\n\
    \\SIdeployment_name\CAN\STX \SOH(\tR\SOdeploymentName\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentity\" \n\
    \\RSDeleteWorkerDeploymentResponse\"\250\STX\n\
    \,UpdateWorkerDeploymentVersionMetadataRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\CAN\n\
    \\aversion\CAN\STX \SOH(\tR\aversion\DC2\135\SOH\n\
    \\SOupsert_entries\CAN\ETX \ETX(\v2`.temporal.api.workflowservice.v1.UpdateWorkerDeploymentVersionMetadataRequest.UpsertEntriesEntryR\rupsertEntries\DC2%\n\
    \\SOremove_entries\CAN\EOT \ETX(\tR\rremoveEntries\SUBa\n\
    \\DC2UpsertEntriesEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC25\n\
    \\ENQvalue\CAN\STX \SOH(\v2\US.temporal.api.common.v1.PayloadR\ENQvalue:\STX8\SOH\"x\n\
    \-UpdateWorkerDeploymentVersionMetadataResponse\DC2G\n\
    \\bmetadata\CAN\SOH \SOH(\v2+.temporal.api.deployment.v1.VersionMetadataR\bmetadata\"\\\n\
    \\ESCGetCurrentDeploymentRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\US\n\
    \\vseries_name\CAN\STX \SOH(\tR\n\
    \seriesName\"\130\SOH\n\
    \\FSGetCurrentDeploymentResponse\DC2b\n\
    \\ETBcurrent_deployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\NAKcurrentDeploymentInfo\"\136\SOH\n\
    \ GetDeploymentReachabilityRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2F\n\
    \\n\
    \deployment\CAN\STX \SOH(\v2&.temporal.api.deployment.v1.DeploymentR\n\
    \deployment\"\145\STX\n\
    \!GetDeploymentReachabilityResponse\DC2S\n\
    \\SIdeployment_info\CAN\SOH \SOH(\v2*.temporal.api.deployment.v1.DeploymentInfoR\SOdeploymentInfo\DC2Q\n\
    \\freachability\CAN\STX \SOH(\SO2-.temporal.api.enums.v1.DeploymentReachabilityR\freachability\DC2D\n\
    \\DLElast_update_time\CAN\ETX \SOH(\v2\SUB.google.protobuf.TimestampR\SOlastUpdateTime\"\180\SOH\n\
    \\EMCreateWorkflowRuleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2;\n\
    \\EOTspec\CAN\STX \SOH(\v2'.temporal.api.rules.v1.WorkflowRuleSpecR\EOTspec\DC2\GS\n\
    \\n\
    \force_scan\CAN\ETX \SOH(\bR\tforceScan\DC2\GS\n\
    \\n\
    \request_id\CAN\EOT \SOH(\tR\trequestId\"l\n\
    \\SUBCreateWorkflowRuleResponse\DC27\n\
    \\EOTrule\CAN\SOH \SOH(\v2#.temporal.api.rules.v1.WorkflowRuleR\EOTrule\DC2\NAK\n\
    \\ACKjob_id\CAN\STX \SOH(\tR\ENQjobId\"T\n\
    \\ESCDescribeWorkflowRuleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ETB\n\
    \\arule_id\CAN\STX \SOH(\tR\ACKruleId\"W\n\
    \\FSDescribeWorkflowRuleResponse\DC27\n\
    \\EOTrule\CAN\SOH \SOH(\v2#.temporal.api.rules.v1.WorkflowRuleR\EOTrule\"R\n\
    \\EMDeleteWorkflowRuleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2\ETB\n\
    \\arule_id\CAN\STX \SOH(\tR\ACKruleId\"\FS\n\
    \\SUBDeleteWorkflowRuleResponse\"`\n\
    \\CANListWorkflowRulesRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"~\n\
    \\EMListWorkflowRulesResponse\DC29\n\
    \\ENQrules\CAN\SOH \ETX(\v2#.temporal.api.rules.v1.WorkflowRuleR\ENQrules\DC2&\n\
    \\SInext_page_token\CAN\STX \SOH(\fR\rnextPageToken\"\248\SOH\n\
    \\SUBTriggerWorkflowRuleRequest\DC2\FS\n\
    \\tnamespace\CAN\SOH \SOH(\tR\tnamespace\DC2G\n\
    \\texecution\CAN\STX \SOH(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\DC2\DLE\n\
    \\STXid\CAN\EOT \SOH(\tH\NULR\STXid\DC2=\n\
    \\EOTspec\CAN\ENQ \SOH(\v2'.temporal.api.rules.v1.WorkflowRuleSpecH\NULR\EOTspec\DC2\SUB\n\
    \\bidentity\CAN\ETX \SOH(\tR\bidentityB\ACK\n\
    \\EOTrule\"7\n\
    \\ESCTriggerWorkflowRuleResponse\DC2\CAN\n\
    \\aapplied\CAN\SOH \SOH(\bR\aappliedB\190\SOH\n\
    \\"io.temporal.api.workflowservice.v1B\DC4RequestResponseProtoP\SOHZ5go.temporal.io/api/workflowservice/v1;workflowservice\170\STX!Temporalio.Api.WorkflowService.V1\234\STX$Temporalio::Api::WorkflowService::V1J\203\179\ACK\n\
    \\a\DC2\ENQ\SYN\NUL\233\DC1\SOH\n\
    \\241\b\n\
    \\SOH\f\DC2\ETX\SYN\NUL\DC22\230\b The MIT License\n\
    \\n\
    \ Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.\n\
    \\n\
    \ Permission is hereby granted, free of charge, to any person obtaining a copy\n\
    \ of this software and associated documentation files (the \"Software\"), to deal\n\
    \ in the Software without restriction, including without limitation the rights\n\
    \ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\
    \ copies of the Software, and to permit persons to whom the Software is\n\
    \ furnished to do so, subject to the following conditions:\n\
    \\n\
    \ The above copyright notice and this permission notice shall be included in\n\
    \ all copies or substantial portions of the Software.\n\
    \\n\
    \ THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\
    \ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\
    \ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\
    \ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\
    \ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\
    \ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\
    \ THE SOFTWARE.\n\
    \\n\
    \\b\n\
    \\SOH\STX\DC2\ETX\CAN\NUL(\n\
    \\b\n\
    \\SOH\b\DC2\ETX\SUB\NULL\n\
    \\t\n\
    \\STX\b\v\DC2\ETX\SUB\NULL\n\
    \\b\n\
    \\SOH\b\DC2\ETX\ESC\NUL;\n\
    \\t\n\
    \\STX\b\SOH\DC2\ETX\ESC\NUL;\n\
    \\b\n\
    \\SOH\b\DC2\ETX\FS\NUL\"\n\
    \\t\n\
    \\STX\b\n\
    \\DC2\ETX\FS\NUL\"\n\
    \\b\n\
    \\SOH\b\DC2\ETX\GS\NUL5\n\
    \\t\n\
    \\STX\b\b\DC2\ETX\GS\NUL5\n\
    \\b\n\
    \\SOH\b\DC2\ETX\RS\NUL=\n\
    \\t\n\
    \\STX\b-\DC2\ETX\RS\NUL=\n\
    \\b\n\
    \\SOH\b\DC2\ETX\US\NUL>\n\
    \\t\n\
    \\STX\b%\DC2\ETX\US\NUL>\n\
    \\t\n\
    \\STX\ETX\NUL\DC2\ETX!\NUL5\n\
    \\t\n\
    \\STX\ETX\SOH\DC2\ETX\"\NUL,\n\
    \\t\n\
    \\STX\ETX\STX\DC2\ETX#\NUL.\n\
    \\t\n\
    \\STX\ETX\ETX\DC2\ETX$\NUL/\n\
    \\t\n\
    \\STX\ETX\EOT\DC2\ETX%\NUL2\n\
    \\t\n\
    \\STX\ETX\ENQ\DC2\ETX&\NUL+\n\
    \\t\n\
    \\STX\ETX\ACK\DC2\ETX'\NUL+\n\
    \\t\n\
    \\STX\ETX\a\DC2\ETX(\NUL0\n\
    \\t\n\
    \\STX\ETX\b\DC2\ETX)\NUL0\n\
    \\t\n\
    \\STX\ETX\t\DC2\ETX*\NUL,\n\
    \\t\n\
    \\STX\ETX\n\
    \\DC2\ETX+\NUL0\n\
    \\t\n\
    \\STX\ETX\v\DC2\ETX,\NUL.\n\
    \\t\n\
    \\STX\ETX\f\DC2\ETX-\NUL/\n\
    \\t\n\
    \\STX\ETX\r\DC2\ETX.\NUL0\n\
    \\t\n\
    \\STX\ETX\SO\DC2\ETX/\NUL/\n\
    \\t\n\
    \\STX\ETX\SI\DC2\ETX0\NUL2\n\
    \\t\n\
    \\STX\ETX\DLE\DC2\ETX1\NUL/\n\
    \\t\n\
    \\STX\ETX\DC1\DC2\ETX2\NUL.\n\
    \\t\n\
    \\STX\ETX\DC2\DC2\ETX3\NUL0\n\
    \\t\n\
    \\STX\ETX\DC3\DC2\ETX4\NUL1\n\
    \\t\n\
    \\STX\ETX\DC4\DC2\ETX5\NUL-\n\
    \\t\n\
    \\STX\ETX\NAK\DC2\ETX6\NUL3\n\
    \\t\n\
    \\STX\ETX\SYN\DC2\ETX7\NUL-\n\
    \\t\n\
    \\STX\ETX\ETB\DC2\ETX8\NUL0\n\
    \\t\n\
    \\STX\ETX\CAN\DC2\ETX9\NUL1\n\
    \\t\n\
    \\STX\ETX\EM\DC2\ETX:\NUL.\n\
    \\t\n\
    \\STX\ETX\SUB\DC2\ETX;\NUL/\n\
    \\t\n\
    \\STX\ETX\ESC\DC2\ETX<\NUL-\n\
    \\t\n\
    \\STX\ETX\FS\DC2\ETX=\NUL:\n\
    \\t\n\
    \\STX\ETX\GS\DC2\ETX>\NUL1\n\
    \\t\n\
    \\STX\ETX\RS\DC2\ETX?\NUL-\n\
    \\t\n\
    \\STX\ETX\US\DC2\ETXA\NUL(\n\
    \\t\n\
    \\STX\ETX \DC2\ETXB\NUL*\n\
    \\t\n\
    \\STX\ETX!\DC2\ETXC\NUL)\n\
    \\n\
    \\n\
    \\STX\EOT\NUL\DC2\EOTE\NULV\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\NUL\SOH\DC2\ETXE\b \n\
    \\v\n\
    \\EOT\EOT\NUL\STX\NUL\DC2\ETXF\EOT\EM\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETXF\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETXF\v\DC4\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETXF\ETB\CAN\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\SOH\DC2\ETXG\EOT\ESC\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETXG\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETXG\v\SYN\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETXG\EM\SUB\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\STX\DC2\ETXH\EOT\ESC\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\ENQ\DC2\ETXH\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETXH\v\SYN\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETXH\EM\SUB\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\ETX\DC2\ETXI\EOTE\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\ACK\DC2\ETXI\EOT\FS\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\SOH\DC2\ETXI\GS@\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\ETX\DC2\ETXICD\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\EOT\DC2\ETXJ\EOTO\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\EOT\DC2\ETXJ\EOT\f\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\ACK\DC2\ETXJ\rA\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\SOH\DC2\ETXJBJ\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\ETX\DC2\ETXJMN\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\ENQ\DC2\ETXK\EOT#\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\ENQ\DC2\ETXK\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\SOH\DC2\ETXK\v\RS\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\ETX\DC2\ETXK!\"\n\
    \:\n\
    \\EOT\EOT\NUL\STX\ACK\DC2\ETXM\EOT!\SUB- A key-value map for any customized purpose.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\ACK\DC2\ETXM\EOT\ETB\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\SOH\DC2\ETXM\CAN\FS\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\ETX\DC2\ETXM\US \n\
    \\v\n\
    \\EOT\EOT\NUL\STX\a\DC2\ETXN\EOT\RS\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\ENQ\DC2\ETXN\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\SOH\DC2\ETXN\v\EM\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\ETX\DC2\ETXN\FS\GS\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\b\DC2\ETXO\EOT!\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\ENQ\DC2\ETXO\EOT\b\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\SOH\DC2\ETXO\t\FS\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\ETX\DC2\ETXO\US \n\
    \e\n\
    \\EOT\EOT\NUL\STX\t\DC2\ETXQ\EOTD\SUBX If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\t\ACK\DC2\ETXQ\EOT'\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\t\SOH\DC2\ETXQ(>\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\t\ETX\DC2\ETXQAC\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\n\
    \\DC2\ETXR\EOT%\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\n\
    \\ENQ\DC2\ETXR\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\n\
    \\SOH\DC2\ETXR\v\US\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\n\
    \\ETX\DC2\ETXR\"$\n\
    \e\n\
    \\EOT\EOT\NUL\STX\v\DC2\ETXT\EOTG\SUBX If unspecified (ARCHIVAL_STATE_UNSPECIFIED) then default server configuration is used.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\v\ACK\DC2\ETXT\EOT'\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\v\SOH\DC2\ETXT(A\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\v\ETX\DC2\ETXTDF\n\
    \\v\n\
    \\EOT\EOT\NUL\STX\f\DC2\ETXU\EOT(\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\f\ENQ\DC2\ETXU\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\f\SOH\DC2\ETXU\v\"\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\f\ETX\DC2\ETXU%'\n\
    \\n\
    \\n\
    \\STX\EOT\SOH\DC2\EOTX\NULY\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\SOH\SOH\DC2\ETXX\b!\n\
    \\n\
    \\n\
    \\STX\EOT\STX\DC2\EOT[\NUL_\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\STX\SOH\DC2\ETX[\b\GS\n\
    \\v\n\
    \\EOT\EOT\STX\STX\NUL\DC2\ETX\\\EOT\CAN\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\NUL\ENQ\DC2\ETX\\\EOT\t\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\NUL\SOH\DC2\ETX\\\n\
    \\DC3\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\NUL\ETX\DC2\ETX\\\SYN\ETB\n\
    \\v\n\
    \\EOT\EOT\STX\STX\SOH\DC2\ETX]\EOT\RS\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\SOH\ENQ\DC2\ETX]\EOT\t\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\SOH\SOH\DC2\ETX]\n\
    \\EM\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\SOH\ETX\DC2\ETX]\FS\GS\n\
    \\v\n\
    \\EOT\EOT\STX\STX\STX\DC2\ETX^\EOTC\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\STX\ACK\DC2\ETX^\EOT-\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\STX\SOH\DC2\ETX^.>\n\
    \\f\n\
    \\ENQ\EOT\STX\STX\STX\ETX\DC2\ETX^AB\n\
    \\n\
    \\n\
    \\STX\EOT\ETX\DC2\EOTa\NULd\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\ETX\SOH\DC2\ETXa\b\RS\n\
    \\v\n\
    \\EOT\EOT\ETX\STX\NUL\DC2\ETXb\EOT6\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\NUL\EOT\DC2\ETXb\EOT\f\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\NUL\ACK\DC2\ETXb\r&\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\NUL\SOH\DC2\ETXb'1\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\NUL\ETX\DC2\ETXb45\n\
    \\v\n\
    \\EOT\EOT\ETX\STX\SOH\DC2\ETXc\EOT\RS\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\SOH\ENQ\DC2\ETXc\EOT\t\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\SOH\SOH\DC2\ETXc\n\
    \\EM\n\
    \\f\n\
    \\ENQ\EOT\ETX\STX\SOH\ETX\DC2\ETXc\FS\GS\n\
    \\n\
    \\n\
    \\STX\EOT\EOT\DC2\EOTf\NULi\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\EOT\SOH\DC2\ETXf\b \n\
    \\v\n\
    \\EOT\EOT\EOT\STX\NUL\DC2\ETXg\EOT\EM\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\NUL\ENQ\DC2\ETXg\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\NUL\SOH\DC2\ETXg\v\DC4\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\NUL\ETX\DC2\ETXg\ETB\CAN\n\
    \\v\n\
    \\EOT\EOT\EOT\STX\SOH\DC2\ETXh\EOT\DC2\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\SOH\ENQ\DC2\ETXh\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\SOH\SOH\DC2\ETXh\v\r\n\
    \\f\n\
    \\ENQ\EOT\EOT\STX\SOH\ETX\DC2\ETXh\DLE\DC1\n\
    \\n\
    \\n\
    \\STX\EOT\ENQ\DC2\EOTk\NULt\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\ENQ\SOH\DC2\ETXk\b!\n\
    \\v\n\
    \\EOT\EOT\ENQ\STX\NUL\DC2\ETXl\EOT?\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\NUL\ACK\DC2\ETXl\EOT+\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\NUL\SOH\DC2\ETXl,:\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\NUL\ETX\DC2\ETXl=>\n\
    \\v\n\
    \\EOT\EOT\ENQ\STX\SOH\DC2\ETXm\EOT9\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\SOH\ACK\DC2\ETXm\EOT-\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\SOH\SOH\DC2\ETXm.4\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\SOH\ETX\DC2\ETXm78\n\
    \\v\n\
    \\EOT\EOT\ENQ\STX\STX\DC2\ETXn\EOTR\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\STX\ACK\DC2\ETXn\EOT:\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\STX\SOH\DC2\ETXn;M\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\STX\ETX\DC2\ETXnPQ\n\
    \\v\n\
    \\EOT\EOT\ENQ\STX\ETX\DC2\ETXo\EOT\US\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ETX\ENQ\DC2\ETXo\EOT\t\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ETX\SOH\DC2\ETXo\n\
    \\SUB\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ETX\ETX\DC2\ETXo\GS\RS\n\
    \\v\n\
    \\EOT\EOT\ENQ\STX\EOT\DC2\ETXp\EOT!\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\EOT\ENQ\DC2\ETXp\EOT\b\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\EOT\SOH\DC2\ETXp\t\FS\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\EOT\ETX\DC2\ETXp\US \n\
    \\177\SOH\n\
    \\EOT\EOT\ENQ\STX\ENQ\DC2\ETXs\EOTM\SUB\163\SOH Contains the historical state of failover_versions for the cluster, truncated to contain only the last N\n\
    \ states to ensure that the list does not grow unbounded.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ENQ\EOT\DC2\ETXs\EOT\f\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ENQ\ACK\DC2\ETXs\r7\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ENQ\SOH\DC2\ETXs8H\n\
    \\f\n\
    \\ENQ\EOT\ENQ\STX\ENQ\ETX\DC2\ETXsKL\n\
    \\n\
    \\n\
    \\STX\EOT\ACK\DC2\EOTv\NUL\DEL\SOH\n\
    \\n\
    \\n\
    \\ETX\EOT\ACK\SOH\DC2\ETXv\b\RS\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\NUL\DC2\ETXw\EOT\EM\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\NUL\ENQ\DC2\ETXw\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\NUL\SOH\DC2\ETXw\v\DC4\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\NUL\ETX\DC2\ETXw\ETB\CAN\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\SOH\DC2\ETXx\EOTB\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\SOH\ACK\DC2\ETXx\EOT1\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\SOH\SOH\DC2\ETXx2=\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\SOH\ETX\DC2\ETXx@A\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\STX\DC2\ETXy\EOT9\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\STX\ACK\DC2\ETXy\EOT-\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\STX\SOH\DC2\ETXy.4\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\STX\ETX\DC2\ETXy78\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\ETX\DC2\ETXz\EOTR\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ETX\ACK\DC2\ETXz\EOT:\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ETX\SOH\DC2\ETXz;M\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ETX\ETX\DC2\ETXzPQ\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\EOT\DC2\ETX{\EOT\RS\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\EOT\ENQ\DC2\ETX{\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\EOT\SOH\DC2\ETX{\v\EM\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\EOT\ETX\DC2\ETX{\FS\GS\n\
    \\v\n\
    \\EOT\EOT\ACK\STX\ENQ\DC2\ETX|\EOT!\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ENQ\ENQ\DC2\ETX|\EOT\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ENQ\SOH\DC2\ETX|\v\FS\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ENQ\ETX\DC2\ETX|\US \n\
    \m\n\
    \\EOT\EOT\ACK\STX\ACK\DC2\ETX~\EOT\US\SUB` promote local namespace to global namespace. Ignored if namespace is already global namespace.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ACK\ENQ\DC2\ETX~\EOT\b\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ACK\SOH\DC2\ETX~\t\SUB\n\
    \\f\n\
    \\ENQ\EOT\ACK\STX\ACK\ETX\DC2\ETX~\GS\RS\n\
    \\f\n\
    \\STX\EOT\a\DC2\ACK\129\SOH\NUL\135\SOH\SOH\n\
    \\v\n\
    \\ETX\EOT\a\SOH\DC2\EOT\129\SOH\b\US\n\
    \\f\n\
    \\EOT\EOT\a\STX\NUL\DC2\EOT\130\SOH\EOT?\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\ACK\DC2\EOT\130\SOH\EOT+\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\SOH\DC2\EOT\130\SOH,:\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\ETX\DC2\EOT\130\SOH=>\n\
    \\f\n\
    \\EOT\EOT\a\STX\SOH\DC2\EOT\131\SOH\EOT9\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\ACK\DC2\EOT\131\SOH\EOT-\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\SOH\DC2\EOT\131\SOH.4\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\ETX\DC2\EOT\131\SOH78\n\
    \\f\n\
    \\EOT\EOT\a\STX\STX\DC2\EOT\132\SOH\EOTR\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\ACK\DC2\EOT\132\SOH\EOT:\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\SOH\DC2\EOT\132\SOH;M\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\ETX\DC2\EOT\132\SOHPQ\n\
    \\f\n\
    \\EOT\EOT\a\STX\ETX\DC2\EOT\133\SOH\EOT\US\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\ENQ\DC2\EOT\133\SOH\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\SOH\DC2\EOT\133\SOH\n\
    \\SUB\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\ETX\DC2\EOT\133\SOH\GS\RS\n\
    \\f\n\
    \\EOT\EOT\a\STX\EOT\DC2\EOT\134\SOH\EOT!\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\ENQ\DC2\EOT\134\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\SOH\DC2\EOT\134\SOH\t\FS\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\ETX\DC2\EOT\134\SOH\US \n\
    \\ESC\n\
    \\STX\EOT\b\DC2\ACK\138\SOH\NUL\141\SOH\SOH\SUB\r Deprecated.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\b\SOH\DC2\EOT\138\SOH\b!\n\
    \\f\n\
    \\EOT\EOT\b\STX\NUL\DC2\EOT\139\SOH\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\ENQ\DC2\EOT\139\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\SOH\DC2\EOT\139\SOH\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\ETX\DC2\EOT\139\SOH\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\b\STX\SOH\DC2\EOT\140\SOH\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\ENQ\DC2\EOT\140\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\SOH\DC2\EOT\140\SOH\v\EM\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\ETX\DC2\EOT\140\SOH\FS\GS\n\
    \\ESC\n\
    \\STX\EOT\t\DC2\ACK\144\SOH\NUL\145\SOH\SOH\SUB\r Deprecated.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\t\SOH\DC2\EOT\144\SOH\b\"\n\
    \\f\n\
    \\STX\EOT\n\
    \\DC2\ACK\147\SOH\NUL\216\SOH\SOH\n\
    \\v\n\
    \\ETX\EOT\n\
    \\SOH\DC2\EOT\147\SOH\b%\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\NUL\DC2\EOT\148\SOH\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\ENQ\DC2\EOT\148\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\SOH\DC2\EOT\148\SOH\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\ETX\DC2\EOT\148\SOH\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\SOH\DC2\EOT\149\SOH\EOT\ESC\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\ENQ\DC2\EOT\149\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\SOH\DC2\EOT\149\SOH\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\ETX\DC2\EOT\149\SOH\EM\SUB\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\STX\DC2\EOT\150\SOH\EOT:\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\STX\ACK\DC2\EOT\150\SOH\EOT'\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\STX\SOH\DC2\EOT\150\SOH(5\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\STX\ETX\DC2\EOT\150\SOH89\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\ETX\DC2\EOT\151\SOH\EOT7\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETX\ACK\DC2\EOT\151\SOH\EOT'\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETX\SOH\DC2\EOT\151\SOH(2\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETX\ETX\DC2\EOT\151\SOH56\n\
    \m\n\
    \\EOT\EOT\n\
    \\STX\EOT\DC2\EOT\153\SOH\EOT.\SUB_ Serialized arguments to the workflow. These are passed as arguments to the workflow function.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EOT\ACK\DC2\EOT\153\SOH\EOT#\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EOT\SOH\DC2\EOT\153\SOH$)\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EOT\ETX\DC2\EOT\153\SOH,-\n\
    \W\n\
    \\EOT\EOT\n\
    \\STX\ENQ\DC2\EOT\155\SOH\EOT<\SUBI Total workflow execution timeout including retries and continue as new.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ENQ\ACK\DC2\EOT\155\SOH\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ENQ\SOH\DC2\EOT\155\SOH\GS7\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ENQ\ETX\DC2\EOT\155\SOH:;\n\
    \1\n\
    \\EOT\EOT\n\
    \\STX\ACK\DC2\EOT\157\SOH\EOT6\SUB# Timeout of a single workflow run.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ACK\ACK\DC2\EOT\157\SOH\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ACK\SOH\DC2\EOT\157\SOH\GS1\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ACK\ETX\DC2\EOT\157\SOH45\n\
    \2\n\
    \\EOT\EOT\n\
    \\STX\a\DC2\EOT\159\SOH\EOT7\SUB$ Timeout of a single workflow task.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\a\ACK\DC2\EOT\159\SOH\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\a\SOH\DC2\EOT\159\SOH\GS2\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\a\ETX\DC2\EOT\159\SOH56\n\
    \E\n\
    \\EOT\EOT\n\
    \\STX\b\DC2\EOT\161\SOH\EOT\CAN\SUB7 The identity of the client who initiated this request\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\b\ENQ\DC2\EOT\161\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\b\SOH\DC2\EOT\161\SOH\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\b\ETX\DC2\EOT\161\SOH\SYN\ETB\n\
    \M\n\
    \\EOT\EOT\n\
    \\STX\t\DC2\EOT\163\SOH\EOT\ESC\SUB? A unique identifier for this start request. Typically UUIDv4.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\t\ENQ\DC2\EOT\163\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\t\SOH\DC2\EOT\163\SOH\v\NAK\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\t\ETX\DC2\EOT\163\SOH\CAN\SUB\n\
    \\142\STX\n\
    \\EOT\EOT\n\
    \\STX\n\
    \\DC2\EOT\168\SOH\EOTN\SUB\255\SOH Defines whether to allow re-using the workflow id from a previously *closed* workflow.\n\
    \ The default policy is WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.\n\
    \\n\
    \ See `workflow_id_conflict_policy` for handling a workflow id duplication with a *running* workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\n\
    \\ACK\DC2\EOT\168\SOH\EOT/\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\n\
    \\SOH\DC2\EOT\168\SOH0H\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\n\
    \\ETX\DC2\EOT\168\SOHKM\n\
    \\244\SOH\n\
    \\EOT\EOT\n\
    \\STX\v\DC2\EOT\173\SOH\EOTT\SUB\229\SOH Defines how to resolve a workflow id conflict with a *running* workflow.\n\
    \ The default policy is WORKFLOW_ID_CONFLICT_POLICY_FAIL.\n\
    \\n\
    \ See `workflow_id_reuse_policy` for handling a workflow id duplication with a *closed* workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\v\ACK\DC2\EOT\173\SOH\EOT2\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\v\SOH\DC2\EOT\173\SOH3N\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\v\ETX\DC2\EOT\173\SOHQS\n\
    \b\n\
    \\EOT\EOT\n\
    \\STX\f\DC2\EOT\175\SOH\EOT9\SUBT The retry policy for the workflow. Will never exceed `workflow_execution_timeout`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\f\ACK\DC2\EOT\175\SOH\EOT&\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\f\SOH\DC2\EOT\175\SOH'3\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\f\ETX\DC2\EOT\175\SOH68\n\
    \V\n\
    \\EOT\EOT\n\
    \\STX\r\DC2\EOT\177\SOH\EOT\RS\SUBH See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\r\ENQ\DC2\EOT\177\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\r\SOH\DC2\EOT\177\SOH\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\r\ETX\DC2\EOT\177\SOH\ESC\GS\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\SO\DC2\EOT\178\SOH\EOT*\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SO\ACK\DC2\EOT\178\SOH\EOT\US\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SO\SOH\DC2\EOT\178\SOH $\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SO\ETX\DC2\EOT\178\SOH')\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\SI\DC2\EOT\179\SOH\EOTC\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SI\ACK\DC2\EOT\179\SOH\EOT+\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SI\SOH\DC2\EOT\179\SOH,=\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SI\ETX\DC2\EOT\179\SOH@B\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\DLE\DC2\EOT\180\SOH\EOT.\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DLE\ACK\DC2\EOT\180\SOH\EOT!\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DLE\SOH\DC2\EOT\180\SOH\"(\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DLE\ETX\DC2\EOT\180\SOH+-\n\
    \\221\STX\n\
    \\EOT\EOT\n\
    \\STX\DC1\DC2\EOT\185\SOH\EOT&\SUB\206\STX Request to get the first workflow task inline in the response bypassing matching service and worker polling.\n\
    \ If set to `true` the caller is expected to have a worker available and capable of processing the task.\n\
    \ The returned task will be marked as started and is expected to be completed by the specified\n\
    \ `workflow_task_timeout`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC1\ENQ\DC2\EOT\185\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC1\SOH\DC2\EOT\185\SOH\t \n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC1\ETX\DC2\EOT\185\SOH#%\n\
    \\162\STX\n\
    \\EOT\EOT\n\
    \\STX\DC2\DC2\EOT\190\SOH\EOT;\SUB\147\STX These values will be available as ContinuedFailure and LastCompletionResult in the\n\
    \ WorkflowExecutionStarted event and through SDKs. The are currently only used by the\n\
    \ server itself (for the schedules feature) and are not intended to be exposed in\n\
    \ StartWorkflowExecution.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC2\ACK\DC2\EOT\190\SOH\EOT#\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC2\SOH\DC2\EOT\190\SOH$5\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC2\ETX\DC2\EOT\190\SOH8:\n\
    \\f\n\
    \\EOT\EOT\n\
    \\STX\DC3\DC2\EOT\191\SOH\EOT@\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC3\ACK\DC2\EOT\191\SOH\EOT#\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC3\SOH\DC2\EOT\191\SOH$:\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC3\ETX\DC2\EOT\191\SOH=?\n\
    \\238\SOH\n\
    \\EOT\EOT\n\
    \\STX\DC4\DC2\EOT\195\SOH\EOT7\SUB\223\SOH Time to wait before dispatching the first workflow task. Cannot be used with `cron_schedule`.\n\
    \ If the workflow gets a signal before the delay, a workflow task will be dispatched and the rest\n\
    \ of the delay will be ignored.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC4\ACK\DC2\EOT\195\SOH\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC4\SOH\DC2\EOT\195\SOH\GS1\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\DC4\ETX\DC2\EOT\195\SOH46\n\
    \\143\STX\n\
    \\EOT\EOT\n\
    \\STX\NAK\DC2\EOT\199\SOH\EOTG\SUB\128\STX Callbacks to be called by the server when this workflow reaches a terminal state.\n\
    \ If the workflow continues-as-new, these callbacks will be carried over to the new execution.\n\
    \ Callback addresses must be whitelisted in the server's dynamic configuration.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NAK\EOT\DC2\EOT\199\SOH\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NAK\ACK\DC2\EOT\199\SOH\r,\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NAK\SOH\DC2\EOT\199\SOH-A\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NAK\ETX\DC2\EOT\199\SOHDF\n\
    \\208\SOH\n\
    \\EOT\EOT\n\
    \\STX\SYN\DC2\EOT\203\SOH\EOT8\SUB\193\SOH Metadata on the workflow if it is started. This is carried over to the WorkflowExecutionInfo\n\
    \ for use by user interfaces to display the fixed as-of-start summary and details of the\n\
    \ workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SYN\ACK\DC2\EOT\203\SOH\EOT$\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SYN\SOH\DC2\EOT\203\SOH%2\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SYN\ETX\DC2\EOT\203\SOH57\n\
    \9\n\
    \\EOT\EOT\n\
    \\STX\ETB\DC2\EOT\205\SOH\EOT4\SUB+ Links to be associated with the workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETB\EOT\DC2\EOT\205\SOH\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETB\ACK\DC2\EOT\205\SOH\r(\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETB\SOH\DC2\EOT\205\SOH).\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\ETB\ETX\DC2\EOT\205\SOH13\n\
    \\205\SOH\n\
    \\EOT\EOT\n\
    \\STX\CAN\DC2\EOT\208\SOH\EOTI\SUB\190\SOH If set, takes precedence over the Versioning Behavior sent by the SDK on Workflow Task completion.\n\
    \ To unset the override after the workflow is running, use UpdateWorkflowExecutionOptions.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\CAN\ACK\DC2\EOT\208\SOH\EOT/\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\CAN\SOH\DC2\EOT\208\SOH0C\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\CAN\ETX\DC2\EOT\208\SOHFH\n\
    \\234\STX\n\
    \\EOT\EOT\n\
    \\STX\EM\DC2\EOT\213\SOH\EOTH\SUB\219\STX Defines actions to be done to the existing running workflow when the conflict policy\n\
    \ WORKFLOW_ID_CONFLICT_POLICY_USE_EXISTING is used. If not set (ie., nil value) or set to a\n\
    \ empty object (ie., all options with default value), it won't do anything to the existing\n\
    \ running workflow. If set, it will add a history event to the running workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EM\ACK\DC2\EOT\213\SOH\EOT.\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EM\SOH\DC2\EOT\213\SOH/B\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\EM\ETX\DC2\EOT\213\SOHEG\n\
    \!\n\
    \\EOT\EOT\n\
    \\STX\SUB\DC2\EOT\215\SOH\EOT2\SUB\DC3 Priority metadata\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SUB\ACK\DC2\EOT\215\SOH\EOT#\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SUB\SOH\DC2\EOT\215\SOH$,\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SUB\ETX\DC2\EOT\215\SOH/1\n\
    \\f\n\
    \\STX\EOT\v\DC2\ACK\218\SOH\NUL\227\SOH\SOH\n\
    \\v\n\
    \\ETX\EOT\v\SOH\DC2\EOT\218\SOH\b&\n\
    \r\n\
    \\EOT\EOT\v\STX\NUL\DC2\EOT\220\SOH\EOT\SYN\SUBd The run id of the workflow that was started - or used (via WorkflowIdConflictPolicy USE_EXISTING).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\v\STX\NUL\ENQ\DC2\EOT\220\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\v\STX\NUL\SOH\DC2\EOT\220\SOH\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\v\STX\NUL\ETX\DC2\EOT\220\SOH\DC4\NAK\n\
    \4\n\
    \\EOT\EOT\v\STX\SOH\DC2\EOT\222\SOH\EOT\NAK\SUB& If true, a new workflow was started.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\v\STX\SOH\ENQ\DC2\EOT\222\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\v\STX\SOH\SOH\DC2\EOT\222\SOH\t\DLE\n\
    \\r\n\
    \\ENQ\EOT\v\STX\SOH\ETX\DC2\EOT\222\SOH\DC3\DC4\n\
    \\255\SOH\n\
    \\EOT\EOT\v\STX\STX\DC2\EOT\226\SOH\EOT:\SUB\240\SOH When `request_eager_execution` is set on the `StartWorkflowExecutionRequest`, the server - if supported - will\n\
    \ return the first workflow task to be eagerly executed.\n\
    \ The caller is expected to have a worker available to process the task.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\v\STX\STX\ACK\DC2\EOT\226\SOH\EOT!\n\
    \\r\n\
    \\ENQ\EOT\v\STX\STX\SOH\DC2\EOT\226\SOH\"5\n\
    \\r\n\
    \\ENQ\EOT\v\STX\STX\ETX\DC2\EOT\226\SOH89\n\
    \\f\n\
    \\STX\EOT\f\DC2\ACK\229\SOH\NUL\243\SOH\SOH\n\
    \\v\n\
    \\ETX\EOT\f\SOH\DC2\EOT\229\SOH\b*\n\
    \\f\n\
    \\EOT\EOT\f\STX\NUL\DC2\EOT\230\SOH\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\ENQ\DC2\EOT\230\SOH\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\SOH\DC2\EOT\230\SOH\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\ETX\DC2\EOT\230\SOH\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\f\STX\SOH\DC2\EOT\231\SOH\EOT;\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\ACK\DC2\EOT\231\SOH\EOT,\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\SOH\DC2\EOT\231\SOH-6\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\ETX\DC2\EOT\231\SOH9:\n\
    \\f\n\
    \\EOT\EOT\f\STX\STX\DC2\EOT\232\SOH\EOT \n\
    \\r\n\
    \\ENQ\EOT\f\STX\STX\ENQ\DC2\EOT\232\SOH\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\f\STX\STX\SOH\DC2\EOT\232\SOH\n\
    \\ESC\n\
    \\r\n\
    \\ENQ\EOT\f\STX\STX\ETX\DC2\EOT\232\SOH\RS\US\n\
    \\164\SOH\n\
    \\EOT\EOT\f\STX\ETX\DC2\EOT\235\SOH\EOT\RS\SUB\149\SOH If a `GetWorkflowExecutionHistoryResponse` or a `PollWorkflowTaskQueueResponse` had one of\n\
    \ these, it should be passed here to fetch the next page.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ETX\ENQ\DC2\EOT\235\SOH\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ETX\SOH\DC2\EOT\235\SOH\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ETX\ETX\DC2\EOT\235\SOH\FS\GS\n\
    \\158\SOH\n\
    \\EOT\EOT\f\STX\EOT\DC2\EOT\238\SOH\EOT\FS\SUB\143\SOH If set to true, the RPC call will not resolve until there is a new event which matches\n\
    \ the `history_event_filter_type`, or a timeout is hit.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\EOT\ENQ\DC2\EOT\238\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\f\STX\EOT\SOH\DC2\EOT\238\SOH\t\ETB\n\
    \\r\n\
    \\ENQ\EOT\f\STX\EOT\ETX\DC2\EOT\238\SOH\SUB\ESC\n\
    \\133\SOH\n\
    \\EOT\EOT\f\STX\ENQ\DC2\EOT\241\SOH\EOTO\SUBw Filter returned events such that they match the specified filter type.\n\
    \ Default: HISTORY_EVENT_FILTER_TYPE_ALL_EVENT.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ENQ\ACK\DC2\EOT\241\SOH\EOT0\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ENQ\SOH\DC2\EOT\241\SOH1J\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ENQ\ETX\DC2\EOT\241\SOHMN\n\
    \\f\n\
    \\EOT\EOT\f\STX\ACK\DC2\EOT\242\SOH\EOT\ESC\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ACK\ENQ\DC2\EOT\242\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ACK\SOH\DC2\EOT\242\SOH\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\f\STX\ACK\ETX\DC2\EOT\242\SOH\EM\SUB\n\
    \\f\n\
    \\STX\EOT\r\DC2\ACK\245\SOH\NUL\253\SOH\SOH\n\
    \\v\n\
    \\ETX\EOT\r\SOH\DC2\EOT\245\SOH\b+\n\
    \\f\n\
    \\EOT\EOT\r\STX\NUL\DC2\EOT\246\SOH\EOT0\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\ACK\DC2\EOT\246\SOH\EOT#\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\SOH\DC2\EOT\246\SOH$+\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\ETX\DC2\EOT\246\SOH./\n\
    \\196\SOH\n\
    \\EOT\EOT\r\STX\SOH\DC2\EOT\249\SOH\EOT=\SUB\181\SOH Raw history is an alternate representation of history that may be returned if configured on\n\
    \ the frontend. This is not supported by all SDKs. Either this or `history` will be set.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\EOT\DC2\EOT\249\SOH\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\ACK\DC2\EOT\249\SOH\r,\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\SOH\DC2\EOT\249\SOH-8\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\ETX\DC2\EOT\249\SOH;<\n\
    \`\n\
    \\EOT\EOT\r\STX\STX\DC2\EOT\251\SOH\EOT\RS\SUBR Will be set if there are more history events than were included in this response\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\ENQ\DC2\EOT\251\SOH\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\SOH\DC2\EOT\251\SOH\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\ETX\DC2\EOT\251\SOH\FS\GS\n\
    \\f\n\
    \\EOT\EOT\r\STX\ETX\DC2\EOT\252\SOH\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\ENQ\DC2\EOT\252\SOH\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\SOH\DC2\EOT\252\SOH\t\DC1\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\ETX\DC2\EOT\252\SOH\DC4\NAK\n\
    \\f\n\
    \\STX\EOT\SO\DC2\ACK\255\SOH\NUL\132\STX\SOH\n\
    \\v\n\
    \\ETX\EOT\SO\SOH\DC2\EOT\255\SOH\b1\n\
    \\f\n\
    \\EOT\EOT\SO\STX\NUL\DC2\EOT\128\STX\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\ENQ\DC2\EOT\128\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\SOH\DC2\EOT\128\STX\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\ETX\DC2\EOT\128\STX\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\SO\STX\SOH\DC2\EOT\129\STX\EOT;\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\ACK\DC2\EOT\129\STX\EOT,\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\SOH\DC2\EOT\129\STX-6\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\ETX\DC2\EOT\129\STX9:\n\
    \\f\n\
    \\EOT\EOT\SO\STX\STX\DC2\EOT\130\STX\EOT \n\
    \\r\n\
    \\ENQ\EOT\SO\STX\STX\ENQ\DC2\EOT\130\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\STX\SOH\DC2\EOT\130\STX\n\
    \\ESC\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\STX\ETX\DC2\EOT\130\STX\RS\US\n\
    \\f\n\
    \\EOT\EOT\SO\STX\ETX\DC2\EOT\131\STX\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\ETX\ENQ\DC2\EOT\131\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\ETX\SOH\DC2\EOT\131\STX\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\ETX\ETX\DC2\EOT\131\STX\FS\GS\n\
    \\f\n\
    \\STX\EOT\SI\DC2\ACK\134\STX\NUL\138\STX\SOH\n\
    \\v\n\
    \\ETX\EOT\SI\SOH\DC2\EOT\134\STX\b2\n\
    \\f\n\
    \\EOT\EOT\SI\STX\NUL\DC2\EOT\135\STX\EOT0\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\ACK\DC2\EOT\135\STX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\SOH\DC2\EOT\135\STX$+\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\ETX\DC2\EOT\135\STX./\n\
    \`\n\
    \\EOT\EOT\SI\STX\SOH\DC2\EOT\137\STX\EOT\RS\SUBR Will be set if there are more history events than were included in this response\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\ENQ\DC2\EOT\137\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\SOH\DC2\EOT\137\STX\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\ETX\DC2\EOT\137\STX\FS\GS\n\
    \\f\n\
    \\STX\EOT\DLE\DC2\ACK\140\STX\NUL\156\STX\SOH\n\
    \\v\n\
    \\ETX\EOT\DLE\SOH\DC2\EOT\140\STX\b$\n\
    \\f\n\
    \\EOT\EOT\DLE\STX\NUL\DC2\EOT\141\STX\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\ENQ\DC2\EOT\141\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\SOH\DC2\EOT\141\STX\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\ETX\DC2\EOT\141\STX\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\DLE\STX\SOH\DC2\EOT\142\STX\EOT7\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\ACK\DC2\EOT\142\STX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\SOH\DC2\EOT\142\STX(2\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\ETX\DC2\EOT\142\STX56\n\
    \P\n\
    \\EOT\EOT\DLE\STX\STX\DC2\EOT\144\STX\EOT\CAN\SUBB The identity of the worker/client who is polling this task queue\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\ENQ\DC2\EOT\144\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\SOH\DC2\EOT\144\STX\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\ETX\DC2\EOT\144\STX\SYN\ETB\n\
    \\131\STX\n\
    \\EOT\EOT\DLE\STX\ETX\DC2\EOT\148\STX\EOT\US\SUB\244\SOH DEPRECATED since 1.21 - use `worker_version_capabilities` instead.\n\
    \ Each worker process should provide an ID unique to the specific set of code it is running\n\
    \ \"checksum\" in this field name isn't very accurate, it should be though of as an id.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\ENQ\DC2\EOT\148\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\SOH\DC2\EOT\148\STX\v\SUB\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\ETX\DC2\EOT\148\STX\GS\RS\n\
    \\220\SOH\n\
    \\EOT\EOT\DLE\STX\EOT\DC2\EOT\152\STX\EOTi\SUB\205\SOH Information about this worker's build identifier and if it is choosing to use the versioning\n\
    \ feature. See the `WorkerVersionCapabilities` docstring for more.\n\
    \ Deprecated. Replaced by deployment_options.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\ACK\DC2\EOT\152\STX\EOT4\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\SOH\DC2\EOT\152\STX5P\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\ETX\DC2\EOT\152\STXST\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\b\DC2\EOT\152\STXUh\n\
    \\SO\n\
    \\ACK\EOT\DLE\STX\EOT\b\ETX\DC2\EOT\152\STXVg\n\
    \\172\SOH\n\
    \\EOT\EOT\DLE\STX\ENQ\DC2\EOT\155\STX\EOTN\SUB\157\SOH Worker deployment options that user has set in the worker.\n\
    \ Experimental. Worker Deployments are experimental and might significantly change in the future.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\ACK\DC2\EOT\155\STX\EOT6\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\SOH\DC2\EOT\155\STX7I\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\ETX\DC2\EOT\155\STXLM\n\
    \\f\n\
    \\STX\EOT\DC1\DC2\ACK\158\STX\NUL\210\STX\SOH\n\
    \\v\n\
    \\ETX\EOT\DC1\SOH\DC2\EOT\158\STX\b%\n\
    \1\n\
    \\EOT\EOT\DC1\STX\NUL\DC2\EOT\160\STX\EOT\EM\SUB# A unique identifier for this task\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\ENQ\DC2\EOT\160\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\SOH\DC2\EOT\160\STX\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\ETX\DC2\EOT\160\STX\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\DC1\STX\SOH\DC2\EOT\161\STX\EOTD\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\ACK\DC2\EOT\161\STX\EOT,\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\SOH\DC2\EOT\161\STX-?\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\ETX\DC2\EOT\161\STXBC\n\
    \\f\n\
    \\EOT\EOT\DC1\STX\STX\DC2\EOT\162\STX\EOT:\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\ACK\DC2\EOT\162\STX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\SOH\DC2\EOT\162\STX(5\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\ETX\DC2\EOT\162\STX89\n\
    \\151\SOH\n\
    \\EOT\EOT\DC1\STX\ETX\DC2\EOT\165\STX\EOT(\SUB\136\SOH The last workflow task started event which was processed by some worker for this execution.\n\
    \ Will be zero if no task has ever started.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ETX\ENQ\DC2\EOT\165\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ETX\SOH\DC2\EOT\165\STX\n\
    \#\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ETX\ETX\DC2\EOT\165\STX&'\n\
    \\166\STX\n\
    \\EOT\EOT\DC1\STX\EOT\DC2\EOT\170\STX\EOT\US\SUB\151\STX The id of the most recent workflow task started event, which will have been generated as a\n\
    \ result of this poll request being served. Will be zero if the task\n\
    \ does not contain any events which would advance history (no new WFT started).\n\
    \ Currently this can happen for queries.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\EOT\ENQ\DC2\EOT\170\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\EOT\SOH\DC2\EOT\170\STX\n\
    \\SUB\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\EOT\ETX\DC2\EOT\170\STX\GS\RS\n\
    \Z\n\
    \\EOT\EOT\DC1\STX\ENQ\DC2\EOT\172\STX\EOT\SYN\SUBL Starting at 1, the number of attempts to complete this task by any worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ENQ\ENQ\DC2\EOT\172\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ENQ\SOH\DC2\EOT\172\STX\n\
    \\DC1\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ENQ\ETX\DC2\EOT\172\STX\DC4\NAK\n\
    \\205\EOT\n\
    \\EOT\EOT\DC1\STX\ACK\DC2\EOT\183\STX\EOT!\SUB\190\EOT A hint that there are more tasks already present in this task queue\n\
    \ partition. Can be used to prioritize draining a sticky queue.\n\
    \\n\
    \ Specifically, the returned number is the number of tasks remaining in\n\
    \ the in-memory buffer for this partition, which is currently capped at\n\
    \ 1000. Because sticky queues only have one partition, this number is\n\
    \ more useful when draining them. Normal queues, typically having more than one\n\
    \ partition, will return a number representing only some portion of the\n\
    \ overall backlog. Subsequent RPCs may not hit the same partition as\n\
    \ this call.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ACK\ENQ\DC2\EOT\183\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ACK\SOH\DC2\EOT\183\STX\n\
    \\FS\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\ACK\ETX\DC2\EOT\183\STX\US \n\
    \\215\SOH\n\
    \\EOT\EOT\DC1\STX\a\DC2\EOT\187\STX\EOT0\SUB\200\SOH The history for this workflow, which will either be complete or partial. Partial histories\n\
    \ are sent to workers who have signaled that they are using a sticky queue when completing\n\
    \ a workflow task.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\a\ACK\DC2\EOT\187\STX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\a\SOH\DC2\EOT\187\STX$+\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\a\ETX\DC2\EOT\187\STX./\n\
    \\164\SOH\n\
    \\EOT\EOT\DC1\STX\b\DC2\EOT\190\STX\EOT\RS\SUB\149\SOH Will be set if there are more history events than were included in this response. Such events\n\
    \ should be fetched via `GetWorkflowExecutionHistory`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\b\ENQ\DC2\EOT\190\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\b\SOH\DC2\EOT\190\STX\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\b\ETX\DC2\EOT\190\STX\FS\GS\n\
    \\210\STX\n\
    \\EOT\EOT\DC1\STX\t\DC2\EOT\195\STX\EOT3\SUB\195\STX Legacy queries appear in this field. The query must be responded to via\n\
    \ `RespondQueryTaskCompleted`. If the workflow is already closed (queries are permitted on\n\
    \ closed workflows) then the `history` field will be populated with the entire history. It\n\
    \ may also be populated if this task originates on a non-sticky queue.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\t\ACK\DC2\EOT\195\STX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\t\SOH\DC2\EOT\195\STX(-\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\t\ETX\DC2\EOT\195\STX02\n\
    \\180\SOH\n\
    \\EOT\EOT\DC1\STX\n\
    \\DC2\EOT\198\STX\EOTK\SUB\165\SOH The task queue this task originated from, which will always be the original non-sticky name\n\
    \ for the queue, even if this response came from polling a sticky queue.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\n\
    \\ACK\DC2\EOT\198\STX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\n\
    \\SOH\DC2\EOT\198\STX(E\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\n\
    \\ETX\DC2\EOT\198\STXHJ\n\
    \:\n\
    \\EOT\EOT\DC1\STX\v\DC2\EOT\200\STX\EOT2\SUB, When this task was scheduled by the server\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\v\ACK\DC2\EOT\200\STX\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\v\SOH\DC2\EOT\200\STX\RS,\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\v\ETX\DC2\EOT\200\STX/1\n\
    \h\n\
    \\EOT\EOT\DC1\STX\f\DC2\EOT\202\STX\EOT0\SUBZ When the current workflow task started event was generated, meaning the current attempt.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\f\ACK\DC2\EOT\202\STX\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\f\SOH\DC2\EOT\202\STX\RS*\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\f\ETX\DC2\EOT\202\STX-/\n\
    \\175\SOH\n\
    \\EOT\EOT\DC1\STX\r\DC2\EOT\205\STX\EOTB\SUB\160\SOH Queries that should be executed after applying the history in this task. Responses should be\n\
    \ attached to `RespondWorkflowTaskCompletedRequest::query_results`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\r\ACK\DC2\EOT\205\STX\EOT4\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\r\SOH\DC2\EOT\205\STX5<\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\r\ETX\DC2\EOT\205\STX?A\n\
    \F\n\
    \\EOT\EOT\DC1\STX\SO\DC2\EOT\207\STX\EOT<\SUB8 Protocol messages piggybacking on a WFT as a transport\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SO\EOT\DC2\EOT\207\STX\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SO\ACK\DC2\EOT\207\STX\r-\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SO\SOH\DC2\EOT\207\STX.6\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SO\ETX\DC2\EOT\207\STX9;\n\
    \V\n\
    \\EOT\EOT\DC1\STX\SI\DC2\EOT\209\STX\EOTQ\SUBH Server-advised information the SDK may use to adjust its poller count.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SI\ACK\DC2\EOT\209\STX\EOT3\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SI\SOH\DC2\EOT\209\STX4K\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SI\ETX\DC2\EOT\209\STXNP\n\
    \\f\n\
    \\STX\EOT\DC2\DC2\ACK\212\STX\NUL\142\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\DC2\SOH\DC2\EOT\212\STX\b+\n\
    \M\n\
    \\EOT\EOT\DC2\STX\NUL\DC2\EOT\214\STX\EOT\EM\SUB? The task token as received in `PollWorkflowTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\ENQ\DC2\EOT\214\STX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\SOH\DC2\EOT\214\STX\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\ETX\DC2\EOT\214\STX\ETB\CAN\n\
    \g\n\
    \\EOT\EOT\DC2\STX\SOH\DC2\EOT\216\STX\EOT:\SUBY A list of commands generated when driving the workflow code in response to the new task\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\EOT\DC2\EOT\216\STX\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\ACK\DC2\EOT\216\STX\r,\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\SOH\DC2\EOT\216\STX-5\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\ETX\DC2\EOT\216\STX89\n\
    \1\n\
    \\EOT\EOT\DC2\STX\STX\DC2\EOT\218\STX\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\ENQ\DC2\EOT\218\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\SOH\DC2\EOT\218\STX\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\ETX\DC2\EOT\218\STX\SYN\ETB\n\
    \\147\SOH\n\
    \\EOT\EOT\DC2\STX\ETX\DC2\EOT\221\STX\EOTN\SUB\132\SOH May be set by workers to indicate that the worker desires future tasks to be provided with\n\
    \ incremental history on a sticky queue.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\ACK\DC2\EOT\221\STX\EOT7\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\SOH\DC2\EOT\221\STX8I\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\ETX\DC2\EOT\221\STXLM\n\
    \\161\SOH\n\
    \\EOT\EOT\DC2\STX\EOT\DC2\EOT\224\STX\EOT&\SUB\146\SOH If set, the worker wishes to immediately receive the next workflow task as a response to\n\
    \ this completion. This can save on polling round-trips.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\EOT\ENQ\DC2\EOT\224\STX\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\EOT\SOH\DC2\EOT\224\STX\t!\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\EOT\ETX\DC2\EOT\224\STX$%\n\
    \\236\STX\n\
    \\EOT\EOT\DC2\STX\ENQ\DC2\EOT\229\STX\EOT,\SUB\221\STX Can be used to *force* creation of a new workflow task, even if no commands have resolved or\n\
    \ one would not otherwise have been generated. This is used when the worker knows it is doing\n\
    \ something useful, but cannot complete it within the workflow task timeout. Local activities\n\
    \ which run for longer than the task timeout being the prime example.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ENQ\ENQ\DC2\EOT\229\STX\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ENQ\SOH\DC2\EOT\229\STX\t'\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ENQ\ETX\DC2\EOT\229\STX*+\n\
    \m\n\
    \\EOT\EOT\DC2\STX\ACK\DC2\EOT\232\STX\EOT\US\SUB_ DEPRECATED since 1.21 - use `worker_version_stamp` instead.\n\
    \ Worker process' unique binary id\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ACK\ENQ\DC2\EOT\232\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ACK\SOH\DC2\EOT\232\STX\v\SUB\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ACK\ETX\DC2\EOT\232\STX\GS\RS\n\
    \O\n\
    \\EOT\EOT\DC2\STX\a\DC2\EOT\234\STX\EOTM\SUBA Responses to the `queries` field in the task being responded to\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\a\ACK\DC2\EOT\234\STX\EOT:\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\a\SOH\DC2\EOT\234\STX;H\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\a\ETX\DC2\EOT\234\STXKL\n\
    \\f\n\
    \\EOT\EOT\DC2\STX\b\DC2\EOT\235\STX\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\b\ENQ\DC2\EOT\235\STX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\b\SOH\DC2\EOT\235\STX\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\b\ETX\DC2\EOT\235\STX\ETB\CAN\n\
    \\183\STX\n\
    \\EOT\EOT\DC2\STX\t\DC2\EOT\240\STX\EOT\\\SUB\168\STX Version info of the worker who processed this task. This message's `build_id` field should\n\
    \ always be set by SDKs. Workers opting into versioning will also set the `use_versioning`\n\
    \ field to true. See message docstrings for more.\n\
    \ Deprecated. Use `deployment` and `versioning_behavior` instead.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\t\ACK\DC2\EOT\240\STX\EOT-\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\t\SOH\DC2\EOT\240\STX.B\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\t\ETX\DC2\EOT\240\STXEG\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\t\b\DC2\EOT\240\STXH[\n\
    \\SO\n\
    \\ACK\EOT\DC2\STX\t\b\ETX\DC2\EOT\240\STXIZ\n\
    \F\n\
    \\EOT\EOT\DC2\STX\n\
    \\DC2\EOT\242\STX\EOT<\SUB8 Protocol messages piggybacking on a WFT as a transport\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\n\
    \\EOT\DC2\EOT\242\STX\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\n\
    \\ACK\DC2\EOT\242\STX\r-\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\n\
    \\SOH\DC2\EOT\242\STX.6\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\n\
    \\ETX\DC2\EOT\242\STX9;\n\
    \\134\SOH\n\
    \\EOT\EOT\DC2\STX\v\DC2\EOT\245\STX\EOTH\SUBx Data the SDK wishes to record for itself, but server need not interpret, and does not\n\
    \ directly impact workflow state.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\v\ACK\DC2\EOT\245\STX\EOT5\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\v\SOH\DC2\EOT\245\STX6B\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\v\ETX\DC2\EOT\245\STXEG\n\
    \7\n\
    \\EOT\EOT\DC2\STX\f\DC2\EOT\247\STX\EOTC\SUB) Local usage data collected for metering\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\f\ACK\DC2\EOT\247\STX\EOT+\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\f\SOH\DC2\EOT\247\STX,=\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\f\ETX\DC2\EOT\247\STX@B\n\
    \2\n\
    \\EOT\EOT\DC2\STX\r\DC2\EOT\249\STX\EOT#\SUB$ All capabilities the SDK supports.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\r\ACK\DC2\EOT\249\STX\EOT\DLE\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\r\SOH\DC2\EOT\249\STX\DC1\GS\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\r\ETX\DC2\EOT\249\STX \"\n\
    \\227\SOH\n\
    \\EOT\EOT\DC2\STX\SO\DC2\EOT\253\STX\EOTN\SUB\212\SOH Deployment info of the worker that completed this task. Must be present if user has set\n\
    \ `WorkerDeploymentOptions` regardless of versioning being enabled or not.\n\
    \ Deprecated. Replaced with `deployment_options`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SO\ACK\DC2\EOT\253\STX\EOT)\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SO\SOH\DC2\EOT\253\STX*4\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SO\ETX\DC2\EOT\253\STX79\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SO\b\DC2\EOT\253\STX:M\n\
    \\SO\n\
    \\ACK\EOT\DC2\STX\SO\b\ETX\DC2\EOT\253\STX;L\n\
    \\170\SOH\n\
    \\EOT\EOT\DC2\STX\SI\DC2\EOT\128\ETX\EOTF\SUB\155\SOH Versioning behavior of this workflow execution as set on the worker that completed this task.\n\
    \ UNSPECIFIED means versioning is not enabled in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SI\ACK\DC2\EOT\128\ETX\EOT,\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SI\SOH\DC2\EOT\128\ETX-@\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SI\ETX\DC2\EOT\128\ETXCE\n\
    \J\n\
    \\EOT\EOT\DC2\STX\DLE\DC2\EOT\130\ETX\EOTO\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\DLE\ACK\DC2\EOT\130\ETX\EOT6\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\DLE\SOH\DC2\EOT\130\ETX7I\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\DLE\ETX\DC2\EOT\130\ETXLN\n\
    \)\n\
    \\EOT\EOT\DC2\ETX\SOH\DC2\ACK\133\ETX\EOT\141\ETX\ENQ\SUB\EM SDK capability details.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\ETX\SOH\SOH\DC2\EOT\133\ETX\f\CAN\n\
    \\147\ETX\n\
    \\ACK\EOT\DC2\ETX\SOH\STX\NUL\DC2\EOT\140\ETX\b?\SUB\130\ETX True if the SDK can handle speculative workflow task with command events. If true, the\n\
    \ server may choose, at its discretion, to discard a speculative workflow task even if that\n\
    \ speculative task included command events the SDK had not previously processed.\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: \"with\" used to describe the workflow task. --)\n\
    \\n\
    \\SI\n\
    \\a\EOT\DC2\ETX\SOH\STX\NUL\ENQ\DC2\EOT\140\ETX\b\f\n\
    \\SI\n\
    \\a\EOT\DC2\ETX\SOH\STX\NUL\SOH\DC2\EOT\140\ETX\r:\n\
    \\SI\n\
    \\a\EOT\DC2\ETX\SOH\STX\NUL\ETX\DC2\EOT\140\ETX=>\n\
    \\f\n\
    \\STX\EOT\DC3\DC2\ACK\144\ETX\NUL\153\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\DC3\SOH\DC2\EOT\144\ETX\b,\n\
    \T\n\
    \\EOT\EOT\DC3\STX\NUL\DC2\EOT\146\ETX\EOT4\SUBF See `RespondWorkflowTaskCompletedResponse::return_new_workflow_task`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\ACK\DC2\EOT\146\ETX\EOT!\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\SOH\DC2\EOT\146\ETX\"/\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\ETX\DC2\EOT\146\ETX23\n\
    \T\n\
    \\EOT\EOT\DC3\STX\SOH\DC2\EOT\148\ETX\EOT>\SUBF See `ScheduleActivityTaskCommandAttributes::request_eager_execution`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\EOT\DC2\EOT\148\ETX\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\ACK\DC2\EOT\148\ETX\r*\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\SOH\DC2\EOT\148\ETX+9\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\ETX\DC2\EOT\148\ETX<=\n\
    \\192\STX\n\
    \\EOT\EOT\DC3\STX\STX\DC2\EOT\152\ETX\EOT%\SUB\177\STX If non zero, indicates the server has discarded the workflow task that was being responded to.\n\
    \ Will be the event ID of the last workflow task started event in the history before the new workflow task.\n\
    \ Server is only expected to discard a workflow task if it could not have modified the workflow state.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\STX\ENQ\DC2\EOT\152\ETX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\STX\SOH\DC2\EOT\152\ETX\n\
    \ \n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\STX\ETX\DC2\EOT\152\ETX#$\n\
    \\f\n\
    \\STX\EOT\DC4\DC2\ACK\155\ETX\NUL\182\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\DC4\SOH\DC2\EOT\155\ETX\b(\n\
    \M\n\
    \\EOT\EOT\DC4\STX\NUL\DC2\EOT\157\ETX\EOT\EM\SUB? The task token as received in `PollWorkflowTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\NUL\ENQ\DC2\EOT\157\ETX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\NUL\SOH\DC2\EOT\157\ETX\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\NUL\ETX\DC2\EOT\157\ETX\ETB\CAN\n\
    \\165\SOH\n\
    \\EOT\EOT\DC4\STX\SOH\DC2\EOT\160\ETX\EOT<\SUB\150\SOH Why did the task fail? It's important to note that many of the variants in this enum cannot\n\
    \ apply to worker responses. See the type's doc for more.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\SOH\ACK\DC2\EOT\160\ETX\EOT1\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\SOH\SOH\DC2\EOT\160\ETX27\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\SOH\ETX\DC2\EOT\160\ETX:;\n\
    \\US\n\
    \\EOT\EOT\DC4\STX\STX\DC2\EOT\162\ETX\EOT0\SUB\DC1 Failure details\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\STX\ACK\DC2\EOT\162\ETX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\STX\SOH\DC2\EOT\162\ETX$+\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\STX\ETX\DC2\EOT\162\ETX./\n\
    \1\n\
    \\EOT\EOT\DC4\STX\ETX\DC2\EOT\164\ETX\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ETX\ENQ\DC2\EOT\164\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ETX\SOH\DC2\EOT\164\ETX\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ETX\ETX\DC2\EOT\164\ETX\SYN\ETB\n\
    \m\n\
    \\EOT\EOT\DC4\STX\EOT\DC2\EOT\167\ETX\EOT\US\SUB_ DEPRECATED since 1.21 - use `worker_version_stamp` instead.\n\
    \ Worker process' unique binary id\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\EOT\ENQ\DC2\EOT\167\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\EOT\SOH\DC2\EOT\167\ETX\v\SUB\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\EOT\ETX\DC2\EOT\167\ETX\GS\RS\n\
    \\f\n\
    \\EOT\EOT\DC4\STX\ENQ\DC2\EOT\168\ETX\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ENQ\ENQ\DC2\EOT\168\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ENQ\SOH\DC2\EOT\168\ETX\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ENQ\ETX\DC2\EOT\168\ETX\ETB\CAN\n\
    \F\n\
    \\EOT\EOT\DC4\STX\ACK\DC2\EOT\170\ETX\EOT;\SUB8 Protocol messages piggybacking on a WFT as a transport\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ACK\EOT\DC2\EOT\170\ETX\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ACK\ACK\DC2\EOT\170\ETX\r-\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ACK\SOH\DC2\EOT\170\ETX.6\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\ACK\ETX\DC2\EOT\170\ETX9:\n\
    \\157\STX\n\
    \\EOT\EOT\DC4\STX\a\DC2\EOT\175\ETX\EOTU\SUB\142\STX Version info of the worker who processed this task. This message's `build_id` field should\n\
    \ always be set by SDKs. Workers opting into versioning will also set the `use_versioning`\n\
    \ field to true. See message docstrings for more.\n\
    \ Deprecated. Use `deployment` instead.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\a\ACK\DC2\EOT\175\ETX\EOT-\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\a\SOH\DC2\EOT\175\ETX.<\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\a\ETX\DC2\EOT\175\ETX?@\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\a\b\DC2\EOT\175\ETXAT\n\
    \\SO\n\
    \\ACK\EOT\DC4\STX\a\b\ETX\DC2\EOT\175\ETXBS\n\
    \\227\SOH\n\
    \\EOT\EOT\DC4\STX\b\DC2\EOT\179\ETX\EOT9\SUB\212\SOH Deployment info of the worker that completed this task. Must be present if user has set\n\
    \ `WorkerDeploymentOptions` regardless of versioning being enabled or not.\n\
    \ Deprecated. Replaced with `deployment_options`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\b\ACK\DC2\EOT\179\ETX\EOT)\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\b\SOH\DC2\EOT\179\ETX*4\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\b\ETX\DC2\EOT\179\ETX78\n\
    \J\n\
    \\EOT\EOT\DC4\STX\t\DC2\EOT\181\ETX\EOTO\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\t\ACK\DC2\EOT\181\ETX\EOT6\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\t\SOH\DC2\EOT\181\ETX7I\n\
    \\r\n\
    \\ENQ\EOT\DC4\STX\t\ETX\DC2\EOT\181\ETXLN\n\
    \\f\n\
    \\STX\EOT\NAK\DC2\ACK\184\ETX\NUL\185\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\NAK\SOH\DC2\EOT\184\ETX\b)\n\
    \\f\n\
    \\STX\EOT\SYN\DC2\ACK\187\ETX\NUL\199\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\SYN\SOH\DC2\EOT\187\ETX\b$\n\
    \\f\n\
    \\EOT\EOT\SYN\STX\NUL\DC2\EOT\188\ETX\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\NUL\ENQ\DC2\EOT\188\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\NUL\SOH\DC2\EOT\188\ETX\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\NUL\ETX\DC2\EOT\188\ETX\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT\SYN\STX\SOH\DC2\EOT\189\ETX\EOT7\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\SOH\ACK\DC2\EOT\189\ETX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\SOH\SOH\DC2\EOT\189\ETX(2\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\SOH\ETX\DC2\EOT\189\ETX56\n\
    \1\n\
    \\EOT\EOT\SYN\STX\STX\DC2\EOT\191\ETX\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\STX\ENQ\DC2\EOT\191\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\STX\SOH\DC2\EOT\191\ETX\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\STX\ETX\DC2\EOT\191\ETX\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT\SYN\STX\ETX\DC2\EOT\192\ETX\EOTH\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ETX\ACK\DC2\EOT\192\ETX\EOT/\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ETX\SOH\DC2\EOT\192\ETX0C\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ETX\ETX\DC2\EOT\192\ETXFG\n\
    \\220\SOH\n\
    \\EOT\EOT\SYN\STX\EOT\DC2\EOT\196\ETX\EOTi\SUB\205\SOH Information about this worker's build identifier and if it is choosing to use the versioning\n\
    \ feature. See the `WorkerVersionCapabilities` docstring for more.\n\
    \ Deprecated. Replaced by deployment_options.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\EOT\ACK\DC2\EOT\196\ETX\EOT4\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\EOT\SOH\DC2\EOT\196\ETX5P\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\EOT\ETX\DC2\EOT\196\ETXST\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\EOT\b\DC2\EOT\196\ETXUh\n\
    \\SO\n\
    \\ACK\EOT\SYN\STX\EOT\b\ETX\DC2\EOT\196\ETXVg\n\
    \J\n\
    \\EOT\EOT\SYN\STX\ENQ\DC2\EOT\198\ETX\EOTN\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ENQ\ACK\DC2\EOT\198\ETX\EOT6\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ENQ\SOH\DC2\EOT\198\ETX7I\n\
    \\r\n\
    \\ENQ\EOT\SYN\STX\ENQ\ETX\DC2\EOT\198\ETXLM\n\
    \\f\n\
    \\STX\EOT\ETB\DC2\ACK\201\ETX\NUL\251\ETX\SOH\n\
    \\v\n\
    \\ETX\EOT\ETB\SOH\DC2\EOT\201\ETX\b%\n\
    \1\n\
    \\EOT\EOT\ETB\STX\NUL\DC2\EOT\203\ETX\EOT\EM\SUB# A unique identifier for this task\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\NUL\ENQ\DC2\EOT\203\ETX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\NUL\SOH\DC2\EOT\203\ETX\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\NUL\ETX\DC2\EOT\203\ETX\ETB\CAN\n\
    \Q\n\
    \\EOT\EOT\ETB\STX\SOH\DC2\EOT\205\ETX\EOT\"\SUBC The namespace the workflow which requested this activity lives in\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SOH\ENQ\DC2\EOT\205\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SOH\SOH\DC2\EOT\205\ETX\v\GS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SOH\ETX\DC2\EOT\205\ETX !\n\
    \/\n\
    \\EOT\EOT\ETB\STX\STX\DC2\EOT\207\ETX\EOT:\SUB! Type of the requesting workflow\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\STX\ACK\DC2\EOT\207\ETX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\STX\SOH\DC2\EOT\207\ETX(5\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\STX\ETX\DC2\EOT\207\ETX89\n\
    \9\n\
    \\EOT\EOT\ETB\STX\ETX\DC2\EOT\209\ETX\EOTD\SUB+ Execution info of the requesting workflow\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ETX\ACK\DC2\EOT\209\ETX\EOT,\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ETX\SOH\DC2\EOT\209\ETX-?\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ETX\ETX\DC2\EOT\209\ETXBC\n\
    \\f\n\
    \\EOT\EOT\ETB\STX\EOT\DC2\EOT\210\ETX\EOT:\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\EOT\ACK\DC2\EOT\210\ETX\EOT'\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\EOT\SOH\DC2\EOT\210\ETX(5\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\EOT\ETX\DC2\EOT\210\ETX89\n\
    \\148\STX\n\
    \\EOT\EOT\ETB\STX\ENQ\DC2\EOT\214\ETX\EOT\ESC\SUB\133\STX The autogenerated or user specified identifier of this activity. Can be used to complete the\n\
    \ activity via `RespondActivityTaskCompletedById`. May be re-used as long as the last usage\n\
    \ has resolved, but unique IDs for every activity invocation is a good idea.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ENQ\ENQ\DC2\EOT\214\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ENQ\SOH\DC2\EOT\214\ETX\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ENQ\ETX\DC2\EOT\214\ETX\EM\SUB\n\
    \\174\SOH\n\
    \\EOT\EOT\ETB\STX\ACK\DC2\EOT\217\ETX\EOT-\SUB\159\SOH Headers specified by the scheduling workflow. Commonly used to propagate contextual info\n\
    \ from the workflow to its activities. For example, tracing contexts.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ACK\ACK\DC2\EOT\217\ETX\EOT!\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ACK\SOH\DC2\EOT\217\ETX\"(\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\ACK\ETX\DC2\EOT\217\ETX+,\n\
    \4\n\
    \\EOT\EOT\ETB\STX\a\DC2\EOT\219\ETX\EOT.\SUB& Arguments to the activity invocation\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\a\ACK\DC2\EOT\219\ETX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\a\SOH\DC2\EOT\219\ETX$)\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\a\ETX\DC2\EOT\219\ETX,-\n\
    \z\n\
    \\EOT\EOT\ETB\STX\b\DC2\EOT\222\ETX\EOT:\SUBl Details of the last heartbeat that was recorded for this activity as of the time this task\n\
    \ was delivered.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\b\ACK\DC2\EOT\222\ETX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\b\SOH\DC2\EOT\222\ETX$5\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\b\ETX\DC2\EOT\222\ETX89\n\
    \2\n\
    \\EOT\EOT\ETB\STX\t\DC2\EOT\224\ETX\EOT2\SUB$ When was this task first scheduled\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\t\ACK\DC2\EOT\224\ETX\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\t\SOH\DC2\EOT\224\ETX\RS,\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\t\ETX\DC2\EOT\224\ETX/1\n\
    \4\n\
    \\EOT\EOT\ETB\STX\n\
    \\DC2\EOT\226\ETX\EOTB\SUB& When was this task attempt scheduled\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\n\
    \\ACK\DC2\EOT\226\ETX\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\n\
    \\SOH\DC2\EOT\226\ETX\RS<\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\n\
    \\ETX\DC2\EOT\226\ETX?A\n\
    \9\n\
    \\EOT\EOT\ETB\STX\v\DC2\EOT\228\ETX\EOT0\SUB+ When was this task started (this attempt)\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\v\ACK\DC2\EOT\228\ETX\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\v\SOH\DC2\EOT\228\ETX\RS*\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\v\ETX\DC2\EOT\228\ETX-/\n\
    \N\n\
    \\EOT\EOT\ETB\STX\f\DC2\EOT\230\ETX\EOT\ETB\SUB@ Starting at 1, the number of attempts to perform this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\f\ENQ\DC2\EOT\230\ETX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\f\SOH\DC2\EOT\230\ETX\n\
    \\DC1\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\f\ETX\DC2\EOT\230\ETX\DC4\SYN\n\
    \\184\SOH\n\
    \\EOT\EOT\ETB\STX\r\DC2\EOT\235\ETX\EOT<\SUB\169\SOH First scheduled -> final result reported timeout\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: \"to\" is used to indicate interval. --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\r\ACK\DC2\EOT\235\ETX\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\r\SOH\DC2\EOT\235\ETX\GS6\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\r\ETX\DC2\EOT\235\ETX9;\n\
    \\190\SOH\n\
    \\EOT\EOT\ETB\STX\SO\DC2\EOT\240\ETX\EOT9\SUB\175\SOH Current attempt start -> final result reported timeout\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: \"to\" is used to indicate interval. --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SO\ACK\DC2\EOT\240\ETX\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SO\SOH\DC2\EOT\240\ETX\GS3\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SO\ETX\DC2\EOT\240\ETX68\n\
    \Z\n\
    \\EOT\EOT\ETB\STX\SI\DC2\EOT\242\ETX\EOT4\SUBL Window within which the activity must report a heartbeat, or be timed out.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SI\ACK\DC2\EOT\242\ETX\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SI\SOH\DC2\EOT\242\ETX\GS.\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\SI\ETX\DC2\EOT\242\ETX13\n\
    \\253\SOH\n\
    \\EOT\EOT\ETB\STX\DLE\DC2\EOT\246\ETX\EOT9\SUB\238\SOH This is the retry policy the service uses which may be different from the one provided\n\
    \ (or not) during activity scheduling. The service can override the provided one if some\n\
    \ values are not specified or exceed configured system limits.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DLE\ACK\DC2\EOT\246\ETX\EOT&\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DLE\SOH\DC2\EOT\246\ETX'3\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DLE\ETX\DC2\EOT\246\ETX68\n\
    \V\n\
    \\EOT\EOT\ETB\STX\DC1\DC2\EOT\248\ETX\EOTQ\SUBH Server-advised information the SDK may use to adjust its poller count.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC1\ACK\DC2\EOT\248\ETX\EOT3\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC1\SOH\DC2\EOT\248\ETX4K\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC1\ETX\DC2\EOT\248\ETXNP\n\
    \!\n\
    \\EOT\EOT\ETB\STX\DC2\DC2\EOT\250\ETX\EOT2\SUB\DC3 Priority metadata\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC2\ACK\DC2\EOT\250\ETX\EOT#\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC2\SOH\DC2\EOT\250\ETX$,\n\
    \\r\n\
    \\ENQ\EOT\ETB\STX\DC2\ETX\DC2\EOT\250\ETX/1\n\
    \\f\n\
    \\STX\EOT\CAN\DC2\ACK\253\ETX\NUL\133\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\CAN\SOH\DC2\EOT\253\ETX\b*\n\
    \M\n\
    \\EOT\EOT\CAN\STX\NUL\DC2\EOT\255\ETX\EOT\EM\SUB? The task token as received in `PollActivityTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\NUL\ENQ\DC2\EOT\255\ETX\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\NUL\SOH\DC2\EOT\255\ETX\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\NUL\ETX\DC2\EOT\255\ETX\ETB\CAN\n\
    \a\n\
    \\EOT\EOT\CAN\STX\SOH\DC2\EOT\129\EOT\EOT0\SUBS Arbitrary data, of which the most recent call is kept, to store for this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\SOH\ACK\DC2\EOT\129\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\SOH\SOH\DC2\EOT\129\EOT$+\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\SOH\ETX\DC2\EOT\129\EOT./\n\
    \1\n\
    \\EOT\EOT\CAN\STX\STX\DC2\EOT\131\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\STX\ENQ\DC2\EOT\131\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\STX\SOH\DC2\EOT\131\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\STX\ETX\DC2\EOT\131\EOT\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT\CAN\STX\ETX\DC2\EOT\132\EOT\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\ETX\ENQ\DC2\EOT\132\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\ETX\SOH\DC2\EOT\132\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\CAN\STX\ETX\ETX\DC2\EOT\132\EOT\ETB\CAN\n\
    \\f\n\
    \\STX\EOT\EM\DC2\ACK\135\EOT\NUL\142\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\EM\SOH\DC2\EOT\135\EOT\b+\n\
    \\166\SOH\n\
    \\EOT\EOT\EM\STX\NUL\DC2\EOT\138\EOT\EOT\RS\SUB\151\SOH Will be set to true if the activity has been asked to cancel itself. The SDK should then\n\
    \ notify the activity of cancellation if it is still running.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\NUL\ENQ\DC2\EOT\138\EOT\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\NUL\SOH\DC2\EOT\138\EOT\t\EM\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\NUL\ETX\DC2\EOT\138\EOT\FS\GS\n\
    \>\n\
    \\EOT\EOT\EM\STX\SOH\DC2\EOT\141\EOT\EOT\GS\SUB0 Will be set to true if the activity is paused.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\SOH\ENQ\DC2\EOT\141\EOT\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\SOH\SOH\DC2\EOT\141\EOT\t\CAN\n\
    \\r\n\
    \\ENQ\EOT\EM\STX\SOH\ETX\DC2\EOT\141\EOT\ESC\FS\n\
    \\f\n\
    \\STX\EOT\SUB\DC2\ACK\144\EOT\NUL\157\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\SUB\SOH\DC2\EOT\144\EOT\b.\n\
    \G\n\
    \\EOT\EOT\SUB\STX\NUL\DC2\EOT\146\EOT\EOT\EM\SUB9 Namespace of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\NUL\ENQ\DC2\EOT\146\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\NUL\SOH\DC2\EOT\146\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\NUL\ETX\DC2\EOT\146\EOT\ETB\CAN\n\
    \@\n\
    \\EOT\EOT\SUB\STX\SOH\DC2\EOT\148\EOT\EOT\ESC\SUB2 Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\SOH\ENQ\DC2\EOT\148\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\SOH\SOH\DC2\EOT\148\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\SOH\ETX\DC2\EOT\148\EOT\EM\SUB\n\
    \D\n\
    \\EOT\EOT\SUB\STX\STX\DC2\EOT\150\EOT\EOT\SYN\SUB6 Run Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\STX\ENQ\DC2\EOT\150\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\STX\SOH\DC2\EOT\150\EOT\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\STX\ETX\DC2\EOT\150\EOT\DC4\NAK\n\
    \5\n\
    \\EOT\EOT\SUB\STX\ETX\DC2\EOT\152\EOT\EOT\ESC\SUB' Id of the activity we're heartbeating\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ETX\ENQ\DC2\EOT\152\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ETX\SOH\DC2\EOT\152\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ETX\ETX\DC2\EOT\152\EOT\EM\SUB\n\
    \a\n\
    \\EOT\EOT\SUB\STX\EOT\DC2\EOT\154\EOT\EOT0\SUBS Arbitrary data, of which the most recent call is kept, to store for this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\EOT\ACK\DC2\EOT\154\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\EOT\SOH\DC2\EOT\154\EOT$+\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\EOT\ETX\DC2\EOT\154\EOT./\n\
    \1\n\
    \\EOT\EOT\SUB\STX\ENQ\DC2\EOT\156\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ENQ\ENQ\DC2\EOT\156\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ENQ\SOH\DC2\EOT\156\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\SUB\STX\ENQ\ETX\DC2\EOT\156\EOT\SYN\ETB\n\
    \\f\n\
    \\STX\EOT\ESC\DC2\ACK\159\EOT\NUL\166\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\ESC\SOH\DC2\EOT\159\EOT\b/\n\
    \\166\SOH\n\
    \\EOT\EOT\ESC\STX\NUL\DC2\EOT\162\EOT\EOT\RS\SUB\151\SOH Will be set to true if the activity has been asked to cancel itself. The SDK should then\n\
    \ notify the activity of cancellation if it is still running.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\NUL\ENQ\DC2\EOT\162\EOT\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\NUL\SOH\DC2\EOT\162\EOT\t\EM\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\NUL\ETX\DC2\EOT\162\EOT\FS\GS\n\
    \>\n\
    \\EOT\EOT\ESC\STX\SOH\DC2\EOT\165\EOT\EOT\GS\SUB0 Will be set to true if the activity is paused.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\SOH\ENQ\DC2\EOT\165\EOT\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\SOH\SOH\DC2\EOT\165\EOT\t\CAN\n\
    \\r\n\
    \\ENQ\EOT\ESC\STX\SOH\ETX\DC2\EOT\165\EOT\ESC\FS\n\
    \\f\n\
    \\STX\EOT\FS\DC2\ACK\168\EOT\NUL\187\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\FS\SOH\DC2\EOT\168\EOT\b+\n\
    \M\n\
    \\EOT\EOT\FS\STX\NUL\DC2\EOT\170\EOT\EOT\EM\SUB? The task token as received in `PollActivityTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\NUL\ENQ\DC2\EOT\170\EOT\EOT\t\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\NUL\SOH\DC2\EOT\170\EOT\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\NUL\ETX\DC2\EOT\170\EOT\ETB\CAN\n\
    \A\n\
    \\EOT\EOT\FS\STX\SOH\DC2\EOT\172\EOT\EOT/\SUB3 The result of successfully executing the activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\SOH\ACK\DC2\EOT\172\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\SOH\SOH\DC2\EOT\172\EOT$*\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\SOH\ETX\DC2\EOT\172\EOT-.\n\
    \1\n\
    \\EOT\EOT\FS\STX\STX\DC2\EOT\174\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\STX\ENQ\DC2\EOT\174\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\STX\SOH\DC2\EOT\174\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\STX\ETX\DC2\EOT\174\EOT\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT\FS\STX\ETX\DC2\EOT\175\EOT\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ETX\ENQ\DC2\EOT\175\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ETX\SOH\DC2\EOT\175\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ETX\ETX\DC2\EOT\175\EOT\ETB\CAN\n\
    \\157\STX\n\
    \\EOT\EOT\FS\STX\EOT\DC2\EOT\180\EOT\EOTU\SUB\142\STX Version info of the worker who processed this task. This message's `build_id` field should\n\
    \ always be set by SDKs. Workers opting into versioning will also set the `use_versioning`\n\
    \ field to true. See message docstrings for more.\n\
    \ Deprecated. Use `deployment` instead.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\EOT\ACK\DC2\EOT\180\EOT\EOT-\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\EOT\SOH\DC2\EOT\180\EOT.<\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\EOT\ETX\DC2\EOT\180\EOT?@\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\EOT\b\DC2\EOT\180\EOTAT\n\
    \\SO\n\
    \\ACK\EOT\FS\STX\EOT\b\ETX\DC2\EOT\180\EOTBS\n\
    \\227\SOH\n\
    \\EOT\EOT\FS\STX\ENQ\DC2\EOT\184\EOT\EOTM\SUB\212\SOH Deployment info of the worker that completed this task. Must be present if user has set\n\
    \ `WorkerDeploymentOptions` regardless of versioning being enabled or not.\n\
    \ Deprecated. Replaced with `deployment_options`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ENQ\ACK\DC2\EOT\184\EOT\EOT)\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ENQ\SOH\DC2\EOT\184\EOT*4\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ENQ\ETX\DC2\EOT\184\EOT78\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ENQ\b\DC2\EOT\184\EOT9L\n\
    \\SO\n\
    \\ACK\EOT\FS\STX\ENQ\b\ETX\DC2\EOT\184\EOT:K\n\
    \J\n\
    \\EOT\EOT\FS\STX\ACK\DC2\EOT\186\EOT\EOTN\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ACK\ACK\DC2\EOT\186\EOT\EOT6\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ACK\SOH\DC2\EOT\186\EOT7I\n\
    \\r\n\
    \\ENQ\EOT\FS\STX\ACK\ETX\DC2\EOT\186\EOTLM\n\
    \\f\n\
    \\STX\EOT\GS\DC2\ACK\189\EOT\NUL\190\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\GS\SOH\DC2\EOT\189\EOT\b,\n\
    \\f\n\
    \\STX\EOT\RS\DC2\ACK\192\EOT\NUL\205\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\RS\SOH\DC2\EOT\192\EOT\b/\n\
    \G\n\
    \\EOT\EOT\RS\STX\NUL\DC2\EOT\194\EOT\EOT\EM\SUB9 Namespace of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\NUL\ENQ\DC2\EOT\194\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\NUL\SOH\DC2\EOT\194\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\NUL\ETX\DC2\EOT\194\EOT\ETB\CAN\n\
    \@\n\
    \\EOT\EOT\RS\STX\SOH\DC2\EOT\196\EOT\EOT\ESC\SUB2 Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\SOH\ENQ\DC2\EOT\196\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\SOH\SOH\DC2\EOT\196\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\SOH\ETX\DC2\EOT\196\EOT\EM\SUB\n\
    \D\n\
    \\EOT\EOT\RS\STX\STX\DC2\EOT\198\EOT\EOT\SYN\SUB6 Run Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\STX\ENQ\DC2\EOT\198\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\STX\SOH\DC2\EOT\198\EOT\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\STX\ETX\DC2\EOT\198\EOT\DC4\NAK\n\
    \.\n\
    \\EOT\EOT\RS\STX\ETX\DC2\EOT\200\EOT\EOT\ESC\SUB  Id of the activity to complete\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ETX\ENQ\DC2\EOT\200\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ETX\SOH\DC2\EOT\200\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ETX\ETX\DC2\EOT\200\EOT\EM\SUB\n\
    \;\n\
    \\EOT\EOT\RS\STX\EOT\DC2\EOT\202\EOT\EOT/\SUB- The serialized result of activity execution\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\EOT\ACK\DC2\EOT\202\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\EOT\SOH\DC2\EOT\202\EOT$*\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\EOT\ETX\DC2\EOT\202\EOT-.\n\
    \1\n\
    \\EOT\EOT\RS\STX\ENQ\DC2\EOT\204\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ENQ\ENQ\DC2\EOT\204\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ENQ\SOH\DC2\EOT\204\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\RS\STX\ENQ\ETX\DC2\EOT\204\EOT\SYN\ETB\n\
    \\f\n\
    \\STX\EOT\US\DC2\ACK\207\EOT\NUL\208\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\US\SOH\DC2\EOT\207\EOT\b0\n\
    \\f\n\
    \\STX\EOT \DC2\ACK\210\EOT\NUL\231\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT \SOH\DC2\EOT\210\EOT\b(\n\
    \M\n\
    \\EOT\EOT \STX\NUL\DC2\EOT\212\EOT\EOT\EM\SUB? The task token as received in `PollActivityTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\NUL\ENQ\DC2\EOT\212\EOT\EOT\t\n\
    \\r\n\
    \\ENQ\EOT \STX\NUL\SOH\DC2\EOT\212\EOT\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT \STX\NUL\ETX\DC2\EOT\212\EOT\ETB\CAN\n\
    \,\n\
    \\EOT\EOT \STX\SOH\DC2\EOT\214\EOT\EOT0\SUB\RS Detailed failure information\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\SOH\ACK\DC2\EOT\214\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT \STX\SOH\SOH\DC2\EOT\214\EOT$+\n\
    \\r\n\
    \\ENQ\EOT \STX\SOH\ETX\DC2\EOT\214\EOT./\n\
    \1\n\
    \\EOT\EOT \STX\STX\DC2\EOT\216\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\STX\ENQ\DC2\EOT\216\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\STX\SOH\DC2\EOT\216\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT \STX\STX\ETX\DC2\EOT\216\EOT\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT \STX\ETX\DC2\EOT\217\EOT\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT \STX\ETX\ENQ\DC2\EOT\217\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\ETX\SOH\DC2\EOT\217\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT \STX\ETX\ETX\DC2\EOT\217\EOT\ETB\CAN\n\
    \J\n\
    \\EOT\EOT \STX\EOT\DC2\EOT\219\EOT\EOT?\SUB< Additional details to be stored as last activity heartbeat\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\EOT\ACK\DC2\EOT\219\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT \STX\EOT\SOH\DC2\EOT\219\EOT$:\n\
    \\r\n\
    \\ENQ\EOT \STX\EOT\ETX\DC2\EOT\219\EOT=>\n\
    \\157\STX\n\
    \\EOT\EOT \STX\ENQ\DC2\EOT\224\EOT\EOTU\SUB\142\STX Version info of the worker who processed this task. This message's `build_id` field should\n\
    \ always be set by SDKs. Workers opting into versioning will also set the `use_versioning`\n\
    \ field to true. See message docstrings for more.\n\
    \ Deprecated. Use `deployment` instead.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\ENQ\ACK\DC2\EOT\224\EOT\EOT-\n\
    \\r\n\
    \\ENQ\EOT \STX\ENQ\SOH\DC2\EOT\224\EOT.<\n\
    \\r\n\
    \\ENQ\EOT \STX\ENQ\ETX\DC2\EOT\224\EOT?@\n\
    \\r\n\
    \\ENQ\EOT \STX\ENQ\b\DC2\EOT\224\EOTAT\n\
    \\SO\n\
    \\ACK\EOT \STX\ENQ\b\ETX\DC2\EOT\224\EOTBS\n\
    \\227\SOH\n\
    \\EOT\EOT \STX\ACK\DC2\EOT\228\EOT\EOTM\SUB\212\SOH Deployment info of the worker that completed this task. Must be present if user has set\n\
    \ `WorkerDeploymentOptions` regardless of versioning being enabled or not.\n\
    \ Deprecated. Replaced with `deployment_options`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\ACK\ACK\DC2\EOT\228\EOT\EOT)\n\
    \\r\n\
    \\ENQ\EOT \STX\ACK\SOH\DC2\EOT\228\EOT*4\n\
    \\r\n\
    \\ENQ\EOT \STX\ACK\ETX\DC2\EOT\228\EOT78\n\
    \\r\n\
    \\ENQ\EOT \STX\ACK\b\DC2\EOT\228\EOT9L\n\
    \\SO\n\
    \\ACK\EOT \STX\ACK\b\ETX\DC2\EOT\228\EOT:K\n\
    \J\n\
    \\EOT\EOT \STX\a\DC2\EOT\230\EOT\EOTN\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT \STX\a\ACK\DC2\EOT\230\EOT\EOT6\n\
    \\r\n\
    \\ENQ\EOT \STX\a\SOH\DC2\EOT\230\EOT7I\n\
    \\r\n\
    \\ENQ\EOT \STX\a\ETX\DC2\EOT\230\EOTLM\n\
    \\f\n\
    \\STX\EOT!\DC2\ACK\233\EOT\NUL\237\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT!\SOH\DC2\EOT\233\EOT\b)\n\
    \\131\SOH\n\
    \\EOT\EOT!\STX\NUL\DC2\EOT\236\EOT\EOT:\SUBu Server validation failures could include\n\
    \ last_heartbeat_details payload is too large, request failure is too large\n\
    \\n\
    \\r\n\
    \\ENQ\EOT!\STX\NUL\EOT\DC2\EOT\236\EOT\EOT\f\n\
    \\r\n\
    \\ENQ\EOT!\STX\NUL\ACK\DC2\EOT\236\EOT\r,\n\
    \\r\n\
    \\ENQ\EOT!\STX\NUL\SOH\DC2\EOT\236\EOT-5\n\
    \\r\n\
    \\ENQ\EOT!\STX\NUL\ETX\DC2\EOT\236\EOT89\n\
    \\f\n\
    \\STX\EOT\"\DC2\ACK\239\EOT\NUL\254\EOT\SOH\n\
    \\v\n\
    \\ETX\EOT\"\SOH\DC2\EOT\239\EOT\b,\n\
    \G\n\
    \\EOT\EOT\"\STX\NUL\DC2\EOT\241\EOT\EOT\EM\SUB9 Namespace of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\NUL\ENQ\DC2\EOT\241\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\NUL\SOH\DC2\EOT\241\EOT\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\"\STX\NUL\ETX\DC2\EOT\241\EOT\ETB\CAN\n\
    \@\n\
    \\EOT\EOT\"\STX\SOH\DC2\EOT\243\EOT\EOT\ESC\SUB2 Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\SOH\ENQ\DC2\EOT\243\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\SOH\SOH\DC2\EOT\243\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\"\STX\SOH\ETX\DC2\EOT\243\EOT\EM\SUB\n\
    \D\n\
    \\EOT\EOT\"\STX\STX\DC2\EOT\245\EOT\EOT\SYN\SUB6 Run Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\STX\ENQ\DC2\EOT\245\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\STX\SOH\DC2\EOT\245\EOT\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\"\STX\STX\ETX\DC2\EOT\245\EOT\DC4\NAK\n\
    \*\n\
    \\EOT\EOT\"\STX\ETX\DC2\EOT\247\EOT\EOT\ESC\SUB\FS Id of the activity to fail\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ETX\ENQ\DC2\EOT\247\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ETX\SOH\DC2\EOT\247\EOT\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ETX\ETX\DC2\EOT\247\EOT\EM\SUB\n\
    \,\n\
    \\EOT\EOT\"\STX\EOT\DC2\EOT\249\EOT\EOT0\SUB\RS Detailed failure information\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\EOT\ACK\DC2\EOT\249\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\"\STX\EOT\SOH\DC2\EOT\249\EOT$+\n\
    \\r\n\
    \\ENQ\EOT\"\STX\EOT\ETX\DC2\EOT\249\EOT./\n\
    \1\n\
    \\EOT\EOT\"\STX\ENQ\DC2\EOT\251\EOT\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ENQ\ENQ\DC2\EOT\251\EOT\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ENQ\SOH\DC2\EOT\251\EOT\v\DC3\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ENQ\ETX\DC2\EOT\251\EOT\SYN\ETB\n\
    \J\n\
    \\EOT\EOT\"\STX\ACK\DC2\EOT\253\EOT\EOT?\SUB< Additional details to be stored as last activity heartbeat\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ACK\ACK\DC2\EOT\253\EOT\EOT#\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ACK\SOH\DC2\EOT\253\EOT$:\n\
    \\r\n\
    \\ENQ\EOT\"\STX\ACK\ETX\DC2\EOT\253\EOT=>\n\
    \\f\n\
    \\STX\EOT#\DC2\ACK\128\ENQ\NUL\132\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT#\SOH\DC2\EOT\128\ENQ\b-\n\
    \\131\SOH\n\
    \\EOT\EOT#\STX\NUL\DC2\EOT\131\ENQ\EOT:\SUBu Server validation failures could include\n\
    \ last_heartbeat_details payload is too large, request failure is too large\n\
    \\n\
    \\r\n\
    \\ENQ\EOT#\STX\NUL\EOT\DC2\EOT\131\ENQ\EOT\f\n\
    \\r\n\
    \\ENQ\EOT#\STX\NUL\ACK\DC2\EOT\131\ENQ\r,\n\
    \\r\n\
    \\ENQ\EOT#\STX\NUL\SOH\DC2\EOT\131\ENQ-5\n\
    \\r\n\
    \\ENQ\EOT#\STX\NUL\ETX\DC2\EOT\131\ENQ89\n\
    \\f\n\
    \\STX\EOT$\DC2\ACK\134\ENQ\NUL\153\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT$\SOH\DC2\EOT\134\ENQ\b*\n\
    \M\n\
    \\EOT\EOT$\STX\NUL\DC2\EOT\136\ENQ\EOT\EM\SUB? The task token as received in `PollActivityTaskQueueResponse`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\NUL\ENQ\DC2\EOT\136\ENQ\EOT\t\n\
    \\r\n\
    \\ENQ\EOT$\STX\NUL\SOH\DC2\EOT\136\ENQ\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT$\STX\NUL\ETX\DC2\EOT\136\ENQ\ETB\CAN\n\
    \O\n\
    \\EOT\EOT$\STX\SOH\DC2\EOT\138\ENQ\EOT0\SUBA Serialized additional information to attach to the cancellation\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\SOH\ACK\DC2\EOT\138\ENQ\EOT#\n\
    \\r\n\
    \\ENQ\EOT$\STX\SOH\SOH\DC2\EOT\138\ENQ$+\n\
    \\r\n\
    \\ENQ\EOT$\STX\SOH\ETX\DC2\EOT\138\ENQ./\n\
    \1\n\
    \\EOT\EOT$\STX\STX\DC2\EOT\140\ENQ\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\STX\ENQ\DC2\EOT\140\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\STX\SOH\DC2\EOT\140\ENQ\v\DC3\n\
    \\r\n\
    \\ENQ\EOT$\STX\STX\ETX\DC2\EOT\140\ENQ\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT$\STX\ETX\DC2\EOT\141\ENQ\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT$\STX\ETX\ENQ\DC2\EOT\141\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\ETX\SOH\DC2\EOT\141\ENQ\v\DC4\n\
    \\r\n\
    \\ENQ\EOT$\STX\ETX\ETX\DC2\EOT\141\ENQ\ETB\CAN\n\
    \\157\STX\n\
    \\EOT\EOT$\STX\EOT\DC2\EOT\146\ENQ\EOTU\SUB\142\STX Version info of the worker who processed this task. This message's `build_id` field should\n\
    \ always be set by SDKs. Workers opting into versioning will also set the `use_versioning`\n\
    \ field to true. See message docstrings for more.\n\
    \ Deprecated. Use `deployment` instead.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\EOT\ACK\DC2\EOT\146\ENQ\EOT-\n\
    \\r\n\
    \\ENQ\EOT$\STX\EOT\SOH\DC2\EOT\146\ENQ.<\n\
    \\r\n\
    \\ENQ\EOT$\STX\EOT\ETX\DC2\EOT\146\ENQ?@\n\
    \\r\n\
    \\ENQ\EOT$\STX\EOT\b\DC2\EOT\146\ENQAT\n\
    \\SO\n\
    \\ACK\EOT$\STX\EOT\b\ETX\DC2\EOT\146\ENQBS\n\
    \\227\SOH\n\
    \\EOT\EOT$\STX\ENQ\DC2\EOT\150\ENQ\EOTM\SUB\212\SOH Deployment info of the worker that completed this task. Must be present if user has set\n\
    \ `WorkerDeploymentOptions` regardless of versioning being enabled or not.\n\
    \ Deprecated. Replaced with `deployment_options`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\ENQ\ACK\DC2\EOT\150\ENQ\EOT)\n\
    \\r\n\
    \\ENQ\EOT$\STX\ENQ\SOH\DC2\EOT\150\ENQ*4\n\
    \\r\n\
    \\ENQ\EOT$\STX\ENQ\ETX\DC2\EOT\150\ENQ78\n\
    \\r\n\
    \\ENQ\EOT$\STX\ENQ\b\DC2\EOT\150\ENQ9L\n\
    \\SO\n\
    \\ACK\EOT$\STX\ENQ\b\ETX\DC2\EOT\150\ENQ:K\n\
    \J\n\
    \\EOT\EOT$\STX\ACK\DC2\EOT\152\ENQ\EOTN\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT$\STX\ACK\ACK\DC2\EOT\152\ENQ\EOT6\n\
    \\r\n\
    \\ENQ\EOT$\STX\ACK\SOH\DC2\EOT\152\ENQ7I\n\
    \\r\n\
    \\ENQ\EOT$\STX\ACK\ETX\DC2\EOT\152\ENQLM\n\
    \\f\n\
    \\STX\EOT%\DC2\ACK\155\ENQ\NUL\156\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT%\SOH\DC2\EOT\155\ENQ\b+\n\
    \\f\n\
    \\STX\EOT&\DC2\ACK\158\ENQ\NUL\171\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT&\SOH\DC2\EOT\158\ENQ\b.\n\
    \G\n\
    \\EOT\EOT&\STX\NUL\DC2\EOT\160\ENQ\EOT\EM\SUB9 Namespace of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\NUL\ENQ\DC2\EOT\160\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\NUL\SOH\DC2\EOT\160\ENQ\v\DC4\n\
    \\r\n\
    \\ENQ\EOT&\STX\NUL\ETX\DC2\EOT\160\ENQ\ETB\CAN\n\
    \@\n\
    \\EOT\EOT&\STX\SOH\DC2\EOT\162\ENQ\EOT\ESC\SUB2 Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\SOH\ENQ\DC2\EOT\162\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\SOH\SOH\DC2\EOT\162\ENQ\v\SYN\n\
    \\r\n\
    \\ENQ\EOT&\STX\SOH\ETX\DC2\EOT\162\ENQ\EM\SUB\n\
    \D\n\
    \\EOT\EOT&\STX\STX\DC2\EOT\164\ENQ\EOT\SYN\SUB6 Run Id of the workflow which scheduled this activity\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\STX\ENQ\DC2\EOT\164\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\STX\SOH\DC2\EOT\164\ENQ\v\DC1\n\
    \\r\n\
    \\ENQ\EOT&\STX\STX\ETX\DC2\EOT\164\ENQ\DC4\NAK\n\
    \:\n\
    \\EOT\EOT&\STX\ETX\DC2\EOT\166\ENQ\EOT\ESC\SUB, Id of the activity to confirm is cancelled\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\ETX\ENQ\DC2\EOT\166\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\ETX\SOH\DC2\EOT\166\ENQ\v\SYN\n\
    \\r\n\
    \\ENQ\EOT&\STX\ETX\ETX\DC2\EOT\166\ENQ\EM\SUB\n\
    \O\n\
    \\EOT\EOT&\STX\EOT\DC2\EOT\168\ENQ\EOT0\SUBA Serialized additional information to attach to the cancellation\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\EOT\ACK\DC2\EOT\168\ENQ\EOT#\n\
    \\r\n\
    \\ENQ\EOT&\STX\EOT\SOH\DC2\EOT\168\ENQ$+\n\
    \\r\n\
    \\ENQ\EOT&\STX\EOT\ETX\DC2\EOT\168\ENQ./\n\
    \1\n\
    \\EOT\EOT&\STX\ENQ\DC2\EOT\170\ENQ\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\ENQ\ENQ\DC2\EOT\170\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT&\STX\ENQ\SOH\DC2\EOT\170\ENQ\v\DC3\n\
    \\r\n\
    \\ENQ\EOT&\STX\ENQ\ETX\DC2\EOT\170\ENQ\SYN\ETB\n\
    \\f\n\
    \\STX\EOT'\DC2\ACK\173\ENQ\NUL\174\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT'\SOH\DC2\EOT\173\ENQ\b/\n\
    \\f\n\
    \\STX\EOT(\DC2\ACK\176\ENQ\NUL\191\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT(\SOH\DC2\EOT\176\ENQ\b-\n\
    \\f\n\
    \\EOT\EOT(\STX\NUL\DC2\EOT\177\ENQ\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT(\STX\NUL\ENQ\DC2\EOT\177\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\NUL\SOH\DC2\EOT\177\ENQ\v\DC4\n\
    \\r\n\
    \\ENQ\EOT(\STX\NUL\ETX\DC2\EOT\177\ENQ\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT(\STX\SOH\DC2\EOT\178\ENQ\EOTD\n\
    \\r\n\
    \\ENQ\EOT(\STX\SOH\ACK\DC2\EOT\178\ENQ\EOT,\n\
    \\r\n\
    \\ENQ\EOT(\STX\SOH\SOH\DC2\EOT\178\ENQ-?\n\
    \\r\n\
    \\ENQ\EOT(\STX\SOH\ETX\DC2\EOT\178\ENQBC\n\
    \1\n\
    \\EOT\EOT(\STX\STX\DC2\EOT\180\ENQ\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\STX\ENQ\DC2\EOT\180\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\STX\SOH\DC2\EOT\180\ENQ\v\DC3\n\
    \\r\n\
    \\ENQ\EOT(\STX\STX\ETX\DC2\EOT\180\ENQ\SYN\ETB\n\
    \5\n\
    \\EOT\EOT(\STX\ETX\DC2\EOT\182\ENQ\EOT\SUB\SUB' Used to de-dupe cancellation requests\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\ETX\ENQ\DC2\EOT\182\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\ETX\SOH\DC2\EOT\182\ENQ\v\NAK\n\
    \\r\n\
    \\ENQ\EOT(\STX\ETX\ETX\DC2\EOT\182\ENQ\CAN\EM\n\
    \\208\SOH\n\
    \\EOT\EOT(\STX\EOT\DC2\EOT\186\ENQ\EOT&\SUB\193\SOH If set, this call will error if the most recent (if no run id is set on\n\
    \ `workflow_execution`), or specified (if it is) workflow execution is not part of the same\n\
    \ execution chain as this id.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\EOT\ENQ\DC2\EOT\186\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\EOT\SOH\DC2\EOT\186\ENQ\v!\n\
    \\r\n\
    \\ENQ\EOT(\STX\EOT\ETX\DC2\EOT\186\ENQ$%\n\
    \6\n\
    \\EOT\EOT(\STX\ENQ\DC2\EOT\188\ENQ\EOT\SYN\SUB( Reason for requesting the cancellation\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\ENQ\ENQ\DC2\EOT\188\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\ENQ\SOH\DC2\EOT\188\ENQ\v\DC1\n\
    \\r\n\
    \\ENQ\EOT(\STX\ENQ\ETX\DC2\EOT\188\ENQ\DC4\NAK\n\
    \P\n\
    \\EOT\EOT(\STX\ACK\DC2\EOT\190\ENQ\EOT3\SUBB Links to be associated with the WorkflowExecutionCanceled event.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT(\STX\ACK\EOT\DC2\EOT\190\ENQ\EOT\f\n\
    \\r\n\
    \\ENQ\EOT(\STX\ACK\ACK\DC2\EOT\190\ENQ\r(\n\
    \\r\n\
    \\ENQ\EOT(\STX\ACK\SOH\DC2\EOT\190\ENQ).\n\
    \\r\n\
    \\ENQ\EOT(\STX\ACK\ETX\DC2\EOT\190\ENQ12\n\
    \\f\n\
    \\STX\EOT)\DC2\ACK\193\ENQ\NUL\194\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT)\SOH\DC2\EOT\193\ENQ\b.\n\
    \\f\n\
    \\STX\EOT*\DC2\ACK\196\ENQ\NUL\216\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT*\SOH\DC2\EOT\196\ENQ\b&\n\
    \\f\n\
    \\EOT\EOT*\STX\NUL\DC2\EOT\197\ENQ\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT*\STX\NUL\ENQ\DC2\EOT\197\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\NUL\SOH\DC2\EOT\197\ENQ\v\DC4\n\
    \\r\n\
    \\ENQ\EOT*\STX\NUL\ETX\DC2\EOT\197\ENQ\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT*\STX\SOH\DC2\EOT\198\ENQ\EOTD\n\
    \\r\n\
    \\ENQ\EOT*\STX\SOH\ACK\DC2\EOT\198\ENQ\EOT,\n\
    \\r\n\
    \\ENQ\EOT*\STX\SOH\SOH\DC2\EOT\198\ENQ-?\n\
    \\r\n\
    \\ENQ\EOT*\STX\SOH\ETX\DC2\EOT\198\ENQBC\n\
    \V\n\
    \\EOT\EOT*\STX\STX\DC2\EOT\200\ENQ\EOT\ESC\SUBH The workflow author-defined name of the signal to send to the workflow\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\STX\ENQ\DC2\EOT\200\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\STX\SOH\DC2\EOT\200\ENQ\v\SYN\n\
    \\r\n\
    \\ENQ\EOT*\STX\STX\ETX\DC2\EOT\200\ENQ\EM\SUB\n\
    \>\n\
    \\EOT\EOT*\STX\ETX\DC2\EOT\202\ENQ\EOT.\SUB0 Serialized value(s) to provide with the signal\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\ETX\ACK\DC2\EOT\202\ENQ\EOT#\n\
    \\r\n\
    \\ENQ\EOT*\STX\ETX\SOH\DC2\EOT\202\ENQ$)\n\
    \\r\n\
    \\ENQ\EOT*\STX\ETX\ETX\DC2\EOT\202\ENQ,-\n\
    \1\n\
    \\EOT\EOT*\STX\EOT\DC2\EOT\204\ENQ\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\EOT\ENQ\DC2\EOT\204\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\EOT\SOH\DC2\EOT\204\ENQ\v\DC3\n\
    \\r\n\
    \\ENQ\EOT*\STX\EOT\ETX\DC2\EOT\204\ENQ\SYN\ETB\n\
    \,\n\
    \\EOT\EOT*\STX\ENQ\DC2\EOT\206\ENQ\EOT\SUB\SUB\RS Used to de-dupe sent signals\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\ENQ\ENQ\DC2\EOT\206\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\ENQ\SOH\DC2\EOT\206\ENQ\v\NAK\n\
    \\r\n\
    \\ENQ\EOT*\STX\ENQ\ETX\DC2\EOT\206\ENQ\CAN\EM\n\
    \\SUB\n\
    \\EOT\EOT*\STX\ACK\DC2\EOT\208\ENQ\EOT\ETB\SUB\f Deprecated\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\ACK\ENQ\DC2\EOT\208\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\ACK\SOH\DC2\EOT\208\ENQ\v\DC2\n\
    \\r\n\
    \\ENQ\EOT*\STX\ACK\ETX\DC2\EOT\208\ENQ\NAK\SYN\n\
    \\138\SOH\n\
    \\EOT\EOT*\STX\a\DC2\EOT\211\ENQ\EOT-\SUB| Headers that are passed with the signal to the processing workflow.\n\
    \ These can include things like auth or tracing tokens.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\a\ACK\DC2\EOT\211\ENQ\EOT!\n\
    \\r\n\
    \\ENQ\EOT*\STX\a\SOH\DC2\EOT\211\ENQ\"(\n\
    \\r\n\
    \\ENQ\EOT*\STX\a\ETX\DC2\EOT\211\ENQ+,\n\
    \\v\n\
    \\ETX\EOT*\t\DC2\EOT\212\ENQ\EOT\SI\n\
    \\f\n\
    \\EOT\EOT*\t\NUL\DC2\EOT\212\ENQ\r\SO\n\
    \\r\n\
    \\ENQ\EOT*\t\NUL\SOH\DC2\EOT\212\ENQ\r\SO\n\
    \\r\n\
    \\ENQ\EOT*\t\NUL\STX\DC2\EOT\212\ENQ\r\SO\n\
    \P\n\
    \\EOT\EOT*\STX\b\DC2\EOT\215\ENQ\EOT4\SUBB Links to be associated with the WorkflowExecutionSignaled event.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT*\STX\b\EOT\DC2\EOT\215\ENQ\EOT\f\n\
    \\r\n\
    \\ENQ\EOT*\STX\b\ACK\DC2\EOT\215\ENQ\r(\n\
    \\r\n\
    \\ENQ\EOT*\STX\b\SOH\DC2\EOT\215\ENQ).\n\
    \\r\n\
    \\ENQ\EOT*\STX\b\ETX\DC2\EOT\215\ENQ13\n\
    \\f\n\
    \\STX\EOT+\DC2\ACK\218\ENQ\NUL\219\ENQ\SOH\n\
    \\v\n\
    \\ETX\EOT+\SOH\DC2\EOT\218\ENQ\b'\n\
    \\f\n\
    \\STX\EOT,\DC2\ACK\221\ENQ\NUL\154\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT,\SOH\DC2\EOT\221\ENQ\b/\n\
    \\f\n\
    \\EOT\EOT,\STX\NUL\DC2\EOT\222\ENQ\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT,\STX\NUL\ENQ\DC2\EOT\222\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\NUL\SOH\DC2\EOT\222\ENQ\v\DC4\n\
    \\r\n\
    \\ENQ\EOT,\STX\NUL\ETX\DC2\EOT\222\ENQ\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT,\STX\SOH\DC2\EOT\223\ENQ\EOT\ESC\n\
    \\r\n\
    \\ENQ\EOT,\STX\SOH\ENQ\DC2\EOT\223\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\SOH\SOH\DC2\EOT\223\ENQ\v\SYN\n\
    \\r\n\
    \\ENQ\EOT,\STX\SOH\ETX\DC2\EOT\223\ENQ\EM\SUB\n\
    \\f\n\
    \\EOT\EOT,\STX\STX\DC2\EOT\224\ENQ\EOT:\n\
    \\r\n\
    \\ENQ\EOT,\STX\STX\ACK\DC2\EOT\224\ENQ\EOT'\n\
    \\r\n\
    \\ENQ\EOT,\STX\STX\SOH\DC2\EOT\224\ENQ(5\n\
    \\r\n\
    \\ENQ\EOT,\STX\STX\ETX\DC2\EOT\224\ENQ89\n\
    \O\n\
    \\EOT\EOT,\STX\ETX\DC2\EOT\226\ENQ\EOT7\SUBA The task queue to start this workflow on, if it will be started\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETX\ACK\DC2\EOT\226\ENQ\EOT'\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETX\SOH\DC2\EOT\226\ENQ(2\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETX\ETX\DC2\EOT\226\ENQ56\n\
    \m\n\
    \\EOT\EOT,\STX\EOT\DC2\EOT\228\ENQ\EOT.\SUB_ Serialized arguments to the workflow. These are passed as arguments to the workflow function.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\EOT\ACK\DC2\EOT\228\ENQ\EOT#\n\
    \\r\n\
    \\ENQ\EOT,\STX\EOT\SOH\DC2\EOT\228\ENQ$)\n\
    \\r\n\
    \\ENQ\EOT,\STX\EOT\ETX\DC2\EOT\228\ENQ,-\n\
    \V\n\
    \\EOT\EOT,\STX\ENQ\DC2\EOT\230\ENQ\EOT<\SUBH Total workflow execution timeout including retries and continue as new\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\ENQ\ACK\DC2\EOT\230\ENQ\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT,\STX\ENQ\SOH\DC2\EOT\230\ENQ\GS7\n\
    \\r\n\
    \\ENQ\EOT,\STX\ENQ\ETX\DC2\EOT\230\ENQ:;\n\
    \0\n\
    \\EOT\EOT,\STX\ACK\DC2\EOT\232\ENQ\EOT6\SUB\" Timeout of a single workflow run\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\ACK\ACK\DC2\EOT\232\ENQ\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT,\STX\ACK\SOH\DC2\EOT\232\ENQ\GS1\n\
    \\r\n\
    \\ENQ\EOT,\STX\ACK\ETX\DC2\EOT\232\ENQ45\n\
    \1\n\
    \\EOT\EOT,\STX\a\DC2\EOT\234\ENQ\EOT7\SUB# Timeout of a single workflow task\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\a\ACK\DC2\EOT\234\ENQ\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT,\STX\a\SOH\DC2\EOT\234\ENQ\GS2\n\
    \\r\n\
    \\ENQ\EOT,\STX\a\ETX\DC2\EOT\234\ENQ56\n\
    \1\n\
    \\EOT\EOT,\STX\b\DC2\EOT\236\ENQ\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\b\ENQ\DC2\EOT\236\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\b\SOH\DC2\EOT\236\ENQ\v\DC3\n\
    \\r\n\
    \\ENQ\EOT,\STX\b\ETX\DC2\EOT\236\ENQ\SYN\ETB\n\
    \8\n\
    \\EOT\EOT,\STX\t\DC2\EOT\238\ENQ\EOT\ESC\SUB* Used to de-dupe signal w/ start requests\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\t\ENQ\DC2\EOT\238\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\t\SOH\DC2\EOT\238\ENQ\v\NAK\n\
    \\r\n\
    \\ENQ\EOT,\STX\t\ETX\DC2\EOT\238\ENQ\CAN\SUB\n\
    \\139\STX\n\
    \\EOT\EOT,\STX\n\
    \\DC2\EOT\243\ENQ\EOTN\SUB\252\SOH Defines whether to allow re-using the workflow id from a previously *closed* workflow.\n\
    \ The default policy is WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE.\n\
    \\n\
    \ See `workflow_id_reuse_policy` for handling a workflow id duplication with a *running* workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\n\
    \\ACK\DC2\EOT\243\ENQ\EOT/\n\
    \\r\n\
    \\ENQ\EOT,\STX\n\
    \\SOH\DC2\EOT\243\ENQ0H\n\
    \\r\n\
    \\ENQ\EOT,\STX\n\
    \\ETX\DC2\EOT\243\ENQKM\n\
    \\190\STX\n\
    \\EOT\EOT,\STX\v\DC2\EOT\249\ENQ\EOTT\SUB\175\STX Defines how to resolve a workflow id conflict with a *running* workflow.\n\
    \ The default policy is WORKFLOW_ID_CONFLICT_POLICY_USE_EXISTING.\n\
    \ Note that WORKFLOW_ID_CONFLICT_POLICY_FAIL is an invalid option.\n\
    \\n\
    \ See `workflow_id_reuse_policy` for handling a workflow id duplication with a *closed* workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\v\ACK\DC2\EOT\249\ENQ\EOT2\n\
    \\r\n\
    \\ENQ\EOT,\STX\v\SOH\DC2\EOT\249\ENQ3N\n\
    \\r\n\
    \\ENQ\EOT,\STX\v\ETX\DC2\EOT\249\ENQQS\n\
    \V\n\
    \\EOT\EOT,\STX\f\DC2\EOT\251\ENQ\EOT\FS\SUBH The workflow author-defined name of the signal to send to the workflow\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\f\ENQ\DC2\EOT\251\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\f\SOH\DC2\EOT\251\ENQ\v\SYN\n\
    \\r\n\
    \\ENQ\EOT,\STX\f\ETX\DC2\EOT\251\ENQ\EM\ESC\n\
    \>\n\
    \\EOT\EOT,\STX\r\DC2\EOT\253\ENQ\EOT6\SUB0 Serialized value(s) to provide with the signal\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\r\ACK\DC2\EOT\253\ENQ\EOT#\n\
    \\r\n\
    \\ENQ\EOT,\STX\r\SOH\DC2\EOT\253\ENQ$0\n\
    \\r\n\
    \\ENQ\EOT,\STX\r\ETX\DC2\EOT\253\ENQ35\n\
    \\SUB\n\
    \\EOT\EOT,\STX\SO\DC2\EOT\255\ENQ\EOT\CAN\SUB\f Deprecated\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\SO\ENQ\DC2\EOT\255\ENQ\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\SO\SOH\DC2\EOT\255\ENQ\v\DC2\n\
    \\r\n\
    \\ENQ\EOT,\STX\SO\ETX\DC2\EOT\255\ENQ\NAK\ETB\n\
    \-\n\
    \\EOT\EOT,\STX\SI\DC2\EOT\129\ACK\EOT9\SUB\US Retry policy for the workflow\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\SI\ACK\DC2\EOT\129\ACK\EOT&\n\
    \\r\n\
    \\ENQ\EOT,\STX\SI\SOH\DC2\EOT\129\ACK'3\n\
    \\r\n\
    \\ENQ\EOT,\STX\SI\ETX\DC2\EOT\129\ACK68\n\
    \V\n\
    \\EOT\EOT,\STX\DLE\DC2\EOT\131\ACK\EOT\RS\SUBH See https://docs.temporal.io/docs/content/what-is-a-temporal-cron-job/\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\DLE\ENQ\DC2\EOT\131\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\DLE\SOH\DC2\EOT\131\ACK\v\CAN\n\
    \\r\n\
    \\ENQ\EOT,\STX\DLE\ETX\DC2\EOT\131\ACK\ESC\GS\n\
    \\f\n\
    \\EOT\EOT,\STX\DC1\DC2\EOT\132\ACK\EOT*\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC1\ACK\DC2\EOT\132\ACK\EOT\US\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC1\SOH\DC2\EOT\132\ACK $\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC1\ETX\DC2\EOT\132\ACK')\n\
    \\f\n\
    \\EOT\EOT,\STX\DC2\DC2\EOT\133\ACK\EOTC\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC2\ACK\DC2\EOT\133\ACK\EOT+\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC2\SOH\DC2\EOT\133\ACK,=\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC2\ETX\DC2\EOT\133\ACK@B\n\
    \\f\n\
    \\EOT\EOT,\STX\DC3\DC2\EOT\134\ACK\EOT.\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC3\ACK\DC2\EOT\134\ACK\EOT!\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC3\SOH\DC2\EOT\134\ACK\"(\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC3\ETX\DC2\EOT\134\ACK+-\n\
    \\199\ETX\n\
    \\EOT\EOT,\STX\DC4\DC2\EOT\140\ACK\EOT7\SUB\184\ETX Time to wait before dispatching the first workflow task. Cannot be used with `cron_schedule`.\n\
    \ Note that the signal will be delivered with the first workflow task. If the workflow gets\n\
    \ another SignalWithStartWorkflow before the delay a workflow task will be dispatched immediately\n\
    \ and the rest of the delay period will be ignored, even if that request also had a delay.\n\
    \ Signal via SignalWorkflowExecution will not unblock the workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC4\ACK\DC2\EOT\140\ACK\EOT\FS\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC4\SOH\DC2\EOT\140\ACK\GS1\n\
    \\r\n\
    \\ENQ\EOT,\STX\DC4\ETX\DC2\EOT\140\ACK46\n\
    \\v\n\
    \\ETX\EOT,\t\DC2\EOT\141\ACK\EOT\DLE\n\
    \\f\n\
    \\EOT\EOT,\t\NUL\DC2\EOT\141\ACK\r\SI\n\
    \\r\n\
    \\ENQ\EOT,\t\NUL\SOH\DC2\EOT\141\ACK\r\SI\n\
    \\r\n\
    \\ENQ\EOT,\t\NUL\STX\DC2\EOT\141\ACK\r\SI\n\
    \\208\SOH\n\
    \\EOT\EOT,\STX\NAK\DC2\EOT\145\ACK\EOT8\SUB\193\SOH Metadata on the workflow if it is started. This is carried over to the WorkflowExecutionInfo\n\
    \ for use by user interfaces to display the fixed as-of-start summary and details of the\n\
    \ workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\NAK\ACK\DC2\EOT\145\ACK\EOT$\n\
    \\r\n\
    \\ENQ\EOT,\STX\NAK\SOH\DC2\EOT\145\ACK%2\n\
    \\r\n\
    \\ENQ\EOT,\STX\NAK\ETX\DC2\EOT\145\ACK57\n\
    \n\n\
    \\EOT\EOT,\STX\SYN\DC2\EOT\148\ACK\EOT4\SUB` Links to be associated with the WorkflowExecutionStarted and WorkflowExecutionSignaled events.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\SYN\EOT\DC2\EOT\148\ACK\EOT\f\n\
    \\r\n\
    \\ENQ\EOT,\STX\SYN\ACK\DC2\EOT\148\ACK\r(\n\
    \\r\n\
    \\ENQ\EOT,\STX\SYN\SOH\DC2\EOT\148\ACK).\n\
    \\r\n\
    \\ENQ\EOT,\STX\SYN\ETX\DC2\EOT\148\ACK13\n\
    \\205\SOH\n\
    \\EOT\EOT,\STX\ETB\DC2\EOT\151\ACK\EOTI\SUB\190\SOH If set, takes precedence over the Versioning Behavior sent by the SDK on Workflow Task completion.\n\
    \ To unset the override after the workflow is running, use UpdateWorkflowExecutionOptions.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETB\ACK\DC2\EOT\151\ACK\EOT/\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETB\SOH\DC2\EOT\151\ACK0C\n\
    \\r\n\
    \\ENQ\EOT,\STX\ETB\ETX\DC2\EOT\151\ACKFH\n\
    \!\n\
    \\EOT\EOT,\STX\CAN\DC2\EOT\153\ACK\EOT2\SUB\DC3 Priority metadata\n\
    \\n\
    \\r\n\
    \\ENQ\EOT,\STX\CAN\ACK\DC2\EOT\153\ACK\EOT#\n\
    \\r\n\
    \\ENQ\EOT,\STX\CAN\SOH\DC2\EOT\153\ACK$,\n\
    \\r\n\
    \\ENQ\EOT,\STX\CAN\ETX\DC2\EOT\153\ACK/1\n\
    \\f\n\
    \\STX\EOT-\DC2\ACK\156\ACK\NUL\161\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT-\SOH\DC2\EOT\156\ACK\b0\n\
    \j\n\
    \\EOT\EOT-\STX\NUL\DC2\EOT\158\ACK\EOT\SYN\SUB\\ The run id of the workflow that was started - or just signaled, if it was already running.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT-\STX\NUL\ENQ\DC2\EOT\158\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT-\STX\NUL\SOH\DC2\EOT\158\ACK\v\DC1\n\
    \\r\n\
    \\ENQ\EOT-\STX\NUL\ETX\DC2\EOT\158\ACK\DC4\NAK\n\
    \4\n\
    \\EOT\EOT-\STX\SOH\DC2\EOT\160\ACK\EOT\NAK\SUB& If true, a new workflow was started.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT-\STX\SOH\ENQ\DC2\EOT\160\ACK\EOT\b\n\
    \\r\n\
    \\ENQ\EOT-\STX\SOH\SOH\DC2\EOT\160\ACK\t\DLE\n\
    \\r\n\
    \\ENQ\EOT-\STX\SOH\ETX\DC2\EOT\160\ACK\DC3\DC4\n\
    \\f\n\
    \\STX\EOT.\DC2\ACK\163\ACK\NUL\180\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT.\SOH\DC2\EOT\163\ACK\b%\n\
    \\f\n\
    \\EOT\EOT.\STX\NUL\DC2\EOT\164\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT.\STX\NUL\ENQ\DC2\EOT\164\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\NUL\SOH\DC2\EOT\164\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT.\STX\NUL\ETX\DC2\EOT\164\ACK\ETB\CAN\n\
    \\157\STX\n\
    \\EOT\EOT.\STX\SOH\DC2\EOT\168\ACK\EOTD\SUB\142\STX The workflow to reset. If this contains a run ID then the workflow will be reset back to the\n\
    \ provided event ID in that run. Otherwise it will be reset to the provided event ID in the\n\
    \ current run. In all cases the current run will be terminated and a new run started.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\SOH\ACK\DC2\EOT\168\ACK\EOT,\n\
    \\r\n\
    \\ENQ\EOT.\STX\SOH\SOH\DC2\EOT\168\ACK-?\n\
    \\r\n\
    \\ENQ\EOT.\STX\SOH\ETX\DC2\EOT\168\ACKBC\n\
    \\f\n\
    \\EOT\EOT.\STX\STX\DC2\EOT\169\ACK\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOT.\STX\STX\ENQ\DC2\EOT\169\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\STX\SOH\DC2\EOT\169\ACK\v\DC1\n\
    \\r\n\
    \\ENQ\EOT.\STX\STX\ETX\DC2\EOT\169\ACK\DC4\NAK\n\
    \\152\SOH\n\
    \\EOT\EOT.\STX\ETX\DC2\EOT\172\ACK\EOT,\SUB\137\SOH The id of a `WORKFLOW_TASK_COMPLETED`,`WORKFLOW_TASK_TIMED_OUT`, `WORKFLOW_TASK_FAILED`, or\n\
    \ `WORKFLOW_TASK_STARTED` event to reset to.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\ETX\ENQ\DC2\EOT\172\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT.\STX\ETX\SOH\DC2\EOT\172\ACK\n\
    \'\n\
    \\r\n\
    \\ENQ\EOT.\STX\ETX\ETX\DC2\EOT\172\ACK*+\n\
    \.\n\
    \\EOT\EOT.\STX\EOT\DC2\EOT\174\ACK\EOT\SUB\SUB  Used to de-dupe reset requests\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\EOT\ENQ\DC2\EOT\174\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\EOT\SOH\DC2\EOT\174\ACK\v\NAK\n\
    \\r\n\
    \\ENQ\EOT.\STX\EOT\ETX\DC2\EOT\174\ACK\CAN\EM\n\
    \\\\n\
    \\EOT\EOT.\STX\ENQ\DC2\EOT\177\ACK\EOTB\SUBN Event types to be reapplied (deprecated)\n\
    \ Default: RESET_REAPPLY_TYPE_SIGNAL\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\ENQ\ACK\DC2\EOT\177\ACK\EOT*\n\
    \\r\n\
    \\ENQ\EOT.\STX\ENQ\SOH\DC2\EOT\177\ACK+=\n\
    \\r\n\
    \\ENQ\EOT.\STX\ENQ\ETX\DC2\EOT\177\ACK@A\n\
    \/\n\
    \\EOT\EOT.\STX\ACK\DC2\EOT\179\ACK\EOT[\SUB! Event types not to be reapplied\n\
    \\n\
    \\r\n\
    \\ENQ\EOT.\STX\ACK\EOT\DC2\EOT\179\ACK\EOT\f\n\
    \\r\n\
    \\ENQ\EOT.\STX\ACK\ACK\DC2\EOT\179\ACK\r:\n\
    \\r\n\
    \\ENQ\EOT.\STX\ACK\SOH\DC2\EOT\179\ACK;V\n\
    \\r\n\
    \\ENQ\EOT.\STX\ACK\ETX\DC2\EOT\179\ACKYZ\n\
    \\f\n\
    \\STX\EOT/\DC2\ACK\182\ACK\NUL\184\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT/\SOH\DC2\EOT\182\ACK\b&\n\
    \\f\n\
    \\EOT\EOT/\STX\NUL\DC2\EOT\183\ACK\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOT/\STX\NUL\ENQ\DC2\EOT\183\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT/\STX\NUL\SOH\DC2\EOT\183\ACK\v\DC1\n\
    \\r\n\
    \\ENQ\EOT/\STX\NUL\ETX\DC2\EOT\183\ACK\DC4\NAK\n\
    \\f\n\
    \\STX\EOT0\DC2\ACK\186\ACK\NUL\201\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT0\SOH\DC2\EOT\186\ACK\b)\n\
    \\f\n\
    \\EOT\EOT0\STX\NUL\DC2\EOT\187\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT0\STX\NUL\ENQ\DC2\EOT\187\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\NUL\SOH\DC2\EOT\187\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT0\STX\NUL\ETX\DC2\EOT\187\ACK\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT0\STX\SOH\DC2\EOT\188\ACK\EOTD\n\
    \\r\n\
    \\ENQ\EOT0\STX\SOH\ACK\DC2\EOT\188\ACK\EOT,\n\
    \\r\n\
    \\ENQ\EOT0\STX\SOH\SOH\DC2\EOT\188\ACK-?\n\
    \\r\n\
    \\ENQ\EOT0\STX\SOH\ETX\DC2\EOT\188\ACKBC\n\
    \\f\n\
    \\EOT\EOT0\STX\STX\DC2\EOT\189\ACK\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOT0\STX\STX\ENQ\DC2\EOT\189\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\STX\SOH\DC2\EOT\189\ACK\v\DC1\n\
    \\r\n\
    \\ENQ\EOT0\STX\STX\ETX\DC2\EOT\189\ACK\DC4\NAK\n\
    \T\n\
    \\EOT\EOT0\STX\ETX\DC2\EOT\191\ACK\EOT0\SUBF Serialized additional information to attach to the termination event\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\ETX\ACK\DC2\EOT\191\ACK\EOT#\n\
    \\r\n\
    \\ENQ\EOT0\STX\ETX\SOH\DC2\EOT\191\ACK$+\n\
    \\r\n\
    \\ENQ\EOT0\STX\ETX\ETX\DC2\EOT\191\ACK./\n\
    \1\n\
    \\EOT\EOT0\STX\EOT\DC2\EOT\193\ACK\EOT\CAN\SUB# The identity of the worker/client\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\EOT\ENQ\DC2\EOT\193\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\EOT\SOH\DC2\EOT\193\ACK\v\DC3\n\
    \\r\n\
    \\ENQ\EOT0\STX\EOT\ETX\DC2\EOT\193\ACK\SYN\ETB\n\
    \\208\SOH\n\
    \\EOT\EOT0\STX\ENQ\DC2\EOT\197\ACK\EOT&\SUB\193\SOH If set, this call will error if the most recent (if no run id is set on\n\
    \ `workflow_execution`), or specified (if it is) workflow execution is not part of the same\n\
    \ execution chain as this id.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\ENQ\ENQ\DC2\EOT\197\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\ENQ\SOH\DC2\EOT\197\ACK\v!\n\
    \\r\n\
    \\ENQ\EOT0\STX\ENQ\ETX\DC2\EOT\197\ACK$%\n\
    \R\n\
    \\EOT\EOT0\STX\ACK\DC2\EOT\200\ACK\EOT3\SUBD Links to be associated with the WorkflowExecutionTerminated event.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT0\STX\ACK\EOT\DC2\EOT\200\ACK\EOT\f\n\
    \\r\n\
    \\ENQ\EOT0\STX\ACK\ACK\DC2\EOT\200\ACK\r(\n\
    \\r\n\
    \\ENQ\EOT0\STX\ACK\SOH\DC2\EOT\200\ACK).\n\
    \\r\n\
    \\ENQ\EOT0\STX\ACK\ETX\DC2\EOT\200\ACK12\n\
    \\f\n\
    \\STX\EOT1\DC2\ACK\203\ACK\NUL\204\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT1\SOH\DC2\EOT\203\ACK\b*\n\
    \\f\n\
    \\STX\EOT2\DC2\ACK\206\ACK\NUL\210\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT2\SOH\DC2\EOT\206\ACK\b&\n\
    \\f\n\
    \\EOT\EOT2\STX\NUL\DC2\EOT\207\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT2\STX\NUL\ENQ\DC2\EOT\207\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT2\STX\NUL\SOH\DC2\EOT\207\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT2\STX\NUL\ETX\DC2\EOT\207\ACK\ETB\CAN\n\
    \a\n\
    \\EOT\EOT2\STX\SOH\DC2\EOT\209\ACK\EOTD\SUBS Workflow Execution to delete. If run_id is not specified, the latest one is used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT2\STX\SOH\ACK\DC2\EOT\209\ACK\EOT,\n\
    \\r\n\
    \\ENQ\EOT2\STX\SOH\SOH\DC2\EOT\209\ACK-?\n\
    \\r\n\
    \\ENQ\EOT2\STX\SOH\ETX\DC2\EOT\209\ACKBC\n\
    \\f\n\
    \\STX\EOT3\DC2\ACK\212\ACK\NUL\213\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT3\SOH\DC2\EOT\212\ACK\b'\n\
    \\f\n\
    \\STX\EOT4\DC2\ACK\215\ACK\NUL\224\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT4\SOH\DC2\EOT\215\ACK\b)\n\
    \\f\n\
    \\EOT\EOT4\STX\NUL\DC2\EOT\216\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT4\STX\NUL\ENQ\DC2\EOT\216\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT4\STX\NUL\SOH\DC2\EOT\216\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT4\STX\NUL\ETX\DC2\EOT\216\ACK\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT4\STX\SOH\DC2\EOT\217\ACK\EOT \n\
    \\r\n\
    \\ENQ\EOT4\STX\SOH\ENQ\DC2\EOT\217\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT4\STX\SOH\SOH\DC2\EOT\217\ACK\n\
    \\ESC\n\
    \\r\n\
    \\ENQ\EOT4\STX\SOH\ETX\DC2\EOT\217\ACK\RS\US\n\
    \\f\n\
    \\EOT\EOT4\STX\STX\DC2\EOT\218\ACK\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT4\STX\STX\ENQ\DC2\EOT\218\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT4\STX\STX\SOH\DC2\EOT\218\ACK\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT4\STX\STX\ETX\DC2\EOT\218\ACK\FS\GS\n\
    \\f\n\
    \\EOT\EOT4\STX\ETX\DC2\EOT\219\ACK\EOTA\n\
    \\r\n\
    \\ENQ\EOT4\STX\ETX\ACK\DC2\EOT\219\ACK\EOT*\n\
    \\r\n\
    \\ENQ\EOT4\STX\ETX\SOH\DC2\EOT\219\ACK+<\n\
    \\r\n\
    \\ENQ\EOT4\STX\ETX\ETX\DC2\EOT\219\ACK?@\n\
    \\SO\n\
    \\EOT\EOT4\b\NUL\DC2\ACK\220\ACK\EOT\223\ACK\ENQ\n\
    \\r\n\
    \\ENQ\EOT4\b\NUL\SOH\DC2\EOT\220\ACK\n\
    \\DC1\n\
    \\f\n\
    \\EOT\EOT4\STX\EOT\DC2\EOT\221\ACK\bL\n\
    \\r\n\
    \\ENQ\EOT4\STX\EOT\ACK\DC2\EOT\221\ACK\b6\n\
    \\r\n\
    \\ENQ\EOT4\STX\EOT\SOH\DC2\EOT\221\ACK7G\n\
    \\r\n\
    \\ENQ\EOT4\STX\EOT\ETX\DC2\EOT\221\ACKJK\n\
    \\f\n\
    \\EOT\EOT4\STX\ENQ\DC2\EOT\222\ACK\bB\n\
    \\r\n\
    \\ENQ\EOT4\STX\ENQ\ACK\DC2\EOT\222\ACK\b1\n\
    \\r\n\
    \\ENQ\EOT4\STX\ENQ\SOH\DC2\EOT\222\ACK2=\n\
    \\r\n\
    \\ENQ\EOT4\STX\ENQ\ETX\DC2\EOT\222\ACK@A\n\
    \\f\n\
    \\STX\EOT5\DC2\ACK\226\ACK\NUL\229\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT5\SOH\DC2\EOT\226\ACK\b*\n\
    \\f\n\
    \\EOT\EOT5\STX\NUL\DC2\EOT\227\ACK\EOTK\n\
    \\r\n\
    \\ENQ\EOT5\STX\NUL\EOT\DC2\EOT\227\ACK\EOT\f\n\
    \\r\n\
    \\ENQ\EOT5\STX\NUL\ACK\DC2\EOT\227\ACK\r;\n\
    \\r\n\
    \\ENQ\EOT5\STX\NUL\SOH\DC2\EOT\227\ACK<F\n\
    \\r\n\
    \\ENQ\EOT5\STX\NUL\ETX\DC2\EOT\227\ACKIJ\n\
    \\f\n\
    \\EOT\EOT5\STX\SOH\DC2\EOT\228\ACK\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT5\STX\SOH\ENQ\DC2\EOT\228\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT5\STX\SOH\SOH\DC2\EOT\228\ACK\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT5\STX\SOH\ETX\DC2\EOT\228\ACK\FS\GS\n\
    \\f\n\
    \\STX\EOT6\DC2\ACK\231\ACK\NUL\241\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT6\SOH\DC2\EOT\231\ACK\b+\n\
    \\f\n\
    \\EOT\EOT6\STX\NUL\DC2\EOT\232\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT6\STX\NUL\ENQ\DC2\EOT\232\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT6\STX\NUL\SOH\DC2\EOT\232\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT6\STX\NUL\ETX\DC2\EOT\232\ACK\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT6\STX\SOH\DC2\EOT\233\ACK\EOT \n\
    \\r\n\
    \\ENQ\EOT6\STX\SOH\ENQ\DC2\EOT\233\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT6\STX\SOH\SOH\DC2\EOT\233\ACK\n\
    \\ESC\n\
    \\r\n\
    \\ENQ\EOT6\STX\SOH\ETX\DC2\EOT\233\ACK\RS\US\n\
    \\f\n\
    \\EOT\EOT6\STX\STX\DC2\EOT\234\ACK\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT6\STX\STX\ENQ\DC2\EOT\234\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT6\STX\STX\SOH\DC2\EOT\234\ACK\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT6\STX\STX\ETX\DC2\EOT\234\ACK\FS\GS\n\
    \\f\n\
    \\EOT\EOT6\STX\ETX\DC2\EOT\235\ACK\EOTA\n\
    \\r\n\
    \\ENQ\EOT6\STX\ETX\ACK\DC2\EOT\235\ACK\EOT*\n\
    \\r\n\
    \\ENQ\EOT6\STX\ETX\SOH\DC2\EOT\235\ACK+<\n\
    \\r\n\
    \\ENQ\EOT6\STX\ETX\ETX\DC2\EOT\235\ACK?@\n\
    \\SO\n\
    \\EOT\EOT6\b\NUL\DC2\ACK\236\ACK\EOT\240\ACK\ENQ\n\
    \\r\n\
    \\ENQ\EOT6\b\NUL\SOH\DC2\EOT\236\ACK\n\
    \\DC1\n\
    \\f\n\
    \\EOT\EOT6\STX\EOT\DC2\EOT\237\ACK\bL\n\
    \\r\n\
    \\ENQ\EOT6\STX\EOT\ACK\DC2\EOT\237\ACK\b6\n\
    \\r\n\
    \\ENQ\EOT6\STX\EOT\SOH\DC2\EOT\237\ACK7G\n\
    \\r\n\
    \\ENQ\EOT6\STX\EOT\ETX\DC2\EOT\237\ACKJK\n\
    \\f\n\
    \\EOT\EOT6\STX\ENQ\DC2\EOT\238\ACK\bB\n\
    \\r\n\
    \\ENQ\EOT6\STX\ENQ\ACK\DC2\EOT\238\ACK\b1\n\
    \\r\n\
    \\ENQ\EOT6\STX\ENQ\SOH\DC2\EOT\238\ACK2=\n\
    \\r\n\
    \\ENQ\EOT6\STX\ENQ\ETX\DC2\EOT\238\ACK@A\n\
    \\f\n\
    \\EOT\EOT6\STX\ACK\DC2\EOT\239\ACK\b>\n\
    \\r\n\
    \\ENQ\EOT6\STX\ACK\ACK\DC2\EOT\239\ACK\b+\n\
    \\r\n\
    \\ENQ\EOT6\STX\ACK\SOH\DC2\EOT\239\ACK,9\n\
    \\r\n\
    \\ENQ\EOT6\STX\ACK\ETX\DC2\EOT\239\ACK<=\n\
    \\f\n\
    \\STX\EOT7\DC2\ACK\243\ACK\NUL\246\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT7\SOH\DC2\EOT\243\ACK\b,\n\
    \\f\n\
    \\EOT\EOT7\STX\NUL\DC2\EOT\244\ACK\EOTK\n\
    \\r\n\
    \\ENQ\EOT7\STX\NUL\EOT\DC2\EOT\244\ACK\EOT\f\n\
    \\r\n\
    \\ENQ\EOT7\STX\NUL\ACK\DC2\EOT\244\ACK\r;\n\
    \\r\n\
    \\ENQ\EOT7\STX\NUL\SOH\DC2\EOT\244\ACK<F\n\
    \\r\n\
    \\ENQ\EOT7\STX\NUL\ETX\DC2\EOT\244\ACKIJ\n\
    \\f\n\
    \\EOT\EOT7\STX\SOH\DC2\EOT\245\ACK\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT7\STX\SOH\ENQ\DC2\EOT\245\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT7\STX\SOH\SOH\DC2\EOT\245\ACK\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT7\STX\SOH\ETX\DC2\EOT\245\ACK\FS\GS\n\
    \\f\n\
    \\STX\EOT8\DC2\ACK\248\ACK\NUL\253\ACK\SOH\n\
    \\v\n\
    \\ETX\EOT8\SOH\DC2\EOT\248\ACK\b%\n\
    \\f\n\
    \\EOT\EOT8\STX\NUL\DC2\EOT\249\ACK\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT8\STX\NUL\ENQ\DC2\EOT\249\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT8\STX\NUL\SOH\DC2\EOT\249\ACK\v\DC4\n\
    \\r\n\
    \\ENQ\EOT8\STX\NUL\ETX\DC2\EOT\249\ACK\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT8\STX\SOH\DC2\EOT\250\ACK\EOT\CAN\n\
    \\r\n\
    \\ENQ\EOT8\STX\SOH\ENQ\DC2\EOT\250\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT8\STX\SOH\SOH\DC2\EOT\250\ACK\n\
    \\DC3\n\
    \\r\n\
    \\ENQ\EOT8\STX\SOH\ETX\DC2\EOT\250\ACK\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT8\STX\STX\DC2\EOT\251\ACK\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT8\STX\STX\ENQ\DC2\EOT\251\ACK\EOT\t\n\
    \\r\n\
    \\ENQ\EOT8\STX\STX\SOH\DC2\EOT\251\ACK\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT8\STX\STX\ETX\DC2\EOT\251\ACK\FS\GS\n\
    \\f\n\
    \\EOT\EOT8\STX\ETX\DC2\EOT\252\ACK\EOT\NAK\n\
    \\r\n\
    \\ENQ\EOT8\STX\ETX\ENQ\DC2\EOT\252\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT8\STX\ETX\SOH\DC2\EOT\252\ACK\v\DLE\n\
    \\r\n\
    \\ENQ\EOT8\STX\ETX\ETX\DC2\EOT\252\ACK\DC3\DC4\n\
    \\f\n\
    \\STX\EOT9\DC2\ACK\255\ACK\NUL\130\a\SOH\n\
    \\v\n\
    \\ETX\EOT9\SOH\DC2\EOT\255\ACK\b&\n\
    \\f\n\
    \\EOT\EOT9\STX\NUL\DC2\EOT\128\a\EOTK\n\
    \\r\n\
    \\ENQ\EOT9\STX\NUL\EOT\DC2\EOT\128\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOT9\STX\NUL\ACK\DC2\EOT\128\a\r;\n\
    \\r\n\
    \\ENQ\EOT9\STX\NUL\SOH\DC2\EOT\128\a<F\n\
    \\r\n\
    \\ENQ\EOT9\STX\NUL\ETX\DC2\EOT\128\aIJ\n\
    \\f\n\
    \\EOT\EOT9\STX\SOH\DC2\EOT\129\a\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT9\STX\SOH\ENQ\DC2\EOT\129\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT9\STX\SOH\SOH\DC2\EOT\129\a\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT9\STX\SOH\ETX\DC2\EOT\129\a\FS\GS\n\
    \\f\n\
    \\STX\EOT:\DC2\ACK\132\a\NUL\137\a\SOH\n\
    \\v\n\
    \\ETX\EOT:\SOH\DC2\EOT\132\a\b-\n\
    \\f\n\
    \\EOT\EOT:\STX\NUL\DC2\EOT\133\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT:\STX\NUL\ENQ\DC2\EOT\133\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT:\STX\NUL\SOH\DC2\EOT\133\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOT:\STX\NUL\ETX\DC2\EOT\133\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT:\STX\SOH\DC2\EOT\134\a\EOT\CAN\n\
    \\r\n\
    \\ENQ\EOT:\STX\SOH\ENQ\DC2\EOT\134\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT:\STX\SOH\SOH\DC2\EOT\134\a\n\
    \\DC3\n\
    \\r\n\
    \\ENQ\EOT:\STX\SOH\ETX\DC2\EOT\134\a\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT:\STX\STX\DC2\EOT\135\a\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT:\STX\STX\ENQ\DC2\EOT\135\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT:\STX\STX\SOH\DC2\EOT\135\a\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT:\STX\STX\ETX\DC2\EOT\135\a\FS\GS\n\
    \\f\n\
    \\EOT\EOT:\STX\ETX\DC2\EOT\136\a\EOT\NAK\n\
    \\r\n\
    \\ENQ\EOT:\STX\ETX\ENQ\DC2\EOT\136\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT:\STX\ETX\SOH\DC2\EOT\136\a\v\DLE\n\
    \\r\n\
    \\ENQ\EOT:\STX\ETX\ETX\DC2\EOT\136\a\DC3\DC4\n\
    \\f\n\
    \\STX\EOT;\DC2\ACK\139\a\NUL\142\a\SOH\n\
    \\v\n\
    \\ETX\EOT;\SOH\DC2\EOT\139\a\b.\n\
    \\f\n\
    \\EOT\EOT;\STX\NUL\DC2\EOT\140\a\EOTK\n\
    \\r\n\
    \\ENQ\EOT;\STX\NUL\EOT\DC2\EOT\140\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOT;\STX\NUL\ACK\DC2\EOT\140\a\r;\n\
    \\r\n\
    \\ENQ\EOT;\STX\NUL\SOH\DC2\EOT\140\a<F\n\
    \\r\n\
    \\ENQ\EOT;\STX\NUL\ETX\DC2\EOT\140\aIJ\n\
    \\f\n\
    \\EOT\EOT;\STX\SOH\DC2\EOT\141\a\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT;\STX\SOH\ENQ\DC2\EOT\141\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT;\STX\SOH\SOH\DC2\EOT\141\a\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT;\STX\SOH\ETX\DC2\EOT\141\a\FS\GS\n\
    \>\n\
    \\STX\EOT<\DC2\ACK\145\a\NUL\150\a\SOH\SUB0 Deprecated: Use with `ListWorkflowExecutions`.\n\
    \\n\
    \\v\n\
    \\ETX\EOT<\SOH\DC2\EOT\145\a\b%\n\
    \\f\n\
    \\EOT\EOT<\STX\NUL\DC2\EOT\146\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT<\STX\NUL\ENQ\DC2\EOT\146\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT<\STX\NUL\SOH\DC2\EOT\146\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOT<\STX\NUL\ETX\DC2\EOT\146\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT<\STX\SOH\DC2\EOT\147\a\EOT\CAN\n\
    \\r\n\
    \\ENQ\EOT<\STX\SOH\ENQ\DC2\EOT\147\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT<\STX\SOH\SOH\DC2\EOT\147\a\n\
    \\DC3\n\
    \\r\n\
    \\ENQ\EOT<\STX\SOH\ETX\DC2\EOT\147\a\SYN\ETB\n\
    \\f\n\
    \\EOT\EOT<\STX\STX\DC2\EOT\148\a\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT<\STX\STX\ENQ\DC2\EOT\148\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT<\STX\STX\SOH\DC2\EOT\148\a\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT<\STX\STX\ETX\DC2\EOT\148\a\FS\GS\n\
    \\f\n\
    \\EOT\EOT<\STX\ETX\DC2\EOT\149\a\EOT\NAK\n\
    \\r\n\
    \\ENQ\EOT<\STX\ETX\ENQ\DC2\EOT\149\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT<\STX\ETX\SOH\DC2\EOT\149\a\v\DLE\n\
    \\r\n\
    \\ENQ\EOT<\STX\ETX\ETX\DC2\EOT\149\a\DC3\DC4\n\
    \>\n\
    \\STX\EOT=\DC2\ACK\153\a\NUL\156\a\SOH\SUB0 Deprecated: Use with `ListWorkflowExecutions`.\n\
    \\n\
    \\v\n\
    \\ETX\EOT=\SOH\DC2\EOT\153\a\b&\n\
    \\f\n\
    \\EOT\EOT=\STX\NUL\DC2\EOT\154\a\EOTK\n\
    \\r\n\
    \\ENQ\EOT=\STX\NUL\EOT\DC2\EOT\154\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOT=\STX\NUL\ACK\DC2\EOT\154\a\r;\n\
    \\r\n\
    \\ENQ\EOT=\STX\NUL\SOH\DC2\EOT\154\a<F\n\
    \\r\n\
    \\ENQ\EOT=\STX\NUL\ETX\DC2\EOT\154\aIJ\n\
    \\f\n\
    \\EOT\EOT=\STX\SOH\DC2\EOT\155\a\EOT\RS\n\
    \\r\n\
    \\ENQ\EOT=\STX\SOH\ENQ\DC2\EOT\155\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT=\STX\SOH\SOH\DC2\EOT\155\a\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT=\STX\SOH\ETX\DC2\EOT\155\a\FS\GS\n\
    \\f\n\
    \\STX\EOT>\DC2\ACK\158\a\NUL\161\a\SOH\n\
    \\v\n\
    \\ETX\EOT>\SOH\DC2\EOT\158\a\b&\n\
    \\f\n\
    \\EOT\EOT>\STX\NUL\DC2\EOT\159\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT>\STX\NUL\ENQ\DC2\EOT\159\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT>\STX\NUL\SOH\DC2\EOT\159\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOT>\STX\NUL\ETX\DC2\EOT\159\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOT>\STX\SOH\DC2\EOT\160\a\EOT\NAK\n\
    \\r\n\
    \\ENQ\EOT>\STX\SOH\ENQ\DC2\EOT\160\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT>\STX\SOH\SOH\DC2\EOT\160\a\v\DLE\n\
    \\r\n\
    \\ENQ\EOT>\STX\SOH\ETX\DC2\EOT\160\a\DC3\DC4\n\
    \\f\n\
    \\STX\EOT?\DC2\ACK\163\a\NUL\179\a\SOH\n\
    \\v\n\
    \\ETX\EOT?\SOH\DC2\EOT\163\a\b'\n\
    \\204\STX\n\
    \\EOT\EOT?\STX\NUL\DC2\EOT\169\a\EOT\DC4\SUB\189\STX If `query` is not grouping by any field, the count is an approximate number\n\
    \ of workflows that matches the query.\n\
    \ If `query` is grouping by a field, the count is simply the sum of the counts\n\
    \ of the groups returned in the response. This number can be smaller than the\n\
    \ total number of workflows matching the query.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT?\STX\NUL\ENQ\DC2\EOT\169\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOT?\STX\NUL\SOH\DC2\EOT\169\a\n\
    \\SI\n\
    \\r\n\
    \\ENQ\EOT?\STX\NUL\ETX\DC2\EOT\169\a\DC2\DC3\n\
    \\162\SOH\n\
    \\EOT\EOT?\STX\SOH\DC2\EOT\173\a\EOT)\SUB\147\SOH `groups` contains the groups if the request is grouping by a field.\n\
    \ The list might not be complete, and the counts of each group is approximate.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT?\STX\SOH\EOT\DC2\EOT\173\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOT?\STX\SOH\ACK\DC2\EOT\173\a\r\GS\n\
    \\r\n\
    \\ENQ\EOT?\STX\SOH\SOH\DC2\EOT\173\a\RS$\n\
    \\r\n\
    \\ENQ\EOT?\STX\SOH\ETX\DC2\EOT\173\a'(\n\
    \\SO\n\
    \\EOT\EOT?\ETX\NUL\DC2\ACK\175\a\EOT\178\a\ENQ\n\
    \\r\n\
    \\ENQ\EOT?\ETX\NUL\SOH\DC2\EOT\175\a\f\FS\n\
    \\SO\n\
    \\ACK\EOT?\ETX\NUL\STX\NUL\DC2\EOT\176\a\bA\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\NUL\EOT\DC2\EOT\176\a\b\DLE\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\NUL\ACK\DC2\EOT\176\a\DC1/\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\NUL\SOH\DC2\EOT\176\a0<\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\NUL\ETX\DC2\EOT\176\a?@\n\
    \\SO\n\
    \\ACK\EOT?\ETX\NUL\STX\SOH\DC2\EOT\177\a\b\CAN\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\SOH\ENQ\DC2\EOT\177\a\b\r\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\SOH\SOH\DC2\EOT\177\a\SO\DC3\n\
    \\SI\n\
    \\a\EOT?\ETX\NUL\STX\SOH\ETX\DC2\EOT\177\a\SYN\ETB\n\
    \\f\n\
    \\STX\EOT@\DC2\ACK\181\a\NUL\182\a\SOH\n\
    \\v\n\
    \\ETX\EOT@\SOH\DC2\EOT\181\a\b\"\n\
    \\f\n\
    \\STX\EOTA\DC2\ACK\184\a\NUL\186\a\SOH\n\
    \\v\n\
    \\ETX\EOTA\SOH\DC2\EOT\184\a\b#\n\
    \\f\n\
    \\EOT\EOTA\STX\NUL\DC2\EOT\185\a\EOTA\n\
    \\r\n\
    \\ENQ\EOTA\STX\NUL\ACK\DC2\EOT\185\a\EOT7\n\
    \\r\n\
    \\ENQ\EOTA\STX\NUL\SOH\DC2\EOT\185\a8<\n\
    \\r\n\
    \\ENQ\EOTA\STX\NUL\ETX\DC2\EOT\185\a?@\n\
    \\f\n\
    \\STX\EOTB\DC2\ACK\188\a\NUL\209\a\SOH\n\
    \\v\n\
    \\ETX\EOTB\SOH\DC2\EOT\188\a\b(\n\
    \\f\n\
    \\EOT\EOTB\STX\NUL\DC2\EOT\189\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTB\STX\NUL\ENQ\DC2\EOT\189\a\EOT\t\n\
    \\r\n\
    \\ENQ\EOTB\STX\NUL\SOH\DC2\EOT\189\a\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOTB\STX\NUL\ETX\DC2\EOT\189\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTB\STX\SOH\DC2\EOT\190\a\EOT=\n\
    \\r\n\
    \\ENQ\EOTB\STX\SOH\ACK\DC2\EOT\190\a\EOT)\n\
    \\r\n\
    \\ENQ\EOTB\STX\SOH\SOH\DC2\EOT\190\a*8\n\
    \\r\n\
    \\ENQ\EOTB\STX\SOH\ETX\DC2\EOT\190\a;<\n\
    \}\n\
    \\EOT\EOTB\STX\STX\DC2\EOT\193\a\EOT5\SUBo The result of the query.\n\
    \ Mutually exclusive with `error_message` and `failure`. Set when the query succeeds.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTB\STX\STX\ACK\DC2\EOT\193\a\EOT#\n\
    \\r\n\
    \\ENQ\EOTB\STX\STX\SOH\DC2\EOT\193\a$0\n\
    \\r\n\
    \\ENQ\EOTB\STX\STX\ETX\DC2\EOT\193\a34\n\
    \\247\ETX\n\
    \\EOT\EOTB\STX\ETX\DC2\EOT\201\a\EOT\GS\SUB\232\ETX A plain error message that must be set if completed_type is QUERY_RESULT_TYPE_FAILED.\n\
    \ SDKs should also fill in the more complete `failure` field to provide the full context and\n\
    \ support encryption of failure information.\n\
    \ `error_message` will be duplicated if the `failure` field is present to support callers\n\
    \ that pre-date the addition of that field, regardless of whether or not a custom failure\n\
    \ converter is used.\n\
    \ Mutually exclusive with `query_result`. Set when the query fails.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTB\STX\ETX\ENQ\DC2\EOT\201\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTB\STX\ETX\SOH\DC2\EOT\201\a\v\CAN\n\
    \\r\n\
    \\ENQ\EOTB\STX\ETX\ETX\DC2\EOT\201\a\ESC\FS\n\
    \\v\n\
    \\ETX\EOTB\t\DC2\EOT\202\a\EOT\SI\n\
    \\f\n\
    \\EOT\EOTB\t\NUL\DC2\EOT\202\a\r\SO\n\
    \\r\n\
    \\ENQ\EOTB\t\NUL\SOH\DC2\EOT\202\a\r\SO\n\
    \\r\n\
    \\ENQ\EOTB\t\NUL\STX\DC2\EOT\202\a\r\SO\n\
    \\f\n\
    \\EOT\EOTB\STX\EOT\DC2\EOT\203\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTB\STX\EOT\ENQ\DC2\EOT\203\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTB\STX\EOT\SOH\DC2\EOT\203\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOTB\STX\EOT\ETX\DC2\EOT\203\a\ETB\CAN\n\
    \\144\STX\n\
    \\EOT\EOTB\STX\ENQ\DC2\EOT\208\a\EOT0\SUB\129\STX The full reason for this query failure. This field is newer than `error_message` and can be\n\
    \ encoded by the SDK's failure converter to support E2E encryption of messages and stack\n\
    \ traces.\n\
    \ Mutually exclusive with `query_result`. Set when the query fails.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTB\STX\ENQ\ACK\DC2\EOT\208\a\EOT#\n\
    \\r\n\
    \\ENQ\EOTB\STX\ENQ\SOH\DC2\EOT\208\a$+\n\
    \\r\n\
    \\ENQ\EOTB\STX\ENQ\ETX\DC2\EOT\208\a./\n\
    \\f\n\
    \\STX\EOTC\DC2\ACK\211\a\NUL\212\a\SOH\n\
    \\v\n\
    \\ETX\EOTC\SOH\DC2\EOT\211\a\b)\n\
    \\f\n\
    \\STX\EOTD\DC2\ACK\214\a\NUL\217\a\SOH\n\
    \\v\n\
    \\ETX\EOTD\SOH\DC2\EOT\214\a\b#\n\
    \\f\n\
    \\EOT\EOTD\STX\NUL\DC2\EOT\215\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTD\STX\NUL\ENQ\DC2\EOT\215\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTD\STX\NUL\SOH\DC2\EOT\215\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOTD\STX\NUL\ETX\DC2\EOT\215\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTD\STX\SOH\DC2\EOT\216\a\EOT;\n\
    \\r\n\
    \\ENQ\EOTD\STX\SOH\ACK\DC2\EOT\216\a\EOT,\n\
    \\r\n\
    \\ENQ\EOTD\STX\SOH\SOH\DC2\EOT\216\a-6\n\
    \\r\n\
    \\ENQ\EOTD\STX\SOH\ETX\DC2\EOT\216\a9:\n\
    \\f\n\
    \\STX\EOTE\DC2\ACK\219\a\NUL\220\a\SOH\n\
    \\v\n\
    \\ETX\EOTE\SOH\DC2\EOT\219\a\b$\n\
    \\f\n\
    \\STX\EOTF\DC2\ACK\222\a\NUL\227\a\SOH\n\
    \\v\n\
    \\ETX\EOTF\SOH\DC2\EOT\222\a\b\GS\n\
    \\f\n\
    \\EOT\EOTF\STX\NUL\DC2\EOT\223\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTF\STX\NUL\ENQ\DC2\EOT\223\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTF\STX\NUL\SOH\DC2\EOT\223\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOTF\STX\NUL\ETX\DC2\EOT\223\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTF\STX\SOH\DC2\EOT\224\a\EOT!\n\
    \\r\n\
    \\ENQ\EOTF\STX\SOH\ENQ\DC2\EOT\224\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTF\STX\SOH\SOH\DC2\EOT\224\a\v\FS\n\
    \\r\n\
    \\ENQ\EOTF\STX\SOH\ETX\DC2\EOT\224\a\US \n\
    \\f\n\
    \\EOT\EOTF\STX\STX\DC2\EOT\225\a\EOT\CAN\n\
    \\r\n\
    \\ENQ\EOTF\STX\STX\ENQ\DC2\EOT\225\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTF\STX\STX\SOH\DC2\EOT\225\a\v\DC3\n\
    \\r\n\
    \\ENQ\EOTF\STX\STX\ETX\DC2\EOT\225\a\SYN\ETB\n\
    \\f\n\
    \\EOT\EOTF\STX\ETX\DC2\EOT\226\a\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOTF\STX\ETX\ENQ\DC2\EOT\226\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTF\STX\ETX\SOH\DC2\EOT\226\a\v\DC1\n\
    \\r\n\
    \\ENQ\EOTF\STX\ETX\ETX\DC2\EOT\226\a\DC4\NAK\n\
    \\f\n\
    \\STX\EOTG\DC2\ACK\229\a\NUL\230\a\SOH\n\
    \\v\n\
    \\ETX\EOTG\SOH\DC2\EOT\229\a\b\RS\n\
    \\f\n\
    \\STX\EOTH\DC2\ACK\232\a\NUL\239\a\SOH\n\
    \\v\n\
    \\ETX\EOTH\SOH\DC2\EOT\232\a\b\FS\n\
    \\f\n\
    \\EOT\EOTH\STX\NUL\DC2\EOT\233\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTH\STX\NUL\ENQ\DC2\EOT\233\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTH\STX\NUL\SOH\DC2\EOT\233\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOTH\STX\NUL\ETX\DC2\EOT\233\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTH\STX\SOH\DC2\EOT\234\a\EOT;\n\
    \\r\n\
    \\ENQ\EOTH\STX\SOH\ACK\DC2\EOT\234\a\EOT,\n\
    \\r\n\
    \\ENQ\EOTH\STX\SOH\SOH\DC2\EOT\234\a-6\n\
    \\r\n\
    \\ENQ\EOTH\STX\SOH\ETX\DC2\EOT\234\a9:\n\
    \\f\n\
    \\EOT\EOTH\STX\STX\DC2\EOT\235\a\EOT2\n\
    \\r\n\
    \\ENQ\EOTH\STX\STX\ACK\DC2\EOT\235\a\EOT'\n\
    \\r\n\
    \\ENQ\EOTH\STX\STX\SOH\DC2\EOT\235\a(-\n\
    \\r\n\
    \\ENQ\EOTH\STX\STX\ETX\DC2\EOT\235\a01\n\
    \\151\SOH\n\
    \\EOT\EOTH\STX\ETX\DC2\EOT\238\a\EOTJ\SUB\136\SOH QueryRejectCondition can used to reject the query if workflow state does not satisfy condition.\n\
    \ Default: QUERY_REJECT_CONDITION_NONE.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTH\STX\ETX\ACK\DC2\EOT\238\a\EOT.\n\
    \\r\n\
    \\ENQ\EOTH\STX\ETX\SOH\DC2\EOT\238\a/E\n\
    \\r\n\
    \\ENQ\EOTH\STX\ETX\ETX\DC2\EOT\238\aHI\n\
    \\f\n\
    \\STX\EOTI\DC2\ACK\241\a\NUL\244\a\SOH\n\
    \\v\n\
    \\ETX\EOTI\SOH\DC2\EOT\241\a\b\GS\n\
    \\f\n\
    \\EOT\EOTI\STX\NUL\DC2\EOT\242\a\EOT5\n\
    \\r\n\
    \\ENQ\EOTI\STX\NUL\ACK\DC2\EOT\242\a\EOT#\n\
    \\r\n\
    \\ENQ\EOTI\STX\NUL\SOH\DC2\EOT\242\a$0\n\
    \\r\n\
    \\ENQ\EOTI\STX\NUL\ETX\DC2\EOT\242\a34\n\
    \\f\n\
    \\EOT\EOTI\STX\SOH\DC2\EOT\243\a\EOT;\n\
    \\r\n\
    \\ENQ\EOTI\STX\SOH\ACK\DC2\EOT\243\a\EOT'\n\
    \\r\n\
    \\ENQ\EOTI\STX\SOH\SOH\DC2\EOT\243\a(6\n\
    \\r\n\
    \\ENQ\EOTI\STX\SOH\ETX\DC2\EOT\243\a9:\n\
    \\f\n\
    \\STX\EOTJ\DC2\ACK\246\a\NUL\249\a\SOH\n\
    \\v\n\
    \\ETX\EOTJ\SOH\DC2\EOT\246\a\b(\n\
    \\f\n\
    \\EOT\EOTJ\STX\NUL\DC2\EOT\247\a\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTJ\STX\NUL\ENQ\DC2\EOT\247\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTJ\STX\NUL\SOH\DC2\EOT\247\a\v\DC4\n\
    \\r\n\
    \\ENQ\EOTJ\STX\NUL\ETX\DC2\EOT\247\a\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTJ\STX\SOH\DC2\EOT\248\a\EOT;\n\
    \\r\n\
    \\ENQ\EOTJ\STX\SOH\ACK\DC2\EOT\248\a\EOT,\n\
    \\r\n\
    \\ENQ\EOTJ\STX\SOH\SOH\DC2\EOT\248\a-6\n\
    \\r\n\
    \\ENQ\EOTJ\STX\SOH\ETX\DC2\EOT\248\a9:\n\
    \\f\n\
    \\STX\EOTK\DC2\ACK\251\a\NUL\132\b\SOH\n\
    \\v\n\
    \\ETX\EOTK\SOH\DC2\EOT\251\a\b)\n\
    \\f\n\
    \\EOT\EOTK\STX\NUL\DC2\EOT\252\a\EOTJ\n\
    \\r\n\
    \\ENQ\EOTK\STX\NUL\ACK\DC2\EOT\252\a\EOT4\n\
    \\r\n\
    \\ENQ\EOTK\STX\NUL\SOH\DC2\EOT\252\a5E\n\
    \\r\n\
    \\ENQ\EOTK\STX\NUL\ETX\DC2\EOT\252\aHI\n\
    \\f\n\
    \\EOT\EOTK\STX\SOH\DC2\EOT\253\a\EOTO\n\
    \\r\n\
    \\ENQ\EOTK\STX\SOH\ACK\DC2\EOT\253\a\EOT2\n\
    \\r\n\
    \\ENQ\EOTK\STX\SOH\SOH\DC2\EOT\253\a3J\n\
    \\r\n\
    \\ENQ\EOTK\STX\SOH\ETX\DC2\EOT\253\aMN\n\
    \\f\n\
    \\EOT\EOTK\STX\STX\DC2\EOT\254\a\EOTQ\n\
    \\r\n\
    \\ENQ\EOTK\STX\STX\EOT\DC2\EOT\254\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOTK\STX\STX\ACK\DC2\EOT\254\a\r9\n\
    \\r\n\
    \\ENQ\EOTK\STX\STX\SOH\DC2\EOT\254\a:L\n\
    \\r\n\
    \\ENQ\EOTK\STX\STX\ETX\DC2\EOT\254\aOP\n\
    \\f\n\
    \\EOT\EOTK\STX\ETX\DC2\EOT\255\a\EOTU\n\
    \\r\n\
    \\ENQ\EOTK\STX\ETX\EOT\DC2\EOT\255\a\EOT\f\n\
    \\r\n\
    \\ENQ\EOTK\STX\ETX\ACK\DC2\EOT\255\a\r?\n\
    \\r\n\
    \\ENQ\EOTK\STX\ETX\SOH\DC2\EOT\255\a@P\n\
    \\r\n\
    \\ENQ\EOTK\STX\ETX\ETX\DC2\EOT\255\aST\n\
    \\f\n\
    \\EOT\EOTK\STX\EOT\DC2\EOT\128\b\EOTO\n\
    \\r\n\
    \\ENQ\EOTK\STX\EOT\ACK\DC2\EOT\128\b\EOT4\n\
    \\r\n\
    \\ENQ\EOTK\STX\EOT\SOH\DC2\EOT\128\b5J\n\
    \\r\n\
    \\ENQ\EOTK\STX\EOT\ETX\DC2\EOT\128\bMN\n\
    \\f\n\
    \\EOT\EOTK\STX\ENQ\DC2\EOT\129\b\EOTA\n\
    \\r\n\
    \\ENQ\EOTK\STX\ENQ\EOT\DC2\EOT\129\b\EOT\f\n\
    \\r\n\
    \\ENQ\EOTK\STX\ENQ\ACK\DC2\EOT\129\b\r2\n\
    \\r\n\
    \\ENQ\EOTK\STX\ENQ\SOH\DC2\EOT\129\b3<\n\
    \\r\n\
    \\ENQ\EOTK\STX\ENQ\ETX\DC2\EOT\129\b?@\n\
    \\f\n\
    \\EOT\EOTK\STX\ACK\DC2\EOT\130\b\EOT]\n\
    \\r\n\
    \\ENQ\EOTK\STX\ACK\EOT\DC2\EOT\130\b\EOT\f\n\
    \\r\n\
    \\ENQ\EOTK\STX\ACK\ACK\DC2\EOT\130\b\r?\n\
    \\r\n\
    \\ENQ\EOTK\STX\ACK\SOH\DC2\EOT\130\b@X\n\
    \\r\n\
    \\ENQ\EOTK\STX\ACK\ETX\DC2\EOT\130\b[\\\n\
    \\f\n\
    \\EOT\EOTK\STX\a\DC2\EOT\131\b\EOTV\n\
    \\r\n\
    \\ENQ\EOTK\STX\a\ACK\DC2\EOT\131\b\EOT:\n\
    \\r\n\
    \\ENQ\EOTK\STX\a\SOH\DC2\EOT\131\b;Q\n\
    \\r\n\
    \\ENQ\EOTK\STX\a\ETX\DC2\EOT\131\bTU\n\
    \\151\SOH\n\
    \\STX\EOTL\DC2\ACK\136\b\NUL\164\b\SOH\SUB\136\SOH (-- api-linter: core::0203::optional=disabled\n\
    \     aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)\n\
    \\n\
    \\v\n\
    \\ETX\EOTL\SOH\DC2\EOT\136\b\b \n\
    \\f\n\
    \\EOT\EOTL\STX\NUL\DC2\EOT\137\b\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTL\STX\NUL\ENQ\DC2\EOT\137\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\NUL\SOH\DC2\EOT\137\b\v\DC4\n\
    \\r\n\
    \\ENQ\EOTL\STX\NUL\ETX\DC2\EOT\137\b\ETB\CAN\n\
    \C\n\
    \\EOT\EOTL\STX\SOH\DC2\EOT\139\b\EOT7\SUB5 Sticky queues are not supported in `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\SOH\ACK\DC2\EOT\139\b\EOT'\n\
    \\r\n\
    \\ENQ\EOTL\STX\SOH\SOH\DC2\EOT\139\b(2\n\
    \\r\n\
    \\ENQ\EOTL\STX\SOH\ETX\DC2\EOT\139\b56\n\
    \\208\SOH\n\
    \\EOT\EOTL\STX\STX\DC2\EOT\142\b\EOT<\SUB\193\SOH Deprecated. Use `ENHANCED` mode with `task_queue_types`. Ignored in `ENHANCED` mode.\n\
    \ If unspecified (TASK_QUEUE_TYPE_UNSPECIFIED), then default value (TASK_QUEUE_TYPE_WORKFLOW) will be used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\STX\ACK\DC2\EOT\142\b\EOT'\n\
    \\r\n\
    \\ENQ\EOTL\STX\STX\SOH\DC2\EOT\142\b(7\n\
    \\r\n\
    \\ENQ\EOTL\STX\STX\ETX\DC2\EOT\142\b:;\n\
    \7\n\
    \\EOT\EOTL\STX\ETX\DC2\EOT\144\b\EOT'\SUB) Deprecated. Ignored in `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\ETX\ENQ\DC2\EOT\144\b\EOT\b\n\
    \\r\n\
    \\ENQ\EOTL\STX\ETX\SOH\DC2\EOT\144\b\t\"\n\
    \\r\n\
    \\ENQ\EOTL\STX\ETX\ETX\DC2\EOT\144\b%&\n\
    \\DEL\n\
    \\EOT\EOTL\STX\EOT\DC2\EOT\147\b\EOT=\SUBq All options except `task_queue_type` and `include_task_queue_status` are only available in the `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\EOT\ACK\DC2\EOT\147\b\EOT/\n\
    \\r\n\
    \\ENQ\EOTL\STX\EOT\SOH\DC2\EOT\147\b08\n\
    \\r\n\
    \\ENQ\EOTL\STX\EOT\ETX\DC2\EOT\147\b;<\n\
    \\191\STX\n\
    \\EOT\EOTL\STX\ENQ\DC2\EOT\153\b\EOTE\SUB\176\STX Optional. If not provided, the result for the default Build ID will be returned. The default Build ID is the one\n\
    \ mentioned in the first unconditional Assignment Rule. If there is no default Build ID, the result for the\n\
    \ unversioned queue will be returned.\n\
    \ (-- api-linter: core::0140::prepositions --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\ENQ\ACK\DC2\EOT\153\b\EOT7\n\
    \\r\n\
    \\ENQ\EOTL\STX\ENQ\SOH\DC2\EOT\153\b8@\n\
    \\r\n\
    \\ENQ\EOTL\STX\ENQ\ETX\DC2\EOT\153\bCD\n\
    \b\n\
    \\EOT\EOTL\STX\ACK\DC2\EOT\156\b\EOTF\SUBT Task queue types to report info about. If not specified, all types are considered.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\ACK\EOT\DC2\EOT\156\b\EOT\f\n\
    \\r\n\
    \\ENQ\EOTL\STX\ACK\ACK\DC2\EOT\156\b\r0\n\
    \\r\n\
    \\ENQ\EOTL\STX\ACK\SOH\DC2\EOT\156\b1A\n\
    \\r\n\
    \\ENQ\EOTL\STX\ACK\ETX\DC2\EOT\156\bDE\n\
    \L\n\
    \\EOT\EOTL\STX\a\DC2\EOT\158\b\EOT\SUB\SUB> Report stats for the requested task queue types and versions\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\a\ENQ\DC2\EOT\158\b\EOT\b\n\
    \\r\n\
    \\ENQ\EOTL\STX\a\SOH\DC2\EOT\158\b\t\NAK\n\
    \\r\n\
    \\ENQ\EOTL\STX\a\ETX\DC2\EOT\158\b\CAN\EM\n\
    \R\n\
    \\EOT\EOTL\STX\b\DC2\EOT\160\b\EOT\FS\SUBD Report list of pollers for requested task queue types and versions\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\b\ENQ\DC2\EOT\160\b\EOT\b\n\
    \\r\n\
    \\ENQ\EOTL\STX\b\SOH\DC2\EOT\160\b\t\ETB\n\
    \\r\n\
    \\ENQ\EOTL\STX\b\ETX\DC2\EOT\160\b\SUB\ESC\n\
    \\138\SOH\n\
    \\EOT\EOTL\STX\t\DC2\EOT\163\b\EOT'\SUB| Report task reachability for the requested versions and all task types (task reachability is not reported\n\
    \ per task type).\n\
    \\n\
    \\r\n\
    \\ENQ\EOTL\STX\t\ENQ\DC2\EOT\163\b\EOT\b\n\
    \\r\n\
    \\ENQ\EOTL\STX\t\SOH\DC2\EOT\163\b\t!\n\
    \\r\n\
    \\ENQ\EOTL\STX\t\ETX\DC2\EOT\163\b$&\n\
    \\f\n\
    \\STX\EOTM\DC2\ACK\166\b\NUL\187\b\SOH\n\
    \\v\n\
    \\ETX\EOTM\SOH\DC2\EOT\166\b\b!\n\
    \}\n\
    \\EOT\EOTM\STX\NUL\DC2\EOT\169\b\EOT>\SUBo Deprecated. Use `versions_info.types_info.pollers` with `ENHANCED` mode instead.\n\
    \ Not set in `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTM\STX\NUL\EOT\DC2\EOT\169\b\EOT\f\n\
    \\r\n\
    \\ENQ\EOTM\STX\NUL\ACK\DC2\EOT\169\b\r1\n\
    \\r\n\
    \\ENQ\EOTM\STX\NUL\SOH\DC2\EOT\169\b29\n\
    \\r\n\
    \\ENQ\EOTM\STX\NUL\ETX\DC2\EOT\169\b<=\n\
    \7\n\
    \\EOT\EOTM\STX\SOH\DC2\EOT\171\b\EOTD\SUB) Deprecated. Not set in `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTM\STX\SOH\ACK\DC2\EOT\171\b\EOT-\n\
    \\r\n\
    \\ENQ\EOTM\STX\SOH\SOH\DC2\EOT\171\b.?\n\
    \\r\n\
    \\ENQ\EOTM\STX\SOH\ETX\DC2\EOT\171\bBC\n\
    \\151\SOH\n\
    \\EOT\EOTM\STX\STX\DC2\EOT\175\b\EOTR\SUB\136\SOH This map contains Task Queue information for each Build ID. Empty string as key value means unversioned.\n\
    \ Only set in `ENHANCED` mode.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTM\STX\STX\ACK\DC2\EOT\175\b\EOT?\n\
    \\r\n\
    \\ENQ\EOTM\STX\STX\SOH\DC2\EOT\175\b@M\n\
    \\r\n\
    \\ENQ\EOTM\STX\STX\ETX\DC2\EOT\175\bPQ\n\
    \\238\ENQ\n\
    \\EOT\EOTM\STX\ETX\DC2\EOT\186\b\EOTJ\SUB\223\ENQ Specifies which Worker Deployment Version(s) Server routes this Task Queue's tasks to.\n\
    \ When not present, it means the tasks are routed to Unversioned workers (workers with\n\
    \ UNVERSIONED or unspecified WorkerVersioningMode.)\n\
    \ Task Queue Versioning info is updated indirectly by calling SetWorkerDeploymentCurrentVersion\n\
    \ and SetWorkerDeploymentRampingVersion on Worker Deployments.\n\
    \ Note: This information is not relevant to Pinned workflow executions and their activities as\n\
    \ they are always routed to their Pinned Deployment Version. However, new workflow executions\n\
    \ are typically not Pinned until they complete their first task (unless they are started with\n\
    \ a Pinned VersioningOverride or are Child Workflows of a Pinned parent).\n\
    \\n\
    \\r\n\
    \\ENQ\EOTM\STX\ETX\ACK\DC2\EOT\186\b\EOT5\n\
    \\r\n\
    \\ENQ\EOTM\STX\ETX\SOH\DC2\EOT\186\b6E\n\
    \\r\n\
    \\ENQ\EOTM\STX\ETX\ETX\DC2\EOT\186\bHI\n\
    \\f\n\
    \\STX\EOTN\DC2\ACK\189\b\NUL\190\b\SOH\n\
    \\v\n\
    \\ETX\EOTN\SOH\DC2\EOT\189\b\b\GS\n\
    \S\n\
    \\STX\EOTO\DC2\ACK\193\b\NUL\204\b\SOH\SUBE GetClusterInfoResponse contains information about Temporal cluster.\n\
    \\n\
    \\v\n\
    \\ETX\EOTO\SOH\DC2\EOT\193\b\b\RS\n\
    \\176\SOH\n\
    \\EOT\EOTO\STX\NUL\DC2\EOT\196\b\EOT-\SUB\161\SOH Key is client name i.e \"temporal-go\", \"temporal-java\", or \"temporal-cli\".\n\
    \ Value is ranges of supported versions of this client i.e \">1.1.1 <=1.4.0 || ^5.0.0\".\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\NUL\ACK\DC2\EOT\196\b\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOTO\STX\NUL\SOH\DC2\EOT\196\b\ETB(\n\
    \\r\n\
    \\ENQ\EOTO\STX\NUL\ETX\DC2\EOT\196\b+,\n\
    \\f\n\
    \\EOT\EOTO\STX\SOH\DC2\EOT\197\b\EOT\RS\n\
    \\r\n\
    \\ENQ\EOTO\STX\SOH\ENQ\DC2\EOT\197\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\SOH\SOH\DC2\EOT\197\b\v\EM\n\
    \\r\n\
    \\ENQ\EOTO\STX\SOH\ETX\DC2\EOT\197\b\FS\GS\n\
    \\f\n\
    \\EOT\EOTO\STX\STX\DC2\EOT\198\b\EOT\SUB\n\
    \\r\n\
    \\ENQ\EOTO\STX\STX\ENQ\DC2\EOT\198\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\STX\SOH\DC2\EOT\198\b\v\NAK\n\
    \\r\n\
    \\ENQ\EOTO\STX\STX\ETX\DC2\EOT\198\b\CAN\EM\n\
    \\f\n\
    \\EOT\EOTO\STX\ETX\DC2\EOT\199\b\EOT9\n\
    \\r\n\
    \\ENQ\EOTO\STX\ETX\ACK\DC2\EOT\199\b\EOT'\n\
    \\r\n\
    \\ENQ\EOTO\STX\ETX\SOH\DC2\EOT\199\b(4\n\
    \\r\n\
    \\ENQ\EOTO\STX\ETX\ETX\DC2\EOT\199\b78\n\
    \\f\n\
    \\EOT\EOTO\STX\EOT\DC2\EOT\200\b\EOT\FS\n\
    \\r\n\
    \\ENQ\EOTO\STX\EOT\ENQ\DC2\EOT\200\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\EOT\SOH\DC2\EOT\200\b\v\ETB\n\
    \\r\n\
    \\ENQ\EOTO\STX\EOT\ETX\DC2\EOT\200\b\SUB\ESC\n\
    \\f\n\
    \\EOT\EOTO\STX\ENQ\DC2\EOT\201\b\EOT\"\n\
    \\r\n\
    \\ENQ\EOTO\STX\ENQ\ENQ\DC2\EOT\201\b\EOT\t\n\
    \\r\n\
    \\ENQ\EOTO\STX\ENQ\SOH\DC2\EOT\201\b\n\
    \\GS\n\
    \\r\n\
    \\ENQ\EOTO\STX\ENQ\ETX\DC2\EOT\201\b !\n\
    \\f\n\
    \\EOT\EOTO\STX\ACK\DC2\EOT\202\b\EOT!\n\
    \\r\n\
    \\ENQ\EOTO\STX\ACK\ENQ\DC2\EOT\202\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\ACK\SOH\DC2\EOT\202\b\v\FS\n\
    \\r\n\
    \\ENQ\EOTO\STX\ACK\ETX\DC2\EOT\202\b\US \n\
    \\f\n\
    \\EOT\EOTO\STX\a\DC2\EOT\203\b\EOT \n\
    \\r\n\
    \\ENQ\EOTO\STX\a\ENQ\DC2\EOT\203\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTO\STX\a\SOH\DC2\EOT\203\b\v\ESC\n\
    \\r\n\
    \\ENQ\EOTO\STX\a\ETX\DC2\EOT\203\b\RS\US\n\
    \\f\n\
    \\STX\EOTP\DC2\ACK\206\b\NUL\207\b\SOH\n\
    \\v\n\
    \\ETX\EOTP\SOH\DC2\EOT\206\b\b\FS\n\
    \\f\n\
    \\STX\EOTQ\DC2\ACK\209\b\NUL\132\t\SOH\n\
    \\v\n\
    \\ETX\EOTQ\SOH\DC2\EOT\209\b\b\GS\n\
    \&\n\
    \\EOT\EOTQ\STX\NUL\DC2\EOT\211\b\EOT\RS\SUB\CAN Version of the server.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTQ\STX\NUL\ENQ\DC2\EOT\211\b\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTQ\STX\NUL\SOH\DC2\EOT\211\b\v\EM\n\
    \\r\n\
    \\ENQ\EOTQ\STX\NUL\ETX\DC2\EOT\211\b\FS\GS\n\
    \5\n\
    \\EOT\EOTQ\STX\SOH\DC2\EOT\214\b\EOT\"\SUB' All capabilities the system supports.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTQ\STX\SOH\ACK\DC2\EOT\214\b\EOT\DLE\n\
    \\r\n\
    \\ENQ\EOTQ\STX\SOH\SOH\DC2\EOT\214\b\DC1\GS\n\
    \\r\n\
    \\ENQ\EOTQ\STX\SOH\ETX\DC2\EOT\214\b !\n\
    \,\n\
    \\EOT\EOTQ\ETX\NUL\DC2\ACK\217\b\EOT\131\t\ENQ\SUB\FS System capability details.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTQ\ETX\NUL\SOH\DC2\EOT\217\b\f\CAN\n\
    \A\n\
    \\ACK\EOTQ\ETX\NUL\STX\NUL\DC2\EOT\219\b\b)\SUB1 True if signal and query headers are supported.\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\NUL\ENQ\DC2\EOT\219\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\NUL\SOH\DC2\EOT\219\b\r$\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\NUL\ETX\DC2\EOT\219\b'(\n\
    \\242\SOH\n\
    \\ACK\EOTQ\ETX\NUL\STX\SOH\DC2\EOT\226\b\b0\SUB\225\SOH True if internal errors are differentiated from other types of errors for purposes of\n\
    \ retrying non-internal errors.\n\
    \\n\
    \ When unset/false, clients retry all failures. When true, clients should only retry\n\
    \ non-internal errors.\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\SOH\ENQ\DC2\EOT\226\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\SOH\SOH\DC2\EOT\226\b\r+\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\SOH\ETX\DC2\EOT\226\b./\n\
    \\\\n\
    \\ACK\EOTQ\ETX\NUL\STX\STX\DC2\EOT\229\b\b4\SUBL True if RespondActivityTaskFailed API supports including heartbeat details\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\STX\ENQ\DC2\EOT\229\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\STX\SOH\DC2\EOT\229\b\r/\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\STX\ETX\DC2\EOT\229\b23\n\
    \7\n\
    \\ACK\EOTQ\ETX\NUL\STX\ETX\DC2\EOT\232\b\b$\SUB' Supports scheduled workflow features.\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ETX\ENQ\DC2\EOT\232\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ETX\SOH\DC2\EOT\232\b\r\US\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ETX\ETX\DC2\EOT\232\b\"#\n\
    \l\n\
    \\ACK\EOTQ\ETX\NUL\STX\EOT\DC2\EOT\235\b\b,\SUB\\ True if server uses protos that include temporal.api.failure.v1.Failure.encoded_attributes\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\EOT\ENQ\DC2\EOT\235\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\EOT\SOH\DC2\EOT\235\b\r'\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\EOT\ETX\DC2\EOT\235\b*+\n\
    \\236\SOH\n\
    \\ACK\EOTQ\ETX\NUL\STX\ENQ\DC2\EOT\240\b\b+\SUB\219\SOH True if server supports dispatching Workflow and Activity tasks based on a worker's build_id\n\
    \ (see:\n\
    \ https://github.com/temporalio/proposals/blob/a123af3b559f43db16ea6dd31870bfb754c4dc5e/versioning/worker-versions.md)\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ENQ\ENQ\DC2\EOT\240\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ENQ\SOH\DC2\EOT\240\b\r&\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ENQ\ETX\DC2\EOT\240\b)*\n\
    \A\n\
    \\ACK\EOTQ\ETX\NUL\STX\ACK\DC2\EOT\243\b\b\GS\SUB1 True if server supports upserting workflow memo\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ACK\ENQ\DC2\EOT\243\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ACK\SOH\DC2\EOT\243\b\r\CAN\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\ACK\ETX\DC2\EOT\243\b\ESC\FS\n\
    \l\n\
    \\ACK\EOTQ\ETX\NUL\STX\a\DC2\EOT\246\b\b&\SUB\\ True if server supports eager workflow task dispatching for the StartWorkflowExecution API\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\a\ENQ\DC2\EOT\246\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\a\SOH\DC2\EOT\246\b\r!\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\a\ETX\DC2\EOT\246\b$%\n\
    \y\n\
    \\ACK\EOTQ\ETX\NUL\STX\b\DC2\EOT\250\b\b\RS\SUBi True if the server knows about the sdk metadata field on WFT completions and will record\n\
    \ it in history\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\b\ENQ\DC2\EOT\250\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\b\SOH\DC2\EOT\250\b\r\EM\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\b\ETX\DC2\EOT\250\b\FS\GS\n\
    \\132\SOH\n\
    \\ACK\EOTQ\ETX\NUL\STX\t\DC2\EOT\254\b\b2\SUBt True if the server supports count group by execution status\n\
    \ (-- api-linter: core::0140::prepositions=disabled --)\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\t\ENQ\DC2\EOT\254\b\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\t\SOH\DC2\EOT\254\b\r,\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\t\ETX\DC2\EOT\254\b/1\n\
    \\165\SOH\n\
    \\ACK\EOTQ\ETX\NUL\STX\n\
    \\DC2\EOT\130\t\b\CAN\SUB\148\SOH True if the server supports Nexus operations.\n\
    \ This flag is dependent both on server version and for Nexus to be enabled via server configuration.\n\
    \\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\n\
    \\ENQ\DC2\EOT\130\t\b\f\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\n\
    \\SOH\DC2\EOT\130\t\r\DC2\n\
    \\SI\n\
    \\a\EOTQ\ETX\NUL\STX\n\
    \\ETX\DC2\EOT\130\t\NAK\ETB\n\
    \\f\n\
    \\STX\EOTR\DC2\ACK\134\t\NUL\137\t\SOH\n\
    \\v\n\
    \\ETX\EOTR\SOH\DC2\EOT\134\t\b&\n\
    \\f\n\
    \\EOT\EOTR\STX\NUL\DC2\EOT\135\t\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTR\STX\NUL\ENQ\DC2\EOT\135\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTR\STX\NUL\SOH\DC2\EOT\135\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOTR\STX\NUL\ETX\DC2\EOT\135\t\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTR\STX\SOH\DC2\EOT\136\t\EOT7\n\
    \\r\n\
    \\ENQ\EOTR\STX\SOH\ACK\DC2\EOT\136\t\EOT'\n\
    \\r\n\
    \\ENQ\EOTR\STX\SOH\SOH\DC2\EOT\136\t(2\n\
    \\r\n\
    \\ENQ\EOTR\STX\SOH\ETX\DC2\EOT\136\t56\n\
    \\f\n\
    \\STX\EOTS\DC2\ACK\139\t\NUL\142\t\SOH\n\
    \\v\n\
    \\ETX\EOTS\SOH\DC2\EOT\139\t\b'\n\
    \\f\n\
    \\EOT\EOTS\STX\NUL\DC2\EOT\140\t\EOTe\n\
    \\r\n\
    \\ENQ\EOTS\STX\NUL\EOT\DC2\EOT\140\t\EOT\f\n\
    \\r\n\
    \\ENQ\EOTS\STX\NUL\ACK\DC2\EOT\140\t\rA\n\
    \\r\n\
    \\ENQ\EOTS\STX\NUL\SOH\DC2\EOT\140\tB`\n\
    \\r\n\
    \\ENQ\EOTS\STX\NUL\ETX\DC2\EOT\140\tcd\n\
    \\f\n\
    \\EOT\EOTS\STX\SOH\DC2\EOT\141\t\EOTe\n\
    \\r\n\
    \\ENQ\EOTS\STX\SOH\EOT\DC2\EOT\141\t\EOT\f\n\
    \\r\n\
    \\ENQ\EOTS\STX\SOH\ACK\DC2\EOT\141\t\rA\n\
    \\r\n\
    \\ENQ\EOTS\STX\SOH\SOH\DC2\EOT\141\tB`\n\
    \\r\n\
    \\ENQ\EOTS\STX\SOH\ETX\DC2\EOT\141\tcd\n\
    \\151\SOH\n\
    \\STX\EOTT\DC2\ACK\146\t\NUL\162\t\SOH\SUB\136\SOH (-- api-linter: core::0203::optional=disabled\n\
    \     aip.dev/not-precedent: field_behavior annotation not available in our gogo fork --)\n\
    \\n\
    \\v\n\
    \\ETX\EOTT\SOH\DC2\EOT\146\t\b\GS\n\
    \@\n\
    \\EOT\EOTT\STX\NUL\DC2\EOT\148\t\EOT\EM\SUB2 The namespace the schedule should be created in.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\NUL\ENQ\DC2\EOT\148\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\NUL\SOH\DC2\EOT\148\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOTT\STX\NUL\ETX\DC2\EOT\148\t\ETB\CAN\n\
    \+\n\
    \\EOT\EOTT\STX\SOH\DC2\EOT\150\t\EOT\ESC\SUB\GS The id of the new schedule.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\SOH\ENQ\DC2\EOT\150\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\SOH\SOH\DC2\EOT\150\t\v\SYN\n\
    \\r\n\
    \\ENQ\EOTT\STX\SOH\ETX\DC2\EOT\150\t\EM\SUB\n\
    \G\n\
    \\EOT\EOTT\STX\STX\DC2\EOT\152\t\EOT3\SUB9 The schedule spec, policies, action, and initial state.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\STX\ACK\DC2\EOT\152\t\EOT%\n\
    \\r\n\
    \\ENQ\EOTT\STX\STX\SOH\DC2\EOT\152\t&.\n\
    \\r\n\
    \\ENQ\EOTT\STX\STX\ETX\DC2\EOT\152\t12\n\
    \Q\n\
    \\EOT\EOTT\STX\ETX\DC2\EOT\154\t\EOT=\SUBC Optional initial patch (e.g. to run the action once immediately).\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\ETX\ACK\DC2\EOT\154\t\EOT*\n\
    \\r\n\
    \\ENQ\EOTT\STX\ETX\SOH\DC2\EOT\154\t+8\n\
    \\r\n\
    \\ENQ\EOTT\STX\ETX\ETX\DC2\EOT\154\t;<\n\
    \F\n\
    \\EOT\EOTT\STX\EOT\DC2\EOT\156\t\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\EOT\ENQ\DC2\EOT\156\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\EOT\SOH\DC2\EOT\156\t\v\DC3\n\
    \\r\n\
    \\ENQ\EOTT\STX\EOT\ETX\DC2\EOT\156\t\SYN\ETB\n\
    \^\n\
    \\EOT\EOTT\STX\ENQ\DC2\EOT\158\t\EOT\SUB\SUBP A unique identifier for this create request for idempotence. Typically UUIDv4.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\ENQ\ENQ\DC2\EOT\158\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\ENQ\SOH\DC2\EOT\158\t\v\NAK\n\
    \\r\n\
    \\ENQ\EOTT\STX\ENQ\ETX\DC2\EOT\158\t\CAN\EM\n\
    \L\n\
    \\EOT\EOTT\STX\ACK\DC2\EOT\160\t\EOT)\SUB> Memo and search attributes to attach to the schedule itself.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTT\STX\ACK\ACK\DC2\EOT\160\t\EOT\US\n\
    \\r\n\
    \\ENQ\EOTT\STX\ACK\SOH\DC2\EOT\160\t $\n\
    \\r\n\
    \\ENQ\EOTT\STX\ACK\ETX\DC2\EOT\160\t'(\n\
    \\f\n\
    \\EOT\EOTT\STX\a\DC2\EOT\161\t\EOTB\n\
    \\r\n\
    \\ENQ\EOTT\STX\a\ACK\DC2\EOT\161\t\EOT+\n\
    \\r\n\
    \\ENQ\EOTT\STX\a\SOH\DC2\EOT\161\t,=\n\
    \\r\n\
    \\ENQ\EOTT\STX\a\ETX\DC2\EOT\161\t@A\n\
    \\f\n\
    \\STX\EOTU\DC2\ACK\164\t\NUL\166\t\SOH\n\
    \\v\n\
    \\ETX\EOTU\SOH\DC2\EOT\164\t\b\RS\n\
    \\f\n\
    \\EOT\EOTU\STX\NUL\DC2\EOT\165\t\EOT\GS\n\
    \\r\n\
    \\ENQ\EOTU\STX\NUL\ENQ\DC2\EOT\165\t\EOT\t\n\
    \\r\n\
    \\ENQ\EOTU\STX\NUL\SOH\DC2\EOT\165\t\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTU\STX\NUL\ETX\DC2\EOT\165\t\ESC\FS\n\
    \\f\n\
    \\STX\EOTV\DC2\ACK\168\t\NUL\173\t\SOH\n\
    \\v\n\
    \\ETX\EOTV\SOH\DC2\EOT\168\t\b\US\n\
    \:\n\
    \\EOT\EOTV\STX\NUL\DC2\EOT\170\t\EOT\EM\SUB, The namespace of the schedule to describe.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTV\STX\NUL\ENQ\DC2\EOT\170\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTV\STX\NUL\SOH\DC2\EOT\170\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOTV\STX\NUL\ETX\DC2\EOT\170\t\ETB\CAN\n\
    \3\n\
    \\EOT\EOTV\STX\SOH\DC2\EOT\172\t\EOT\ESC\SUB% The id of the schedule to describe.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTV\STX\SOH\ENQ\DC2\EOT\172\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTV\STX\SOH\SOH\DC2\EOT\172\t\v\SYN\n\
    \\r\n\
    \\ENQ\EOTV\STX\SOH\ETX\DC2\EOT\172\t\EM\SUB\n\
    \\f\n\
    \\STX\EOTW\DC2\ACK\175\t\NUL\194\t\SOH\n\
    \\v\n\
    \\ETX\EOTW\SOH\DC2\EOT\175\t\b \n\
    \\146\ETX\n\
    \\EOT\EOTW\STX\NUL\DC2\EOT\183\t\EOT3\SUB\131\ETX The complete current schedule details. This may not match the schedule as\n\
    \ created because:\n\
    \ - some types of schedule specs may get compiled into others (e.g.\n\
    \   CronString into StructuredCalendarSpec)\n\
    \ - some unspecified fields may be replaced by defaults\n\
    \ - some fields in the state are modified automatically\n\
    \ - the schedule may have been modified by UpdateSchedule or PatchSchedule\n\
    \\n\
    \\r\n\
    \\ENQ\EOTW\STX\NUL\ACK\DC2\EOT\183\t\EOT%\n\
    \\r\n\
    \\ENQ\EOTW\STX\NUL\SOH\DC2\EOT\183\t&.\n\
    \\r\n\
    \\ENQ\EOTW\STX\NUL\ETX\DC2\EOT\183\t12\n\
    \*\n\
    \\EOT\EOTW\STX\SOH\DC2\EOT\185\t\EOT3\SUB\FS Extra schedule state info.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTW\STX\SOH\ACK\DC2\EOT\185\t\EOT)\n\
    \\r\n\
    \\ENQ\EOTW\STX\SOH\SOH\DC2\EOT\185\t*.\n\
    \\r\n\
    \\ENQ\EOTW\STX\SOH\ETX\DC2\EOT\185\t12\n\
    \R\n\
    \\EOT\EOTW\STX\STX\DC2\EOT\187\t\EOT)\SUBD The memo and search attributes that the schedule was created with.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTW\STX\STX\ACK\DC2\EOT\187\t\EOT\US\n\
    \\r\n\
    \\ENQ\EOTW\STX\STX\SOH\DC2\EOT\187\t $\n\
    \\r\n\
    \\ENQ\EOTW\STX\STX\ETX\DC2\EOT\187\t'(\n\
    \\f\n\
    \\EOT\EOTW\STX\ETX\DC2\EOT\188\t\EOTB\n\
    \\r\n\
    \\ENQ\EOTW\STX\ETX\ACK\DC2\EOT\188\t\EOT+\n\
    \\r\n\
    \\ENQ\EOTW\STX\ETX\SOH\DC2\EOT\188\t,=\n\
    \\r\n\
    \\ENQ\EOTW\STX\ETX\ETX\DC2\EOT\188\t@A\n\
    \\199\SOH\n\
    \\EOT\EOTW\STX\EOT\DC2\EOT\193\t\EOT\GS\SUB\184\SOH This value can be passed back to UpdateSchedule to ensure that the\n\
    \ schedule was not modified between a Describe and an Update, which could\n\
    \ lead to lost updates and other confusion.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTW\STX\EOT\ENQ\DC2\EOT\193\t\EOT\t\n\
    \\r\n\
    \\ENQ\EOTW\STX\EOT\SOH\DC2\EOT\193\t\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTW\STX\EOT\ETX\DC2\EOT\193\t\ESC\FS\n\
    \\f\n\
    \\STX\EOTX\DC2\ACK\196\t\NUL\219\t\SOH\n\
    \\v\n\
    \\ETX\EOTX\SOH\DC2\EOT\196\t\b\GS\n\
    \8\n\
    \\EOT\EOTX\STX\NUL\DC2\EOT\198\t\EOT\EM\SUB* The namespace of the schedule to update.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\NUL\ENQ\DC2\EOT\198\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\NUL\SOH\DC2\EOT\198\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOTX\STX\NUL\ETX\DC2\EOT\198\t\ETB\CAN\n\
    \1\n\
    \\EOT\EOTX\STX\SOH\DC2\EOT\200\t\EOT\ESC\SUB# The id of the schedule to update.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\SOH\ENQ\DC2\EOT\200\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\SOH\SOH\DC2\EOT\200\t\v\SYN\n\
    \\r\n\
    \\ENQ\EOTX\STX\SOH\ETX\DC2\EOT\200\t\EM\SUB\n\
    \\159\SOH\n\
    \\EOT\EOTX\STX\STX\DC2\EOT\203\t\EOT3\SUB\144\SOH The new schedule. The four main fields of the schedule (spec, action,\n\
    \ policies, state) are replaced completely by the values in this message.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\STX\ACK\DC2\EOT\203\t\EOT%\n\
    \\r\n\
    \\ENQ\EOTX\STX\STX\SOH\DC2\EOT\203\t&.\n\
    \\r\n\
    \\ENQ\EOTX\STX\STX\ETX\DC2\EOT\203\t12\n\
    \\132\STX\n\
    \\EOT\EOTX\STX\ETX\DC2\EOT\208\t\EOT\GS\SUB\245\SOH This can be the value of conflict_token from a DescribeScheduleResponse,\n\
    \ which will cause this request to fail if the schedule has been modified\n\
    \ between the Describe and this Update.\n\
    \ If missing, the schedule will be updated unconditionally.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\ETX\ENQ\DC2\EOT\208\t\EOT\t\n\
    \\r\n\
    \\ENQ\EOTX\STX\ETX\SOH\DC2\EOT\208\t\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTX\STX\ETX\ETX\DC2\EOT\208\t\ESC\FS\n\
    \F\n\
    \\EOT\EOTX\STX\EOT\DC2\EOT\210\t\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\EOT\ENQ\DC2\EOT\210\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\EOT\SOH\DC2\EOT\210\t\v\DC3\n\
    \\r\n\
    \\ENQ\EOTX\STX\EOT\ETX\DC2\EOT\210\t\SYN\ETB\n\
    \^\n\
    \\EOT\EOTX\STX\ENQ\DC2\EOT\212\t\EOT\SUB\SUBP A unique identifier for this update request for idempotence. Typically UUIDv4.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\ENQ\ENQ\DC2\EOT\212\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\ENQ\SOH\DC2\EOT\212\t\v\NAK\n\
    \\r\n\
    \\ENQ\EOTX\STX\ENQ\ETX\DC2\EOT\212\t\CAN\EM\n\
    \\240\STX\n\
    \\EOT\EOTX\STX\ACK\DC2\EOT\218\t\EOTB\SUB\225\STX Schedule search attributes to be updated.\n\
    \ Do not set this field if you do not want to update the search attributes.\n\
    \ A non-null empty object will set the search attributes to an empty map.\n\
    \ Note: you cannot only update the search attributes with `UpdateScheduleRequest`,\n\
    \ you must also set the `schedule` field; otherwise, it will unset the schedule.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTX\STX\ACK\ACK\DC2\EOT\218\t\EOT+\n\
    \\r\n\
    \\ENQ\EOTX\STX\ACK\SOH\DC2\EOT\218\t,=\n\
    \\r\n\
    \\ENQ\EOTX\STX\ACK\ETX\DC2\EOT\218\t@A\n\
    \\f\n\
    \\STX\EOTY\DC2\ACK\221\t\NUL\222\t\SOH\n\
    \\v\n\
    \\ETX\EOTY\SOH\DC2\EOT\221\t\b\RS\n\
    \\f\n\
    \\STX\EOTZ\DC2\ACK\224\t\NUL\234\t\SOH\n\
    \\v\n\
    \\ETX\EOTZ\SOH\DC2\EOT\224\t\b\FS\n\
    \7\n\
    \\EOT\EOTZ\STX\NUL\DC2\EOT\226\t\EOT\EM\SUB) The namespace of the schedule to patch.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\NUL\ENQ\DC2\EOT\226\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\NUL\SOH\DC2\EOT\226\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOTZ\STX\NUL\ETX\DC2\EOT\226\t\ETB\CAN\n\
    \0\n\
    \\EOT\EOTZ\STX\SOH\DC2\EOT\228\t\EOT\ESC\SUB\" The id of the schedule to patch.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\SOH\ENQ\DC2\EOT\228\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\SOH\SOH\DC2\EOT\228\t\v\SYN\n\
    \\r\n\
    \\ENQ\EOTZ\STX\SOH\ETX\DC2\EOT\228\t\EM\SUB\n\
    \\f\n\
    \\EOT\EOTZ\STX\STX\DC2\EOT\229\t\EOT5\n\
    \\r\n\
    \\ENQ\EOTZ\STX\STX\ACK\DC2\EOT\229\t\EOT*\n\
    \\r\n\
    \\ENQ\EOTZ\STX\STX\SOH\DC2\EOT\229\t+0\n\
    \\r\n\
    \\ENQ\EOTZ\STX\STX\ETX\DC2\EOT\229\t34\n\
    \F\n\
    \\EOT\EOTZ\STX\ETX\DC2\EOT\231\t\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\ETX\ENQ\DC2\EOT\231\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\ETX\SOH\DC2\EOT\231\t\v\DC3\n\
    \\r\n\
    \\ENQ\EOTZ\STX\ETX\ETX\DC2\EOT\231\t\SYN\ETB\n\
    \^\n\
    \\EOT\EOTZ\STX\EOT\DC2\EOT\233\t\EOT\SUB\SUBP A unique identifier for this update request for idempotence. Typically UUIDv4.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\EOT\ENQ\DC2\EOT\233\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTZ\STX\EOT\SOH\DC2\EOT\233\t\v\NAK\n\
    \\r\n\
    \\ENQ\EOTZ\STX\EOT\ETX\DC2\EOT\233\t\CAN\EM\n\
    \\f\n\
    \\STX\EOT[\DC2\ACK\236\t\NUL\237\t\SOH\n\
    \\v\n\
    \\ETX\EOT[\SOH\DC2\EOT\236\t\b\GS\n\
    \\f\n\
    \\STX\EOT\\\DC2\ACK\239\t\NUL\247\t\SOH\n\
    \\v\n\
    \\ETX\EOT\\\SOH\DC2\EOT\239\t\b(\n\
    \7\n\
    \\EOT\EOT\\\STX\NUL\DC2\EOT\241\t\EOT\EM\SUB) The namespace of the schedule to query.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\\\STX\NUL\ENQ\DC2\EOT\241\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\\\STX\NUL\SOH\DC2\EOT\241\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\\\STX\NUL\ETX\DC2\EOT\241\t\ETB\CAN\n\
    \0\n\
    \\EOT\EOT\\\STX\SOH\DC2\EOT\243\t\EOT\ESC\SUB\" The id of the schedule to query.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\\\STX\SOH\ENQ\DC2\EOT\243\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\\\STX\SOH\SOH\DC2\EOT\243\t\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\\\STX\SOH\ETX\DC2\EOT\243\t\EM\SUB\n\
    \$\n\
    \\EOT\EOT\\\STX\STX\DC2\EOT\245\t\EOT-\SUB\SYN Time range to query.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\\\STX\STX\ACK\DC2\EOT\245\t\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\\\STX\STX\SOH\DC2\EOT\245\t\RS(\n\
    \\r\n\
    \\ENQ\EOT\\\STX\STX\ETX\DC2\EOT\245\t+,\n\
    \\f\n\
    \\EOT\EOT\\\STX\ETX\DC2\EOT\246\t\EOT+\n\
    \\r\n\
    \\ENQ\EOT\\\STX\ETX\ACK\DC2\EOT\246\t\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\\\STX\ETX\SOH\DC2\EOT\246\t\RS&\n\
    \\r\n\
    \\ENQ\EOT\\\STX\ETX\ETX\DC2\EOT\246\t)*\n\
    \\f\n\
    \\STX\EOT]\DC2\ACK\249\t\NUL\251\t\SOH\n\
    \\v\n\
    \\ETX\EOT]\SOH\DC2\EOT\249\t\b)\n\
    \\f\n\
    \\EOT\EOT]\STX\NUL\DC2\EOT\250\t\EOT6\n\
    \\r\n\
    \\ENQ\EOT]\STX\NUL\EOT\DC2\EOT\250\t\EOT\f\n\
    \\r\n\
    \\ENQ\EOT]\STX\NUL\ACK\DC2\EOT\250\t\r&\n\
    \\r\n\
    \\ENQ\EOT]\STX\NUL\SOH\DC2\EOT\250\t'1\n\
    \\r\n\
    \\ENQ\EOT]\STX\NUL\ETX\DC2\EOT\250\t45\n\
    \\f\n\
    \\STX\EOT^\DC2\ACK\253\t\NUL\132\n\
    \\SOH\n\
    \\v\n\
    \\ETX\EOT^\SOH\DC2\EOT\253\t\b\GS\n\
    \8\n\
    \\EOT\EOT^\STX\NUL\DC2\EOT\255\t\EOT\EM\SUB* The namespace of the schedule to delete.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\NUL\ENQ\DC2\EOT\255\t\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\NUL\SOH\DC2\EOT\255\t\v\DC4\n\
    \\r\n\
    \\ENQ\EOT^\STX\NUL\ETX\DC2\EOT\255\t\ETB\CAN\n\
    \1\n\
    \\EOT\EOT^\STX\SOH\DC2\EOT\129\n\
    \\EOT\ESC\SUB# The id of the schedule to delete.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\SOH\ENQ\DC2\EOT\129\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\SOH\SOH\DC2\EOT\129\n\
    \\v\SYN\n\
    \\r\n\
    \\ENQ\EOT^\STX\SOH\ETX\DC2\EOT\129\n\
    \\EM\SUB\n\
    \F\n\
    \\EOT\EOT^\STX\STX\DC2\EOT\131\n\
    \\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\STX\ENQ\DC2\EOT\131\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT^\STX\STX\SOH\DC2\EOT\131\n\
    \\v\DC3\n\
    \\r\n\
    \\ENQ\EOT^\STX\STX\ETX\DC2\EOT\131\n\
    \\SYN\ETB\n\
    \\f\n\
    \\STX\EOT_\DC2\ACK\134\n\
    \\NUL\135\n\
    \\SOH\n\
    \\v\n\
    \\ETX\EOT_\SOH\DC2\EOT\134\n\
    \\b\RS\n\
    \\f\n\
    \\STX\EOT`\DC2\ACK\137\n\
    \\NUL\146\n\
    \\SOH\n\
    \\v\n\
    \\ETX\EOT`\SOH\DC2\EOT\137\n\
    \\b\FS\n\
    \3\n\
    \\EOT\EOT`\STX\NUL\DC2\EOT\139\n\
    \\EOT\EM\SUB% The namespace to list schedules in.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\NUL\ENQ\DC2\EOT\139\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\NUL\SOH\DC2\EOT\139\n\
    \\v\DC4\n\
    \\r\n\
    \\ENQ\EOT`\STX\NUL\ETX\DC2\EOT\139\n\
    \\ETB\CAN\n\
    \+\n\
    \\EOT\EOT`\STX\SOH\DC2\EOT\141\n\
    \\EOT \SUB\GS How many to return at once.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\SOH\ENQ\DC2\EOT\141\n\
    \\EOT\t\n\
    \\r\n\
    \\ENQ\EOT`\STX\SOH\SOH\DC2\EOT\141\n\
    \\n\
    \\ESC\n\
    \\r\n\
    \\ENQ\EOT`\STX\SOH\ETX\DC2\EOT\141\n\
    \\RS\US\n\
    \6\n\
    \\EOT\EOT`\STX\STX\DC2\EOT\143\n\
    \\EOT\RS\SUB( Token to get the next page of results.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\STX\ENQ\DC2\EOT\143\n\
    \\EOT\t\n\
    \\r\n\
    \\ENQ\EOT`\STX\STX\SOH\DC2\EOT\143\n\
    \\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOT`\STX\STX\ETX\DC2\EOT\143\n\
    \\FS\GS\n\
    \*\n\
    \\EOT\EOT`\STX\ETX\DC2\EOT\145\n\
    \\EOT\NAK\SUB\FS Query to filter schedules.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\ETX\ENQ\DC2\EOT\145\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT`\STX\ETX\SOH\DC2\EOT\145\n\
    \\v\DLE\n\
    \\r\n\
    \\ENQ\EOT`\STX\ETX\ETX\DC2\EOT\145\n\
    \\DC3\DC4\n\
    \\f\n\
    \\STX\EOTa\DC2\ACK\148\n\
    \\NUL\151\n\
    \\SOH\n\
    \\v\n\
    \\ETX\EOTa\SOH\DC2\EOT\148\n\
    \\b\GS\n\
    \\f\n\
    \\EOT\EOTa\STX\NUL\DC2\EOT\149\n\
    \\EOTF\n\
    \\r\n\
    \\ENQ\EOTa\STX\NUL\EOT\DC2\EOT\149\n\
    \\EOT\f\n\
    \\r\n\
    \\ENQ\EOTa\STX\NUL\ACK\DC2\EOT\149\n\
    \\r7\n\
    \\r\n\
    \\ENQ\EOTa\STX\NUL\SOH\DC2\EOT\149\n\
    \8A\n\
    \\r\n\
    \\ENQ\EOTa\STX\NUL\ETX\DC2\EOT\149\n\
    \DE\n\
    \\f\n\
    \\EOT\EOTa\STX\SOH\DC2\EOT\150\n\
    \\EOT\RS\n\
    \\r\n\
    \\ENQ\EOTa\STX\SOH\ENQ\DC2\EOT\150\n\
    \\EOT\t\n\
    \\r\n\
    \\ENQ\EOTa\STX\SOH\SOH\DC2\EOT\150\n\
    \\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOTa\STX\SOH\ETX\DC2\EOT\150\n\
    \\FS\GS\n\
    \(\n\
    \\STX\EOTb\DC2\ACK\154\n\
    \\NUL\208\n\
    \\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTb\SOH\DC2\EOT\154\n\
    \\b/\n\
    \\SO\n\
    \\EOT\EOTb\ETX\NUL\DC2\ACK\155\n\
    \\EOT\166\n\
    \\ENQ\n\
    \\r\n\
    \\ENQ\EOTb\ETX\NUL\SOH\DC2\EOT\155\n\
    \\f#\n\
    \E\n\
    \\ACK\EOTb\ETX\NUL\STX\NUL\DC2\EOT\157\n\
    \\b \SUB5 A new id to be added to an existing compatible set.\n\
    \\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\NUL\ENQ\DC2\EOT\157\n\
    \\b\SO\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\NUL\SOH\DC2\EOT\157\n\
    \\SI\ESC\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\NUL\ETX\DC2\EOT\157\n\
    \\RS\US\n\
    \\209\SOH\n\
    \\ACK\EOTb\ETX\NUL\STX\SOH\DC2\EOT\161\n\
    \\b0\SUB\192\SOH A build id which must already exist in the version sets known by the task queue. The new\n\
    \ id will be stored in the set containing this id, marking it as compatible with\n\
    \ the versions within.\n\
    \\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\SOH\ENQ\DC2\EOT\161\n\
    \\b\SO\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\SOH\SOH\DC2\EOT\161\n\
    \\SI+\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\SOH\ETX\DC2\EOT\161\n\
    \./\n\
    \\211\SOH\n\
    \\ACK\EOTb\ETX\NUL\STX\STX\DC2\EOT\165\n\
    \\b\"\SUB\194\SOH When set, establishes the compatible set being targeted as the overall default for the\n\
    \ queue. If a different set was the current default, the targeted set will replace it as\n\
    \ the new default.\n\
    \\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\STX\ENQ\DC2\EOT\165\n\
    \\b\f\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\STX\SOH\DC2\EOT\165\n\
    \\r\GS\n\
    \\SI\n\
    \\a\EOTb\ETX\NUL\STX\STX\ETX\DC2\EOT\165\n\
    \ !\n\
    \\SO\n\
    \\EOT\EOTb\ETX\SOH\DC2\ACK\168\n\
    \\EOT\173\n\
    \\ENQ\n\
    \\r\n\
    \\ENQ\EOTb\ETX\SOH\SOH\DC2\EOT\168\n\
    \\f\NAK\n\
    \X\n\
    \\ACK\EOTb\ETX\SOH\STX\NUL\DC2\EOT\170\n\
    \\b(\SUBH A build ID in the set whose default will become the merged set default\n\
    \\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\NUL\ENQ\DC2\EOT\170\n\
    \\b\SO\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\NUL\SOH\DC2\EOT\170\n\
    \\SI#\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\NUL\ETX\DC2\EOT\170\n\
    \&'\n\
    \Q\n\
    \\ACK\EOTb\ETX\SOH\STX\SOH\DC2\EOT\172\n\
    \\b*\SUBA A build ID in the set which will be merged into the primary set\n\
    \\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\SOH\ENQ\DC2\EOT\172\n\
    \\b\SO\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\SOH\SOH\DC2\EOT\172\n\
    \\SI%\n\
    \\SI\n\
    \\a\EOTb\ETX\SOH\STX\SOH\ETX\DC2\EOT\172\n\
    \()\n\
    \\f\n\
    \\EOT\EOTb\STX\NUL\DC2\EOT\175\n\
    \\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTb\STX\NUL\ENQ\DC2\EOT\175\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\NUL\SOH\DC2\EOT\175\n\
    \\v\DC4\n\
    \\r\n\
    \\ENQ\EOTb\STX\NUL\ETX\DC2\EOT\175\n\
    \\ETB\CAN\n\
    \\226\SOH\n\
    \\EOT\EOTb\STX\SOH\DC2\EOT\179\n\
    \\EOT\SUB\SUB\211\SOH Must be set, the task queue to apply changes to. Because all workers on a given task queue\n\
    \ must have the same set of workflow & activity implementations, there is no reason to specify\n\
    \ a task queue type here.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\SOH\ENQ\DC2\EOT\179\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\SOH\SOH\DC2\EOT\179\n\
    \\v\NAK\n\
    \\r\n\
    \\ENQ\EOTb\STX\SOH\ETX\DC2\EOT\179\n\
    \\CAN\EM\n\
    \\SO\n\
    \\EOT\EOTb\b\NUL\DC2\ACK\180\n\
    \\EOT\207\n\
    \\ENQ\n\
    \\r\n\
    \\ENQ\EOTb\b\NUL\SOH\DC2\EOT\180\n\
    \\n\
    \\DC3\n\
    \\212\STX\n\
    \\EOT\EOTb\STX\STX\DC2\EOT\187\n\
    \\b7\SUB\197\STX A new build id. This operation will create a new set which will be the new overall\n\
    \ default version for the queue, with this id as its only member. This new set is\n\
    \ incompatible with all previous sets/versions.\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: In makes perfect sense here. --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\STX\ENQ\DC2\EOT\187\n\
    \\b\SO\n\
    \\r\n\
    \\ENQ\EOTb\STX\STX\SOH\DC2\EOT\187\n\
    \\SI2\n\
    \\r\n\
    \\ENQ\EOTb\STX\STX\ETX\DC2\EOT\187\n\
    \56\n\
    \a\n\
    \\EOT\EOTb\STX\ETX\DC2\EOT\189\n\
    \\b@\SUBS Adds a new id to an existing compatible set, see sub-message definition for more.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\ETX\ACK\DC2\EOT\189\n\
    \\b\US\n\
    \\r\n\
    \\ENQ\EOTb\STX\ETX\SOH\DC2\EOT\189\n\
    \ ;\n\
    \\r\n\
    \\ENQ\EOTb\STX\ETX\ETX\DC2\EOT\189\n\
    \>?\n\
    \\149\STX\n\
    \\EOT\EOTb\STX\EOT\DC2\EOT\195\n\
    \\b+\SUB\134\STX Promote an existing set to be the current default (if it isn't already) by targeting\n\
    \ an existing build id within it. This field's value is the extant build id.\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: Names are hard. --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\EOT\ENQ\DC2\EOT\195\n\
    \\b\SO\n\
    \\r\n\
    \\ENQ\EOTb\STX\EOT\SOH\DC2\EOT\195\n\
    \\SI&\n\
    \\r\n\
    \\ENQ\EOTb\STX\EOT\ETX\DC2\EOT\195\n\
    \)*\n\
    \\218\SOH\n\
    \\EOT\EOTb\STX\ENQ\DC2\EOT\200\n\
    \\b/\SUB\203\SOH Promote an existing build id within some set to be the current default for that set.\n\
    \\n\
    \ (-- api-linter: core::0140::prepositions=disabled\n\
    \     aip.dev/not-precedent: Within makes perfect sense here. --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\ENQ\ENQ\DC2\EOT\200\n\
    \\b\SO\n\
    \\r\n\
    \\ENQ\EOTb\STX\ENQ\SOH\DC2\EOT\200\n\
    \\SI*\n\
    \\r\n\
    \\ENQ\EOTb\STX\ENQ\ETX\DC2\EOT\200\n\
    \-.\n\
    \\173\ETX\n\
    \\EOT\EOTb\STX\ACK\DC2\EOT\206\n\
    \\b!\SUB\158\ETX Merge two existing sets together, thus declaring all build IDs in both sets compatible\n\
    \ with one another. The primary set's default will become the default for the merged set.\n\
    \ This is useful if you've accidentally declared a new ID as incompatible you meant to\n\
    \ declare as compatible. The unusual case of incomplete replication during failover could\n\
    \ also result in a split set, which this operation can repair.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTb\STX\ACK\ACK\DC2\EOT\206\n\
    \\b\DC1\n\
    \\r\n\
    \\ENQ\EOTb\STX\ACK\SOH\DC2\EOT\206\n\
    \\DC2\FS\n\
    \\r\n\
    \\ENQ\EOTb\STX\ACK\ETX\DC2\EOT\206\n\
    \\US \n\
    \(\n\
    \\STX\EOTc\DC2\ACK\210\n\
    \\NUL\213\n\
    \\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTc\SOH\DC2\EOT\210\n\
    \\b0\n\
    \\v\n\
    \\ETX\EOTc\t\DC2\EOT\211\n\
    \\EOT\SI\n\
    \\f\n\
    \\EOT\EOTc\t\NUL\DC2\EOT\211\n\
    \\r\SO\n\
    \\r\n\
    \\ENQ\EOTc\t\NUL\SOH\DC2\EOT\211\n\
    \\r\SO\n\
    \\r\n\
    \\ENQ\EOTc\t\NUL\STX\DC2\EOT\211\n\
    \\r\SO\n\
    \\v\n\
    \\ETX\EOTc\n\
    \\DC2\EOT\212\n\
    \\EOT\RS\n\
    \\f\n\
    \\EOT\EOTc\n\
    \\NUL\DC2\EOT\212\n\
    \\r\GS\n\
    \(\n\
    \\STX\EOTd\DC2\ACK\216\n\
    \\NUL\223\n\
    \\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTd\SOH\DC2\EOT\216\n\
    \\b,\n\
    \\f\n\
    \\EOT\EOTd\STX\NUL\DC2\EOT\217\n\
    \\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTd\STX\NUL\ENQ\DC2\EOT\217\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTd\STX\NUL\SOH\DC2\EOT\217\n\
    \\v\DC4\n\
    \\r\n\
    \\ENQ\EOTd\STX\NUL\ETX\DC2\EOT\217\n\
    \\ETB\CAN\n\
    \Y\n\
    \\EOT\EOTd\STX\SOH\DC2\EOT\219\n\
    \\EOT\SUB\SUBK Must be set, the task queue to interrogate about worker id compatibility.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTd\STX\SOH\ENQ\DC2\EOT\219\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTd\STX\SOH\SOH\DC2\EOT\219\n\
    \\v\NAK\n\
    \\r\n\
    \\ENQ\EOTd\STX\SOH\ETX\DC2\EOT\219\n\
    \\CAN\EM\n\
    \\151\SOH\n\
    \\EOT\EOTd\STX\STX\DC2\EOT\222\n\
    \\EOT\ETB\SUB\136\SOH Limits how many compatible sets will be returned. Specify 1 to only return the current\n\
    \ default major version set. 0 returns all sets.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTd\STX\STX\ENQ\DC2\EOT\222\n\
    \\EOT\t\n\
    \\r\n\
    \\ENQ\EOTd\STX\STX\SOH\DC2\EOT\222\n\
    \\n\
    \\DC2\n\
    \\r\n\
    \\ENQ\EOTd\STX\STX\ETX\DC2\EOT\222\n\
    \\NAK\SYN\n\
    \(\n\
    \\STX\EOTe\DC2\ACK\225\n\
    \\NUL\232\n\
    \\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTe\SOH\DC2\EOT\225\n\
    \\b-\n\
    \\188\STX\n\
    \\EOT\EOTe\STX\NUL\DC2\EOT\231\n\
    \\EOTS\SUB\173\STX Major version sets, in order from oldest to newest. The last element of the list will always\n\
    \ be the current default major version. IE: New workflows will target the most recent version\n\
    \ in that version set.\n\
    \\n\
    \ There may be fewer sets returned than exist, if the request chose to limit this response.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTe\STX\NUL\EOT\DC2\EOT\231\n\
    \\EOT\f\n\
    \\r\n\
    \\ENQ\EOTe\STX\NUL\ACK\DC2\EOT\231\n\
    \\r;\n\
    \\r\n\
    \\ENQ\EOTe\STX\NUL\SOH\DC2\EOT\231\n\
    \<N\n\
    \\r\n\
    \\ENQ\EOTe\STX\NUL\ETX\DC2\EOT\231\n\
    \QR\n\
    \\230\STX\n\
    \\STX\EOTf\DC2\ACK\239\n\
    \\NUL\200\v\SOH\SUB\215\STX (-- api-linter: core::0134::request-mask-required=disabled\n\
    \     aip.dev/not-precedent: UpdateNamespace RPC doesn't follow Google API format. --)\n\
    \ (-- api-linter: core::0134::request-resource-required=disabled\n\
    \     aip.dev/not-precedent: GetWorkerBuildIdCompatibilityRequest RPC doesn't follow Google API format. --)\n\
    \ [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTf\SOH\DC2\EOT\239\n\
    \\b*\n\
    \\219\SOH\n\
    \\EOT\EOTf\ETX\NUL\DC2\ACK\243\n\
    \\EOT\250\n\
    \\ENQ\SUB\202\SOH Inserts the rule to the list of assignment rules for this Task Queue.\n\
    \ The rules are evaluated in order, starting from index 0. The first\n\
    \ applicable rule will be applied and the rest will be ignored.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\ETX\NUL\SOH\DC2\EOT\243\n\
    \\f'\n\
    \\239\SOH\n\
    \\ACK\EOTf\ETX\NUL\STX\NUL\DC2\EOT\248\n\
    \\b\GS\SUB\222\SOH Use this option to insert the rule in a particular index. By\n\
    \ default, the new rule is inserted at the beginning of the list\n\
    \ (index 0). If the given index is too larger the rule will be\n\
    \ inserted at the end of the list.\n\
    \\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\NUL\ENQ\DC2\EOT\248\n\
    \\b\r\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\NUL\SOH\DC2\EOT\248\n\
    \\SO\CAN\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\NUL\ETX\DC2\EOT\248\n\
    \\ESC\FS\n\
    \\SO\n\
    \\ACK\EOTf\ETX\NUL\STX\SOH\DC2\EOT\249\n\
    \\bA\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\SOH\ACK\DC2\EOT\249\n\
    \\b7\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\SOH\SOH\DC2\EOT\249\n\
    \8<\n\
    \\SI\n\
    \\a\EOTf\ETX\NUL\STX\SOH\ETX\DC2\EOT\249\n\
    \?@\n\
    \@\n\
    \\EOT\EOTf\ETX\SOH\DC2\ACK\253\n\
    \\EOT\135\v\ENQ\SUB0 Replaces the assignment rule at a given index.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\ETX\SOH\SOH\DC2\EOT\253\n\
    \\f(\n\
    \\SO\n\
    \\ACK\EOTf\ETX\SOH\STX\NUL\DC2\EOT\254\n\
    \\b\GS\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\NUL\ENQ\DC2\EOT\254\n\
    \\b\r\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\NUL\SOH\DC2\EOT\254\n\
    \\SO\CAN\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\NUL\ETX\DC2\EOT\254\n\
    \\ESC\FS\n\
    \\SO\n\
    \\ACK\EOTf\ETX\SOH\STX\SOH\DC2\EOT\255\n\
    \\bA\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\SOH\ACK\DC2\EOT\255\n\
    \\b7\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\SOH\SOH\DC2\EOT\255\n\
    \8<\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\SOH\ETX\DC2\EOT\255\n\
    \?@\n\
    \\251\SOH\n\
    \\ACK\EOTf\ETX\SOH\STX\STX\DC2\EOT\134\v\b\ETB\SUB\234\SOH By default presence of one unconditional rule is enforced, otherwise\n\
    \ the replace operation will be rejected. Set `force` to true to\n\
    \ bypass this validation. An unconditional assignment rule:\n\
    \   - Has no hint filter\n\
    \   - Has no ramp\n\
    \\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\STX\ENQ\DC2\EOT\134\v\b\f\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\STX\SOH\DC2\EOT\134\v\r\DC2\n\
    \\SI\n\
    \\a\EOTf\ETX\SOH\STX\STX\ETX\DC2\EOT\134\v\NAK\SYN\n\
    \\SO\n\
    \\EOT\EOTf\ETX\STX\DC2\ACK\137\v\EOT\146\v\ENQ\n\
    \\r\n\
    \\ENQ\EOTf\ETX\STX\SOH\DC2\EOT\137\v\f'\n\
    \\SO\n\
    \\ACK\EOTf\ETX\STX\STX\NUL\DC2\EOT\138\v\b\GS\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\NUL\ENQ\DC2\EOT\138\v\b\r\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\NUL\SOH\DC2\EOT\138\v\SO\CAN\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\NUL\ETX\DC2\EOT\138\v\ESC\FS\n\
    \\250\SOH\n\
    \\ACK\EOTf\ETX\STX\STX\SOH\DC2\EOT\145\v\b\ETB\SUB\233\SOH By default presence of one unconditional rule is enforced, otherwise\n\
    \ the delete operation will be rejected. Set `force` to true to\n\
    \ bypass this validation. An unconditional assignment rule:\n\
    \   - Has no hint filter\n\
    \   - Has no ramp\n\
    \\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\SOH\ENQ\DC2\EOT\145\v\b\f\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\SOH\SOH\DC2\EOT\145\v\r\DC2\n\
    \\SI\n\
    \\a\EOTf\ETX\STX\STX\SOH\ETX\DC2\EOT\145\v\NAK\SYN\n\
    \\158\SOH\n\
    \\EOT\EOTf\ETX\ETX\DC2\ACK\150\v\EOT\152\v\ENQ\SUB\141\SOH Adds the rule to the list of redirect rules for this Task Queue. There\n\
    \ can be at most one redirect rule for each distinct Source Build ID.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\ETX\ETX\SOH\DC2\EOT\150\v\f,\n\
    \\SO\n\
    \\ACK\EOTf\ETX\ETX\STX\NUL\DC2\EOT\151\v\bI\n\
    \\SI\n\
    \\a\EOTf\ETX\ETX\STX\NUL\ACK\DC2\EOT\151\v\b?\n\
    \\SI\n\
    \\a\EOTf\ETX\ETX\STX\NUL\SOH\DC2\EOT\151\v@D\n\
    \\SI\n\
    \\a\EOTf\ETX\ETX\STX\NUL\ETX\DC2\EOT\151\vGH\n\
    \K\n\
    \\EOT\EOTf\ETX\EOT\DC2\ACK\155\v\EOT\157\v\ENQ\SUB; Replaces the routing rule with the given source Build ID.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\ETX\EOT\SOH\DC2\EOT\155\v\f0\n\
    \\SO\n\
    \\ACK\EOTf\ETX\EOT\STX\NUL\DC2\EOT\156\v\bI\n\
    \\SI\n\
    \\a\EOTf\ETX\EOT\STX\NUL\ACK\DC2\EOT\156\v\b?\n\
    \\SI\n\
    \\a\EOTf\ETX\EOT\STX\NUL\SOH\DC2\EOT\156\v@D\n\
    \\SI\n\
    \\a\EOTf\ETX\EOT\STX\NUL\ETX\DC2\EOT\156\vGH\n\
    \\SO\n\
    \\EOT\EOTf\ETX\ENQ\DC2\ACK\159\v\EOT\161\v\ENQ\n\
    \\r\n\
    \\ENQ\EOTf\ETX\ENQ\SOH\DC2\EOT\159\v\f/\n\
    \\SO\n\
    \\ACK\EOTf\ETX\ENQ\STX\NUL\DC2\EOT\160\v\b#\n\
    \\SI\n\
    \\a\EOTf\ETX\ENQ\STX\NUL\ENQ\DC2\EOT\160\v\b\SO\n\
    \\SI\n\
    \\a\EOTf\ETX\ENQ\STX\NUL\SOH\DC2\EOT\160\v\SI\RS\n\
    \\SI\n\
    \\a\EOTf\ETX\ENQ\STX\NUL\ETX\DC2\EOT\160\v!\"\n\
    \\244\ETX\n\
    \\EOT\EOTf\ETX\ACK\DC2\ACK\172\v\EOT\179\v\ENQ\SUB\227\ETX This command is intended to be used to complete the rollout of a Build\n\
    \ ID and cleanup unnecessary rules possibly created during a gradual\n\
    \ rollout. Specifically, this command will make the following changes\n\
    \ atomically:\n\
    \  1. Adds an assignment rule (with full ramp) for the target Build ID at\n\
    \     the end of the list.\n\
    \  2. Removes all previously added assignment rules to the given target\n\
    \     Build ID (if any).\n\
    \  3. Removes any fully-ramped assignment rule for other Build IDs.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\ETX\ACK\SOH\DC2\EOT\172\v\f\EM\n\
    \\SO\n\
    \\ACK\EOTf\ETX\ACK\STX\NUL\DC2\EOT\173\v\b#\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\NUL\ENQ\DC2\EOT\173\v\b\SO\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\NUL\SOH\DC2\EOT\173\v\SI\RS\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\NUL\ETX\DC2\EOT\173\v!\"\n\
    \\190\SOH\n\
    \\ACK\EOTf\ETX\ACK\STX\SOH\DC2\EOT\178\v\b\ETB\SUB\173\SOH To prevent committing invalid Build IDs, we reject the request if no\n\
    \ pollers has been seen recently for this Build ID. Use the `force`\n\
    \ option to disable this validation.\n\
    \\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\SOH\ENQ\DC2\EOT\178\v\b\f\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\SOH\SOH\DC2\EOT\178\v\r\DC2\n\
    \\SI\n\
    \\a\EOTf\ETX\ACK\STX\SOH\ETX\DC2\EOT\178\v\NAK\SYN\n\
    \\f\n\
    \\EOT\EOTf\STX\NUL\DC2\EOT\181\v\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTf\STX\NUL\ENQ\DC2\EOT\181\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\STX\NUL\SOH\DC2\EOT\181\v\v\DC4\n\
    \\r\n\
    \\ENQ\EOTf\STX\NUL\ETX\DC2\EOT\181\v\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTf\STX\SOH\DC2\EOT\182\v\EOT\SUB\n\
    \\r\n\
    \\ENQ\EOTf\STX\SOH\ENQ\DC2\EOT\182\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\STX\SOH\SOH\DC2\EOT\182\v\v\NAK\n\
    \\r\n\
    \\ENQ\EOTf\STX\SOH\ETX\DC2\EOT\182\v\CAN\EM\n\
    \\248\STX\n\
    \\EOT\EOTf\STX\STX\DC2\EOT\189\v\EOT\GS\SUB\233\STX A valid conflict_token can be taken from the previous\n\
    \ ListWorkerVersioningRulesResponse or UpdateWorkerVersioningRulesResponse.\n\
    \ An invalid token will cause this request to fail, ensuring that if the rules\n\
    \ for this Task Queue have been modified between the previous and current\n\
    \ operation, the request will fail instead of causing an unpredictable mutation.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTf\STX\STX\ENQ\DC2\EOT\189\v\EOT\t\n\
    \\r\n\
    \\ENQ\EOTf\STX\STX\SOH\DC2\EOT\189\v\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTf\STX\STX\ETX\DC2\EOT\189\v\ESC\FS\n\
    \\SO\n\
    \\EOT\EOTf\b\NUL\DC2\ACK\191\v\EOT\199\v\ENQ\n\
    \\r\n\
    \\ENQ\EOTf\b\NUL\SOH\DC2\EOT\191\v\n\
    \\DC3\n\
    \\f\n\
    \\EOT\EOTf\STX\ETX\DC2\EOT\192\v\b?\n\
    \\r\n\
    \\ENQ\EOTf\STX\ETX\ACK\DC2\EOT\192\v\b#\n\
    \\r\n\
    \\ENQ\EOTf\STX\ETX\SOH\DC2\EOT\192\v$:\n\
    \\r\n\
    \\ENQ\EOTf\STX\ETX\ETX\DC2\EOT\192\v=>\n\
    \\f\n\
    \\EOT\EOTf\STX\EOT\DC2\EOT\193\v\bA\n\
    \\r\n\
    \\ENQ\EOTf\STX\EOT\ACK\DC2\EOT\193\v\b$\n\
    \\r\n\
    \\ENQ\EOTf\STX\EOT\SOH\DC2\EOT\193\v%<\n\
    \\r\n\
    \\ENQ\EOTf\STX\EOT\ETX\DC2\EOT\193\v?@\n\
    \\f\n\
    \\EOT\EOTf\STX\ENQ\DC2\EOT\194\v\b?\n\
    \\r\n\
    \\ENQ\EOTf\STX\ENQ\ACK\DC2\EOT\194\v\b#\n\
    \\r\n\
    \\ENQ\EOTf\STX\ENQ\SOH\DC2\EOT\194\v$:\n\
    \\r\n\
    \\ENQ\EOTf\STX\ENQ\ETX\DC2\EOT\194\v=>\n\
    \\f\n\
    \\EOT\EOTf\STX\ACK\DC2\EOT\195\v\bJ\n\
    \\r\n\
    \\ENQ\EOTf\STX\ACK\ACK\DC2\EOT\195\v\b(\n\
    \\r\n\
    \\ENQ\EOTf\STX\ACK\SOH\DC2\EOT\195\v)E\n\
    \\r\n\
    \\ENQ\EOTf\STX\ACK\ETX\DC2\EOT\195\vHI\n\
    \\f\n\
    \\EOT\EOTf\STX\a\DC2\EOT\196\v\bR\n\
    \\r\n\
    \\ENQ\EOTf\STX\a\ACK\DC2\EOT\196\v\b,\n\
    \\r\n\
    \\ENQ\EOTf\STX\a\SOH\DC2\EOT\196\v-M\n\
    \\r\n\
    \\ENQ\EOTf\STX\a\ETX\DC2\EOT\196\vPQ\n\
    \\f\n\
    \\EOT\EOTf\STX\b\DC2\EOT\197\v\bP\n\
    \\r\n\
    \\ENQ\EOTf\STX\b\ACK\DC2\EOT\197\v\b+\n\
    \\r\n\
    \\ENQ\EOTf\STX\b\SOH\DC2\EOT\197\v,K\n\
    \\r\n\
    \\ENQ\EOTf\STX\b\ETX\DC2\EOT\197\vNO\n\
    \\f\n\
    \\EOT\EOTf\STX\t\DC2\EOT\198\v\b+\n\
    \\r\n\
    \\ENQ\EOTf\STX\t\ACK\DC2\EOT\198\v\b\NAK\n\
    \\r\n\
    \\ENQ\EOTf\STX\t\SOH\DC2\EOT\198\v\SYN%\n\
    \\r\n\
    \\ENQ\EOTf\STX\t\ETX\DC2\EOT\198\v(*\n\
    \(\n\
    \\STX\EOTg\DC2\ACK\203\v\NUL\211\v\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTg\SOH\DC2\EOT\203\v\b+\n\
    \\f\n\
    \\EOT\EOTg\STX\NUL\DC2\EOT\204\v\EOT]\n\
    \\r\n\
    \\ENQ\EOTg\STX\NUL\EOT\DC2\EOT\204\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTg\STX\NUL\ACK\DC2\EOT\204\v\rG\n\
    \\r\n\
    \\ENQ\EOTg\STX\NUL\SOH\DC2\EOT\204\vHX\n\
    \\r\n\
    \\ENQ\EOTg\STX\NUL\ETX\DC2\EOT\204\v[\\\n\
    \\f\n\
    \\EOT\EOTg\STX\SOH\DC2\EOT\205\v\EOTn\n\
    \\r\n\
    \\ENQ\EOTg\STX\SOH\EOT\DC2\EOT\205\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTg\STX\SOH\ACK\DC2\EOT\205\v\rO\n\
    \\r\n\
    \\ENQ\EOTg\STX\SOH\SOH\DC2\EOT\205\vPi\n\
    \\r\n\
    \\ENQ\EOTg\STX\SOH\ETX\DC2\EOT\205\vlm\n\
    \\208\SOH\n\
    \\EOT\EOTg\STX\STX\DC2\EOT\210\v\EOT\GS\SUB\193\SOH This value can be passed back to UpdateWorkerVersioningRulesRequest to\n\
    \ ensure that the rules were not modified between the two updates, which\n\
    \ could lead to lost updates and other confusion.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTg\STX\STX\ENQ\DC2\EOT\210\v\EOT\t\n\
    \\r\n\
    \\ENQ\EOTg\STX\STX\SOH\DC2\EOT\210\v\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTg\STX\STX\ETX\DC2\EOT\210\v\ESC\FS\n\
    \(\n\
    \\STX\EOTh\DC2\ACK\214\v\NUL\217\v\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTh\SOH\DC2\EOT\214\v\b'\n\
    \\f\n\
    \\EOT\EOTh\STX\NUL\DC2\EOT\215\v\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTh\STX\NUL\ENQ\DC2\EOT\215\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTh\STX\NUL\SOH\DC2\EOT\215\v\v\DC4\n\
    \\r\n\
    \\ENQ\EOTh\STX\NUL\ETX\DC2\EOT\215\v\ETB\CAN\n\
    \\f\n\
    \\EOT\EOTh\STX\SOH\DC2\EOT\216\v\EOT\SUB\n\
    \\r\n\
    \\ENQ\EOTh\STX\SOH\ENQ\DC2\EOT\216\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTh\STX\SOH\SOH\DC2\EOT\216\v\v\NAK\n\
    \\r\n\
    \\ENQ\EOTh\STX\SOH\ETX\DC2\EOT\216\v\CAN\EM\n\
    \(\n\
    \\STX\EOTi\DC2\ACK\220\v\NUL\228\v\SOH\SUB\SUB [cleanup-wv-pre-release]\n\
    \\n\
    \\v\n\
    \\ETX\EOTi\SOH\DC2\EOT\220\v\b(\n\
    \\f\n\
    \\EOT\EOTi\STX\NUL\DC2\EOT\221\v\EOT]\n\
    \\r\n\
    \\ENQ\EOTi\STX\NUL\EOT\DC2\EOT\221\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTi\STX\NUL\ACK\DC2\EOT\221\v\rG\n\
    \\r\n\
    \\ENQ\EOTi\STX\NUL\SOH\DC2\EOT\221\vHX\n\
    \\r\n\
    \\ENQ\EOTi\STX\NUL\ETX\DC2\EOT\221\v[\\\n\
    \\f\n\
    \\EOT\EOTi\STX\SOH\DC2\EOT\222\v\EOTn\n\
    \\r\n\
    \\ENQ\EOTi\STX\SOH\EOT\DC2\EOT\222\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTi\STX\SOH\ACK\DC2\EOT\222\v\rO\n\
    \\r\n\
    \\ENQ\EOTi\STX\SOH\SOH\DC2\EOT\222\vPi\n\
    \\r\n\
    \\ENQ\EOTi\STX\SOH\ETX\DC2\EOT\222\vlm\n\
    \\217\SOH\n\
    \\EOT\EOTi\STX\STX\DC2\EOT\227\v\EOT\GS\SUB\202\SOH This value can be passed back to UpdateWorkerVersioningRulesRequest to\n\
    \ ensure that the rules were not modified between this List and the Update,\n\
    \ which could lead to lost updates and other confusion.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTi\STX\STX\ENQ\DC2\EOT\227\v\EOT\t\n\
    \\r\n\
    \\ENQ\EOTi\STX\STX\SOH\DC2\EOT\227\v\n\
    \\CAN\n\
    \\r\n\
    \\ENQ\EOTi\STX\STX\ETX\DC2\EOT\227\v\ESC\FS\n\
    \N\n\
    \\STX\EOTj\DC2\ACK\232\v\NUL\254\v\SOH\SUB@ [cleanup-wv-pre-release]\n\
    \ Deprecated. Use `DescribeTaskQueue`.\n\
    \\n\
    \\v\n\
    \\ETX\EOTj\SOH\DC2\EOT\232\v\b(\n\
    \\f\n\
    \\EOT\EOTj\STX\NUL\DC2\EOT\233\v\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTj\STX\NUL\ENQ\DC2\EOT\233\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTj\STX\NUL\SOH\DC2\EOT\233\v\v\DC4\n\
    \\r\n\
    \\ENQ\EOTj\STX\NUL\ETX\DC2\EOT\233\v\ETB\CAN\n\
    \\129\ETX\n\
    \\EOT\EOTj\STX\SOH\DC2\EOT\238\v\EOT\"\SUB\242\STX Build ids to retrieve reachability for. An empty string will be interpreted as an unversioned worker.\n\
    \ The number of build ids that can be queried in a single API call is limited.\n\
    \ Open source users can adjust this limit by setting the server's dynamic config value for\n\
    \ `limit.reachabilityQueryBuildIds` with the caveat that this call can strain the visibility store.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTj\STX\SOH\EOT\DC2\EOT\238\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTj\STX\SOH\ENQ\DC2\EOT\238\v\r\DC3\n\
    \\r\n\
    \\ENQ\EOTj\STX\SOH\SOH\DC2\EOT\238\v\DC4\GS\n\
    \\r\n\
    \\ENQ\EOTj\STX\SOH\ETX\DC2\EOT\238\v !\n\
    \\152\ETX\n\
    \\EOT\EOTj\STX\STX\DC2\EOT\245\v\EOT$\SUB\137\ETX Task queues to retrieve reachability for. Leave this empty to query for all task queues associated with given\n\
    \ build ids in the namespace.\n\
    \ Must specify at least one task queue if querying for an unversioned worker.\n\
    \ The number of task queues that the server will fetch reachability information for is limited.\n\
    \ See the `GetWorkerTaskReachabilityResponse` documentation for more information.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTj\STX\STX\EOT\DC2\EOT\245\v\EOT\f\n\
    \\r\n\
    \\ENQ\EOTj\STX\STX\ENQ\DC2\EOT\245\v\r\DC3\n\
    \\r\n\
    \\ENQ\EOTj\STX\STX\SOH\DC2\EOT\245\v\DC4\US\n\
    \\r\n\
    \\ENQ\EOTj\STX\STX\ETX\DC2\EOT\245\v\"#\n\
    \\180\ETX\n\
    \\EOT\EOTj\STX\ETX\DC2\EOT\253\v\EOT<\SUB\165\ETX Type of reachability to query for.\n\
    \ `TASK_REACHABILITY_NEW_WORKFLOWS` is always returned in the response.\n\
    \ Use `TASK_REACHABILITY_EXISTING_WORKFLOWS` if your application needs to respond to queries on closed workflows.\n\
    \ Otherwise, use `TASK_REACHABILITY_OPEN_WORKFLOWS`. Default is `TASK_REACHABILITY_EXISTING_WORKFLOWS` if left\n\
    \ unspecified.\n\
    \ See the TaskReachability docstring for information about each enum variant.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTj\STX\ETX\ACK\DC2\EOT\253\v\EOT*\n\
    \\r\n\
    \\ENQ\EOTj\STX\ETX\SOH\DC2\EOT\253\v+7\n\
    \\r\n\
    \\ENQ\EOTj\STX\ETX\ETX\DC2\EOT\253\v:;\n\
    \N\n\
    \\STX\EOTk\DC2\ACK\130\f\NUL\141\f\SOH\SUB@ [cleanup-wv-pre-release]\n\
    \ Deprecated. Use `DescribeTaskQueue`.\n\
    \\n\
    \\v\n\
    \\ETX\EOTk\SOH\DC2\EOT\130\f\b)\n\
    \\130\ACK\n\
    \\EOT\EOTk\STX\NUL\DC2\EOT\140\f\EOTU\SUB\243\ENQ Task reachability, broken down by build id and then task queue.\n\
    \ When requesting a large number of task queues or all task queues associated with the given build ids in a\n\
    \ namespace, all task queues will be listed in the response but some of them may not contain reachability\n\
    \ information due to a server enforced limit. When reaching the limit, task queues that reachability information\n\
    \ could not be retrieved for will be marked with a single TASK_REACHABILITY_UNSPECIFIED entry. The caller may issue\n\
    \ another call to get the reachability for those task queues.\n\
    \\n\
    \ Open source users can adjust this limit by setting the server's dynamic config value for\n\
    \ `limit.reachabilityTaskQueueScan` with the caveat that this call can strain the visibility store.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTk\STX\NUL\EOT\DC2\EOT\140\f\EOT\f\n\
    \\r\n\
    \\ENQ\EOTk\STX\NUL\ACK\DC2\EOT\140\f\r:\n\
    \\r\n\
    \\ENQ\EOTk\STX\NUL\SOH\DC2\EOT\140\f;P\n\
    \\r\n\
    \\ENQ\EOTk\STX\NUL\ETX\DC2\EOT\140\fST\n\
    \\DEL\n\
    \\STX\EOTl\DC2\ACK\145\f\NUL\167\f\SOH\SUBq (-- api-linter: core::0134=disabled\n\
    \     aip.dev/not-precedent: Update RPCs don't follow Google API format. --)\n\
    \\n\
    \\v\n\
    \\ETX\EOTl\SOH\DC2\EOT\145\f\b&\n\
    \:\n\
    \\EOT\EOTl\STX\NUL\DC2\EOT\147\f\EOT\EM\SUB, The namespace name of the target Workflow.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\NUL\ENQ\DC2\EOT\147\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\NUL\SOH\DC2\EOT\147\f\v\DC4\n\
    \\r\n\
    \\ENQ\EOTl\STX\NUL\ETX\DC2\EOT\147\f\ETB\CAN\n\
    \\210\SOH\n\
    \\EOT\EOTl\STX\SOH\DC2\EOT\151\f\EOTD\SUB\195\SOH The target Workflow Id and (optionally) a specific Run Id thereof.\n\
    \ (-- api-linter: core::0203::optional=disabled\n\
    \     aip.dev/not-precedent: false positive triggered by the word \"optional\" --)\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\SOH\ACK\DC2\EOT\151\f\EOT,\n\
    \\r\n\
    \\ENQ\EOTl\STX\SOH\SOH\DC2\EOT\151\f-?\n\
    \\r\n\
    \\ENQ\EOTl\STX\SOH\ETX\DC2\EOT\151\fBC\n\
    \\208\SOH\n\
    \\EOT\EOTl\STX\STX\DC2\EOT\155\f\EOT&\SUB\193\SOH If set, this call will error if the most recent (if no Run Id is set on\n\
    \ `workflow_execution`), or specified (if it is) Workflow Execution is not\n\
    \ part of the same execution chain as this Id.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\STX\ENQ\DC2\EOT\155\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\STX\SOH\DC2\EOT\155\f\v!\n\
    \\r\n\
    \\ENQ\EOTl\STX\STX\ETX\DC2\EOT\155\f$%\n\
    \\228\STX\n\
    \\EOT\EOTl\STX\ETX\DC2\EOT\162\f\EOT6\SUB\213\STX Specifies client's intent to wait for Update results.\n\
    \ NOTE: This field works together with API call timeout which is limited by\n\
    \ server timeout (maximum wait time). If server timeout is expired before\n\
    \ user specified timeout, API call returns even if specified stage is not reached.\n\
    \ Actual reached stage will be included in the response.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\ETX\ACK\DC2\EOT\162\f\EOT%\n\
    \\r\n\
    \\ENQ\EOTl\STX\ETX\SOH\DC2\EOT\162\f&1\n\
    \\r\n\
    \\ENQ\EOTl\STX\ETX\ETX\DC2\EOT\162\f45\n\
    \k\n\
    \\EOT\EOTl\STX\EOT\DC2\EOT\166\f\EOT/\SUB] The request information that will be delivered all the way down to the\n\
    \ Workflow Execution.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTl\STX\EOT\ACK\DC2\EOT\166\f\EOT\"\n\
    \\r\n\
    \\ENQ\EOTl\STX\EOT\SOH\DC2\EOT\166\f#*\n\
    \\r\n\
    \\ENQ\EOTl\STX\EOT\ETX\DC2\EOT\166\f-.\n\
    \\f\n\
    \\STX\EOTm\DC2\ACK\169\f\NUL\189\f\SOH\n\
    \\v\n\
    \\ETX\EOTm\SOH\DC2\EOT\169\f\b'\n\
    \S\n\
    \\EOT\EOTm\STX\NUL\DC2\EOT\171\f\EOT4\SUBE Enough information for subsequent poll calls if needed. Never null.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTm\STX\NUL\ACK\DC2\EOT\171\f\EOT$\n\
    \\r\n\
    \\ENQ\EOTm\STX\NUL\SOH\DC2\EOT\171\f%/\n\
    \\r\n\
    \\ENQ\EOTm\STX\NUL\ETX\DC2\EOT\171\f23\n\
    \\194\SOH\n\
    \\EOT\EOTm\STX\SOH\DC2\EOT\176\f\EOT/\SUB\179\SOH The outcome of the Update if and only if the Workflow Update\n\
    \ has completed. If this response is being returned before the Update has\n\
    \ completed then this field will not be set.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTm\STX\SOH\ACK\DC2\EOT\176\f\EOT\"\n\
    \\r\n\
    \\ENQ\EOTm\STX\SOH\SOH\DC2\EOT\176\f#*\n\
    \\r\n\
    \\ENQ\EOTm\STX\SOH\ETX\DC2\EOT\176\f-.\n\
    \\215\EOT\n\
    \\EOT\EOTm\STX\STX\DC2\EOT\188\f\EOTJ\SUB\200\EOT The most advanced lifecycle stage that the Update is known to have\n\
    \ reached, where lifecycle stages are ordered\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_UNSPECIFIED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ADMITTED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ACCEPTED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_COMPLETED.\n\
    \ UNSPECIFIED will be returned if and only if the server's maximum wait\n\
    \ time was reached before the Update reached the stage specified in the\n\
    \ request WaitPolicy, and before the context deadline expired; clients may\n\
    \ may then retry the call as needed.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTm\STX\STX\ACK\DC2\EOT\188\f\EOT?\n\
    \\r\n\
    \\ENQ\EOTm\STX\STX\SOH\DC2\EOT\188\f@E\n\
    \\r\n\
    \\ENQ\EOTm\STX\STX\ETX\DC2\EOT\188\fHI\n\
    \\f\n\
    \\STX\EOTn\DC2\ACK\191\f\NUL\221\f\SOH\n\
    \\v\n\
    \\ETX\EOTn\SOH\DC2\EOT\191\f\b\"\n\
    \;\n\
    \\EOT\EOTn\STX\NUL\DC2\EOT\193\f\EOT\EM\SUB- Namespace that contains the batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\NUL\ENQ\DC2\EOT\193\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\NUL\SOH\DC2\EOT\193\f\v\DC4\n\
    \\r\n\
    \\ENQ\EOTn\STX\NUL\ETX\DC2\EOT\193\f\ETB\CAN\n\
    \\148\SOH\n\
    \\EOT\EOTn\STX\SOH\DC2\EOT\196\f\EOT \SUB\133\SOH Visibility query defines the the group of workflow to apply the batch operation\n\
    \ This field and `executions` are mutually exclusive\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\SOH\ENQ\DC2\EOT\196\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\SOH\SOH\DC2\EOT\196\f\v\ESC\n\
    \\r\n\
    \\ENQ\EOTn\STX\SOH\ETX\DC2\EOT\196\f\RS\US\n\
    \>\n\
    \\EOT\EOTn\STX\STX\DC2\EOT\198\f\EOT\SYN\SUB0 Job ID defines the unique ID for the batch job\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\STX\ENQ\DC2\EOT\198\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\STX\SOH\DC2\EOT\198\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTn\STX\STX\ETX\DC2\EOT\198\f\DC4\NAK\n\
    \5\n\
    \\EOT\EOTn\STX\ETX\DC2\EOT\200\f\EOT\SYN\SUB' Reason to perform the batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\ETX\ENQ\DC2\EOT\200\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\ETX\SOH\DC2\EOT\200\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTn\STX\ETX\ETX\DC2\EOT\200\f\DC4\NAK\n\
    \q\n\
    \\EOT\EOTn\STX\EOT\DC2\EOT\203\f\EOTE\SUBc Executions to apply the batch operation\n\
    \ This field and `visibility_query` are mutually exclusive\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\EOT\EOT\DC2\EOT\203\f\EOT\f\n\
    \\r\n\
    \\ENQ\EOTn\STX\EOT\ACK\DC2\EOT\203\f\r5\n\
    \\r\n\
    \\ENQ\EOTn\STX\EOT\SOH\DC2\EOT\203\f6@\n\
    \\r\n\
    \\ENQ\EOTn\STX\EOT\ETX\DC2\EOT\203\fCD\n\
    \\143\EOT\n\
    \\EOT\EOTn\STX\ENQ\DC2\EOT\210\f\EOT(\SUB\128\EOT Limit for the number of operations processed per second within this batch.\n\
    \ Its purpose is to reduce the stress on the system caused by batch operations, which helps to prevent system\n\
    \ overload and minimize potential delays in executing ongoing tasks for user workers.\n\
    \ Note that when no explicit limit is provided, the server will operate according to its limit defined by the\n\
    \ dynamic configuration key `worker.batcherRPS`. This also applies if the value in this field exceeds the\n\
    \ server's configured limit.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\STX\ENQ\ENQ\DC2\EOT\210\f\EOT\t\n\
    \\r\n\
    \\ENQ\EOTn\STX\ENQ\SOH\DC2\EOT\210\f\n\
    \#\n\
    \\r\n\
    \\ENQ\EOTn\STX\ENQ\ETX\DC2\EOT\210\f&'\n\
    \!\n\
    \\EOT\EOTn\b\NUL\DC2\ACK\212\f\EOT\220\f\ENQ\SUB\DC1 Operation input\n\
    \\n\
    \\r\n\
    \\ENQ\EOTn\b\NUL\SOH\DC2\EOT\212\f\n\
    \\DC3\n\
    \\f\n\
    \\EOT\EOTn\STX\ACK\DC2\EOT\213\f\bS\n\
    \\r\n\
    \\ENQ\EOTn\STX\ACK\ACK\DC2\EOT\213\f\b7\n\
    \\r\n\
    \\ENQ\EOTn\STX\ACK\SOH\DC2\EOT\213\f8M\n\
    \\r\n\
    \\ENQ\EOTn\STX\ACK\ETX\DC2\EOT\213\fPR\n\
    \\f\n\
    \\EOT\EOTn\STX\a\DC2\EOT\214\f\bI\n\
    \\r\n\
    \\ENQ\EOTn\STX\a\ACK\DC2\EOT\214\f\b2\n\
    \\r\n\
    \\ENQ\EOTn\STX\a\SOH\DC2\EOT\214\f3C\n\
    \\r\n\
    \\ENQ\EOTn\STX\a\ETX\DC2\EOT\214\fFH\n\
    \\f\n\
    \\EOT\EOTn\STX\b\DC2\EOT\215\f\bU\n\
    \\r\n\
    \\ENQ\EOTn\STX\b\ACK\DC2\EOT\215\f\b8\n\
    \\r\n\
    \\ENQ\EOTn\STX\b\SOH\DC2\EOT\215\f9O\n\
    \\r\n\
    \\ENQ\EOTn\STX\b\ETX\DC2\EOT\215\fRT\n\
    \\f\n\
    \\EOT\EOTn\STX\t\DC2\EOT\216\f\bM\n\
    \\r\n\
    \\ENQ\EOTn\STX\t\ACK\DC2\EOT\216\f\b4\n\
    \\r\n\
    \\ENQ\EOTn\STX\t\SOH\DC2\EOT\216\f5G\n\
    \\r\n\
    \\ENQ\EOTn\STX\t\ETX\DC2\EOT\216\fJL\n\
    \\f\n\
    \\EOT\EOTn\STX\n\
    \\DC2\EOT\217\f\bG\n\
    \\r\n\
    \\ENQ\EOTn\STX\n\
    \\ACK\DC2\EOT\217\f\b1\n\
    \\r\n\
    \\ENQ\EOTn\STX\n\
    \\SOH\DC2\EOT\217\f2A\n\
    \\r\n\
    \\ENQ\EOTn\STX\n\
    \\ETX\DC2\EOT\217\fDF\n\
    \\f\n\
    \\EOT\EOTn\STX\v\DC2\EOT\218\f\br\n\
    \\r\n\
    \\ENQ\EOTn\STX\v\ACK\DC2\EOT\218\f\bJ\n\
    \\r\n\
    \\ENQ\EOTn\STX\v\SOH\DC2\EOT\218\fKl\n\
    \\r\n\
    \\ENQ\EOTn\STX\v\ETX\DC2\EOT\218\foq\n\
    \\f\n\
    \\EOT\EOTn\STX\f\DC2\EOT\219\f\b`\n\
    \\r\n\
    \\ENQ\EOTn\STX\f\ACK\DC2\EOT\219\f\b=\n\
    \\r\n\
    \\ENQ\EOTn\STX\f\SOH\DC2\EOT\219\f>Z\n\
    \\r\n\
    \\ENQ\EOTn\STX\f\ETX\DC2\EOT\219\f]_\n\
    \\f\n\
    \\STX\EOTo\DC2\ACK\223\f\NUL\224\f\SOH\n\
    \\v\n\
    \\ETX\EOTo\SOH\DC2\EOT\223\f\b#\n\
    \\f\n\
    \\STX\EOTp\DC2\ACK\226\f\NUL\235\f\SOH\n\
    \\v\n\
    \\ETX\EOTp\SOH\DC2\EOT\226\f\b!\n\
    \;\n\
    \\EOT\EOTp\STX\NUL\DC2\EOT\228\f\EOT\EM\SUB- Namespace that contains the batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\NUL\ENQ\DC2\EOT\228\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\NUL\SOH\DC2\EOT\228\f\v\DC4\n\
    \\r\n\
    \\ENQ\EOTp\STX\NUL\ETX\DC2\EOT\228\f\ETB\CAN\n\
    \\FS\n\
    \\EOT\EOTp\STX\SOH\DC2\EOT\230\f\EOT\SYN\SUB\SO Batch job id\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\SOH\ENQ\DC2\EOT\230\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\SOH\SOH\DC2\EOT\230\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTp\STX\SOH\ETX\DC2\EOT\230\f\DC4\NAK\n\
    \0\n\
    \\EOT\EOTp\STX\STX\DC2\EOT\232\f\EOT\SYN\SUB\" Reason to stop a batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\STX\ENQ\DC2\EOT\232\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\STX\SOH\DC2\EOT\232\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTp\STX\STX\ETX\DC2\EOT\232\f\DC4\NAK\n\
    \(\n\
    \\EOT\EOTp\STX\ETX\DC2\EOT\234\f\EOT\CAN\SUB\SUB Identity of the operator\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\ETX\ENQ\DC2\EOT\234\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTp\STX\ETX\SOH\DC2\EOT\234\f\v\DC3\n\
    \\r\n\
    \\ENQ\EOTp\STX\ETX\ETX\DC2\EOT\234\f\SYN\ETB\n\
    \\f\n\
    \\STX\EOTq\DC2\ACK\237\f\NUL\238\f\SOH\n\
    \\v\n\
    \\ETX\EOTq\SOH\DC2\EOT\237\f\b\"\n\
    \\f\n\
    \\STX\EOTr\DC2\ACK\240\f\NUL\245\f\SOH\n\
    \\v\n\
    \\ETX\EOTr\SOH\DC2\EOT\240\f\b%\n\
    \;\n\
    \\EOT\EOTr\STX\NUL\DC2\EOT\242\f\EOT\EM\SUB- Namespace that contains the batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTr\STX\NUL\ENQ\DC2\EOT\242\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTr\STX\NUL\SOH\DC2\EOT\242\f\v\DC4\n\
    \\r\n\
    \\ENQ\EOTr\STX\NUL\ETX\DC2\EOT\242\f\ETB\CAN\n\
    \\FS\n\
    \\EOT\EOTr\STX\SOH\DC2\EOT\244\f\EOT\SYN\SUB\SO Batch job id\n\
    \\n\
    \\r\n\
    \\ENQ\EOTr\STX\SOH\ENQ\DC2\EOT\244\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTr\STX\SOH\SOH\DC2\EOT\244\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTr\STX\SOH\ETX\DC2\EOT\244\f\DC4\NAK\n\
    \\f\n\
    \\STX\EOTs\DC2\ACK\247\f\NUL\140\r\SOH\n\
    \\v\n\
    \\ETX\EOTs\SOH\DC2\EOT\247\f\b&\n\
    \$\n\
    \\EOT\EOTs\STX\NUL\DC2\EOT\249\f\EOT@\SUB\SYN Batch operation type\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\NUL\ACK\DC2\EOT\249\f\EOT,\n\
    \\r\n\
    \\ENQ\EOTs\STX\NUL\SOH\DC2\EOT\249\f-;\n\
    \\r\n\
    \\ENQ\EOTs\STX\NUL\ETX\DC2\EOT\249\f>?\n\
    \\FS\n\
    \\EOT\EOTs\STX\SOH\DC2\EOT\251\f\EOT\SYN\SUB\SO Batch job ID\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\SOH\ENQ\DC2\EOT\251\f\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\SOH\SOH\DC2\EOT\251\f\v\DC1\n\
    \\r\n\
    \\ENQ\EOTs\STX\SOH\ETX\DC2\EOT\251\f\DC4\NAK\n\
    \%\n\
    \\EOT\EOTs\STX\STX\DC2\EOT\253\f\EOT8\SUB\ETB Batch operation state\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\STX\ACK\DC2\EOT\253\f\EOT-\n\
    \\r\n\
    \\ENQ\EOTs\STX\STX\SOH\DC2\EOT\253\f.3\n\
    \\r\n\
    \\ENQ\EOTs\STX\STX\ETX\DC2\EOT\253\f67\n\
    \*\n\
    \\EOT\EOTs\STX\ETX\DC2\EOT\255\f\EOT-\SUB\FS Batch operation start time\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\ETX\ACK\DC2\EOT\255\f\EOT\GS\n\
    \\r\n\
    \\ENQ\EOTs\STX\ETX\SOH\DC2\EOT\255\f\RS(\n\
    \\r\n\
    \\ENQ\EOTs\STX\ETX\ETX\DC2\EOT\255\f+,\n\
    \*\n\
    \\EOT\EOTs\STX\EOT\DC2\EOT\129\r\EOT-\SUB\FS Batch operation close time\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\EOT\ACK\DC2\EOT\129\r\EOT\GS\n\
    \\r\n\
    \\ENQ\EOTs\STX\EOT\SOH\DC2\EOT\129\r\RS(\n\
    \\r\n\
    \\ENQ\EOTs\STX\EOT\ETX\DC2\EOT\129\r+,\n\
    \%\n\
    \\EOT\EOTs\STX\ENQ\DC2\EOT\131\r\EOT$\SUB\ETB Total operation count\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\ENQ\ENQ\DC2\EOT\131\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTs\STX\ENQ\SOH\DC2\EOT\131\r\n\
    \\US\n\
    \\r\n\
    \\ENQ\EOTs\STX\ENQ\ETX\DC2\EOT\131\r\"#\n\
    \(\n\
    \\EOT\EOTs\STX\ACK\DC2\EOT\133\r\EOT'\SUB\SUB Complete operation count\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\ACK\ENQ\DC2\EOT\133\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTs\STX\ACK\SOH\DC2\EOT\133\r\n\
    \\"\n\
    \\r\n\
    \\ENQ\EOTs\STX\ACK\ETX\DC2\EOT\133\r%&\n\
    \'\n\
    \\EOT\EOTs\STX\a\DC2\EOT\135\r\EOT&\SUB\EM Failure operation count\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\a\ENQ\DC2\EOT\135\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTs\STX\a\SOH\DC2\EOT\135\r\n\
    \!\n\
    \\r\n\
    \\ENQ\EOTs\STX\a\ETX\DC2\EOT\135\r$%\n\
    \8\n\
    \\EOT\EOTs\STX\b\DC2\EOT\137\r\EOT\CAN\SUB* Identity indicates the operator identity\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\b\ENQ\DC2\EOT\137\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\b\SOH\DC2\EOT\137\r\v\DC3\n\
    \\r\n\
    \\ENQ\EOTs\STX\b\ETX\DC2\EOT\137\r\SYN\ETB\n\
    \?\n\
    \\EOT\EOTs\STX\t\DC2\EOT\139\r\EOT\ETB\SUB1 Reason indicates the reason to stop a operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\t\ENQ\DC2\EOT\139\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTs\STX\t\SOH\DC2\EOT\139\r\v\DC1\n\
    \\r\n\
    \\ENQ\EOTs\STX\t\ETX\DC2\EOT\139\r\DC4\SYN\n\
    \\f\n\
    \\STX\EOTt\DC2\ACK\142\r\NUL\149\r\SOH\n\
    \\v\n\
    \\ETX\EOTt\SOH\DC2\EOT\142\r\b\"\n\
    \;\n\
    \\EOT\EOTt\STX\NUL\DC2\EOT\144\r\EOT\EM\SUB- Namespace that contains the batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTt\STX\NUL\ENQ\DC2\EOT\144\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTt\STX\NUL\SOH\DC2\EOT\144\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOTt\STX\NUL\ETX\DC2\EOT\144\r\ETB\CAN\n\
    \\RS\n\
    \\EOT\EOTt\STX\SOH\DC2\EOT\146\r\EOT\CAN\SUB\DLE List page size\n\
    \\n\
    \\r\n\
    \\ENQ\EOTt\STX\SOH\ENQ\DC2\EOT\146\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTt\STX\SOH\SOH\DC2\EOT\146\r\n\
    \\DC3\n\
    \\r\n\
    \\ENQ\EOTt\STX\SOH\ETX\DC2\EOT\146\r\SYN\ETB\n\
    \\US\n\
    \\EOT\EOTt\STX\STX\DC2\EOT\148\r\EOT\RS\SUB\DC1 Next page token\n\
    \\n\
    \\r\n\
    \\ENQ\EOTt\STX\STX\ENQ\DC2\EOT\148\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTt\STX\STX\SOH\DC2\EOT\148\r\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOTt\STX\STX\ETX\DC2\EOT\148\r\FS\GS\n\
    \\f\n\
    \\STX\EOTu\DC2\ACK\151\r\NUL\155\r\SOH\n\
    \\v\n\
    \\ETX\EOTu\SOH\DC2\EOT\151\r\b#\n\
    \P\n\
    \\EOT\EOTu\STX\NUL\DC2\EOT\153\r\EOTI\SUBB BatchOperationInfo contains the basic info about batch operation\n\
    \\n\
    \\r\n\
    \\ENQ\EOTu\STX\NUL\EOT\DC2\EOT\153\r\EOT\f\n\
    \\r\n\
    \\ENQ\EOTu\STX\NUL\ACK\DC2\EOT\153\r\r5\n\
    \\r\n\
    \\ENQ\EOTu\STX\NUL\SOH\DC2\EOT\153\r6D\n\
    \\r\n\
    \\ENQ\EOTu\STX\NUL\ETX\DC2\EOT\153\rGH\n\
    \\f\n\
    \\EOT\EOTu\STX\SOH\DC2\EOT\154\r\EOT\RS\n\
    \\r\n\
    \\ENQ\EOTu\STX\SOH\ENQ\DC2\EOT\154\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTu\STX\SOH\SOH\DC2\EOT\154\r\n\
    \\EM\n\
    \\r\n\
    \\ENQ\EOTu\STX\SOH\ETX\DC2\EOT\154\r\FS\GS\n\
    \\f\n\
    \\STX\EOTv\DC2\ACK\157\r\NUL\168\r\SOH\n\
    \\v\n\
    \\ETX\EOTv\SOH\DC2\EOT\157\r\b*\n\
    \c\n\
    \\EOT\EOTv\STX\NUL\DC2\EOT\160\r\EOT\EM\SUBU The namespace of the Workflow Execution to which the Update was\n\
    \ originally issued.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\NUL\ENQ\DC2\EOT\160\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\NUL\SOH\DC2\EOT\160\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOTv\STX\NUL\ETX\DC2\EOT\160\r\ETB\CAN\n\
    \]\n\
    \\EOT\EOTv\STX\SOH\DC2\EOT\162\r\EOT4\SUBO The Update reference returned in the initial UpdateWorkflowExecutionResponse.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\SOH\ACK\DC2\EOT\162\r\EOT$\n\
    \\r\n\
    \\ENQ\EOTv\STX\SOH\SOH\DC2\EOT\162\r%/\n\
    \\r\n\
    \\ENQ\EOTv\STX\SOH\ETX\DC2\EOT\162\r23\n\
    \U\n\
    \\EOT\EOTv\STX\STX\DC2\EOT\164\r\EOT\CAN\SUBG The identity of the worker/client who is polling this Update outcome.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\STX\ENQ\DC2\EOT\164\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\STX\SOH\DC2\EOT\164\r\v\DC3\n\
    \\r\n\
    \\ENQ\EOTv\STX\STX\ETX\DC2\EOT\164\r\SYN\ETB\n\
    \k\n\
    \\EOT\EOTv\STX\ETX\DC2\EOT\167\r\EOT6\SUB] Specifies client's intent to wait for Update results.\n\
    \ Omit to request a non-blocking poll.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTv\STX\ETX\ACK\DC2\EOT\167\r\EOT%\n\
    \\r\n\
    \\ENQ\EOTv\STX\ETX\SOH\DC2\EOT\167\r&1\n\
    \\r\n\
    \\ENQ\EOTv\STX\ETX\ETX\DC2\EOT\167\r45\n\
    \\f\n\
    \\STX\EOTw\DC2\ACK\170\r\NUL\190\r\SOH\n\
    \\v\n\
    \\ETX\EOTw\SOH\DC2\EOT\170\r\b+\n\
    \\178\STX\n\
    \\EOT\EOTw\STX\NUL\DC2\EOT\176\r\EOT/\SUB\163\STX The outcome of the update if and only if the update has completed. If\n\
    \ this response is being returned before the update has completed (e.g. due\n\
    \ to the specification of a wait policy that only waits on\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ACCEPTED) then this field will\n\
    \ not be set.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTw\STX\NUL\ACK\DC2\EOT\176\r\EOT\"\n\
    \\r\n\
    \\ENQ\EOTw\STX\NUL\SOH\DC2\EOT\176\r#*\n\
    \\r\n\
    \\ENQ\EOTw\STX\NUL\ETX\DC2\EOT\176\r-.\n\
    \\215\EOT\n\
    \\EOT\EOTw\STX\SOH\DC2\EOT\187\r\EOTJ\SUB\200\EOT The most advanced lifecycle stage that the Update is known to have\n\
    \ reached, where lifecycle stages are ordered\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_UNSPECIFIED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ADMITTED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_ACCEPTED <\n\
    \ UPDATE_WORKFLOW_EXECUTION_LIFECYCLE_STAGE_COMPLETED.\n\
    \ UNSPECIFIED will be returned if and only if the server's maximum wait\n\
    \ time was reached before the Update reached the stage specified in the\n\
    \ request WaitPolicy, and before the context deadline expired; clients may\n\
    \ may then retry the call as needed.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTw\STX\SOH\ACK\DC2\EOT\187\r\EOT?\n\
    \\r\n\
    \\ENQ\EOTw\STX\SOH\SOH\DC2\EOT\187\r@E\n\
    \\r\n\
    \\ENQ\EOTw\STX\SOH\ETX\DC2\EOT\187\rHI\n\
    \>\n\
    \\EOT\EOTw\STX\STX\DC2\EOT\189\r\EOT4\SUB0 Sufficient information to address this Update.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTw\STX\STX\ACK\DC2\EOT\189\r\EOT$\n\
    \\r\n\
    \\ENQ\EOTw\STX\STX\SOH\DC2\EOT\189\r%/\n\
    \\r\n\
    \\ENQ\EOTw\STX\STX\ETX\DC2\EOT\189\r23\n\
    \\f\n\
    \\STX\EOTx\DC2\ACK\192\r\NUL\203\r\SOH\n\
    \\v\n\
    \\ETX\EOTx\SOH\DC2\EOT\192\r\b!\n\
    \\f\n\
    \\EOT\EOTx\STX\NUL\DC2\EOT\193\r\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTx\STX\NUL\ENQ\DC2\EOT\193\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTx\STX\NUL\SOH\DC2\EOT\193\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOTx\STX\NUL\ETX\DC2\EOT\193\r\ETB\CAN\n\
    \F\n\
    \\EOT\EOTx\STX\SOH\DC2\EOT\195\r\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTx\STX\SOH\ENQ\DC2\EOT\195\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTx\STX\SOH\SOH\DC2\EOT\195\r\v\DC3\n\
    \\r\n\
    \\ENQ\EOTx\STX\SOH\ETX\DC2\EOT\195\r\SYN\ETB\n\
    \\f\n\
    \\EOT\EOTx\STX\STX\DC2\EOT\196\r\EOT7\n\
    \\r\n\
    \\ENQ\EOTx\STX\STX\ACK\DC2\EOT\196\r\EOT'\n\
    \\r\n\
    \\ENQ\EOTx\STX\STX\SOH\DC2\EOT\196\r(2\n\
    \\r\n\
    \\ENQ\EOTx\STX\STX\ETX\DC2\EOT\196\r56\n\
    \\220\SOH\n\
    \\EOT\EOTx\STX\ETX\DC2\EOT\200\r\EOTi\SUB\205\SOH Information about this worker's build identifier and if it is choosing to use the versioning\n\
    \ feature. See the `WorkerVersionCapabilities` docstring for more.\n\
    \ Deprecated. Replaced by deployment_options.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTx\STX\ETX\ACK\DC2\EOT\200\r\EOT4\n\
    \\r\n\
    \\ENQ\EOTx\STX\ETX\SOH\DC2\EOT\200\r5P\n\
    \\r\n\
    \\ENQ\EOTx\STX\ETX\ETX\DC2\EOT\200\rST\n\
    \\r\n\
    \\ENQ\EOTx\STX\ETX\b\DC2\EOT\200\rUh\n\
    \\SO\n\
    \\ACK\EOTx\STX\ETX\b\ETX\DC2\EOT\200\rVg\n\
    \J\n\
    \\EOT\EOTx\STX\EOT\DC2\EOT\202\r\EOTN\SUB< Worker deployment options that user has set in the worker.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTx\STX\EOT\ACK\DC2\EOT\202\r\EOT6\n\
    \\r\n\
    \\ENQ\EOTx\STX\EOT\SOH\DC2\EOT\202\r7I\n\
    \\r\n\
    \\ENQ\EOTx\STX\EOT\ETX\DC2\EOT\202\rLM\n\
    \\f\n\
    \\STX\EOTy\DC2\ACK\205\r\NUL\212\r\SOH\n\
    \\v\n\
    \\ETX\EOTy\SOH\DC2\EOT\205\r\b\"\n\
    \t\n\
    \\EOT\EOTy\STX\NUL\DC2\EOT\207\r\EOT\EM\SUBf An opaque unique identifier for this task for correlating a completion request the embedded request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTy\STX\NUL\ENQ\DC2\EOT\207\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTy\STX\NUL\SOH\DC2\EOT\207\r\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOTy\STX\NUL\ETX\DC2\EOT\207\r\ETB\CAN\n\
    \R\n\
    \\EOT\EOTy\STX\SOH\DC2\EOT\209\r\EOT.\SUBD Embedded request as translated from the incoming frontend request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTy\STX\SOH\ACK\DC2\EOT\209\r\EOT!\n\
    \\r\n\
    \\ENQ\EOTy\STX\SOH\SOH\DC2\EOT\209\r\")\n\
    \\r\n\
    \\ENQ\EOTy\STX\SOH\ETX\DC2\EOT\209\r,-\n\
    \V\n\
    \\EOT\EOTy\STX\STX\DC2\EOT\211\r\EOTP\SUBH Server-advised information the SDK may use to adjust its poller count.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTy\STX\STX\ACK\DC2\EOT\211\r\EOT3\n\
    \\r\n\
    \\ENQ\EOTy\STX\STX\SOH\DC2\EOT\211\r4K\n\
    \\r\n\
    \\ENQ\EOTy\STX\STX\ETX\DC2\EOT\211\rNO\n\
    \\f\n\
    \\STX\EOTz\DC2\ACK\214\r\NUL\222\r\SOH\n\
    \\v\n\
    \\ETX\EOTz\SOH\DC2\EOT\214\r\b(\n\
    \\f\n\
    \\EOT\EOTz\STX\NUL\DC2\EOT\215\r\EOT\EM\n\
    \\r\n\
    \\ENQ\EOTz\STX\NUL\ENQ\DC2\EOT\215\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTz\STX\NUL\SOH\DC2\EOT\215\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOTz\STX\NUL\ETX\DC2\EOT\215\r\ETB\CAN\n\
    \F\n\
    \\EOT\EOTz\STX\SOH\DC2\EOT\217\r\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTz\STX\SOH\ENQ\DC2\EOT\217\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOTz\STX\SOH\SOH\DC2\EOT\217\r\v\DC3\n\
    \\r\n\
    \\ENQ\EOTz\STX\SOH\ETX\DC2\EOT\217\r\SYN\ETB\n\
    \R\n\
    \\EOT\EOTz\STX\STX\DC2\EOT\219\r\EOT\EM\SUBD A unique identifier for this task as received via a poll response.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTz\STX\STX\ENQ\DC2\EOT\219\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOTz\STX\STX\SOH\DC2\EOT\219\r\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOTz\STX\STX\ETX\DC2\EOT\219\r\ETB\CAN\n\
    \L\n\
    \\EOT\EOTz\STX\ETX\DC2\EOT\221\r\EOT0\SUB> Embedded response to be translated into a frontend response.\n\
    \\n\
    \\r\n\
    \\ENQ\EOTz\STX\ETX\ACK\DC2\EOT\221\r\EOT\"\n\
    \\r\n\
    \\ENQ\EOTz\STX\ETX\SOH\DC2\EOT\221\r#+\n\
    \\r\n\
    \\ENQ\EOTz\STX\ETX\ETX\DC2\EOT\221\r./\n\
    \\f\n\
    \\STX\EOT{\DC2\ACK\224\r\NUL\225\r\SOH\n\
    \\v\n\
    \\ETX\EOT{\SOH\DC2\EOT\224\r\b)\n\
    \\f\n\
    \\STX\EOT|\DC2\ACK\227\r\NUL\235\r\SOH\n\
    \\v\n\
    \\ETX\EOT|\SOH\DC2\EOT\227\r\b%\n\
    \\f\n\
    \\EOT\EOT|\STX\NUL\DC2\EOT\228\r\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT|\STX\NUL\ENQ\DC2\EOT\228\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT|\STX\NUL\SOH\DC2\EOT\228\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOT|\STX\NUL\ETX\DC2\EOT\228\r\ETB\CAN\n\
    \F\n\
    \\EOT\EOT|\STX\SOH\DC2\EOT\230\r\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT|\STX\SOH\ENQ\DC2\EOT\230\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT|\STX\SOH\SOH\DC2\EOT\230\r\v\DC3\n\
    \\r\n\
    \\ENQ\EOT|\STX\SOH\ETX\DC2\EOT\230\r\SYN\ETB\n\
    \2\n\
    \\EOT\EOT|\STX\STX\DC2\EOT\232\r\EOT\EM\SUB$ A unique identifier for this task.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT|\STX\STX\ENQ\DC2\EOT\232\r\EOT\t\n\
    \\r\n\
    \\ENQ\EOT|\STX\STX\SOH\DC2\EOT\232\r\n\
    \\DC4\n\
    \\r\n\
    \\ENQ\EOT|\STX\STX\ETX\DC2\EOT\232\r\ETB\CAN\n\
    \2\n\
    \\EOT\EOT|\STX\ETX\DC2\EOT\234\r\EOT1\SUB$ The error the handler failed with.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT|\STX\ETX\ACK\DC2\EOT\234\r\EOT&\n\
    \\r\n\
    \\ENQ\EOT|\STX\ETX\SOH\DC2\EOT\234\r',\n\
    \\r\n\
    \\ENQ\EOT|\STX\ETX\ETX\DC2\EOT\234\r/0\n\
    \\f\n\
    \\STX\EOT}\DC2\ACK\237\r\NUL\238\r\SOH\n\
    \\v\n\
    \\ETX\EOT}\SOH\DC2\EOT\237\r\b&\n\
    \\f\n\
    \\STX\EOT~\DC2\ACK\240\r\NUL\139\SO\SOH\n\
    \\v\n\
    \\ETX\EOT~\SOH\DC2\EOT\240\r\b$\n\
    \\f\n\
    \\EOT\EOT~\STX\NUL\DC2\EOT\241\r\EOT\EM\n\
    \\r\n\
    \\ENQ\EOT~\STX\NUL\ENQ\DC2\EOT\241\r\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT~\STX\NUL\SOH\DC2\EOT\241\r\v\DC4\n\
    \\r\n\
    \\ENQ\EOT~\STX\NUL\ETX\DC2\EOT\241\r\ETB\CAN\n\
    \\235\STX\n\
    \\EOT\EOT~\STX\SOH\DC2\EOT\251\r\EOT&\SUB\220\STX List of operations to execute within a single workflow.\n\
    \\n\
    \ Preconditions:\n\
    \ - The list of operations must not be empty.\n\
    \ - The workflow ids must match across operations.\n\
    \ - The only valid list of operations at this time is [StartWorkflow, UpdateWorkflow], in this order.\n\
    \\n\
    \ Note that additional operation-specific restrictions have to be considered.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT~\STX\SOH\EOT\DC2\EOT\251\r\EOT\f\n\
    \\r\n\
    \\ENQ\EOT~\STX\SOH\ACK\DC2\EOT\251\r\r\SYN\n\
    \\r\n\
    \\ENQ\EOT~\STX\SOH\SOH\DC2\EOT\251\r\ETB!\n\
    \\r\n\
    \\ENQ\EOT~\STX\SOH\ETX\DC2\EOT\251\r$%\n\
    \\SO\n\
    \\EOT\EOT~\ETX\NUL\DC2\ACK\253\r\EOT\138\SO\ENQ\n\
    \\r\n\
    \\ENQ\EOT~\ETX\NUL\SOH\DC2\EOT\253\r\f\NAK\n\
    \\DLE\n\
    \\ACK\EOT~\ETX\NUL\b\NUL\DC2\ACK\254\r\b\137\SO\t\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\b\NUL\SOH\DC2\EOT\254\r\SO\ETB\n\
    \\174\SOH\n\
    \\ACK\EOT~\ETX\NUL\STX\NUL\DC2\EOT\131\SO\f=\SUB\157\SOH Additional restrictions:\n\
    \ - setting `cron_schedule` is invalid\n\
    \ - setting `request_eager_execution` is invalid\n\
    \ - setting `workflow_start_delay` is invalid\n\
    \\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\NUL\ACK\DC2\EOT\131\SO\f)\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\NUL\SOH\DC2\EOT\131\SO*8\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\NUL\ETX\DC2\EOT\131\SO;<\n\
    \\139\SOH\n\
    \\ACK\EOT~\ETX\NUL\STX\SOH\DC2\EOT\136\SO\f?\SUB{ Additional restrictions:\n\
    \ - setting `first_execution_run_id` is invalid\n\
    \ - setting `workflow_execution.run_id` is invalid\n\
    \\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\SOH\ACK\DC2\EOT\136\SO\f*\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\SOH\SOH\DC2\EOT\136\SO+:\n\
    \\SI\n\
    \\a\EOT~\ETX\NUL\STX\SOH\ETX\DC2\EOT\136\SO=>\n\
    \\f\n\
    \\STX\EOT\DEL\DC2\ACK\141\SO\NUL\150\SO\SOH\n\
    \\v\n\
    \\ETX\EOT\DEL\SOH\DC2\EOT\141\SO\b%\n\
    \\f\n\
    \\EOT\EOT\DEL\STX\NUL\DC2\EOT\142\SO\EOT$\n\
    \\r\n\
    \\ENQ\EOT\DEL\STX\NUL\EOT\DC2\EOT\142\SO\EOT\f\n\
    \\r\n\
    \\ENQ\EOT\DEL\STX\NUL\ACK\DC2\EOT\142\SO\r\NAK\n\
    \\r\n\
    \\ENQ\EOT\DEL\STX\NUL\SOH\DC2\EOT\142\SO\SYN\US\n\
    \\r\n\
    \\ENQ\EOT\DEL\STX\NUL\ETX\DC2\EOT\142\SO\"#\n\
    \\SO\n\
    \\EOT\EOT\DEL\ETX\NUL\DC2\ACK\144\SO\EOT\149\SO\ENQ\n\
    \\r\n\
    \\ENQ\EOT\DEL\ETX\NUL\SOH\DC2\EOT\144\SO\f\DC4\n\
    \\DLE\n\
    \\ACK\EOT\DEL\ETX\NUL\b\NUL\DC2\ACK\145\SO\b\148\SO\t\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\b\NUL\SOH\DC2\EOT\145\SO\SO\SYN\n\
    \\SO\n\
    \\ACK\EOT\DEL\ETX\NUL\STX\NUL\DC2\EOT\146\SO\f>\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\NUL\ACK\DC2\EOT\146\SO\f*\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\NUL\SOH\DC2\EOT\146\SO+9\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\NUL\ETX\DC2\EOT\146\SO<=\n\
    \\SO\n\
    \\ACK\EOT\DEL\ETX\NUL\STX\SOH\DC2\EOT\147\SO\f@\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\SOH\ACK\DC2\EOT\147\SO\f+\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\SOH\SOH\DC2\EOT\147\SO,;\n\
    \\SI\n\
    \\a\EOT\DEL\ETX\NUL\STX\SOH\ETX\DC2\EOT\147\SO>?\n\
    \\r\n\
    \\ETX\EOT\128\SOH\DC2\ACK\152\SO\NUL\174\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\128\SOH\SOH\DC2\EOT\152\SO\b$\n\
    \H\n\
    \\ENQ\EOT\128\SOH\STX\NUL\DC2\EOT\154\SO\EOT\EM\SUB9 Namespace of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\NUL\ENQ\DC2\EOT\154\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\NUL\SOH\DC2\EOT\154\SO\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\NUL\ETX\DC2\EOT\154\SO\ETB\CAN\n\
    \M\n\
    \\ENQ\EOT\128\SOH\STX\SOH\DC2\EOT\156\SO\EOT;\SUB> Execution info of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\SOH\ACK\DC2\EOT\156\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\SOH\SOH\DC2\EOT\156\SO-6\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\SOH\ETX\DC2\EOT\156\SO9:\n\
    \F\n\
    \\ENQ\EOT\128\SOH\STX\STX\DC2\EOT\159\SO\EOT\CAN\SUB7 The identity of the client who initiated this request\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\STX\ENQ\DC2\EOT\159\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\STX\SOH\DC2\EOT\159\SO\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\STX\ETX\DC2\EOT\159\SO\SYN\ETB\n\
    \]\n\
    \\ENQ\EOT\128\SOH\STX\ETX\DC2\EOT\162\SO\EOTB\SUBN Activity options. Partial updates are accepted and controlled by update_mask\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ETX\ACK\DC2\EOT\162\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ETX\SOH\DC2\EOT\162\SO-=\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ETX\ETX\DC2\EOT\162\SO@A\n\
    \N\n\
    \\ENQ\EOT\128\SOH\STX\EOT\DC2\EOT\165\SO\EOT.\SUB? Controls which fields from `activity_options` will be applied\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\EOT\ACK\DC2\EOT\165\SO\EOT\GS\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\EOT\SOH\DC2\EOT\165\SO\RS)\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\EOT\ETX\DC2\EOT\165\SO,-\n\
    \G\n\
    \\ENQ\EOT\128\SOH\b\NUL\DC2\ACK\168\SO\EOT\173\SO\ENQ\SUB6 either activity id or activity type must be provided\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\b\NUL\SOH\DC2\EOT\168\SO\n\
    \\DC2\n\
    \<\n\
    \\ENQ\EOT\128\SOH\STX\ENQ\DC2\EOT\170\SO\b\SYN\SUB- Only activity with this ID will be updated.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ENQ\ENQ\DC2\EOT\170\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ENQ\SOH\DC2\EOT\170\SO\SI\DC1\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ENQ\ETX\DC2\EOT\170\SO\DC4\NAK\n\
    \<\n\
    \\ENQ\EOT\128\SOH\STX\ACK\DC2\EOT\172\SO\b\CAN\SUB- Update all running activities of this type.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ACK\ENQ\DC2\EOT\172\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ACK\SOH\DC2\EOT\172\SO\SI\DC3\n\
    \\SO\n\
    \\ACK\EOT\128\SOH\STX\ACK\ETX\DC2\EOT\172\SO\SYN\ETB\n\
    \\r\n\
    \\ETX\EOT\129\SOH\DC2\ACK\176\SO\NUL\179\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\129\SOH\SOH\DC2\EOT\176\SO\b%\n\
    \1\n\
    \\ENQ\EOT\129\SOH\STX\NUL\DC2\EOT\178\SO\EOTB\SUB\" Activity options after an update\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\129\SOH\STX\NUL\ACK\DC2\EOT\178\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\129\SOH\STX\NUL\SOH\DC2\EOT\178\SO-=\n\
    \\SO\n\
    \\ACK\EOT\129\SOH\STX\NUL\ETX\DC2\EOT\178\SO@A\n\
    \\r\n\
    \\ETX\EOT\130\SOH\DC2\ACK\181\SO\NUL\200\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\130\SOH\SOH\DC2\EOT\181\SO\b\FS\n\
    \I\n\
    \\ENQ\EOT\130\SOH\STX\NUL\DC2\EOT\183\SO\EOT\EM\SUB: Namespace of the workflow which scheduled this activity.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\NUL\ENQ\DC2\EOT\183\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\NUL\SOH\DC2\EOT\183\SO\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\NUL\ETX\DC2\EOT\183\SO\ETB\CAN\n\
    \M\n\
    \\ENQ\EOT\130\SOH\STX\SOH\DC2\EOT\185\SO\EOT;\SUB> Execution info of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\SOH\ACK\DC2\EOT\185\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\SOH\SOH\DC2\EOT\185\SO-6\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\SOH\ETX\DC2\EOT\185\SO9:\n\
    \G\n\
    \\ENQ\EOT\130\SOH\STX\STX\DC2\EOT\188\SO\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\STX\ENQ\DC2\EOT\188\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\STX\SOH\DC2\EOT\188\SO\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\STX\ETX\DC2\EOT\188\SO\SYN\ETB\n\
    \G\n\
    \\ENQ\EOT\130\SOH\b\NUL\DC2\ACK\191\SO\EOT\196\SO\ENQ\SUB6 either activity id or activity type must be provided\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\b\NUL\SOH\DC2\EOT\191\SO\n\
    \\DC2\n\
    \?\n\
    \\ENQ\EOT\130\SOH\STX\ETX\DC2\EOT\193\SO\b\SYN\SUB0 Only the activity with this ID will be paused.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ETX\ENQ\DC2\EOT\193\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ETX\SOH\DC2\EOT\193\SO\SI\DC1\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ETX\ETX\DC2\EOT\193\SO\DC4\NAK\n\
    \;\n\
    \\ENQ\EOT\130\SOH\STX\EOT\DC2\EOT\195\SO\b\CAN\SUB, Pause all running activities of this type.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\EOT\ENQ\DC2\EOT\195\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\EOT\SOH\DC2\EOT\195\SO\SI\DC3\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\EOT\ETX\DC2\EOT\195\SO\SYN\ETB\n\
    \.\n\
    \\ENQ\EOT\130\SOH\STX\ENQ\DC2\EOT\199\SO\EOT\SYN\SUB\US Reason to pause the activity.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ENQ\ENQ\DC2\EOT\199\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ENQ\SOH\DC2\EOT\199\SO\v\DC1\n\
    \\SO\n\
    \\ACK\EOT\130\SOH\STX\ENQ\ETX\DC2\EOT\199\SO\DC4\NAK\n\
    \\r\n\
    \\ETX\EOT\131\SOH\DC2\ACK\202\SO\NUL\203\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\131\SOH\SOH\DC2\EOT\202\SO\b\GS\n\
    \\r\n\
    \\ETX\EOT\132\SOH\DC2\ACK\205\SO\NUL\232\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\132\SOH\SOH\DC2\EOT\205\SO\b\RS\n\
    \I\n\
    \\ENQ\EOT\132\SOH\STX\NUL\DC2\EOT\207\SO\EOT\EM\SUB: Namespace of the workflow which scheduled this activity.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\NUL\ENQ\DC2\EOT\207\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\NUL\SOH\DC2\EOT\207\SO\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\NUL\ETX\DC2\EOT\207\SO\ETB\CAN\n\
    \M\n\
    \\ENQ\EOT\132\SOH\STX\SOH\DC2\EOT\209\SO\EOT;\SUB> Execution info of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\SOH\ACK\DC2\EOT\209\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\SOH\SOH\DC2\EOT\209\SO-6\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\SOH\ETX\DC2\EOT\209\SO9:\n\
    \G\n\
    \\ENQ\EOT\132\SOH\STX\STX\DC2\EOT\212\SO\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\STX\ENQ\DC2\EOT\212\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\STX\SOH\DC2\EOT\212\SO\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\STX\ETX\DC2\EOT\212\SO\SYN\ETB\n\
    \G\n\
    \\ENQ\EOT\132\SOH\b\NUL\DC2\ACK\215\SO\EOT\222\SO\ENQ\SUB6 either activity id or activity type must be provided\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\b\NUL\SOH\DC2\EOT\215\SO\n\
    \\DC2\n\
    \A\n\
    \\ENQ\EOT\132\SOH\STX\ETX\DC2\EOT\217\SO\b\SYN\SUB2 Only the activity with this ID will be unpaused.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ETX\ENQ\DC2\EOT\217\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ETX\SOH\DC2\EOT\217\SO\SI\DC1\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ETX\ETX\DC2\EOT\217\SO\DC4\NAK\n\
    \B\n\
    \\ENQ\EOT\132\SOH\STX\EOT\DC2\EOT\219\SO\b\CAN\SUB3 Unpause all running activities with of this type.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\EOT\ENQ\DC2\EOT\219\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\EOT\SOH\DC2\EOT\219\SO\SI\DC3\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\EOT\ETX\DC2\EOT\219\SO\SYN\ETB\n\
    \0\n\
    \\ENQ\EOT\132\SOH\STX\ENQ\DC2\EOT\221\SO\b\GS\SUB! Unpause all running activities.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ENQ\ENQ\DC2\EOT\221\SO\b\f\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ENQ\SOH\DC2\EOT\221\SO\r\CAN\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ENQ\ETX\DC2\EOT\221\SO\ESC\FS\n\
    \L\n\
    \\ENQ\EOT\132\SOH\STX\ACK\DC2\EOT\225\SO\EOT\FS\SUB= Providing this flag will also reset the number of attempts.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ACK\ENQ\DC2\EOT\225\SO\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ACK\SOH\DC2\EOT\225\SO\t\ETB\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\ACK\ETX\DC2\EOT\225\SO\SUB\ESC\n\
    \K\n\
    \\ENQ\EOT\132\SOH\STX\a\DC2\EOT\228\SO\EOT\GS\SUB< Providing this flag will also reset the heartbeat details.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\a\ENQ\DC2\EOT\228\SO\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\a\SOH\DC2\EOT\228\SO\t\CAN\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\a\ETX\DC2\EOT\228\SO\ESC\FS\n\
    \g\n\
    \\ENQ\EOT\132\SOH\STX\b\DC2\EOT\231\SO\EOT(\SUBX If set, the activity will start at a random time within the specified jitter duration.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\b\ACK\DC2\EOT\231\SO\EOT\FS\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\b\SOH\DC2\EOT\231\SO\GS#\n\
    \\SO\n\
    \\ACK\EOT\132\SOH\STX\b\ETX\DC2\EOT\231\SO&'\n\
    \\r\n\
    \\ETX\EOT\133\SOH\DC2\ACK\234\SO\NUL\235\SO\SOH\n\
    \\f\n\
    \\EOT\EOT\133\SOH\SOH\DC2\EOT\234\SO\b\US\n\
    \\r\n\
    \\ETX\EOT\134\SOH\DC2\ACK\237\SO\NUL\136\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\134\SOH\SOH\DC2\EOT\237\SO\b\FS\n\
    \I\n\
    \\ENQ\EOT\134\SOH\STX\NUL\DC2\EOT\239\SO\EOT\EM\SUB: Namespace of the workflow which scheduled this activity.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\NUL\ENQ\DC2\EOT\239\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\NUL\SOH\DC2\EOT\239\SO\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\NUL\ETX\DC2\EOT\239\SO\ETB\CAN\n\
    \M\n\
    \\ENQ\EOT\134\SOH\STX\SOH\DC2\EOT\241\SO\EOT;\SUB> Execution info of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\SOH\ACK\DC2\EOT\241\SO\EOT,\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\SOH\SOH\DC2\EOT\241\SO-6\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\SOH\ETX\DC2\EOT\241\SO9:\n\
    \G\n\
    \\ENQ\EOT\134\SOH\STX\STX\DC2\EOT\244\SO\EOT\CAN\SUB8 The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\STX\ENQ\DC2\EOT\244\SO\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\STX\SOH\DC2\EOT\244\SO\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\STX\ETX\DC2\EOT\244\SO\SYN\ETB\n\
    \G\n\
    \\ENQ\EOT\134\SOH\b\NUL\DC2\ACK\247\SO\EOT\252\SO\ENQ\SUB6 either activity id or activity type must be provided\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\b\NUL\SOH\DC2\EOT\247\SO\n\
    \\DC2\n\
    \:\n\
    \\ENQ\EOT\134\SOH\STX\ETX\DC2\EOT\249\SO\b\SYN\SUB+ Only activity with this ID will be reset.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ETX\ENQ\DC2\EOT\249\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ETX\SOH\DC2\EOT\249\SO\SI\DC1\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ETX\ETX\DC2\EOT\249\SO\DC4\NAK\n\
    \@\n\
    \\ENQ\EOT\134\SOH\STX\EOT\DC2\EOT\251\SO\b\CAN\SUB1 Reset all running activities with of this type.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\EOT\ENQ\DC2\EOT\251\SO\b\SO\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\EOT\SOH\DC2\EOT\251\SO\SI\DC3\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\EOT\ETX\DC2\EOT\251\SO\SYN\ETB\n\
    \\141\SOH\n\
    \\ENQ\EOT\134\SOH\STX\ENQ\DC2\EOT\128\SI\EOT\GS\SUB~ Indicates that activity should reset heartbeat details.\n\
    \ This flag will be applied only to the new instance of the activity.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ENQ\ENQ\DC2\EOT\128\SI\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ENQ\SOH\DC2\EOT\128\SI\t\CAN\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ENQ\ETX\DC2\EOT\128\SI\ESC\FS\n\
    \I\n\
    \\ENQ\EOT\134\SOH\STX\ACK\DC2\EOT\131\SI\EOT\EM\SUB: if activity is paused, it will remain paused after reset\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ACK\ENQ\DC2\EOT\131\SI\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ACK\SOH\DC2\EOT\131\SI\t\DC4\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\ACK\ETX\DC2\EOT\131\SI\ETB\CAN\n\
    \\178\SOH\n\
    \\ENQ\EOT\134\SOH\STX\a\DC2\EOT\135\SI\EOT(\SUB\162\SOH If set, and activity is in backoff, the activity will start at a random time within the specified jitter duration.\n\
    \ (unless it is paused and keep_paused is set)\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\a\ACK\DC2\EOT\135\SI\EOT\FS\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\a\SOH\DC2\EOT\135\SI\GS#\n\
    \\SO\n\
    \\ACK\EOT\134\SOH\STX\a\ETX\DC2\EOT\135\SI&'\n\
    \\r\n\
    \\ETX\EOT\135\SOH\DC2\ACK\138\SI\NUL\139\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\135\SOH\SOH\DC2\EOT\138\SI\b\GS\n\
    \\r\n\
    \\ETX\EOT\136\SOH\DC2\ACK\141\SI\NUL\155\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\136\SOH\SOH\DC2\EOT\141\SI\b-\n\
    \;\n\
    \\ENQ\EOT\136\SOH\STX\NUL\DC2\EOT\143\SI\EOT\EM\SUB, The namespace name of the target Workflow.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\NUL\ENQ\DC2\EOT\143\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\NUL\SOH\DC2\EOT\143\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\NUL\ETX\DC2\EOT\143\SI\ETB\CAN\n\
    \\211\SOH\n\
    \\ENQ\EOT\136\SOH\STX\SOH\DC2\EOT\147\SI\EOTD\SUB\195\SOH The target Workflow Id and (optionally) a specific Run Id thereof.\n\
    \ (-- api-linter: core::0203::optional=disabled\n\
    \     aip.dev/not-precedent: false positive triggered by the word \"optional\" --)\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\SOH\ACK\DC2\EOT\147\SI\EOT,\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\SOH\SOH\DC2\EOT\147\SI-?\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\SOH\ETX\DC2\EOT\147\SIBC\n\
    \h\n\
    \\ENQ\EOT\136\SOH\STX\STX\DC2\EOT\150\SI\EOTU\SUBY Workflow Execution options. Partial updates are accepted and controlled by update_mask.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\STX\ACK\DC2\EOT\150\SI\EOT5\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\STX\SOH\DC2\EOT\150\SI6P\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\STX\ETX\DC2\EOT\150\SIST\n\
    \\187\SOH\n\
    \\ENQ\EOT\136\SOH\STX\ETX\DC2\EOT\154\SI\EOT.\SUB\171\SOH Controls which fields from `workflow_execution_options` will be applied.\n\
    \ To unset a field, set it to null and use the update mask to indicate that it should be mutated.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\ETX\ACK\DC2\EOT\154\SI\EOT\GS\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\ETX\SOH\DC2\EOT\154\SI\RS)\n\
    \\SO\n\
    \\ACK\EOT\136\SOH\STX\ETX\ETX\DC2\EOT\154\SI,-\n\
    \\r\n\
    \\ETX\EOT\137\SOH\DC2\ACK\157\SI\NUL\160\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\137\SOH\SOH\DC2\EOT\157\SI\b.\n\
    \9\n\
    \\ENQ\EOT\137\SOH\STX\NUL\DC2\EOT\159\SI\EOTU\SUB* Workflow Execution options after update.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\137\SOH\STX\NUL\ACK\DC2\EOT\159\SI\EOT5\n\
    \\SO\n\
    \\ACK\EOT\137\SOH\STX\NUL\SOH\DC2\EOT\159\SI6P\n\
    \\SO\n\
    \\ACK\EOT\137\SOH\STX\NUL\ETX\DC2\EOT\159\SIST\n\
    \U\n\
    \\ETX\EOT\138\SOH\DC2\ACK\163\SI\NUL\166\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\138\SOH\SOH\DC2\EOT\163\SI\b!\n\
    \\r\n\
    \\ENQ\EOT\138\SOH\STX\NUL\DC2\EOT\164\SI\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\NUL\ENQ\DC2\EOT\164\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\NUL\SOH\DC2\EOT\164\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\NUL\ETX\DC2\EOT\164\SI\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\138\SOH\STX\SOH\DC2\EOT\165\SI\EOT,\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\SOH\ACK\DC2\EOT\165\SI\EOT\FS\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\SOH\SOH\DC2\EOT\165\SI\GS'\n\
    \\SO\n\
    \\ACK\EOT\138\SOH\STX\SOH\ETX\DC2\EOT\165\SI*+\n\
    \U\n\
    \\ETX\EOT\139\SOH\DC2\ACK\168\SI\NUL\170\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\139\SOH\SOH\DC2\EOT\168\SI\b\"\n\
    \\r\n\
    \\ENQ\EOT\139\SOH\STX\NUL\DC2\EOT\169\SI\EOT5\n\
    \\SO\n\
    \\ACK\EOT\139\SOH\STX\NUL\ACK\DC2\EOT\169\SI\EOT \n\
    \\SO\n\
    \\ACK\EOT\139\SOH\STX\NUL\SOH\DC2\EOT\169\SI!0\n\
    \\SO\n\
    \\ACK\EOT\139\SOH\STX\NUL\ETX\DC2\EOT\169\SI34\n\
    \\r\n\
    \\ETX\EOT\140\SOH\DC2\ACK\172\SI\NUL\176\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\140\SOH\SOH\DC2\EOT\172\SI\b.\n\
    \\r\n\
    \\ENQ\EOT\140\SOH\STX\NUL\DC2\EOT\173\SI\b\GS\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\NUL\ENQ\DC2\EOT\173\SI\b\SO\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\NUL\SOH\DC2\EOT\173\SI\SI\CAN\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\NUL\ETX\DC2\EOT\173\SI\ESC\FS\n\
    \Z\n\
    \\ENQ\EOT\140\SOH\STX\SOH\DC2\EOT\175\SI\STX\NAK\SUBK Deployment Version identifier in the form \"<deployment_name>.<build_id>\".\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\SOH\ENQ\DC2\EOT\175\SI\STX\b\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\SOH\SOH\DC2\EOT\175\SI\t\DLE\n\
    \\SO\n\
    \\ACK\EOT\140\SOH\STX\SOH\ETX\DC2\EOT\175\SI\DC3\DC4\n\
    \\r\n\
    \\ETX\EOT\141\SOH\DC2\ACK\178\SI\NUL\180\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\141\SOH\SOH\DC2\EOT\178\SI\b/\n\
    \\r\n\
    \\ENQ\EOT\141\SOH\STX\NUL\DC2\EOT\179\SI\EOT^\n\
    \\SO\n\
    \\ACK\EOT\141\SOH\STX\NUL\ACK\DC2\EOT\179\SI\EOT:\n\
    \\SO\n\
    \\ACK\EOT\141\SOH\STX\NUL\SOH\DC2\EOT\179\SI;Y\n\
    \\SO\n\
    \\ACK\EOT\141\SOH\STX\NUL\ETX\DC2\EOT\179\SI\\]\n\
    \\r\n\
    \\ETX\EOT\142\SOH\DC2\ACK\182\SI\NUL\185\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\142\SOH\SOH\DC2\EOT\182\SI\b'\n\
    \\r\n\
    \\ENQ\EOT\142\SOH\STX\NUL\DC2\EOT\183\SI\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\NUL\ENQ\DC2\EOT\183\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\NUL\SOH\DC2\EOT\183\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\NUL\ETX\DC2\EOT\183\SI\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\142\SOH\STX\SOH\DC2\EOT\184\SI\EOT\US\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\SOH\ENQ\DC2\EOT\184\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\SOH\SOH\DC2\EOT\184\SI\v\SUB\n\
    \\SO\n\
    \\ACK\EOT\142\SOH\STX\SOH\ETX\DC2\EOT\184\SI\GS\RS\n\
    \\r\n\
    \\ETX\EOT\143\SOH\DC2\ACK\187\SI\NUL\193\SI\SOH\n\
    \\f\n\
    \\EOT\EOT\143\SOH\SOH\DC2\EOT\187\SI\b(\n\
    \\206\SOH\n\
    \\ENQ\EOT\143\SOH\STX\NUL\DC2\EOT\191\SI\EOT\GS\SUB\190\SOH This value is returned so that it can be optionally passed to APIs\n\
    \ that write to the Worker Deployment state to ensure that the state\n\
    \ did not change between this read and a future write.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\NUL\ENQ\DC2\EOT\191\SI\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\NUL\SOH\DC2\EOT\191\SI\n\
    \\CAN\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\NUL\ETX\DC2\EOT\191\SI\ESC\FS\n\
    \\r\n\
    \\ENQ\EOT\143\SOH\STX\SOH\DC2\EOT\192\SI\EOTO\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\SOH\ACK\DC2\EOT\192\SI\EOT3\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\SOH\SOH\DC2\EOT\192\SI4J\n\
    \\SO\n\
    \\ACK\EOT\143\SOH\STX\SOH\ETX\DC2\EOT\192\SIMN\n\
    \U\n\
    \\ETX\EOT\144\SOH\DC2\ACK\196\SI\NUL\202\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\144\SOH\SOH\DC2\EOT\196\SI\b\RS\n\
    \\r\n\
    \\ENQ\EOT\144\SOH\STX\NUL\DC2\EOT\197\SI\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\NUL\ENQ\DC2\EOT\197\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\NUL\SOH\DC2\EOT\197\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\NUL\ETX\DC2\EOT\197\SI\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\144\SOH\STX\SOH\DC2\EOT\198\SI\EOT\CAN\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\SOH\ENQ\DC2\EOT\198\SI\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\SOH\SOH\DC2\EOT\198\SI\n\
    \\DC3\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\SOH\ETX\DC2\EOT\198\SI\SYN\ETB\n\
    \\r\n\
    \\ENQ\EOT\144\SOH\STX\STX\DC2\EOT\199\SI\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\STX\ENQ\DC2\EOT\199\SI\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\STX\SOH\DC2\EOT\199\SI\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\STX\ETX\DC2\EOT\199\SI\FS\GS\n\
    \J\n\
    \\ENQ\EOT\144\SOH\STX\ETX\DC2\EOT\201\SI\EOT\ESC\SUB; Optional. Use to filter based on exact series name match.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\ETX\ENQ\DC2\EOT\201\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\ETX\SOH\DC2\EOT\201\SI\v\SYN\n\
    \\SO\n\
    \\ACK\EOT\144\SOH\STX\ETX\ETX\DC2\EOT\201\SI\EM\SUB\n\
    \U\n\
    \\ETX\EOT\145\SOH\DC2\ACK\205\SI\NUL\208\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\145\SOH\SOH\DC2\EOT\205\SI\b\US\n\
    \\r\n\
    \\ENQ\EOT\145\SOH\STX\NUL\DC2\EOT\206\SI\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\NUL\ENQ\DC2\EOT\206\SI\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\NUL\SOH\DC2\EOT\206\SI\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\NUL\ETX\DC2\EOT\206\SI\FS\GS\n\
    \\r\n\
    \\ENQ\EOT\145\SOH\STX\SOH\DC2\EOT\207\SI\EOTK\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\SOH\EOT\DC2\EOT\207\SI\EOT\f\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\SOH\ACK\DC2\EOT\207\SI\r:\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\SOH\SOH\DC2\EOT\207\SI;F\n\
    \\SO\n\
    \\ACK\EOT\145\SOH\STX\SOH\ETX\DC2\EOT\207\SIIJ\n\
    \U\n\
    \\ETX\EOT\146\SOH\DC2\ACK\211\SI\NUL\220\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\146\SOH\SOH\DC2\EOT\211\SI\b#\n\
    \\r\n\
    \\ENQ\EOT\146\SOH\STX\NUL\DC2\EOT\212\SI\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\NUL\ENQ\DC2\EOT\212\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\NUL\SOH\DC2\EOT\212\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\NUL\ETX\DC2\EOT\212\SI\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\146\SOH\STX\SOH\DC2\EOT\213\SI\EOT9\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\SOH\ACK\DC2\EOT\213\SI\EOT)\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\SOH\SOH\DC2\EOT\213\SI*4\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\SOH\ETX\DC2\EOT\213\SI78\n\
    \Q\n\
    \\ENQ\EOT\146\SOH\STX\STX\DC2\EOT\215\SI\EOT\CAN\SUBB Optional. The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\STX\ENQ\DC2\EOT\215\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\STX\SOH\DC2\EOT\215\SI\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\STX\ETX\DC2\EOT\215\SI\SYN\ETB\n\
    \\243\SOH\n\
    \\ENQ\EOT\146\SOH\STX\ETX\DC2\EOT\219\SI\EOTL\SUB\227\SOH Optional. Use to add or remove user-defined metadata entries. Metadata entries are exposed\n\
    \ when describing a deployment. It is a good place for information such as operator name,\n\
    \ links to internal deployment pipelines, etc.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\ETX\ACK\DC2\EOT\219\SI\EOT7\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\ETX\SOH\DC2\EOT\219\SI8G\n\
    \\SO\n\
    \\ACK\EOT\146\SOH\STX\ETX\ETX\DC2\EOT\219\SIJK\n\
    \U\n\
    \\ETX\EOT\147\SOH\DC2\ACK\222\SI\NUL\226\SI\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\147\SOH\SOH\DC2\EOT\222\SI\b$\n\
    \\r\n\
    \\ENQ\EOT\147\SOH\STX\NUL\DC2\EOT\223\SI\EOTJ\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\NUL\ACK\DC2\EOT\223\SI\EOT-\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\NUL\SOH\DC2\EOT\223\SI.E\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\NUL\ETX\DC2\EOT\223\SIHI\n\
    \Y\n\
    \\ENQ\EOT\147\SOH\STX\SOH\DC2\EOT\225\SI\EOTK\SUBJ Info of the deployment that was current before executing this operation.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\SOH\ACK\DC2\EOT\225\SI\EOT-\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\SOH\SOH\DC2\EOT\225\SI.F\n\
    \\SO\n\
    \\ACK\EOT\147\SOH\STX\SOH\ETX\DC2\EOT\225\SIIJ\n\
    \F\n\
    \\ETX\EOT\148\SOH\DC2\ACK\229\SI\NUL\130\DLE\SOH\SUB7 Set/unset the Current Version of a Worker Deployment.\n\
    \\n\
    \\f\n\
    \\EOT\EOT\148\SOH\SOH\DC2\EOT\229\SI\b0\n\
    \\r\n\
    \\ENQ\EOT\148\SOH\STX\NUL\DC2\EOT\230\SI\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\NUL\ENQ\DC2\EOT\230\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\NUL\SOH\DC2\EOT\230\SI\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\NUL\ETX\DC2\EOT\230\SI\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\148\SOH\STX\SOH\DC2\EOT\231\SI\EOT\US\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\SOH\ENQ\DC2\EOT\231\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\SOH\SOH\DC2\EOT\231\SI\v\SUB\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\SOH\ETX\DC2\EOT\231\SI\GS\RS\n\
    \\163\STX\n\
    \\ENQ\EOT\148\SOH\STX\STX\DC2\EOT\236\SI\EOT\ETB\SUB\147\STX Required. Can be one of the following:\n\
    \ - A Deployment Version identifier in the form \"<deployment_name>.<build_id>\".\n\
    \ - Or, the \"__unversioned__\" special value, to represent all the unversioned workers (those\n\
    \   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\STX\ENQ\DC2\EOT\236\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\STX\SOH\DC2\EOT\236\SI\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\STX\ETX\DC2\EOT\236\SI\NAK\SYN\n\
    \\170\STX\n\
    \\ENQ\EOT\148\SOH\STX\ETX\DC2\EOT\241\SI\EOT\GS\SUB\154\STX Optional. This can be the value of conflict_token from a Describe, or another Worker\n\
    \ Deployment API. Passing a non-nil conflict token will cause this request to fail if the\n\
    \ Deployment's configuration has been modified between the API call that generated the\n\
    \ token and this one.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ETX\ENQ\DC2\EOT\241\SI\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ETX\SOH\DC2\EOT\241\SI\n\
    \\CAN\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ETX\ETX\DC2\EOT\241\SI\ESC\FS\n\
    \Q\n\
    \\ENQ\EOT\148\SOH\STX\EOT\DC2\EOT\243\SI\EOT\CAN\SUBB Optional. The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\EOT\ENQ\DC2\EOT\243\SI\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\EOT\SOH\DC2\EOT\243\SI\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\EOT\ETX\DC2\EOT\243\SI\SYN\ETB\n\
    \\248\a\n\
    \\ENQ\EOT\148\SOH\STX\ENQ\DC2\EOT\129\DLE\EOT(\SUB\232\a Optional. By default this request would be rejected if not all the expected Task Queues are\n\
    \ being polled by the new Version, to protect against accidental removal of Task Queues, or\n\
    \ worker health issues. Pass `true` here to bypass this protection.\n\
    \ The set of expected Task Queues is the set of all the Task Queues that were ever poller by\n\
    \ the existing Current Version of the Deployment, with the following exclusions:\n\
    \   - Task Queues that are not used anymore (inferred by having empty backlog and a task\n\
    \     add_rate of 0.)\n\
    \   - Task Queues that are moved to another Worker Deployment (inferred by the Task Queue\n\
    \     having a different Current Version than the Current Version of this deployment.)\n\
    \ WARNING: Do not set this flag unless you are sure that the missing task queue pollers are not\n\
    \ needed. If the request is unexpectedly rejected due to missing pollers, then that means the\n\
    \ pollers have not reached to the server yet. Only set this if you expect those pollers to\n\
    \ never arrive.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ENQ\ENQ\DC2\EOT\129\DLE\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ENQ\SOH\DC2\EOT\129\DLE\t#\n\
    \\SO\n\
    \\ACK\EOT\148\SOH\STX\ENQ\ETX\DC2\EOT\129\DLE&'\n\
    \\r\n\
    \\ETX\EOT\149\SOH\DC2\ACK\132\DLE\NUL\140\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\149\SOH\SOH\DC2\EOT\132\DLE\b1\n\
    \\210\SOH\n\
    \\ENQ\EOT\149\SOH\STX\NUL\DC2\EOT\136\DLE\EOT\GS\SUB\194\SOH This value is returned so that it can be optionally passed to APIs\n\
    \ that write to the Worker Deployment state to ensure that the state\n\
    \ did not change between this API call and a future write.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\NUL\ENQ\DC2\EOT\136\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\NUL\SOH\DC2\EOT\136\DLE\n\
    \\CAN\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\NUL\ETX\DC2\EOT\136\DLE\ESC\FS\n\
    \\173\SOH\n\
    \\ENQ\EOT\149\SOH\STX\SOH\DC2\EOT\139\DLE\EOT \SUB\157\SOH The version that was current before executing this operation, in the form\n\
    \ \"<deployment_name>.<build_id>\". Can also be the `__unversioned__` special value.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\SOH\ENQ\DC2\EOT\139\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\SOH\SOH\DC2\EOT\139\DLE\v\ESC\n\
    \\SO\n\
    \\ACK\EOT\149\SOH\STX\SOH\ETX\DC2\EOT\139\DLE\RS\US\n\
    \^\n\
    \\ETX\EOT\150\SOH\DC2\ACK\143\DLE\NUL\179\DLE\SOH\SUBO Set/unset the Ramping Version of a Worker Deployment and its ramp percentage.\n\
    \\n\
    \\f\n\
    \\EOT\EOT\150\SOH\SOH\DC2\EOT\143\DLE\b0\n\
    \\r\n\
    \\ENQ\EOT\150\SOH\STX\NUL\DC2\EOT\144\DLE\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\NUL\ENQ\DC2\EOT\144\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\NUL\SOH\DC2\EOT\144\DLE\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\NUL\ETX\DC2\EOT\144\DLE\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\150\SOH\STX\SOH\DC2\EOT\145\DLE\EOT\US\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\SOH\ENQ\DC2\EOT\145\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\SOH\SOH\DC2\EOT\145\DLE\v\SUB\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\SOH\ETX\DC2\EOT\145\DLE\GS\RS\n\
    \\241\STX\n\
    \\ENQ\EOT\150\SOH\STX\STX\DC2\EOT\151\DLE\EOT\ETB\SUB\225\STX Can be one of the following:\n\
    \ - Absent/empty value to unset the Ramping Version. Must be paired with `percentage=0`.\n\
    \ - A Deployment Version identifier in the form \"<deployment_name>.<build_id>\".\n\
    \ - Or, the \"__unversioned__\" special value, to represent all the unversioned workers (those\n\
    \   with `UNVERSIONED` (or unspecified) `WorkerVersioningMode`.)\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\STX\ENQ\DC2\EOT\151\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\STX\SOH\DC2\EOT\151\DLE\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\STX\ETX\DC2\EOT\151\DLE\NAK\SYN\n\
    \>\n\
    \\ENQ\EOT\150\SOH\STX\ETX\DC2\EOT\153\DLE\EOT\EM\SUB/ Ramp percentage to set. Valid range: [0,100].\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ETX\ENQ\DC2\EOT\153\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ETX\SOH\DC2\EOT\153\DLE\n\
    \\DC4\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ETX\ETX\DC2\EOT\153\DLE\ETB\CAN\n\
    \\170\STX\n\
    \\ENQ\EOT\150\SOH\STX\EOT\DC2\EOT\159\DLE\EOT\GS\SUB\154\STX Optional. This can be the value of conflict_token from a Describe, or another Worker\n\
    \ Deployment API. Passing a non-nil conflict token will cause this request to fail if the\n\
    \ Deployment's configuration has been modified between the API call that generated the\n\
    \ token and this one.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\EOT\ENQ\DC2\EOT\159\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\EOT\SOH\DC2\EOT\159\DLE\n\
    \\CAN\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\EOT\ETX\DC2\EOT\159\DLE\ESC\FS\n\
    \Q\n\
    \\ENQ\EOT\150\SOH\STX\ENQ\DC2\EOT\161\DLE\EOT\CAN\SUBB Optional. The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ENQ\ENQ\DC2\EOT\161\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ENQ\SOH\DC2\EOT\161\DLE\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ENQ\ETX\DC2\EOT\161\DLE\SYN\ETB\n\
    \\205\t\n\
    \\ENQ\EOT\150\SOH\STX\ACK\DC2\EOT\178\DLE\EOT(\SUB\189\t Optional. By default this request would be rejected if not all the expected Task Queues are\n\
    \ being polled by the new Version, to protect against accidental removal of Task Queues, or\n\
    \ worker health issues. Pass `true` here to bypass this protection.\n\
    \ The set of expected Task Queues equals to all the Task Queues ever polled from the existing\n\
    \ Current Version of the Deployment, with the following exclusions:\n\
    \   - Task Queues that are not used anymore (inferred by having empty backlog and a task\n\
    \     add_rate of 0.)\n\
    \   - Task Queues that are moved to another Worker Deployment (inferred by the Task Queue\n\
    \     having a different Current Version than the Current Version of this deployment.)\n\
    \ WARNING: Do not set this flag unless you are sure that the missing task queue poller are not\n\
    \ needed. If the request is unexpectedly rejected due to missing pollers, then that means the\n\
    \ pollers have not reached to the server yet. Only set this if you expect those pollers to\n\
    \ never arrive.\n\
    \ Note: this check only happens when the ramping version is about to change, not every time\n\
    \ that the percentage changes. Also note that the check is against the deployment's Current\n\
    \ Version, not the previous Ramping Version.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ACK\ENQ\DC2\EOT\178\DLE\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ACK\SOH\DC2\EOT\178\DLE\t#\n\
    \\SO\n\
    \\ACK\EOT\150\SOH\STX\ACK\ETX\DC2\EOT\178\DLE&'\n\
    \\r\n\
    \\ETX\EOT\151\SOH\DC2\ACK\181\DLE\NUL\191\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\151\SOH\SOH\DC2\EOT\181\DLE\b1\n\
    \\210\SOH\n\
    \\ENQ\EOT\151\SOH\STX\NUL\DC2\EOT\185\DLE\EOT\GS\SUB\194\SOH This value is returned so that it can be optionally passed to APIs\n\
    \ that write to the Worker Deployment state to ensure that the state\n\
    \ did not change between this API call and a future write.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\NUL\ENQ\DC2\EOT\185\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\NUL\SOH\DC2\EOT\185\DLE\n\
    \\CAN\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\NUL\ETX\DC2\EOT\185\DLE\ESC\FS\n\
    \\173\SOH\n\
    \\ENQ\EOT\151\SOH\STX\SOH\DC2\EOT\188\DLE\EOT \SUB\157\SOH The version that was ramping before executing this operation, in the form\n\
    \ \"<deployment_name>.<build_id>\". Can also be the `__unversioned__` special value.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\SOH\ENQ\DC2\EOT\188\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\SOH\SOH\DC2\EOT\188\DLE\v\ESC\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\SOH\ETX\DC2\EOT\188\DLE\RS\US\n\
    \P\n\
    \\ENQ\EOT\151\SOH\STX\STX\DC2\EOT\190\DLE\EOT\"\SUBA The ramping version percentage before executing this operation.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\STX\ENQ\DC2\EOT\190\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\STX\SOH\DC2\EOT\190\DLE\n\
    \\GS\n\
    \\SO\n\
    \\ACK\EOT\151\SOH\STX\STX\ETX\DC2\EOT\190\DLE !\n\
    \\r\n\
    \\ETX\EOT\152\SOH\DC2\ACK\193\DLE\NUL\197\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\152\SOH\SOH\DC2\EOT\193\DLE\b$\n\
    \\r\n\
    \\ENQ\EOT\152\SOH\STX\NUL\DC2\EOT\194\DLE\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\NUL\ENQ\DC2\EOT\194\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\NUL\SOH\DC2\EOT\194\DLE\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\NUL\ETX\DC2\EOT\194\DLE\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\152\SOH\STX\SOH\DC2\EOT\195\DLE\EOT\CAN\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\SOH\ENQ\DC2\EOT\195\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\SOH\SOH\DC2\EOT\195\DLE\n\
    \\DC3\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\SOH\ETX\DC2\EOT\195\DLE\SYN\ETB\n\
    \\r\n\
    \\ENQ\EOT\152\SOH\STX\STX\DC2\EOT\196\DLE\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\STX\ENQ\DC2\EOT\196\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\STX\SOH\DC2\EOT\196\DLE\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\152\SOH\STX\STX\ETX\DC2\EOT\196\DLE\FS\GS\n\
    \\r\n\
    \\ETX\EOT\153\SOH\DC2\ACK\199\DLE\NUL\211\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\153\SOH\SOH\DC2\EOT\199\DLE\b%\n\
    \\r\n\
    \\ENQ\EOT\153\SOH\STX\NUL\DC2\EOT\200\DLE\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\NUL\ENQ\DC2\EOT\200\DLE\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\NUL\SOH\DC2\EOT\200\DLE\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\NUL\ETX\DC2\EOT\200\DLE\FS\GS\n\
    \0\n\
    \\ENQ\EOT\153\SOH\STX\SOH\DC2\EOT\202\DLE\EOT<\SUB! The list of worker deployments.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\SOH\EOT\DC2\EOT\202\DLE\EOT\f\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\SOH\ACK\DC2\EOT\202\DLE\r$\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\SOH\SOH\DC2\EOT\202\DLE%7\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\STX\SOH\ETX\DC2\EOT\202\DLE:;\n\
    \q\n\
    \\ENQ\EOT\153\SOH\ETX\NUL\DC2\ACK\206\DLE\EOT\210\DLE\ENQ\SUB` (-- api-linter: core::0123::resource-annotation=disabled --)\n\
    \ A subset of WorkerDeploymentInfo\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\153\SOH\ETX\NUL\SOH\DC2\EOT\206\DLE\f#\n\
    \\SI\n\
    \\a\EOT\153\SOH\ETX\NUL\STX\NUL\DC2\EOT\207\DLE\b\CAN\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\NUL\ENQ\DC2\EOT\207\DLE\b\SO\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\NUL\SOH\DC2\EOT\207\DLE\SI\DC3\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\NUL\ETX\DC2\EOT\207\DLE\SYN\ETB\n\
    \\SI\n\
    \\a\EOT\153\SOH\ETX\NUL\STX\SOH\DC2\EOT\208\DLE\b2\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\SOH\ACK\DC2\EOT\208\DLE\b!\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\SOH\SOH\DC2\EOT\208\DLE\"-\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\SOH\ETX\DC2\EOT\208\DLE01\n\
    \\SI\n\
    \\a\EOT\153\SOH\ETX\NUL\STX\STX\DC2\EOT\209\DLE\bD\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\STX\ACK\DC2\EOT\209\DLE\b0\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\STX\SOH\DC2\EOT\209\DLE1?\n\
    \\DLE\n\
    \\b\EOT\153\SOH\ETX\NUL\STX\STX\ETX\DC2\EOT\209\DLEBC\n\
    \\160\ETX\n\
    \\ETX\EOT\154\SOH\DC2\ACK\219\DLE\NUL\228\DLE\SOH\SUB\144\ETX Used for manual deletion of Versions. User can delete a Version only when all the\n\
    \ following conditions are met:\n\
    \  - It is not the Current or Ramping Version of its Deployment.\n\
    \  - It has no active pollers (none of the task queues in the Version have pollers)\n\
    \  - It is not draining (see WorkerDeploymentVersionInfo.drainage_info). This condition\n\
    \    can be skipped by passing `skip-drainage=true`.\n\
    \\n\
    \\f\n\
    \\EOT\EOT\154\SOH\SOH\DC2\EOT\219\DLE\b,\n\
    \\r\n\
    \\ENQ\EOT\154\SOH\STX\NUL\DC2\EOT\220\DLE\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\NUL\ENQ\DC2\EOT\220\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\NUL\SOH\DC2\EOT\220\DLE\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\NUL\ETX\DC2\EOT\220\DLE\ETB\CAN\n\
    \Z\n\
    \\ENQ\EOT\154\SOH\STX\SOH\DC2\EOT\222\DLE\EOT\ETB\SUBK Deployment Version identifier in the form \"<deployment_name>.<build_id>\".\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\SOH\ENQ\DC2\EOT\222\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\SOH\SOH\DC2\EOT\222\DLE\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\SOH\ETX\DC2\EOT\222\DLE\NAK\SYN\n\
    \\202\SOH\n\
    \\ENQ\EOT\154\SOH\STX\STX\DC2\EOT\225\DLE\EOT\ESC\SUB\186\SOH Pass to force deletion even if the Version is draining. In this case the open pinned\n\
    \ workflows will be stuck until manually moved to another version by UpdateWorkflowExecutionOptions.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\STX\ENQ\DC2\EOT\225\DLE\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\STX\SOH\DC2\EOT\225\DLE\t\SYN\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\STX\ETX\DC2\EOT\225\DLE\EM\SUB\n\
    \Q\n\
    \\ENQ\EOT\154\SOH\STX\ETX\DC2\EOT\227\DLE\EOT\CAN\SUBB Optional. The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\ETX\ENQ\DC2\EOT\227\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\ETX\SOH\DC2\EOT\227\DLE\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\154\SOH\STX\ETX\ETX\DC2\EOT\227\DLE\SYN\ETB\n\
    \\r\n\
    \\ETX\EOT\155\SOH\DC2\ACK\230\DLE\NUL\231\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\155\SOH\SOH\DC2\EOT\230\DLE\b-\n\
    \v\n\
    \\ETX\EOT\156\SOH\DC2\ACK\235\DLE\NUL\240\DLE\SOH\SUBg Deletes records of (an old) Deployment. A deployment can only be deleted if\n\
    \ it has no Version in it.\n\
    \\n\
    \\f\n\
    \\EOT\EOT\156\SOH\SOH\DC2\EOT\235\DLE\b%\n\
    \\r\n\
    \\ENQ\EOT\156\SOH\STX\NUL\DC2\EOT\236\DLE\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\NUL\ENQ\DC2\EOT\236\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\NUL\SOH\DC2\EOT\236\DLE\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\NUL\ETX\DC2\EOT\236\DLE\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\156\SOH\STX\SOH\DC2\EOT\237\DLE\EOT\US\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\SOH\ENQ\DC2\EOT\237\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\SOH\SOH\DC2\EOT\237\DLE\v\SUB\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\SOH\ETX\DC2\EOT\237\DLE\GS\RS\n\
    \Q\n\
    \\ENQ\EOT\156\SOH\STX\STX\DC2\EOT\239\DLE\EOT\CAN\SUBB Optional. The identity of the client who initiated this request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\STX\ENQ\DC2\EOT\239\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\STX\SOH\DC2\EOT\239\DLE\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\156\SOH\STX\STX\ETX\DC2\EOT\239\DLE\SYN\ETB\n\
    \\r\n\
    \\ETX\EOT\157\SOH\DC2\ACK\242\DLE\NUL\243\DLE\SOH\n\
    \\f\n\
    \\EOT\EOT\157\SOH\SOH\DC2\EOT\242\DLE\b&\n\
    \Y\n\
    \\ETX\EOT\158\SOH\DC2\ACK\246\DLE\NUL\253\DLE\SOH\SUBJ Used to update the user-defined metadata of a Worker Deployment Version.\n\
    \\n\
    \\f\n\
    \\EOT\EOT\158\SOH\SOH\DC2\EOT\246\DLE\b4\n\
    \\r\n\
    \\ENQ\EOT\158\SOH\STX\NUL\DC2\EOT\247\DLE\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\NUL\ENQ\DC2\EOT\247\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\NUL\SOH\DC2\EOT\247\DLE\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\NUL\ETX\DC2\EOT\247\DLE\ETB\CAN\n\
    \Z\n\
    \\ENQ\EOT\158\SOH\STX\SOH\DC2\EOT\249\DLE\EOT\ETB\SUBK Deployment Version identifier in the form \"<deployment_name>.<build_id>\".\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\SOH\ENQ\DC2\EOT\249\DLE\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\SOH\SOH\DC2\EOT\249\DLE\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\SOH\ETX\DC2\EOT\249\DLE\NAK\SYN\n\
    \\r\n\
    \\ENQ\EOT\158\SOH\STX\STX\DC2\EOT\250\DLE\EOTC\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\STX\ACK\DC2\EOT\250\DLE\EOT/\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\STX\SOH\DC2\EOT\250\DLE0>\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\STX\ETX\DC2\EOT\250\DLEAB\n\
    \:\n\
    \\ENQ\EOT\158\SOH\STX\ETX\DC2\EOT\252\DLE\EOT'\SUB+ List of keys to remove from the metadata.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\ETX\EOT\DC2\EOT\252\DLE\EOT\f\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\ETX\ENQ\DC2\EOT\252\DLE\r\DC3\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\ETX\SOH\DC2\EOT\252\DLE\DC4\"\n\
    \\SO\n\
    \\ACK\EOT\158\SOH\STX\ETX\ETX\DC2\EOT\252\DLE%&\n\
    \\r\n\
    \\ETX\EOT\159\SOH\DC2\ACK\255\DLE\NUL\130\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\159\SOH\SOH\DC2\EOT\255\DLE\b5\n\
    \;\n\
    \\ENQ\EOT\159\SOH\STX\NUL\DC2\EOT\129\DC1\EOT<\SUB, Full metadata after performing the update.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\159\SOH\STX\NUL\ACK\DC2\EOT\129\DC1\EOT.\n\
    \\SO\n\
    \\ACK\EOT\159\SOH\STX\NUL\SOH\DC2\EOT\129\DC1/7\n\
    \\SO\n\
    \\ACK\EOT\159\SOH\STX\NUL\ETX\DC2\EOT\129\DC1:;\n\
    \\141\SOH\n\
    \\ETX\EOT\160\SOH\DC2\ACK\135\DC1\NUL\138\DC1\SOH\SUB~ Returns the Current Deployment of a deployment series.\n\
    \ [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\160\SOH\SOH\DC2\EOT\135\DC1\b#\n\
    \\r\n\
    \\ENQ\EOT\160\SOH\STX\NUL\DC2\EOT\136\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\NUL\ENQ\DC2\EOT\136\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\NUL\SOH\DC2\EOT\136\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\NUL\ETX\DC2\EOT\136\DC1\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\160\SOH\STX\SOH\DC2\EOT\137\DC1\EOT\ESC\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\SOH\ENQ\DC2\EOT\137\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\SOH\SOH\DC2\EOT\137\DC1\v\SYN\n\
    \\SO\n\
    \\ACK\EOT\160\SOH\STX\SOH\ETX\DC2\EOT\137\DC1\EM\SUB\n\
    \U\n\
    \\ETX\EOT\161\SOH\DC2\ACK\140\DC1\NUL\142\DC1\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\161\SOH\SOH\DC2\EOT\140\DC1\b$\n\
    \\r\n\
    \\ENQ\EOT\161\SOH\STX\NUL\DC2\EOT\141\DC1\EOTJ\n\
    \\SO\n\
    \\ACK\EOT\161\SOH\STX\NUL\ACK\DC2\EOT\141\DC1\EOT-\n\
    \\SO\n\
    \\ACK\EOT\161\SOH\STX\NUL\SOH\DC2\EOT\141\DC1.E\n\
    \\SO\n\
    \\ACK\EOT\161\SOH\STX\NUL\ETX\DC2\EOT\141\DC1HI\n\
    \U\n\
    \\ETX\EOT\162\SOH\DC2\ACK\145\DC1\NUL\148\DC1\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\162\SOH\SOH\DC2\EOT\145\DC1\b(\n\
    \\r\n\
    \\ENQ\EOT\162\SOH\STX\NUL\DC2\EOT\146\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\NUL\ENQ\DC2\EOT\146\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\NUL\SOH\DC2\EOT\146\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\NUL\ETX\DC2\EOT\146\DC1\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\162\SOH\STX\SOH\DC2\EOT\147\DC1\EOT9\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\SOH\ACK\DC2\EOT\147\DC1\EOT)\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\SOH\SOH\DC2\EOT\147\DC1*4\n\
    \\SO\n\
    \\ACK\EOT\162\SOH\STX\SOH\ETX\DC2\EOT\147\DC178\n\
    \U\n\
    \\ETX\EOT\163\SOH\DC2\ACK\151\DC1\NUL\157\DC1\SOH\SUBF [cleanup-wv-pre-release] Pre-release deployment APIs, clean up later\n\
    \\n\
    \\f\n\
    \\EOT\EOT\163\SOH\SOH\DC2\EOT\151\DC1\b)\n\
    \\r\n\
    \\ENQ\EOT\163\SOH\STX\NUL\DC2\EOT\152\DC1\EOTB\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\NUL\ACK\DC2\EOT\152\DC1\EOT-\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\NUL\SOH\DC2\EOT\152\DC1.=\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\NUL\ETX\DC2\EOT\152\DC1@A\n\
    \\r\n\
    \\ENQ\EOT\163\SOH\STX\SOH\DC2\EOT\153\DC1\EOT5\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\SOH\ACK\DC2\EOT\153\DC1\EOT#\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\SOH\SOH\DC2\EOT\153\DC1$0\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\SOH\ETX\DC2\EOT\153\DC134\n\
    \\131\SOH\n\
    \\ENQ\EOT\163\SOH\STX\STX\DC2\EOT\156\DC1\EOT3\SUBt Reachability level might come from server cache. This timestamp specifies when the value\n\
    \ was actually calculated.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\STX\ACK\DC2\EOT\156\DC1\EOT\GS\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\STX\SOH\DC2\EOT\156\DC1\RS.\n\
    \\SO\n\
    \\ACK\EOT\163\SOH\STX\STX\ETX\DC2\EOT\156\DC112\n\
    \\r\n\
    \\ETX\EOT\164\SOH\DC2\ACK\159\DC1\NUL\172\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\164\SOH\SOH\DC2\EOT\159\DC1\b!\n\
    \\r\n\
    \\ENQ\EOT\164\SOH\STX\NUL\DC2\EOT\160\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\NUL\ENQ\DC2\EOT\160\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\NUL\SOH\DC2\EOT\160\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\NUL\ETX\DC2\EOT\160\DC1\ETB\CAN\n\
    \)\n\
    \\ENQ\EOT\164\SOH\STX\SOH\DC2\EOT\163\DC1\EOT4\SUB\SUB The rule specification .\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\SOH\ACK\DC2\EOT\163\DC1\EOT*\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\SOH\SOH\DC2\EOT\163\DC1+/\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\SOH\ETX\DC2\EOT\163\DC123\n\
    \\146\STX\n\
    \\ENQ\EOT\164\SOH\STX\STX\DC2\EOT\168\DC1\EOT\CAN\SUB\130\STX If true, the rule will be applied to the currently running workflows via batch job.\n\
    \ If not set , the rule will only be applied when triggering condition is satisfied.\n\
    \ visibility_query in the rule will be used to select the workflows to apply the rule to.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\STX\ENQ\DC2\EOT\168\DC1\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\STX\SOH\DC2\EOT\168\DC1\t\DC3\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\STX\ETX\DC2\EOT\168\DC1\SYN\ETB\n\
    \D\n\
    \\ENQ\EOT\164\SOH\STX\ETX\DC2\EOT\171\DC1\EOT\SUB\SUB5 Used to de-dupe requests. Typically should be UUID.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\ETX\ENQ\DC2\EOT\171\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\ETX\SOH\DC2\EOT\171\DC1\v\NAK\n\
    \\SO\n\
    \\ACK\EOT\164\SOH\STX\ETX\ETX\DC2\EOT\171\DC1\CAN\EM\n\
    \\r\n\
    \\ETX\EOT\165\SOH\DC2\ACK\174\DC1\NUL\180\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\165\SOH\SOH\DC2\EOT\174\DC1\b\"\n\
    \\RS\n\
    \\ENQ\EOT\165\SOH\STX\NUL\DC2\EOT\176\DC1\EOT1\SUB\SI Created rule.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\NUL\ACK\DC2\EOT\176\DC1\EOT&\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\NUL\SOH\DC2\EOT\176\DC1(,\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\NUL\ETX\DC2\EOT\176\DC1/0\n\
    \O\n\
    \\ENQ\EOT\165\SOH\STX\SOH\DC2\EOT\179\DC1\EOT\SYN\SUB@ Batch Job ID if force-scan flag was provided. Otherwise empty.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\SOH\ENQ\DC2\EOT\179\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\SOH\SOH\DC2\EOT\179\DC1\v\DC1\n\
    \\SO\n\
    \\ACK\EOT\165\SOH\STX\SOH\ETX\DC2\EOT\179\DC1\DC4\NAK\n\
    \\r\n\
    \\ETX\EOT\166\SOH\DC2\ACK\182\DC1\NUL\186\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\166\SOH\SOH\DC2\EOT\182\DC1\b#\n\
    \\r\n\
    \\ENQ\EOT\166\SOH\STX\NUL\DC2\EOT\183\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\NUL\ENQ\DC2\EOT\183\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\NUL\SOH\DC2\EOT\183\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\NUL\ETX\DC2\EOT\183\DC1\ETB\CAN\n\
    \T\n\
    \\ENQ\EOT\166\SOH\STX\SOH\DC2\EOT\185\DC1\EOT\ETB\SUBE User-specified ID of the rule to read. Unique within the namespace.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\SOH\ENQ\DC2\EOT\185\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\SOH\SOH\DC2\EOT\185\DC1\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\166\SOH\STX\SOH\ETX\DC2\EOT\185\DC1\NAK\SYN\n\
    \\r\n\
    \\ETX\EOT\167\SOH\DC2\ACK\188\DC1\NUL\191\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\167\SOH\SOH\DC2\EOT\188\DC1\b$\n\
    \(\n\
    \\ENQ\EOT\167\SOH\STX\NUL\DC2\EOT\190\DC1\EOT0\SUB\EM The rule that was read.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\167\SOH\STX\NUL\ACK\DC2\EOT\190\DC1\EOT&\n\
    \\SO\n\
    \\ACK\EOT\167\SOH\STX\NUL\SOH\DC2\EOT\190\DC1'+\n\
    \\SO\n\
    \\ACK\EOT\167\SOH\STX\NUL\ETX\DC2\EOT\190\DC1./\n\
    \\r\n\
    \\ETX\EOT\168\SOH\DC2\ACK\193\DC1\NUL\198\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\168\SOH\SOH\DC2\EOT\193\DC1\b!\n\
    \\r\n\
    \\ENQ\EOT\168\SOH\STX\NUL\DC2\EOT\194\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\NUL\ENQ\DC2\EOT\194\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\NUL\SOH\DC2\EOT\194\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\NUL\ETX\DC2\EOT\194\DC1\ETB\CAN\n\
    \G\n\
    \\ENQ\EOT\168\SOH\STX\SOH\DC2\EOT\197\DC1\EOT\ETB\SUB8 ID of the rule to delete. Unique within the namespace.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\SOH\ENQ\DC2\EOT\197\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\SOH\SOH\DC2\EOT\197\DC1\v\DC2\n\
    \\SO\n\
    \\ACK\EOT\168\SOH\STX\SOH\ETX\DC2\EOT\197\DC1\NAK\SYN\n\
    \\r\n\
    \\ETX\EOT\169\SOH\DC2\ACK\200\DC1\NUL\201\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\169\SOH\SOH\DC2\EOT\200\DC1\b\"\n\
    \\r\n\
    \\ETX\EOT\170\SOH\DC2\ACK\203\DC1\NUL\206\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\170\SOH\SOH\DC2\EOT\203\DC1\b \n\
    \\r\n\
    \\ENQ\EOT\170\SOH\STX\NUL\DC2\EOT\204\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\NUL\ENQ\DC2\EOT\204\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\NUL\SOH\DC2\EOT\204\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\NUL\ETX\DC2\EOT\204\DC1\ETB\CAN\n\
    \\r\n\
    \\ENQ\EOT\170\SOH\STX\SOH\DC2\EOT\205\DC1\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\SOH\ENQ\DC2\EOT\205\DC1\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\SOH\SOH\DC2\EOT\205\DC1\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\170\SOH\STX\SOH\ETX\DC2\EOT\205\DC1\FS\GS\n\
    \\r\n\
    \\ETX\EOT\171\SOH\DC2\ACK\208\DC1\NUL\211\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\171\SOH\SOH\DC2\EOT\208\DC1\b!\n\
    \\r\n\
    \\ENQ\EOT\171\SOH\STX\NUL\DC2\EOT\209\DC1\EOT:\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\NUL\EOT\DC2\EOT\209\DC1\EOT\f\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\NUL\ACK\DC2\EOT\209\DC1\r/\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\NUL\SOH\DC2\EOT\209\DC105\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\NUL\ETX\DC2\EOT\209\DC189\n\
    \\r\n\
    \\ENQ\EOT\171\SOH\STX\SOH\DC2\EOT\210\DC1\EOT\RS\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\SOH\ENQ\DC2\EOT\210\DC1\EOT\t\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\SOH\SOH\DC2\EOT\210\DC1\n\
    \\EM\n\
    \\SO\n\
    \\ACK\EOT\171\SOH\STX\SOH\ETX\DC2\EOT\210\DC1\FS\GS\n\
    \\r\n\
    \\ETX\EOT\172\SOH\DC2\ACK\213\DC1\NUL\228\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\172\SOH\SOH\DC2\EOT\213\DC1\b\"\n\
    \\r\n\
    \\ENQ\EOT\172\SOH\STX\NUL\DC2\EOT\214\DC1\EOT\EM\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\NUL\ENQ\DC2\EOT\214\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\NUL\SOH\DC2\EOT\214\DC1\v\DC4\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\NUL\ETX\DC2\EOT\214\DC1\ETB\CAN\n\
    \M\n\
    \\ENQ\EOT\172\SOH\STX\SOH\DC2\EOT\217\DC1\EOT;\SUB> Execution info of the workflow which scheduled this activity\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\SOH\ACK\DC2\EOT\217\DC1\EOT,\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\SOH\SOH\DC2\EOT\217\DC1-6\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\SOH\ETX\DC2\EOT\217\DC19:\n\
    \L\n\
    \\ENQ\EOT\172\SOH\b\NUL\DC2\ACK\220\DC1\EOT\224\DC1\ENQ\SUB; Either provide id of existing rule, or rule specification\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\b\NUL\SOH\DC2\EOT\220\DC1\n\
    \\SO\n\
    \\r\n\
    \\ENQ\EOT\172\SOH\STX\STX\DC2\EOT\221\DC1\b\SYN\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\STX\ENQ\DC2\EOT\221\DC1\b\SO\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\STX\SOH\DC2\EOT\221\DC1\SI\DC1\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\STX\ETX\DC2\EOT\221\DC1\DC4\NAK\n\
    \W\n\
    \\ENQ\EOT\172\SOH\STX\ETX\DC2\EOT\223\DC1\b8\SUBH Note: Rule ID and expiration date are not used in the trigger request.\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\ETX\ACK\DC2\EOT\223\DC1\b.\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\ETX\SOH\DC2\EOT\223\DC1/3\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\ETX\ETX\DC2\EOT\223\DC167\n\
    \F\n\
    \\ENQ\EOT\172\SOH\STX\EOT\DC2\EOT\227\DC1\EOT\CAN\SUB7 The identity of the client who initiated this request\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\EOT\ENQ\DC2\EOT\227\DC1\EOT\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\EOT\SOH\DC2\EOT\227\DC1\v\DC3\n\
    \\SO\n\
    \\ACK\EOT\172\SOH\STX\EOT\ETX\DC2\EOT\227\DC1\SYN\ETB\n\
    \\r\n\
    \\ETX\EOT\173\SOH\DC2\ACK\230\DC1\NUL\233\DC1\SOH\n\
    \\f\n\
    \\EOT\EOT\173\SOH\SOH\DC2\EOT\230\DC1\b#\n\
    \i\n\
    \\ENQ\EOT\173\SOH\STX\NUL\DC2\EOT\232\DC1\EOT\NAK\SUBZ True is the rule was applied, based on the rule conditions (predicate/visibility_query).\n\
    \\n\
    \\SO\n\
    \\ACK\EOT\173\SOH\STX\NUL\ENQ\DC2\EOT\232\DC1\EOT\b\n\
    \\SO\n\
    \\ACK\EOT\173\SOH\STX\NUL\SOH\DC2\EOT\232\DC1\t\DLE\n\
    \\SO\n\
    \\ACK\EOT\173\SOH\STX\NUL\ETX\DC2\EOT\232\DC1\DC3\DC4b\ACKproto3"